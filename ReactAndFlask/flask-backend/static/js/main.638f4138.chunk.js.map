{"version":3,"sources":["images/logo.png","javascript/Constants.jsx","javascript/enums/privilegeTypes.ts","javascript/helpers/functions/GetURL.jsx","javascript/models/enums/ModelCommands.ts","javascript/models/enums/ModelInputs.ts","javascript/helpers/StatusDisplay.jsx","javascript/ShibLogin.jsx","javascript/Login.jsx","javascript/models/helpers/ExportModel.jsx","javascript/models/helpers/FilterModel.jsx","javascript/models/helpers/CreateModel.jsx","javascript/models/ModelConstants.jsx","javascript/models/helpers/ModelsTable.jsx","javascript/users/enums/UserCommands.ts","javascript/users/enums/UserInputs.ts","javascript/models/pages/ModelsView.jsx","javascript/assets/enums/AssetCommands.ts","javascript/users/helpers/FilterUser.jsx","javascript/users/helpers/DetailUser.jsx","javascript/users/helpers/CreateUser.jsx","javascript/users/helpers/UsersTable.jsx","javascript/users/UserConstants.jsx","javascript/users/pages/UsersView.jsx","javascript/assets/AssetConstants.jsx","javascript/assets/enums/AssetInputs.ts","javascript/assets/helpers/ImpExpAsset.jsx","javascript/assets/helpers/functions/StringToMacAddress.jsx","javascript/assets/helpers/CreateAsset.jsx","javascript/assets/helpers/functions/StringToRack.jsx","javascript/assets/helpers/NetworkGraph.jsx","javascript/assets/helpers/DetailsAsset.jsx","javascript/assets/helpers/FilterAsset.jsx","javascript/helpers/functions/DescendingComparator.jsx","javascript/assets/helpers/TableAssets.jsx","javascript/racks/enums/DatacenterCommands.ts","javascript/helpers/functions/GetComparator.jsx","javascript/helpers/functions/StableSort.jsx","javascript/errors/ErrorBoundry.jsx","javascript/assets/pages/AssetsView.jsx","javascript/racks/helpers/CreateDatacenter.jsx","javascript/racks/enums/RackCommands.ts","javascript/racks/helpers/EditDatacenter.jsx","javascript/racks/pages/RacksView.jsx","javascript/racks/helpers/functions/ShowDatacenters.jsx","javascript/racks/helpers/ConfirmDeleteDC.jsx","javascript/statistics/enums/StatsCommands.ts","javascript/racks/pages/DatacentersView.jsx","javascript/racks/pages/DatacenterManagerView.jsx","javascript/helpers/functions/JSONtoArr.jsx","javascript/statistics/pages/StatisticsView.jsx","javascript/logs/enums/LogCommands.ts","javascript/logs/pages/LogsView.jsx","javascript/Tabs.jsx","javascript/PageSelector.jsx","index.jsx"],"names":["module","exports","serverEndpoint","RackX","ASSETS_MAIN_PATH","MODELS_MAIN_PATH","USERS_MAIN_PATH","DATACENTERS_MAIN_PATH","LOGS_MAIN_PATH","CLIENT_ID","SHIB_REDIRECT_URI","window","location","href","Privilege","SHIBBOLETH_LOGIN","encodeURIComponent","HTTPS_STATUS_OK","getURL","path","endpoint","Constants","ModelCommand","ModelInput","StatusDisplay","props","state","Snackbar","open","this","autoHideDuration","onClose","closeStatus","elevation","variant","severity","message","IconButton","aria-label","color","size","onClick","fontSize","React","Component","ShibLogin","username","password","statusMessage","showStatus","statusSeverity","Grid","container","spacing","direction","justify","alignItems","onKeyDown","e","onKeyPressed","style","item","xs","src","logo","alt","height","Card","minWidth","CardContent","Typography","fontWeight","gutterBottom","closeShowStatus","loginMainPath","queryString","require","Login","getDukeCredentials","token","axios","get","headers","then","response","post","data","netid","mail","displayName","console","log","status","setState","initialized","oauth","loginFuncOAuth","loginWithOAuth","bind","submitCredentials","params","parse","hash","substring","access_token","loginFunc","event","target","value","key","preventDefault","stopPropagation","TextField","id","label","required","ref","onChange","updateUsername","type","updatePassword","Button","direciton","width","ExportModel","Paper","downloadTable","startIcon","showAll","createInputs","name","inputs","FilterModel","filters","hasOwnProperty","newFilters","forceUpdate","search","sm","md","lg","Autocomplete","options","includeInputInList","freeSolo","renderInput","vendor","updateSearchText","onBlur","fullWidth","InputProps","inputProps","min","max","CreateModel","updateColor","updateModelColor","hex","showModal","showImportModal","closeModal","networkPorts","numPorts","closeImportModal","create","createModel","uploadFile","FormData","append","importedFile","sendUploadedFile","chooseFile","files","updateNetworkPorts","ports","i","push","toString","updateModelCreator","updatePort","port","classes","background","Modal","aria-labelledby","aria-describedby","className","modal","closeAfterTransition","Fade","in","Backdrop","grid","modelNumber","ethernetPorts","powerPorts","cpu","memory","storage","comment","List","root","subheader","ListSubheader","component","maxHeight","overflow","Array","from","length","x","map","_","index","labelId","ListItem","role","undefined","dense","button","ListItemText","primary","defaultValue","onDrop","acceptedFiles","accept","getRootProps","getInputProps","align","withStyles","theme","flexGrow","display","justifyContent","margin","backgroundColor","palette","paper","boxShadow","shadows","padding","progress","marginLeft","GENERAL_MODEL_ERROR","modelsMainPath","UserCommand","UserInput","ModelsTable","showDetailedView","row","detailViewLoading","detailViewModel","modelNum","detailView","model","detailedValues","originalVendor","originalModelNumber","originalHeight","catch","error","ModelConstants","closeDetailedView","showDeleteModal","closeDeleteModal","delete","deleteModel","clickInfo","popoverAnchor","clickComment","commentPopover","handlePopoverClose","handleCommentPopoverClose","updateModelEdited","save","editModel","defaults","common","privilege","TableContainer","Table","TableHead","TableRow","columns","col","TableCell","TableBody","vals","hover","ADMIN","scope","keys","Popover","Boolean","anchorEl","anchorOrigin","vertical","horizontal","transformOrigin","CircularProgress","model_number","ethernet_ports","power_ports","adminColumns","columnLookup","ModelsView","createdModel","Vendor","Height","display_color","CPU","Memory","Storage","Comment","showCreateModal","getVendorList","searchModels","createStatusOpen","createStatusMessage","createStatusSeverity","originalModelNum","edit","detailStatusOpen","detailStatusMessage","detailStatusSeverity","viewVendor","viewModel","searchVendor","searchModelNum","searchHeight","models","rows","Object","values","forEach","items","searchText","VENDOR_VALUES","vendorsList","results","madeVendorQuery","UPLOAD_FILE","summary","EXPORT_FILE","csvData","csvLink","link","click","searchAll","openCreateModal","openImportModal","closeCreateModal","updateModelColorDetails","reason","createStatusClose","detailStatusClose","createdVendor","createdModelNum","createdHeight","createdDispClr","createdEthPorts","createdPwrPorts","createdCPU","createdMem","createdStorage","createdComments","deleteVendor","statusOpen","maxWidth","statusClose","useAutocomplete","filename","r","AssetCommand","Filters","ExpansionPanel","ExpansionPanelSummary","expandIcon","ExpansionPanelDetails","placeholder","FormControl","InputLabel","Select","MenuItem","DetailedView","showConfirmationBox","confirmDelete","deleteItem","loading","input","disabled","defaultValues","CreateModal","gutterbottom","UsersTable","beginEditing","canEdit","endEditing","GENERAL_USER_ERROR","usersMainPath","UsersView","createUser","createdUser","Username","Password","display_name","Email","statusOPen","searchUsers","UserConstants","editUser","originalUsername","deleteUser","deleteUsername","detailViewUser","viewUser","searchUsernm","searchEml","searchDspNm","searchPriv","updateUserCreator","newUser","updateUserEdited","newDetails","USER","AssetInput","SUCCESS_TOKEN","ERROR_TOKEN","ImpExpAsset","AssetConstants","showImport","BackdropComponent","BackdropProps","timeout","border","stringToMac","val","returnVal","replace","toLowerCase","showTooltip","description","emptySearch","searchPath","left","right","CreateAsset","getLists","getModelList","getOwnerList","getDatacenterList","getNextAssetNum","getAssetList","modelNames","networkNames","powerPortNames","modelKey","parseInt","loadingModels","modelList","networkList","powerPortList","availableNetworkConnections","users","user","loadingOwners","ownerList","datacenters","datacenter","loadingDatacenters","datacenterList","GET_NEXT_ASSET_NUM","loadingAssetNumber","asset_number","instances","assetNums","assetNumToModel","instance","loadingHostnames","assetNumList","assetNumToModelList","validJSON","json","valid","owner","datacenter_name","rack","rack_position","entries","network_connections","validConnection","connection_hostname","connection_port","createAsset","createJSON","hostname","rackU","tags","power_connections","updateModel","validateForm","updateHostname","updateRack","rackVal","result","toUpperCase","stringToRack","updateRackU","updateOwner","updateComment","updateDatacenter","updateTags","changeNetworkMacAddress","prevState","assign","mac_address","changeNetworkHostname","changeNetworkPort","updatePowerPort","changePowerPortState","portNum","leftRight","updateAssetNumber","getPowerConnections","pwrConns","num","availableNetworks","asset","networList","availableConnections","selectedConnection","powerPortState","canSubmit","MODEL","HOSTNAME","RACK","RACK_U","OWNER","COMMENT","DATACENTER","MAC_ADDRESS","NETWORK_CONNECTIONS","POWER_CONNECTIONS","ASSET_NUMBER","scroll","Tooltip","placement","title","assetNum","networkPort","macAddress","networkConnections","k","RadioGroup","FormControlLabel","control","Radio","labelPlacement","FormHelperText","multiline","getGraph","primaryHosts","host","hostnameMapping","nodes","edges","primaryHostID","primaryHost","secondaryHosts","to","secondaryHostID","secondaryHost","NetworkGraph","graph","layout","hierarchical","interaction","dragNodes","dragView","events","select","getNetwork","network","document","getElementById","DetailAsset","getDetailView","detailAsset","loadingDetailAsset","close","aria-controls","FilterAsset","hostnames","hostnamesList","datacenter_id","updateStartingLetter","startingLetter","updateEndingLetter","endingLetter","updateStartingNum","startingNum","updateEndingNum","endingNum","getSearchJSON","updateItems","Fragment","searchbar","hostnameList","startingRackLetter","changeStartingLetter","endingRackLetter","changeEndingLetter","startingRackNumber","changeStartingNum","endingRackNumber","changeEndingNum","descendingComparator","a","b","orderBy","createData","DatacenterCommand","headCells","numeric","TableAsset","editAsset","body","getAssetAsJSON","RACK_ORIGINAL","originalRack","RACK_U_ORIGINAL","originalrack_position","deleteAsset","getAssetDetails","createSortHandler","property","isAsc","order","openDetailedView","detailHostname","tableItems","deleteAssetRack","deleteAssetrack_position","assets","table","styledTableRow","headCell","tableCellHead","sortDirection","TableSortLabel","active","visuallyHidden","array","comparator","stabilizedThis","el","sort","stableSort","tabIndex","light","white","styledTableCell","marginBottom","clip","position","top","ErrorBoundary","hasError","errorInfo","children","AssetsView","RackCommand","CreateDatacenter","generateCreateJSON","datacenterAbbreviation","datacenterName","createDatacenter","CREATE","showCreate","updateDatacenterName","updateDatacenterAbbrevation","getAbbreviation","closeCreate","EditDatacenter","generateEditJSON","dcName","dcAbbrev","editDatacenter","EDIT","show","racksMainPath","RacksView","handleFormat","newFormats","formats","getAllRacks","GET_ALL_RACKS","racksList","racks","createRacks","updateRacks","CREATE_RACKS","deleteRacks","DELETE_RACKS","viewRacks","GET_RACK_DETAILS","changeStartingRack","firstRack","changeEndingRack","secondRack","changeRackType","rackType","closeConfirmationBox","command","win","focus","heading","typography","pxToRem","fontWeightRegular","ShowDatacenters","datacentersList","abbreviation","openConfirmationBox","exception","StatsCommand","ConfirmDeteleDC","deleteDatacenter","DatacenterView","getDatacenters","GET_ALL_DATACENTERS","loadingDCList","DELETE","currentDatacenter","openEditDatacenter","datacenterAbbrev","editDCName","editDCAbbr","showEditDC","closeEditDatacenter","closeEditDatacneter","DatacenterManagerView","jsonToArr","incomingJSON","JSON","constructor","LogCommand","tables","tableCols","StatisticsView","tableValues","totalUsage","spaceUsage","vendorUsage","modelUsage","ownerUsage","generateReport","GENERATE_REPORT","totalUsageRow","JSONtoArr","column","isNaN","typeKey","timestampKey","USER_KEY","ASSET_KEY","LogsView","getLogs","GET_LOGS","parseLog","logs","timestamp","makeTableData","logItems","filteredLogs","allLogs","filter","filterByUser","filterUser","filteredItems","entry","includes","filterByAsset","filterAsset","updateFilterUser","updateFilterAsset","logItem","aligh","TabViewer","handleProfileMenuOpen","currentTarget","isMenuOpen","handleMenuClose","currentTabID","handleChange","newValue","AppBar","Toolbar","aria-haspopup","Menu","keepMounted","logout","Tabs","indicatorColor","textColor","centered","Tab","Container","tab","hidden","menuButton","marginRight","storedToken","storedPrivilege","storedLoggedIn","storedUsername","PageSelector","login","sessionStorage","setItem","loggedIn","history","replaceState","removeItem","getItem","shib","redirected","ReactDOM","render","referrer"],"mappings":"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","file":"static/js/main.638f4138.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.df79d0ea.png\";","/**\r\n * Constants file\r\n */\r\n\r\nexport const localServerEndpoint = 'http://localhost:4010/';\r\nexport const testServerEndpoint = 'https://parseltongue-finishinge-lfw68m.herokuapp.com/';\r\nexport const devServerEndpoint = 'https://parseltongue-dev.herokuapp.com/';\r\nexport const prodServerEndpoint = 'https://parseltongue-prod.herokuapp.com/';\r\n\r\nexport const serverEndpoint = localServerEndpoint;\r\n\r\n\r\nexport const RackX = [\r\n    'A', 'B', 'C', 'D', 'E',\r\n    'F', 'G', 'H', 'I', 'J',\r\n    'K', 'L', 'M', 'N', 'O',\r\n    'P', 'Q', 'R', 'S', 'T',\r\n    'W', 'X', 'Y', 'Z',\r\n]\r\n\r\nexport const ASSETS_MAIN_PATH = 'instances/';\r\nexport const MODELS_MAIN_PATH = \"models/\";\r\nexport const USERS_MAIN_PATH = \"users/\";\r\nexport const RACKS_MAIN_PATH = \"racks/\";\r\nexport const DATACENTERS_MAIN_PATH = \"datacenters/\";\r\nexport const LOGS_MAIN_PATH = \"logs/\"\r\n\r\nexport const CLIENT_ID = \"ParselTonguesUserAuth\";\r\nexport const CLIENT_SECRET = \"LpUwB*eiK4Iw#1gaCu5jYp1u5uRF3ERsdmuNUGoKYNzn7rHm7b\";\r\nexport const SCOPE = \"basic\";\r\n\r\nexport var SHIB_REDIRECT_URI = \"\";\r\n\r\nif (window.location.href === \"http://localhost:3000\" || window.location.href === \"http://localhost:3000/\") {\r\n    SHIB_REDIRECT_URI = window.location.href;\r\n} else {\r\n    SHIB_REDIRECT_URI = serverEndpoint;\r\n}\r\n\r\nexport const SHIBBOLETH_LOGIN =\r\n    \"https://oauth.oit.duke.edu/oauth/authorize.php?\"\r\n     + \"client_id=\" + encodeURIComponent(CLIENT_ID)\r\n     + \"&client_secret=\" + encodeURIComponent(CLIENT_SECRET)\r\n     + \"&redirect_uri=\" + encodeURIComponent(SHIB_REDIRECT_URI)\r\n     + \"&response_type=token\"\r\n     + \"&state=1129\"\r\n     + \"&scope=\" + encodeURIComponent(SCOPE);\r\n\r\nexport const HTTPS_STATUS_OK = 200;\r\n","export enum Privilege  {\r\n    ADMIN = \"admin\",\r\n    USER = \"user\",\r\n};\r\n","import * as Constants from '../../Constants';\r\n\r\nexport default function getURL(path, endpoint) {\r\n    return Constants.serverEndpoint + path + endpoint;\r\n}\r\n","export enum ModelCommand {\r\n    create = 'create/',\r\n    delete = 'delete/',\r\n    edit = 'edit/',\r\n    view = 'view/',\r\n    detailView = 'detailView/',\r\n    search = 'search/',\r\n    VENDOR_VALUES = 'assistedvendor/',\r\n    UPLOAD_FILE = 'import/',\r\n    EXPORT_FILE = 'export/'\r\n}\r\n","export enum ModelInput {\r\n    Vendor = 'vendor',\r\n    model_number = 'model_number',\r\n    Height = 'height',\r\n    display_color = 'display_color',\r\n    ethernet_ports = 'ethernet_ports',\r\n    power_ports = 'power_ports',\r\n    CPU = 'cpu',\r\n    Memory = 'memory',\r\n    Storage = 'storage',\r\n    Comment = 'comment'\r\n}\r\n","import React from 'react';\r\n\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\n\r\n\r\nexport default class StatusDisplay extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n\r\n        };\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Snackbar open={this.props.open} autoHideDuration={12000} onClose={this.props.closeStatus}>\r\n                    <MuiAlert elevation={6} variant=\"filled\"\r\n                        severity={this.props.severity}\r\n                    >\r\n                        <div>\r\n                        {this.props.message}\r\n                        <IconButton\r\n                            aria-label=\"close\"\r\n                            color=\"inherit\"\r\n                            size=\"small\"\r\n                            onClick={this.props.closeStatus}\r\n                        >\r\n                            <CloseIcon fontSize=\"inherit\" />\r\n                        </IconButton>\r\n                        </div>\r\n                    </MuiAlert >\r\n                </Snackbar>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport StatusDisplay from './helpers/StatusDisplay';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport logo from '../images/logo.png';\r\n\r\n\r\n\r\nexport default class ShibLogin extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            username:'',\r\n            password:'',\r\n            statusMessage:'',\r\n            showStatus:false,\r\n            statusSeverity:'info',\r\n        };\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Grid\r\n                container\r\n                spacing={5}\r\n                direction=\"column\"\r\n                justify=\"flex-start\"\r\n                alignItems=\"center\"\r\n                onKeyDown={(e) => this.onKeyPressed(e)}\r\n                style={{\r\n                    \"minHeight\": \"102vh\",\r\n                    \"background\": \"linear-gradient(to top, #a8e063, #56ab2f)\",\r\n                }}\r\n            >\r\n                <Grid item xs={12}>\r\n                    <img src={logo} alt=\"\" style={{height: \"200px\", \"marginTop\": \"50px\"}} />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <Card\r\n                        style={\r\n                            {\r\n                                minWidth: '20vw',\r\n                            }\r\n                        }\r\n                    >\r\n                        <CardContent>\r\n                            <Grid\r\n                                container\r\n                                spacing={1}\r\n                                direction=\"column\"\r\n                                justify=\"center\"\r\n                                alignItems=\"center\"\r\n                            >\r\n                                <Grid container item alignItems=\"flex-start\" xs={12}>\r\n                                    <Typography\r\n                                        variant=\"h6\"\r\n                                        color=\"textPrimary\"\r\n                                        fontWeight=\"fontWeightBold\"\r\n                                        gutterBottom\r\n                                    >\r\n                                        Please wait while we log you in...\r\n                                    </Typography>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </CardContent>\r\n                    </Card>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <StatusDisplay\r\n                        open={this.state.showStatus}\r\n                        severity={this.state.statusSeverity}\r\n                        closeStatus={this.closeShowStatus}\r\n                        message={this.state.statusMessage}\r\n                    />\r\n                </Grid>\r\n            </Grid>\r\n\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport axios from 'axios';\r\nimport getURL from './helpers/functions/GetURL';\r\nimport { Privilege } from './enums/privilegeTypes.ts'\r\nimport StatusDisplay from './helpers/StatusDisplay';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport logo from '../images/logo.png';\r\nimport ShibLogin from './ShibLogin';\r\nimport * as Constants from \"./Constants\";\r\n\r\nconst loginMainPath = 'users/';\r\nconst queryString = require('query-string');\r\n\r\nexport default class Login extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            username:'',\r\n            password:'',\r\n            statusMessage:'',\r\n            showStatus:false,\r\n            statusSeverity:'info',\r\n            initialized:false,\r\n            oauth:false,\r\n        };\r\n\r\n        this.closeShowStatus = this.closeShowStatus.bind(this);\r\n        this.submitCredentials = this.submitCredentials.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        try {\r\n            var params = queryString.parse(window.location.hash.substring(1));\r\n            if (params.access_token != null) {\r\n                this.getDukeCredentials(params.access_token);\r\n                this.setState({ oauth: true });\r\n            }\r\n        } catch(e) {\r\n            console.log(\"tried:\")\r\n        }\r\n        this.setState({ initialized: true });\r\n    }\r\n\r\n    submitCredentials() {\r\n        axios.post(\r\n            getURL(loginMainPath, 'authenticate'), {\r\n                username: this.state.username,\r\n                password: this.state.password,\r\n            }).then(response => {\r\n                var valid = response.data['message'];\r\n                if (valid === 'success') {\r\n                    this.setState({ message: '' });\r\n                    this.props.loginFunc(response.data['token'], this.state.username, response.data['privilege']);\r\n                } else {\r\n                    this.setState({ showStatus:true, statusMessage:response.data['message'] });\r\n                }\r\n            });\r\n        //this.props.loginFunc('token', \"Administrator\", Privilege.ADMIN);\r\n    }\r\n\r\n    updateUsername(event) {\r\n        this.setState({ username: event.target.value })\r\n    }\r\n\r\n    updatePassword(event) {\r\n        this.setState({ password: event.target.value })\r\n    }\r\n\r\n    closeShowStatus() {\r\n        this.setState({ showStatus: false })\r\n    }\r\n\r\n    onKeyPressed(event) {\r\n        if (event.key === 'Enter') {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n            this.submitCredentials();\r\n        }\r\n    }\r\n\r\n    getDukeCredentials = (token) => {\r\n        axios.get('https://api.colab.duke.edu/identity/v1/', {\r\n            headers: {\r\n                'x-api-key': Constants.CLIENT_ID,\r\n                'Authorization': `Bearer ${token}`\r\n            }\r\n        }).then(response => {\r\n            axios.post(\r\n                getURL(loginMainPath, 'oauth'),\r\n                {\r\n                    \"username\":response.data.netid,\r\n                    \"email\":response.data.mail,\r\n                    \"display_name\":response.data.displayName,\r\n                    \"client_id\":Constants.CLIENT_ID,\r\n                    \"token\":token,\r\n                }\r\n                ).then(response => {\r\n                    console.log(\"response:\")\r\n                    console.log(response);\r\n                    var valid = response.data['message'];\r\n                    if (response.status === Constants.HTTPS_STATUS_OK) {\r\n                        this.setState({\r\n                            username:'',\r\n                            password:'',\r\n                            statusMessage:'',\r\n                            showStatus:false,\r\n                            statusSeverity:'info',\r\n                            initialized:false,\r\n                            oauth:false,\r\n                         });\r\n                        this.props.loginFuncOAuth(response.data['token'], response.data.username, response.data['privilege']);\r\n                    } else {\r\n                        this.setState({ showStatus:true, statusMessage:response.data['message'] });\r\n                    }\r\n            });\r\n        });\r\n    }\r\n\r\n    loginWithOAuth = () => {\r\n        window.location = Constants.SHIBBOLETH_LOGIN;\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                { (this.state.oauth) ? <ShibLogin /> :\r\n                <Grid\r\n                    container\r\n                    spacing={5}\r\n                    direction=\"column\"\r\n                    justify=\"flex-start\"\r\n                    alignItems=\"center\"\r\n                    onKeyDown={(e) => this.onKeyPressed(e)}\r\n                    style={{\r\n                        \"minHeight\": \"102vh\",\r\n                        \"background\": \"#56ab2f\",\r\n                        \"background\": \"-webkit-linear-gradient(to top, #a8e063, #56ab2f)\",\r\n                        \"background\": \"linear-gradient(to top, #a8e063, #56ab2f)\",\r\n                    }}\r\n                >\r\n                    <Grid item xs={12}>\r\n                        <img src={logo} style={{height: \"200px\", \"marginTop\": \"50px\"}} alt=\"Hyposoft\" />\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <Card\r\n                            style={\r\n                                {\r\n                                    minWidth: '20vw',\r\n                                }\r\n                            }\r\n                        >\r\n                            <CardContent>\r\n                                <Grid\r\n                                    container\r\n                                    spacing={1}\r\n                                    direction=\"column\"\r\n                                    justify=\"center\"\r\n                                    alignItems=\"center\"\r\n                                >\r\n                                    <Grid container item alignItems=\"flex-start\" xs={12}>\r\n                                        <Typography\r\n                                            variant=\"h4\"\r\n                                            color=\"textPrimary\"\r\n                                            fontWeight=\"fontWeightBold\"\r\n                                            gutterBottom\r\n                                        >\r\n                                            Login\r\n                                        </Typography>\r\n                                    </Grid>\r\n                                    <Grid item xs={12}>\r\n                                        <TextField\r\n                                            id=\"username-input\"\r\n                                            label=\"Username\"\r\n                                            variant=\"outlined\"\r\n                                            required={true}\r\n                                            ref='username'\r\n                                            onChange={this.updateUsername.bind(this)}\r\n                                            style={{minWidth: \"15vw\"}}\r\n                                        />\r\n                                    </Grid>\r\n                                    <Grid item xs={12}>\r\n                                        <TextField\r\n                                            id=\"password-input\"\r\n                                            label=\"Password\"\r\n                                            variant=\"outlined\"\r\n                                            required={true}\r\n                                            ref='password'\r\n                                            type=\"password\"\r\n                                            onChange={this.updatePassword.bind(this)}\r\n                                            style={{minWidth: \"15vw\"}}\r\n                                        />\r\n                                    </Grid>\r\n                                    <Grid item xs={12}>\r\n                                        <Button\r\n                                            onClick={this.submitCredentials}\r\n                                            variant=\"contained\"\r\n                                            color=\"primary\"\r\n                                            style={{minWidth: \"15vw\"}}\r\n                                        >\r\n                                            Sign In\r\n                                        </Button>\r\n                                    </Grid>\r\n                                    <Grid container item direciton=\"row\" justify=\"center\" alignItems=\"center\" xs={12}>\r\n                                            <hr style={{width: \"5vw\"}} />\r\n                                            <Typography color=\"textSecondary\">\r\n                                                Or\r\n                                            </Typography>\r\n                                            <hr style={{width: \"5vw\"}} />\r\n                                    </Grid>\r\n                                    <Grid item xs={12}>\r\n                                        <Button\r\n                                            onClick={this.loginWithOAuth}\r\n                                            variant=\"contained\"\r\n                                            color=\"primary\"\r\n                                        >\r\n                                            Sign In with NetID\r\n                                        </Button>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </CardContent>\r\n                        </Card>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <StatusDisplay\r\n                            open={this.state.showStatus}\r\n                            severity={this.state.statusSeverity}\r\n                            closeStatus={this.closeShowStatus}\r\n                            message={this.state.statusMessage}\r\n                        />\r\n                    </Grid>\r\n                </Grid>}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport CloudDownloadIcon from '@material-ui/icons/CloudDownload';\n\nexport default class ExportModel extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {};\n    }\n\n    render() {\n        return (\n            <div>\n                <Paper elevation={3}>\n                <Grid\n                    container\n                    spacing={2}\n                    direction=\"row\"\n                    justify=\"flex-start\"\n                    alignItems=\"center\"\n                    style={{\"padding\": \"10px\"}}\n                >\n                    <Grid item xs={12}>\n                        <Typography variant=\"h6\">Export</Typography>\n                    </Grid>\n                    <Grid item xs={12}>\n                        <Typography>Download what is currently shown in the table.</Typography>\n                    </Grid>\n                    <Grid item xs={12}>\n                        <Button\n                            onClick={this.props.downloadTable}\n                            variant=\"contained\"\n                            color=\"primary\"\n                            startIcon={<CloudDownloadIcon />}\n                            style={{\n                                width: \"100%\"\n                            }}\n                        >\n                            Export\n                        </Button>\n                    </Grid>\n                    <Grid container item direciton=\"row\" justify=\"center\" alignItems=\"center\" xs={12}>\n                        <hr style={{width: \"5vw\"}} />\n                        <Typography color=\"textSecondary\">\n                            Or\n                        </Typography>\n                        <hr style={{width: \"5vw\"}} />\n                    </Grid>\n                    <Grid item xs={12}>\n                        <Button\n                            onClick={this.props.showAll}\n                            variant=\"contained\"\n                            color=\"default\"\n                            style={{\n                                width: \"100%\"\n                            }}\n                        >\n                            Show all models\n                        </Button>\n                    </Grid>\n                </Grid>\n            </Paper>\n            </div>\n        );\n    }\n}\n","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\n\r\nfunction createInputs(name, label) {\r\n    return {label, name};\r\n}\r\n\r\nconst inputs = {\r\n    \"vendor\": createInputs('vendor', \"Vendor\"),\r\n    \"modelNumber\": createInputs('model_number', \"Model Number\"),\r\n    \"height\": createInputs('height', \"Height\"),\r\n    \"displayColor\": createInputs('display_color', \"Display Color\"),\r\n    \"ethernetPorts\": createInputs('ethernet_ports', \"Network Ports\"),\r\n    \"powerPorts\": createInputs('power_ports', \"Power Ports\"),\r\n    \"cpu\": createInputs('cpu', \"CPU\"),\r\n    \"memory\": createInputs('memory', \"Memory\"),\r\n    \"storage\": createInputs('storage', \"Storage\"),\r\n    \"comments\": createInputs('comments', \"Comments\"),\r\n}\r\n\r\nexport default class FilterModel extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            filters: {},\r\n        };\r\n    }\r\n\r\n    updateSearchText(event) {\r\n        if (this.state.filters.hasOwnProperty(event.target.id)) {\r\n            const newFilters = this.state.filters;\r\n            newFilters[event.target.id] = event.target.value;\r\n            this.setState({ filters: newFilters });\r\n            this.forceUpdate();\r\n        } else {\r\n            const newFilters = this.state.filters;\r\n            newFilters[event.target.id] = event.target.value;\r\n            this.setState({ filters: newFilters });\r\n            this.forceUpdate();\r\n        }\r\n    }\r\n\r\n    search() {\r\n        this.props.search(this.state.filters);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Paper elevation={3}>\r\n                <Grid\r\n                    container\r\n                    spacing={2}\r\n                    direction=\"row\"\r\n                    justify=\"flex-start\"\r\n                    alignItems=\"center\"\r\n                    style={{\"padding\": \"10px\"}}\r\n                >\r\n                    <Grid item xs={12}>\r\n                        <Typography variant=\"h5\">Search</Typography>\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6} md={4} lg={3}>\r\n                        <Autocomplete\r\n                            id=\"vendor\"\r\n                            options={this.props.options}\r\n                            includeInputInList\r\n                            freeSolo\r\n                            renderInput={params => (\r\n                            <TextField {...params} label={inputs.vendor.label} name={inputs.vendor.name} onChange={this.updateSearchText.bind(this)} onBlur={this.updateSearchText.bind(this)} variant=\"outlined\" fullWidth />\r\n                            )}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6} md={4} lg={3}>\r\n                        <TextField id=\"model_number\" variant=\"outlined\" label=\"Model Number\" name=\"model_number\" onChange={this.updateSearchText.bind(this)} style={{width: \"100%\"}} />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6} md={4} lg={3}>\r\n                        <TextField id=\"min_height\" type=\"number\" variant=\"outlined\" label=\"Min Height\" name=\"min_height\" onChange={this.updateSearchText.bind(this)} style={{width: \"100%\"}} InputProps={{ inputProps: { min: 1, max: 42} }}/>\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6} md={4} lg={3}>\r\n                        <TextField id=\"max_height\" type=\"number\" variant=\"outlined\" label=\"Max Height\" name=\"max_height\" onChange={this.updateSearchText.bind(this)} style={{width: \"100%\"}} InputProps={{ inputProps: { min: 1, max: 42} }}/>\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6} md={4} lg={3}>\r\n                        <TextField id=\"min_ethernet_ports\" type=\"number\" variant=\"outlined\" label=\"Min Network Ports\" name=\"min_ethernet_ports\" onChange={this.updateSearchText.bind(this)} style={{width: \"100%\"}} InputProps={{ inputProps: { min: 0} }}/>\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6} md={4} lg={3}>\r\n                        <TextField id=\"max_ethernet_ports\" type=\"number\" variant=\"outlined\" label=\"Max Network Ports\" name=\"max_ethernet_ports\" onChange={this.updateSearchText.bind(this)} style={{width: \"100%\"}} InputProps={{ inputProps: { min: 0} }}/>\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6} md={4} lg={3}>\r\n                        <TextField id=\"min_power_ports\" type=\"number\" variant=\"outlined\" label=\"Min Power Ports\" name=\"min_power_ports\" onChange={this.updateSearchText.bind(this)} style={{width: \"100%\"}} InputProps={{ inputProps: { min: 0} }}/>\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6} md={4} lg={3}>\r\n                        <TextField id=\"max_power_ports\" type=\"number\" variant=\"outlined\" label=\"Max Power Ports\" name=\"max_power_ports\" onChange={this.updateSearchText.bind(this)} style={{width: \"100%\"}} InputProps={{ inputProps: { min: 0} }}/>\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6} md={4} lg={3}>\r\n                        <TextField id=\"cpu\" variant=\"outlined\" label=\"CPU\" name=\"cpu\" onChange={this.updateSearchText.bind(this)} style={{width: \"100%\"}}/>\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6} md={4} lg={3}>\r\n                        <TextField id=\"memory\" type=\"number\" variant=\"outlined\" label=\"Memory\" name=\"memory\" onChange={this.updateSearchText.bind(this)} style={{width: \"100%\"}} InputProps={{ inputProps: { min: 0} }}/>\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6} md={4} lg={3}>\r\n                        <TextField id=\"storage\" variant=\"outlined\" label=\"Storage\" name=\"storage\" onChange={this.updateSearchText.bind(this)} style={{width: \"100%\"}}/>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <Button\r\n                            onClick={this.search.bind(this)}\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            style={{\r\n                                width: \"100%\"\r\n                            }}\r\n                        >\r\n                            Search\r\n                        </Button>\r\n                    </Grid>\r\n                </Grid>\r\n            </Paper>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\n\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from '@material-ui/core/Button';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { CompactPicker } from 'react-color';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport '../stylesheets/ModelStyles.css';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\r\nimport Dropzone from 'react-dropzone'\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListSubheader from '@material-ui/core/ListSubheader';\r\n\r\nfunction createInputs(name, label) {\r\n    return {label, name};\r\n}\r\n\r\nconst inputs = {\r\n    \"vendor\": createInputs('vendor', \"Vendor\"),\r\n    \"modelNumber\": createInputs('model_number', \"Model Number\"),\r\n    \"height\": createInputs('height', \"Height\"),\r\n    \"displayColor\": createInputs('display_color', \"Display Color\"),\r\n    \"ethernetPorts\": createInputs('ethernet_ports', \"Network Ports\"),\r\n    \"powerPorts\": createInputs('power_ports', \"Power Ports\"),\r\n    \"cpu\": createInputs('cpu', \"CPU\"),\r\n    \"memory\": createInputs('memory', \"Memory\"),\r\n    \"storage\": createInputs('storage', \"Storage\"),\r\n    \"comment\": createInputs('comment', \"Comment\"),\r\n}\r\n\r\nconst useStyles = theme => ({\r\n    root: {\r\n      flexGrow: 1,\r\n    },\r\n    modal: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        width: \"100%\",\r\n        margin:\"0 auto\",\r\n        overflow: \"scroll\"\r\n      },\r\n      grid: {\r\n          backgroundColor: theme.palette.background.paper,\r\n          boxShadow: theme.shadows[5],\r\n          padding: theme.spacing(2, 4, 3),\r\n          width: \"50%\"\r\n      },\r\n      progress: {\r\n        display: 'flex',\r\n        '& > * + *': {\r\n          marginLeft: theme.spacing(2),\r\n        },\r\n      },\r\n});\r\n\r\nclass CreateModel extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            color: '#000',\r\n            showModal: false,\r\n            showImportModal: false,\r\n            importedFile: null,\r\n            networkPorts: [],\r\n            numPorts: 0,\r\n        };\r\n    }\r\n\r\n    updateColor = (color) => {\r\n        this.setState({ color: color });\r\n        this.props.updateModelColor(color.hex);\r\n    }\r\n\r\n    showModal = () => {\r\n        this.setState({ showModal: true });\r\n    }\r\n\r\n    showImportModal = () => {\r\n        this.setState({ showImportModal: true });\r\n    }\r\n\r\n    closeModal = () => {\r\n        this.setState({ showModal: false, networkPorts: [], numPorts: 0 });\r\n    }\r\n\r\n    closeImportModal = () => {\r\n        this.setState({ showImportModal: false });\r\n    }\r\n\r\n    create = () => {\r\n        this.props.createModel(this.state.networkPorts);\r\n        this.closeModal();\r\n    }\r\n\r\n    uploadFile = () => {\r\n        const data = new FormData();\r\n        data.append('file', this.state.importedFile);\r\n        this.sendUploadedFile(data);\r\n    }\r\n\r\n    chooseFile = (event) => {\r\n        this.setState({ importedFile: event.target.files[0] })\r\n    }\r\n\r\n    updateNetworkPorts = (event) => {\r\n        const numPorts = event.target.value === '' ? 0 : event.target.value;\r\n\r\n        var ports = [];\r\n        for (var i = 1; i <= numPorts; i++) {\r\n            ports.push(i.toString());\r\n        }\r\n\r\n        this.setState({ networkPorts: ports, numPorts: numPorts });\r\n        this.props.updateModelCreator(event);\r\n    }\r\n\r\n    updatePort = (port, event) => {\r\n        const ports = this.state.networkPorts;\r\n        ports[port] = event.target.value;\r\n\r\n        this.setState({ networkPorts: ports });\r\n    }\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n\r\n        return (\r\n        <div>\r\n            <Paper elevation={3}>\r\n                <Grid\r\n                    container\r\n                    spacing={2}\r\n                    direction=\"row\"\r\n                    justify=\"flex-start\"\r\n                    alignItems=\"center\"\r\n                    style={{\"padding\": \"10px\"}}\r\n                >\r\n                    <Grid item xs={12}>\r\n                        <Typography\r\n                            variant=\"h5\"\r\n                        >\r\n                            Add\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            style={{\r\n                                width: \"100%\",\r\n                                background: \"green\",\r\n                                color: \"white\"\r\n                            }}\r\n                            onClick={this.showModal}\r\n                        >\r\n                            Create\r\n                        </Button>\r\n                    </Grid>\r\n                    <Grid container item direciton=\"row\" justify=\"center\" alignItems=\"center\" xs={12}>\r\n                        <hr style={{width: \"5vw\"}} />\r\n                        <Typography color=\"textSecondary\">\r\n                            Or\r\n                        </Typography>\r\n                        <hr style={{width: \"5vw\"}} />\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            style={{width: \"100%\"}}\r\n                            startIcon={<CloudUploadIcon />}\r\n                            onClick={() => {this.showImportModal()} }\r\n                        >\r\n                            Import\r\n                        </Button>\r\n                    </Grid>\r\n                </Grid>\r\n            </Paper>\r\n            <Modal\r\n                aria-labelledby=\"transition-modal-title\"\r\n                aria-describedby=\"transition-modal-description\"\r\n                className={classes.modal}\r\n                open={this.state.showModal}\r\n                onClose={this.closeModal}\r\n                closeAfterTransition\r\n            >\r\n                <Fade in={this.state.showModal}>\r\n                    <Backdrop\r\n                        open={this.state.showModal}\r\n                    >\r\n                        <div className={classes.grid}>\r\n                        <Grid\r\n                            container\r\n                            spacing={1}\r\n                            direction=\"row\"\r\n                            justify=\"flex-start\"\r\n                            alignItems=\"center\"\r\n                        >\r\n                            <Grid item xs={12}>\r\n                                <Typography variant=\"h5\">New Model</Typography>\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={12} md={6} lg={6}>\r\n                                <Autocomplete\r\n                                    id=\"select-vendor\"\r\n                                    options={this.props.options}\r\n                                    includeInputInList\r\n                                    freeSolo\r\n                                    renderInput={params => (\r\n                                        <TextField {...params} label={inputs.vendor.label} name={inputs.vendor.name} onChange={this.props.updateModelCreator} onBlur={this.props.updateModelCreator} variant=\"outlined\" fullWidth />\r\n                                    )}\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={6} md={4} lg={3}>\r\n                                <TextField id=\"standard-basic\" variant=\"outlined\" label={inputs.modelNumber.label} name={inputs.modelNumber.name} onChange={this.props.updateModelCreator}/>\r\n                            </Grid>\r\n                            <Grid item xs={3}>\r\n                                <TextField type=\"number\" id=\"standard-basic\" variant=\"outlined\" label={inputs.height.label} name={inputs.height.name} onChange={this.props.updateModelCreator} InputProps={{ inputProps: { min: 1, max: 42} }} style={{ width: \"100%\" }} />\r\n                            </Grid>\r\n                            <Grid item xs={3}>\r\n                                <TextField type=\"number\" id=\"standard-basic\" variant=\"outlined\" label={inputs.ethernetPorts.label} name={inputs.ethernetPorts.name} onChange={this.updateNetworkPorts} InputProps={{ inputProps: { min: 0} }} />\r\n                            </Grid>\r\n                            <Grid item xs={3}>\r\n                                <TextField type=\"number\" id=\"standard-basic\" variant=\"outlined\" label={inputs.powerPorts.label} name={inputs.powerPorts.name} onChange={this.props.updateModelCreator} InputProps={{ inputProps: { min: 0} }}/>\r\n                            </Grid>\r\n                            <Grid item xs={3}>\r\n                                <TextField id=\"standard-basic\" variant=\"outlined\" label={inputs.cpu.label} name={inputs.cpu.name} onChange={this.props.updateModelCreator}/>\r\n                            </Grid>\r\n                            <Grid item xs={3}>\r\n                                <TextField type=\"number\" id=\"standard-basic\" variant=\"outlined\" label={inputs.memory.label} name={inputs.memory.name} onChange={this.props.updateModelCreator} InputProps={{ inputProps: { min: 0} }} style={{ width: \"100%\" }}/>\r\n                            </Grid>\r\n                            <Grid item xs={3}>\r\n                                <TextField id=\"standard-basic\" variant=\"outlined\" label={inputs.storage.label} name={inputs.storage.name} onChange={this.props.updateModelCreator}/>\r\n                            </Grid>\r\n                            <Grid item xs={3}>\r\n                                <TextField id=\"standard-basic\" variant=\"outlined\" label={inputs.comment.label} name={inputs.comment.name} onChange={this.props.updateModelCreator}/>\r\n                            </Grid>\r\n                            <Grid item xs={6}>\r\n                                <Typography>Display Color</Typography>\r\n                                <CompactPicker\r\n                                    color={this.state.color}\r\n                                    onChange={this.updateColor}\r\n\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                            <List\r\n                                className={classes.root}\r\n                                subheader={\r\n                                    <ListSubheader component=\"div\" id=\"nested-list-subheader\">\r\n                                      Network Ports\r\n                                    </ListSubheader>\r\n                                  }\r\n                                style={{\r\n                                    maxHeight: \"30vh\",\r\n                                    overflow: \"auto\"\r\n                                }}\r\n                            >\r\n                                {Array.from({length: this.state.numPorts}, (x,i) => i).map((_, index) => {\r\n                                    const labelId = `list-label-${this.state.networkPorts[index]}`;\r\n\r\n                                    return (\r\n                                    <ListItem key={index} role={undefined} dense button>\r\n                                        <ListItemText id={labelId} primary={\"Port \" + (index+1).toString()} />\r\n                                        <TextField defaultValue={this.state.networkPorts[index]} onChange={(e) => this.updatePort(index, e)} />\r\n                                    </ListItem>\r\n                                    );\r\n                                })}\r\n                                {this.state.numPorts === 0 ? <ListItem key=\"add-items\" role={undefined} dense>\r\n                                <ListItemText id=\"add-items-label\" primary=\"Enter the number of network ports above\" />\r\n                                </ListItem> : null}\r\n                                </List>\r\n                            </Grid>\r\n                            <Grid item xs={3}>\r\n                                <Button\r\n                                    variant=\"contained\"\r\n                                    color=\"primary\"\r\n                                    onClick={this.create}\r\n                                    style={{width: \"100%\"}}\r\n                                >\r\n                                    Create\r\n                                </Button>\r\n                            </Grid>\r\n                            <Grid item xs={3}>\r\n                                <Button\r\n                                    variant=\"contained\"\r\n                                    color=\"secondary\"\r\n                                    onClick={this.closeModal}\r\n                                    style={{width: \"100%\"}}\r\n                                >\r\n                                    Cancel\r\n                                </Button>\r\n                            </Grid>\r\n                        </Grid>\r\n                </div>\r\n                </Backdrop>\r\n\r\n                </Fade>\r\n            </Modal>\r\n\r\n            <Modal\r\n                aria-labelledby=\"transition-modal-title\"\r\n                aria-describedby=\"transition-modal-description\"\r\n                className={classes.modal}\r\n                open={this.state.showImportModal}\r\n                onClose={this.closeImportModal}\r\n                closeAfterTransition\r\n            >\r\n                <Fade in={this.state.showImportModal}>\r\n                    <Backdrop\r\n                        open={this.state.showImportModal}\r\n                    >\r\n                        <div className={classes.grid}>\r\n                            {this.state.importedFile === null ?\r\n                        <Grid\r\n                            container\r\n                            spacing={1}\r\n                            direction=\"row\"\r\n                            justify=\"flex-start\"\r\n                            alignItems=\"center\"\r\n                        >\r\n                            <Grid item xs={9}>\r\n                                <Typography variant=\"h5\">Import Models</Typography>\r\n                            </Grid>\r\n                            <Grid item xs={3}>\r\n                                <Button\r\n                                    onClick={this.closeImportModal}\r\n                                    style={{ width: \"100%\" }}\r\n                                >\r\n                                    Close\r\n                                </Button>\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                                <Dropzone onDrop={acceptedFiles => {\r\n                                        this.setState({ importedFile: acceptedFiles[0] });\r\n                                    }}\r\n                                    accept=\".csv\"\r\n                                >\r\n                                    {({getRootProps, getInputProps}) => (\r\n                                        <section>\r\n                                        <div {...getRootProps()}>\r\n                                        <input {...getInputProps()} />\r\n\r\n                                            <Paper\r\n                                                elevation={3}\r\n                                                style={{\r\n                                                    height: \"100px\"\r\n                                                }}\r\n                                            >\r\n                                                <Grid\r\n                                                    container\r\n                                                    spacing={2}\r\n                                                    direction=\"row\"\r\n                                                    justify=\"center\"\r\n                                                    alignItems=\"center\"\r\n                                                    style={{\"padding\": \"30px\"}}\r\n                                                >\r\n                                                    <Grid item xs={12}>\r\n                                                        <Typography align=\"center\" variant=\"h6\">Drag and drop file here!</Typography>\r\n                                                    </Grid>\r\n                                                </Grid>\r\n\r\n                                            </Paper>\r\n                                        </div>\r\n                                        </section>\r\n                                    )}\r\n                                </Dropzone>\r\n                            </Grid>\r\n                            <Grid container item direciton=\"row\" justify=\"center\" alignItems=\"center\" xs={12}>\r\n                                <hr style={{width: \"20vw\"}} />\r\n                                <Typography color=\"textSecondary\">\r\n                                    Or\r\n                                </Typography>\r\n                                <hr style={{width: \"20vw\"}} />\r\n                            </Grid>\r\n                            <Grid container item direction=\"row\" justify=\"center\" alignItems=\"center\" xs={12}>\r\n                                <Button\r\n                                    variant=\"contained\"\r\n                                    color=\"primary\"\r\n                                    style={{width: \"40%\"}}\r\n                                >\r\n                                    Choose File\r\n                                </Button>\r\n                            </Grid>\r\n                        </Grid> : null }\r\n                </div>\r\n                </Backdrop>\r\n                </Fade>\r\n            </Modal>\r\n        </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withStyles(useStyles)(CreateModel);\r\n","\r\n\r\n\r\nexport const GENERAL_MODEL_ERROR =  \"There was an error in the backend. Could not perform the given model operation at this time.\";\r\n","import React from 'react';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport Popover from '@material-ui/core/Popover';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport Typography from '@material-ui/core/Typography';\nimport Modal from '@material-ui/core/Modal';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport Fade from '@material-ui/core/Fade';\nimport { withStyles } from '@material-ui/core/styles';\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { CompactPicker } from 'react-color';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ViewListIcon from '@material-ui/icons/ViewList';\nimport { Privilege } from '../../enums/privilegeTypes.ts'\nimport EditIcon from '@material-ui/icons/Edit';\nimport ListSubheader from '@material-ui/core/ListSubheader';\nimport CommentIcon from '@material-ui/icons/Comment';\nimport axios from 'axios';\nimport { CircularProgress } from '@material-ui/core';\nimport { ModelCommand } from '../enums/ModelCommands.ts'\nimport getURL from '../../helpers/functions/GetURL';\nimport * as ModelConstants from \"../ModelConstants\";\n\n\nconst useStyles = theme => ({\n    root: {\n      flexGrow: 1,\n    },\n    modal: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        width: \"100%\",\n        margin:\"0 auto\",\n        overflow: \"scroll\"\n      },\n      grid: {\n          backgroundColor: theme.palette.background.paper,\n          boxShadow: theme.shadows[5],\n          padding: theme.spacing(2, 4, 3),\n          width: \"50%\"\n      },\n      progress: {\n        display: 'flex',\n        '& > * + *': {\n          marginLeft: theme.spacing(2),\n        },\n      },\n});\n\nconst modelsMainPath = 'models/';\n\nfunction createInputs(name, label) {\n    return {label, name};\n}\n\nconst inputs = {\n    \"vendor\": createInputs('vendor', \"Vendor\", ),\n    \"modelNumber\": createInputs('model_number', \"Model Number\"),\n    \"height\": createInputs('height', \"Height\"),\n    \"displayColor\": createInputs('display_color', \"Display Color\"),\n    \"ethernetPorts\": createInputs('ethernet_ports', \"Network Ports\"),\n    \"powerPorts\": createInputs('power_ports', \"Power Ports\"),\n    \"cpu\": createInputs('cpu', \"CPU\"),\n    \"memory\": createInputs('memory', \"Memory\"),\n    \"storage\": createInputs('storage', \"Storage\"),\n    \"comment\": createInputs('comment', \"Comment\"),\n}\n\nclass ModelsTable extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n        popoverAnchor: null,\n        commentPopover: null,\n        networkPorts: [],\n        numPorts: 0,\n        showDetailedView: false,\n        showDeleteModal: false,\n        row: null,\n        comment: \"\",\n        color: '#000',\n        detailViewLoading: false,\n\n        detailedValues : {\n            'vendor':'',\n            'model_number':'',\n            'height':'',\n            'display_color':'',\n            'ethernet_ports':[],\n            'power_ports':'',\n            'cpu':'',\n            'memory':'',\n            'storage':'',\n            'comment':'',\n        },\n        originalVendor:'',\n        originalModelNumber:'',\n        originalHeight:'',\n    };\n\n    axios.defaults.headers.common['token'] = this.props.token;\n    axios.defaults.headers.common['privilege'] = this.props.privilege;\n  }\n\n  updateColor = (color) => {\n    this.setState({ color: color });\n    this.props.updateModelColor(color.hex);\n}\n\n  showDetailedView = (row) => {\n    this.setState({\n        row: row,\n        showDetailedView: true,\n        detailViewLoading: true,\n        color: row[\"Display Color\"] === null ? \"#000000\" : row[\"Display Color\"],\n        networkPorts: row[\"Network Ports\"] === null ? [] : row[\"Network Ports\"],\n        numPorts: row[\"Network Ports\"] === null ? 0 : row[\"Network Ports\"].length\n    });\n\n    this.detailViewModel(row[\"Vendor\"], row[\"Model Number\"]);\n  }\n\n  detailViewModel = (vendor, modelNum) => {\n    axios.post(\n        getURL(modelsMainPath, ModelCommand.detailView),\n        {\n            'vendor': vendor,\n            'model_number': modelNum,\n        }\n        ).then(response => {\n            const model = response.data['models'][0];\n            this.setState({\n                detailedValues: model,\n                detailViewLoading: false,\n                originalVendor: model[\"vendor\"],\n                originalModelNumber: model[\"model_number\"],\n                originalHeight: model[\"height\"]\n            });\n        }\n        ).catch(function(error) {\n            this.setState({ showStatus: true, statusMessage: ModelConstants.GENERAL_MODEL_ERROR, statusSeverity:\"error\" });\n        });\n}\n\n  closeDetailedView = () => {\n      this.setState({ showDetailedView: false, row: null, color: \"#000000\", originalVendor: \"\", originalModelNumber: \"\", originalHeight: \"\" });\n  }\n\n  showDeleteModal = (row) => {\n      this.setState({ showDeleteModal: true, originalVendor: row[\"Vendor\"], originalModelNumber: row[\"Model Number\"] });\n  }\n\n  closeDeleteModal = () => {\n        this.setState({ showDeleteModal: false, originalVendor: \"\", originalModelNumber: \"\", originalHeight: \"\" });\n  }\n\n  delete = () => {\n      this.props.deleteModel(this.state.originalVendor, this.state.originalModelNumber);\n      this.closeDeleteModal();\n  }\n\n  clickInfo = (event, ports) => {\n      this.setState({ popoverAnchor: event.target, networkPorts: ports });\n  }\n\n  clickComment = (event, comment) => {\n      this.setState({ commentPopover: event.target, comment: comment });\n  }\n\n  handlePopoverClose = () => {\n      this.setState({ popoverAnchor: null });\n  }\n\n  handleCommentPopoverClose = () => {\n      this.setState({ commentPopover: null });\n  }\n\n  updateNetworkPorts = (event) => {\n    const numPorts = event.target.value === '' ? 0 : event.target.value;\n\n    var ports = [];\n    for (var i = 1; i <= numPorts; i++) {\n        ports.push(i.toString());\n    }\n\n    this.setState({ networkPorts: ports, numPorts: numPorts });\n    this.props.updateModelEdited(event);\n  }\n\n    updatePort = (port, event) => {\n        const ports = this.state.networkPorts;\n        ports[port] = event.target.value;\n\n        this.setState({ networkPorts: ports });\n    }\n\n    save = () => {\n        this.props.editModel(this.state.originalVendor, this.state.originalModelNumber, this.state.originalHeight, this.state.detailedValues, this.state.networkPorts);\n        this.closeDetailedView();\n    }\n\n    updateModelEdited = (event) => {\n        this.state.detailedValues[event.target.name] = event.target.value;\n        this.forceUpdate()\n    }\n\n\n\n  render() {\n    const { classes } = this.props;\n\n    return (\n      <div>\n        <TableContainer component={Paper}>\n          <Table style={{minWidth: 1000}} aria-label=\"simple table\">\n            <TableHead>\n              <TableRow >\n                {this.props.columns.map(col => (<TableCell align=\"center\"><span id={col} style={{fontWeight: \"bold\"}}>{col}</span></TableCell>))}\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {this.props.vals.map((row, index) => (\n              <TableRow id={index} hover={true}>\n                  { this.props.privilege === Privilege.ADMIN ? <TableCell scope=\"row\" align=\"center\">\n                      <Button>\n                        <EditIcon onClick={() => this.showDetailedView(row)} />\n                      </Button>\n                      <Button>\n                        <DeleteIcon onClick={() => this.showDeleteModal(row)} />\n                      </Button>\n                  </TableCell> : null }\n                {this.props.keys.map(key => {\n                  if (key === \"Display Color\") {\n                    return (\n                      <TableCell\n                        scope=\"row\"\n                        align=\"center\"\n                        style={{\n                          backgroundColor: row[key]\n                        }}\n                      >\n                      </TableCell>\n                    )\n                  }\n\n                  if (key === \"Network Ports\") {\n                    return (\n                      <TableCell\n                        scope=\"row\"\n                        align=\"center\"\n                      >\n                        {row[key] === null ? \"\" : row[key].length}\n                        {row[key] == null ? null : <ViewListIcon style={{\"margin\": \"5px\"}} onClick={(e) => {this.clickInfo(e, row[key])}} />}\n                      </TableCell>\n                    )\n                  }\n\n                  if (key == \"Comment\") {\n                    return (row[\"Comment\"] !== null && row[\"Comment\"].length > 0 ? <TableCell scope=\"row\" align=\"center\">\n                        <Button>\n                        <CommentIcon onClick={(e) => this.clickComment(e, row[\"Comment\"])} />\n                        </Button>\n                    </TableCell> : <TableCell scope=\"row\" align=\"center\"></TableCell>);\n                  }\n\n                  return (<TableCell scope=\"row\" align=\"center\">{row[key]}</TableCell>)\n                })}\n              </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </TableContainer>\n        <Popover\n            id={Boolean(this.state.popoverAnchor) ? 'simple-popover': undefined}\n            open={Boolean(this.state.popoverAnchor)}\n            anchorEl={this.state.popoverAnchor}\n            onClose={this.handlePopoverClose}\n            anchorOrigin={{\n                vertical: 'bottom',\n                horizontal: 'center',\n            }}\n            transformOrigin={{\n                vertical: 'top',\n                horizontal: 'center',\n            }}\n        >\n            <List\n                className={classes.root}\n                subheader={\n                    <ListSubheader component=\"div\" id=\"nested-list-subheader\">\n                      Network Ports\n                    </ListSubheader>\n                  }\n            >\n                                {this.state.networkPorts.map(value => {\n                                    const labelId = `checkbox-list-label-${value}`;\n\n                                    return (\n                                    <ListItem key={value} role={undefined} dense button>\n                                        <ListItemText id={labelId} primary={value} />\n                                    </ListItem>\n                                    );\n                                })}\n                                </List>\n        </Popover>\n        <Popover\n            id={Boolean(this.state.commentPopover) ? 'simple-popover': undefined}\n            open={Boolean(this.state.commentPopover)}\n            anchorEl={this.state.commentPopover}\n            onClose={this.handleCommentPopoverClose}\n            anchorOrigin={{\n                vertical: 'bottom',\n                horizontal: 'center',\n            }}\n            transformOrigin={{\n                vertical: 'top',\n                horizontal: 'center',\n            }}\n        >\n            <Typography\n                variant=\"body1\"\n                style={{\n                    padding: \"30px\"\n                }}\n            >\n                {this.state.comment}\n            </Typography>\n        </Popover>\n        <Modal\n                aria-labelledby=\"transition-modal-title\"\n                aria-describedby=\"transition-modal-description\"\n                className={classes.modal}\n                open={this.state.showDetailedView}\n                onClose={this.closeDetailedView}\n                closeAfterTransition\n            >\n                <Fade in={this.state.showDetailedView}>\n                    <Backdrop\n                        open={this.state.showDetailedView}\n                    >\n                        <div className={classes.grid}>\n                            {this.state.detailViewLoading ? <CircularProgress /> :\n                        <Grid\n                            container\n                            spacing={1}\n                            direction=\"row\"\n                            justify=\"flex-start\"\n                            alignItems=\"center\"\n                        >\n                            <Grid item xs={12}>\n                                <Typography variant=\"h5\">Model Details</Typography>\n                            </Grid>\n                            <Grid item xs={12} sm={12} md={6} lg={6}>\n                                <Autocomplete\n                                    id=\"select-vendor\"\n                                    options={this.props.options}\n                                    defaultValue={this.state.detailedValues == null ? '' : this.state.detailedValues.vendor}\n                                    includeInputInList\n                                    freeSolo\n                                    renderInput={params => (\n                                        <TextField {...params} label={inputs.vendor.label} name={inputs.vendor.name} onChange={this.updateModelEdited} onBlur={this.updateModelEdited} variant=\"outlined\" fullWidth />\n                                    )}\n                                />\n                            </Grid>\n                            <Grid item xs={12} sm={6} md={4} lg={3}>\n                                <TextField id=\"standard-basic\" variant=\"outlined\" label={inputs.modelNumber.label} name={inputs.modelNumber.name} defaultValue={this.state.detailedValues == null ? '' : this.state.detailedValues.model_number} onChange={this.updateModelEdited}/>\n                            </Grid>\n                            <Grid item xs={3}>\n                                <TextField type=\"number\" id=\"standard-basic\" variant=\"outlined\" label={inputs.height.label} name={inputs.height.name} defaultValue={this.state.detailedValues == null ? '' : this.state.detailedValues.height} onChange={this.updateModelEdited} InputProps={{ inputProps: { min: 1, max: 42} }} style={{ width: \"100%\" }} />\n                            </Grid>\n                            <Grid item xs={3}>\n                                <TextField type=\"number\" id=\"standard-basic\" variant=\"outlined\" label={inputs.ethernetPorts.label} name={inputs.ethernetPorts.name} defaultValue={this.state.detailedValues == null ? '' : (this.state.detailedValues.ethernet_ports == null ? '' : this.state.detailedValues.ethernet_ports.length)} onChange={this.updateNetworkPorts} InputProps={{ inputProps: { min: 0} }} />\n                            </Grid>\n                            <Grid item xs={3}>\n                                <TextField type=\"number\" id=\"standard-basic\" variant=\"outlined\" label={inputs.powerPorts.label} name={inputs.powerPorts.name} defaultValue={this.state.detailedValues == null ? '' : this.state.detailedValues.power_ports} onChange={this.updateModelEdited} InputProps={{ inputProps: { min: 0} }}/>\n                            </Grid>\n                            <Grid item xs={3}>\n                                <TextField id=\"standard-basic\" variant=\"outlined\" label={inputs.cpu.label} name={inputs.cpu.name} defaultValue={this.state.detailedValues == null ? '' : this.state.detailedValues.cpu} onChange={this.updateModelEdited}/>\n                            </Grid>\n                            <Grid item xs={3}>\n                                <TextField type=\"number\" id=\"standard-basic\" variant=\"outlined\" label={inputs.memory.label} name={inputs.memory.name} defaultValue={this.state.detailedValues == null ? '' : this.state.detailedValues.memory} onChange={this.updateModelEdited} InputProps={{ inputProps: { min: 0} }} style={{ width: \"100%\" }}/>\n                            </Grid>\n                            <Grid item xs={3}>\n                                <TextField id=\"standard-basic\" variant=\"outlined\" label={inputs.storage.label} name={inputs.storage.name} defaultValue={this.state.detailedValues == null ? '' : this.state.detailedValues.storage} onChange={this.updateModelEdited}/>\n                            </Grid>\n                            <Grid item xs={3}>\n                                <TextField id=\"standard-basic\" variant=\"outlined\" label={inputs.comment.label} name={inputs.comment.name} defaultValue={this.state.detailedValues == null ? '' : this.state.detailedValues.comment} onChange={this.updateModelEdited}/>\n                            </Grid>\n                            <Grid item xs={6}>\n                                <Typography>Display Color</Typography>\n                                <CompactPicker\n                                    color={this.state.color}\n                                    onChange={this.updateColor}\n                                />\n                            </Grid>\n                            <Grid item xs={12}>\n                            <List\n                                className={classes.root}\n                                subheader={\n                                    <ListSubheader component=\"div\" id=\"nested-list-subheader\">\n                                      Network Ports\n                                    </ListSubheader>\n                                  }\n                                style={{\n                                    maxHeight: \"30vh\",\n                                    overflow: \"auto\"\n                                }}\n                            >\n                                {Array.from({length: this.state.numPorts}, (x,i) => i).map((_, index) => {\n                                    const labelId = `list-label-${this.state.networkPorts[index]}`;\n\n                                    return (\n                                    <ListItem key={index} role={undefined} dense button>\n                                        <ListItemText id={labelId} primary={\"Port \" + (index+1).toString()} />\n                                        <TextField defaultValue={this.state.networkPorts[index]} onChange={(e) => this.updatePort(index, e)} />\n                                    </ListItem>\n                                    );\n                                })}\n                                {this.state.numPorts === 0 ? <ListItem key=\"add-items\" role={undefined} dense>\n                                <ListItemText id=\"add-items-label\" primary=\"Enter the number of network ports above\" />\n                                </ListItem> : null}\n                                </List>\n                            </Grid>\n                            <Grid item xs={3}>\n                                <Button\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    onClick={this.save}\n                                    style={{width: \"100%\"}}\n                                >\n                                    Save\n                                </Button>\n                            </Grid>\n                            <Grid item xs={3}>\n                                <Button\n                                    variant=\"contained\"\n                                    color=\"secondary\"\n                                    onClick={this.closeDetailedView}\n                                    style={{width: \"100%\"}}\n                                >\n                                    Cancel\n                                </Button>\n                            </Grid>\n                        </Grid>}\n                </div>\n                </Backdrop>\n\n                </Fade>\n            </Modal>\n\n            <Modal\n                aria-labelledby=\"transition-modal-title\"\n                aria-describedby=\"transition-modal-description\"\n                className={classes.modal}\n                open={this.state.showDeleteModal}\n                onClose={this.closeDeleteModal}\n                closeAfterTransition\n            >\n                <Fade in={this.state.showDeleteModal}>\n                    <Backdrop\n                        open={this.state.showDeleteModal}\n                    >\n                        <div className={classes.grid}>\n                        <Grid\n                            container\n                            spacing={1}\n                            direction=\"row\"\n                            justify=\"flex-start\"\n                            alignItems=\"center\"\n                        >\n                            <Grid item xs={12}>\n                                <Typography variant=\"h5\">Are you sure?</Typography>\n                            </Grid>\n                            <Grid item xs={12} sm={12} md={6} lg={6}>\n                                <Typography variant=\"body1\">\n                                    Doing this will remove the model permanently.\n                                </Typography>\n                            </Grid>\n\n                            <Grid item xs={3}>\n                                <Button\n                                    variant=\"contained\"\n                                    color=\"secondary\"\n                                    onClick={this.delete}\n                                    style={{width: \"100%\"}}\n                                >\n                                    Yes\n                                </Button>\n                            </Grid>\n                            <Grid item xs={3}>\n                                <Button\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    onClick={this.closeDeleteModal}\n                                    style={{width: \"100%\"}}\n                                >\n                                    No\n                                </Button>\n                            </Grid>\n                        </Grid>\n                </div>\n                </Backdrop>\n\n                </Fade>\n            </Modal>\n\n      </div>\n    );\n  }\n}\n\nexport default withStyles(useStyles)(ModelsTable);\n","export enum UserCommand {\r\n    create = 'create/',\r\n    delete = 'delete/',\r\n    edit = 'edit/',\r\n    view = 'view/',\r\n    detailView = 'detailView/',\r\n    search='search/',\r\n}\r\n","export enum UserInput {\r\n    Username='username',\r\n    Password='password',\r\n    Email='email',\r\n    display_name='display_name',\r\n    Privilege='privilege',\r\n}\r\n","import React from 'react';\r\nimport axios from 'axios';\r\nimport { CSVLink } from \"react-csv\";\r\n\r\nimport { ModelCommand } from '../enums/ModelCommands.ts'\r\nimport { ModelInput } from '../enums/ModelInputs.ts'\r\n\r\nimport ExportModel from '../helpers/ExportModel';\r\nimport FilterModel from '../helpers/FilterModel';\r\nimport CreateModel from '../helpers/CreateModel';\r\n\r\nimport { Privilege } from '../../enums/privilegeTypes.ts'\r\n\r\nimport getURL from '../../helpers/functions/GetURL';\r\nimport ModelsTable from '../helpers/ModelsTable';\r\nimport { Typography } from '@material-ui/core';\r\n\r\nimport * as ModelConstants from \"../ModelConstants\";\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nconst columns = [\r\n    'Vendor',\r\n    'Model Number',\r\n    'Height',\r\n    'Display Color',\r\n    'Network Ports',\r\n    'Power Ports',\r\n    'CPU',\r\n    'Memory',\r\n    'Storage',\r\n    'Comment',\r\n]\r\n\r\nconst adminColumns = [\r\n    'Actions',\r\n    'Vendor',\r\n    'Model Number',\r\n    'Height',\r\n    'Display Color',\r\n    'Network Ports',\r\n    'Power Ports',\r\n    'CPU',\r\n    'Memory',\r\n    'Storage',\r\n    'Comment',\r\n]\r\n\r\nconst columnLookup = {\r\n    \"vendor\": \"Vendor\",\r\n    \"model_number\": \"Model Number\",\r\n    \"height\": \"Height\",\r\n    'display_color': 'Display Color',\r\n    'ethernet_ports': 'Network Ports',\r\n    'power_ports': 'Power Ports',\r\n    'cpu': 'CPU',\r\n    'memory': 'Memory',\r\n    'storage': 'Storage',\r\n    'comment': \"Comment\"\r\n}\r\n\r\nconst modelsMainPath = 'models/';\r\nconst modelDownloadFileName = 'models.csv';\r\n\r\nexport default class ModelsView extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            // modals\r\n            showCreateModal: false,\r\n            showImportModal: false,\r\n\r\n            // table items\r\n            items: [],\r\n            rows: [],\r\n\r\n            // vals for creating a new model\r\n            createdModel : {\r\n                'vendor':'',\r\n                'model_number':'',\r\n                'height':'',\r\n                'display_color':'',\r\n                'ethernet_ports':'',\r\n                'power_ports':'',\r\n                'cpu':'',\r\n                'memory':'',\r\n                'storage':'',\r\n                'comment':'',\r\n            },\r\n            createdVendor:'',\r\n            createdModelNum:'',\r\n            createdHeight:'',\r\n            createdDispClr:'',\r\n            createdEthPorts:'',\r\n            createdPwrPorts:'',\r\n            createdCPU:'',\r\n            createdMem:'',\r\n            createdStorage:'',\r\n            createdComments:'',\r\n\r\n            // vals for deleting a model\r\n            deleteVendor:'',\r\n            deleteModel:'',\r\n\r\n            // vals for viewing a model\r\n            viewVendor:'',\r\n            viewModel:'',\r\n\r\n            // searching a model\r\n            searchText:\"\",\r\n            searchVendor:'',\r\n            searchModelNum:'',\r\n            searchHeight:'',\r\n\r\n            // csv data\r\n            csvData:'',\r\n\r\n            statusOpen:false,\r\n            statusSeverity:'',\r\n            statusMessage:'',\r\n            detailStatusOpen:false,\r\n            detailStatusSeverity:'',\r\n            detailStatusMessage:'',\r\n            createStatusOpen:false,\r\n            createStatusSeverity:'',\r\n            createStatusMessage:'',\r\n\r\n            vendorsList:[],\r\n            madeVendorQuery:false,\r\n\r\n        };\r\n\r\n        axios.defaults.headers.common['token'] = this.props.token;\r\n        axios.defaults.headers.common['privilege'] = this.props.privilege;\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.searchModels();\r\n        this.getVendorList();\r\n    }\r\n\r\n    createModel = (networkPorts) => {\r\n        axios.post(\r\n            getURL(modelsMainPath, ModelCommand.create),\r\n            {\r\n                'vendor':this.state.createdModel[ModelInput.Vendor],\r\n                'model_number':this.state.createdModel[ModelInput.model_number],\r\n                'height':this.state.createdModel[ModelInput.Height],\r\n                'display_color':this.state.createdModel[ModelInput.display_color],\r\n                'ethernet_ports':this.state.createdModel[ModelInput.ethernet_ports],\r\n                'power_ports':this.state.createdModel[ModelInput.power_ports],\r\n                'cpu':this.state.createdModel[ModelInput.CPU],\r\n                'memory':this.state.createdModel[ModelInput.Memory],\r\n                'storage':this.state.createdModel[ModelInput.Storage],\r\n                'comment':this.state.createdModel[ModelInput.Comment],\r\n                'ethernet_ports': networkPorts,\r\n            }\r\n            ).then(\r\n                response => {\r\n                    if (response.data.message === 'success') {\r\n                        this.setState({\r\n                            showStatus: true,\r\n                            statusMessage: \"Successfully created model\",\r\n                            statusSeverity:\"success\",\r\n                            createdModel : {\r\n                                'vendor':'',\r\n                                'model_number':'',\r\n                                'height':'',\r\n                                'display_color':'',\r\n                                'ethernet_ports':'',\r\n                                'power_ports':'',\r\n                                'cpu':'',\r\n                                'memory':'',\r\n                                'storage':'',\r\n                                'comment':'',\r\n                            },\r\n                            showCreateModal:false,\r\n                        });\r\n                        this.getVendorList();\r\n                        this.searchModels();\r\n                    } else {\r\n                        this.setState({ createStatusOpen: true, createStatusMessage: response.data.message, createStatusSeverity:\"error\" })\r\n                    }\r\n                }).catch(\r\n                    this.setState({ createStatusOpen: true, createStatusMessage: ModelConstants.GENERAL_MODEL_ERROR, createStatusSeverity:\"error\" })\r\n                );\r\n    }\r\n\r\n    editModel = (originalVendor, originalModelNum, originalHeight, detailedValues, networkPorts) => {\r\n        axios.post(\r\n            getURL(modelsMainPath, ModelCommand.edit),\r\n            {\r\n                'vendorOriginal': originalVendor,\r\n                'model_numberOriginal': originalModelNum,\r\n                'heightOriginal': originalHeight,\r\n                'vendor': detailedValues[ModelInput.Vendor],\r\n                'model_number': detailedValues[ModelInput.model_number],\r\n                'height': detailedValues[ModelInput.Height],\r\n                'display_color': detailedValues[ModelInput.display_color],\r\n                'ethernet_ports': networkPorts,\r\n                'power_ports': detailedValues[ModelInput.power_ports],\r\n                'cpu': detailedValues[ModelInput.CPU],\r\n                'memory': detailedValues[ModelInput.Memory],\r\n                'storage': detailedValues[ModelInput.Storage],\r\n                'comment': detailedValues[ModelInput.Comment],\r\n            }\r\n            ).then(\r\n                response => {\r\n                    if (response.data.message === 'success') {\r\n                        this.setState({\r\n                            showStatus: true,\r\n                            statusSeverity:'success',\r\n                            statusMessage: \"Successfully edited model\",\r\n                            showDetailedView:false\r\n                        });\r\n                        this.getVendorList();\r\n                        this.searchModels();\r\n                    } else {\r\n                        this.setState({ detailStatusOpen: true, detailStatusMessage: response.data.message, detailStatusSeverity:\"error\" })\r\n                    }\r\n                }).catch(\r\n                    this.setState({ detailStatusOpen: true, detailStatusMessage: ModelConstants.GENERAL_MODEL_ERROR, detailStatusSeverity:\"error\" })\r\n                );\r\n    }\r\n\r\n    deleteModel = (originalVendor, originalModelNumber) => {\r\n        console.log(originalVendor);\r\n        axios.post(\r\n            getURL(modelsMainPath, ModelCommand.delete),\r\n            {\r\n                'vendor': originalVendor,\r\n                'model_number': originalModelNumber,\r\n            }\r\n            ).then(\r\n                response => {\r\n                    if (response.data.message === 'success') {\r\n                        this.setState({\r\n                            showStatus: true,\r\n                            statusSeverity:'success',\r\n                            statusMessage: \"Successfully deleted model\",\r\n                        });\r\n                        this.getVendorList();\r\n                        this.searchModels();\r\n                    } else {\r\n                        this.setState({ showStatus: true, statusMessage: response.data.message, statusSeverity:\"error\" })\r\n                    }\r\n                }).catch(\r\n                    this.setState({ showStatus: true, statusMessage: ModelConstants.GENERAL_MODEL_ERROR, statusSeverity:\"error\" })\r\n                );\r\n    }\r\n\r\n    detailViewModel = (vendor, modelNum) => {\r\n        axios.post(\r\n            getURL(modelsMainPath, ModelCommand.detailView),\r\n            {\r\n                'vendor': vendor,\r\n                'model_number': modelNum,\r\n            }\r\n            ).then(response => {\r\n                this.setState({ detailedValues: response.data['models'][0], detailViewLoading: false});\r\n            }\r\n            ).catch(function(error) {\r\n                this.setState({ showStatus: true, statusMessage: ModelConstants.GENERAL_MODEL_ERROR, statusSeverity:\"error\" });\r\n            });\r\n\r\n        this.setState({\r\n            viewVendor: '',\r\n            viewModel: '',\r\n        });\r\n    }\r\n\r\n    searchModels = () => {\r\n        axios.post(\r\n            getURL(modelsMainPath, ModelCommand.search),\r\n            {\r\n                'filter': {\r\n                    'vendor': this.state.searchVendor,\r\n                    'model_number': this.state.searchModelNum,\r\n                    'height': this.state.searchHeight,\r\n                }\r\n            }\r\n            ).then(response => {\r\n                const models = response.data['models'] === undefined ? [] : response.data['models'];\r\n                var rows = [];\r\n                Object.values(models).forEach(model => {\r\n                    var row = {};\r\n                    Object.keys(model).forEach(key => {\r\n                        if (key in columnLookup) {\r\n                            row[columnLookup[key]] = model[key];\r\n                        } else {\r\n                            row[key] = model[key];\r\n                        }\r\n                    });\r\n                    rows.push(row);\r\n                });\r\n\r\n                this.setState({ rows: rows, items: models })\r\n            });\r\n\r\n        this.setState({\r\n            searchText: '',\r\n        });\r\n    }\r\n\r\n    getVendorList = () => {\r\n        axios.get(\r\n            getURL(modelsMainPath, ModelCommand.VENDOR_VALUES), {}\r\n            ).then(response => this.setState({ vendorsList: response.data.results }));\r\n\r\n        this.setState({ madeVendorQuery: true });\r\n    }\r\n\r\n    sendUploadedFile = (data) => {\r\n        axios.post(\r\n            getURL(modelsMainPath, ModelCommand.UPLOAD_FILE), data\r\n            ).then(response => {\r\n                if (response.data.message === 'success') {\r\n                    this.setState({ showStatus: true, statusMessage: response.data.summary, statusSeverity:'success', showImportModal: false,})\r\n                    this.searchModels();\r\n                } else {\r\n                    this.setState({ showStatus: true, statusMessage: response.data.message, statusSeverity:\"error\" })\r\n                }\r\n            });\r\n    }\r\n\r\n    downloadTable = () => {\r\n        axios.post(\r\n            getURL(modelsMainPath, ModelCommand.EXPORT_FILE),\r\n            {\r\n                'filter': {\r\n                    'vendor':this.state.searchVendor,\r\n                    'model_number':this.state.searchModelNum,\r\n                    'height':this.state.searchHeight,\r\n                }\r\n            }\r\n            ).then(response => {\r\n                this.setState({ csvData: response.data.csvData });\r\n                this.csvLink.link.click();\r\n            });\r\n    }\r\n\r\n    search = (filters) => {\r\n        this.setState({ searchVendor: filters['vendor'], searchModelNum: filters['model_number'], searchHeight: filters['height']}, this.searchModels);\r\n    }\r\n\r\n    searchAll = () => {\r\n        var filters = {\r\n            'vendor': '',\r\n            'model_number': '',\r\n            'height': ''\r\n        };\r\n\r\n        this.search(filters);\r\n    }\r\n\r\n    openCreateModal = () => {\r\n        this.setState({showCreateModal: true});\r\n    }\r\n\r\n    openImportModal = () => {\r\n        this.setState({showImportModal: true});\r\n    }\r\n\r\n    showDetailedView = (row) => {\r\n        this.setState({\r\n            detailViewLoading: true,\r\n         });\r\n\r\n        var vendor = row['Vendor'];\r\n        var modelNum = row['Model Number'];\r\n\r\n        this.detailViewModel(vendor, modelNum);\r\n    }\r\n\r\n    closeCreateModal = () => {\r\n        this.setState({showCreateModal: false});\r\n    }\r\n\r\n    closeImportModal = () => {\r\n        this.setState({showImportModal: false});\r\n    }\r\n\r\n    closeDetailedView = () => {\r\n        this.setState({ showDetailedView: false })\r\n    }\r\n\r\n    updateModelCreator = (event) => {\r\n        this.state.createdModel[event.target.name] = event.target.value;\r\n        this.forceUpdate();\r\n    }\r\n\r\n    updateModelColor = (color) => {\r\n        this.state.createdModel['display_color'] = color;\r\n        this.forceUpdate();\r\n    }\r\n\r\n    updateModelColorDetails = (color) => {\r\n        this.state.detailedValues['display_color'] = color;\r\n        this.forceUpdate();\r\n    }\r\n\r\n    updateSearchText = (event) => {\r\n        this.setState({ searchText: event.target.value})\r\n    }\r\n\r\n    closeShowStatus = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n        this.setState({ showStatus: false })\r\n    }\r\n\r\n    createStatusClose = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n        this.setState({ createStatusOpen: false })\r\n    }\r\n\r\n    detailStatusClose = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n        this.setState({ detailStatusOpen: false })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Grid\r\n                    container\r\n                    spacing={5}\r\n                    direction=\"row\"\r\n                    justify=\"flex-start\"\r\n                    alignItems=\"center\"\r\n                    style={{margin: \"0px\", maxWidth: \"95vw\"}}\r\n                >\r\n                    <Grid item xs={12}>\r\n                        <Typography variant=\"h4\">\r\n                            Models\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6} md={4} lg={3}>\r\n                        {(this.props.privilege == Privilege.ADMIN) ?\r\n                        (<div>\r\n                            <CreateModel\r\n                                statusOpen={this.state.createStatusOpen}\r\n                                statusSeverity={this.state.createStatusSeverity}\r\n                                statusClose={this.createStatusClose}\r\n                                statusMessage={this.state.createStatusMessage}\r\n                                showCreateModal={this.state.showCreateModal}\r\n                                closeCreateModal={this.closeCreateModal}\r\n                                createModel={this.createModel}\r\n                                updateModelCreator={this.updateModelCreator}\r\n                                options={this.state.vendorsList}\r\n                                useAutocomplete={true}\r\n                                updateModelColor={this.updateModelColor}\r\n                            />\r\n                        </div>) : null}\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6} md={6} lg={6}>\r\n                        <FilterModel\r\n                            updateSearchText={this.updateSearchText}\r\n                            search={this.search}\r\n                            filters={columns}\r\n                            options={this.state.vendorsList}\r\n                            useAutocomplete={true}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6} md={4} lg={3}>\r\n                        {(this.props.privilege === Privilege.ADMIN) ?\r\n                        (<div>\r\n\r\n                        <ExportModel\r\n                            downloadTable={this.downloadTable}\r\n                            showAll={this.searchAll}\r\n                        />\r\n\r\n                        <CSVLink\r\n                            data={this.state.csvData}\r\n                            filename={modelDownloadFileName}\r\n                            className=\"hidden\"\r\n                            ref={(r) => this.csvLink = r}\r\n                            target=\"_blank\"\r\n                        />\r\n                        </div>):null\r\n                        }\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <ModelsTable\r\n                            columns={this.props.privilege == Privilege.ADMIN ? adminColumns : columns}\r\n                            vals={this.state.rows}\r\n                            privilege={this.props.privilege}\r\n                            token={this.props.token}\r\n                            keys={columns}\r\n                            filters={this.props.privilege == Privilege.ADMIN ? adminColumns : columns}\r\n                            updateModelColor={this.updateModelColorDetails}\r\n                            deleteModel={this.deleteModel}\r\n                            editModel={this.editModel}\r\n                        />\r\n                    </Grid>\r\n                </Grid>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","export enum AssetCommand {\r\n    create = 'create/',\r\n    delete = 'delete/',\r\n    edit = 'edit/',\r\n    view = 'view/',\r\n    detailView = 'detailView/',\r\n    search = 'search/',\r\n    GET_ALL_MODELS = 'assistedmodel/',\r\n    GET_ALL_OWNERS = 'assistedowner/',\r\n    GET_ALL_DATACENTERS = 'assisteddatacenter/',\r\n    GET_ALL_HOSTNAME = 'assistedhostname/',\r\n    UPLOAD_FILE = 'import/',\r\n    EXPORT_FILE = 'export/',\r\n    GET_NEXT_ASSET_NUM = 'nextAssetNumber/',\r\n}\r\n","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\r\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\r\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nexport default class Filters extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            filters:{},\r\n        };\r\n    }\r\n\r\n    updateSearchText(event) {\r\n        if (this.state.filters.hasOwnProperty(event.target.id)) {\r\n            this.state.filters[event.target.id] = event.target.value;\r\n            this.forceUpdate();\r\n        } else {\r\n            this.state.filters[event.target.id] = event.target.value;\r\n            this.forceUpdate();\r\n        }\r\n    }\r\n\r\n    search() {\r\n        this.props.search(this.state.filters);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <ExpansionPanel>\r\n                    <ExpansionPanelSummary\r\n                        expandIcon={<ExpandMoreIcon />}\r\n                    >\r\n                        <Typography>Search</Typography>\r\n                    </ExpansionPanelSummary>\r\n                    <ExpansionPanelDetails>\r\n                        <Grid\r\n                            container\r\n                            spacing={1}\r\n                            direction=\"row\"\r\n                            justify=\"flex-start\"\r\n                            alignItems=\"center\"\r\n                        >\r\n                            <Grid item xs={6}>\r\n                                <TextField\r\n                                    id={\"username\"}\r\n                                    inputProps={{ 'aria-label': 'search' }}\r\n                                    variant=\"outlined\"\r\n                                    label=\"Username\"\r\n                                    placeholder={\"Username\"}\r\n                                    name=\"username\"\r\n                                    onChange={this.updateSearchText.bind(this)}\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={6}>\r\n                                <TextField id=\"standard-basic\" variant=\"outlined\" label=\"Display Name\" name=\"display_name\" onChange={this.props.updateModelCreator}/>\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                                <TextField\r\n                                    id=\"standard-basic\"\r\n                                    variant=\"outlined\"\r\n                                    label=\"Email\"\r\n                                    name=\"email\"\r\n                                    onChange={this.props.updateModelCreator}\r\n                                    style={{\"width\": \"100%\"}}\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={6}>\r\n                                <FormControl\r\n                                    style={{\"minWidth\": \"200px\"}}\r\n                                >\r\n                                    <InputLabel id=\"privilege-select\">Privilege</InputLabel>\r\n                                    <Select\r\n                                        id=\"privilege-select\"\r\n                                        onChange={this.props.updateModelCreator}>\r\n                                        <MenuItem value=\"admin\">Administrator</MenuItem>\r\n                                        <MenuItem value=\"user\">User</MenuItem>\r\n                                    </Select>\r\n                                </FormControl>\r\n                            </Grid>\r\n                            <Grid\r\n                                container\r\n                                item\r\n                                direction=\"column\"\r\n                                justify=\"center\"\r\n                                alignItems=\"center\"\r\n                                xs={12}\r\n                            >\r\n                                <Button\r\n                                    variant=\"contained\"\r\n                                    color=\"primary\"\r\n                                    onClick={this.search.bind(this)}\r\n                                    style={{\"width\": \"100%\", \"marginTop\": \"20px\"}}\r\n                                >\r\n                                    Search\r\n                                </Button>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </ExpansionPanelDetails>\r\n                </ExpansionPanel>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from '@material-ui/core/Button';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\r\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\r\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport StatusDisplay from '../../helpers/StatusDisplay';\r\n\r\nexport default class DetailedView extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            showConfirmationBox:false,\r\n        };\r\n\r\n        this.closeModal = this.closeModal.bind(this);\r\n        this.confirmDelete = this.confirmDelete.bind(this);\r\n        this.deleteItem = this.deleteItem.bind(this);\r\n    }\r\n\r\n    confirmDelete() {\r\n        this.setState({ showConfirmationBox: true });\r\n    }\r\n\r\n    closeModal() {\r\n        this.setState({showConfirmationBox:false,});\r\n    }\r\n\r\n    deleteItem() {\r\n        this.setState({ showConfirmationBox: false });\r\n        this.props.delete();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n        <div>\r\n            {!this.props.showDetailedView ? null:\r\n            <ExpansionPanel >\r\n                    <ExpansionPanelSummary\r\n                        expandIcon={<ExpandMoreIcon />}\r\n                    >\r\n                        <Typography>Create</Typography>\r\n                    </ExpansionPanelSummary>\r\n                    <ExpansionPanelDetails>\r\n                        <StatusDisplay\r\n                            open={this.props.statusOpen}\r\n                            severity={this.props.statusSeverity}\r\n                            closeStatus={this.props.statusClose}\r\n                            message={this.props.statusMessage}\r\n                        />\r\n                    {\r\n                this.props.loading ? <CircularProgress /> :\r\n                <div>\r\n                    {this.props.inputs.map(input => (\r\n                        <TextField name={input} disabled={this.props.disabled} id=\"standard-basic\" label={input} onChange={this.props.updateModelEdited} defaultValue={this.props.defaultValues[input]}/>\r\n                    ))}\r\n                    {this.props.disabled ? null:\r\n                    <div>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            onClick={this.props.edit}\r\n                            disabled={this.state.showConfirmationBox}\r\n                        >\r\n                            Save\r\n                        </Button>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            onClick={this.confirmDelete}\r\n                            disabled={this.state.showConfirmationBox}\r\n                        >\r\n                            Delete\r\n                        </Button>\r\n                    </div>}\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            onClick={this.props.closeDetailedView}\r\n                            disabled={this.state.showConfirmationBox}\r\n                        >\r\n                            Close\r\n                        </Button>\r\n\r\n                    {this.state.showConfirmationBox ? <div>\r\n                        Are you sure you wish to delete?\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            onClick={this.deleteItem}\r\n                        >\r\n                            Yes\r\n                        </Button>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            onClick={this.closeModal}\r\n                        >\r\n                            No\r\n                        </Button>\r\n                    </div>:null}\r\n                </div>}\r\n                    </ExpansionPanelDetails>\r\n                </ExpansionPanel>}\r\n        </div>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from '@material-ui/core/Button';\r\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\r\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\r\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport '../../../stylesheets/Models.css';\r\n\r\nexport default class CreateModal extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {};\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <ExpansionPanel>\r\n                    <ExpansionPanelSummary\r\n                        expandIcon={<ExpandMoreIcon />}\r\n                    >\r\n                        <Typography>Create</Typography>\r\n                    </ExpansionPanelSummary>\r\n                    <ExpansionPanelDetails>\r\n                        <Grid\r\n                            container\r\n                            spacing={1}\r\n                            direction=\"row\"\r\n                            justify=\"flex-start\"\r\n                            alignItems=\"center\"\r\n                        >\r\n                            <Grid item xs={6}>\r\n                                <TextField id=\"standard-basic\" variant=\"outlined\" label=\"Username\" name=\"username\" onChange={this.props.updateModelCreator}/>\r\n                            </Grid>\r\n                            <Grid item xs={6}>\r\n                                <TextField id=\"standard-basic\" variant=\"outlined\" label=\"Display Name\" name=\"display_name\" onChange={this.props.updateModelCreator}/>\r\n                            </Grid>\r\n                            <Grid item xs={6}>\r\n                                <TextField id=\"standard-basic\" variant=\"outlined\" label=\"Password\" name=\"password\" type=\"password\" onChange={this.props.updateModelCreator}/>\r\n                            </Grid>\r\n                            <Grid item xs={6}>\r\n                                <TextField id=\"standard-basic\" variant=\"outlined\" label=\"Email\" name=\"email\" type=\"email\" onChange={this.props.updateModelCreator}/>\r\n                            </Grid>\r\n                            <Grid item xs={6}>\r\n                                <FormControl\r\n                                    style={{\"minWidth\": \"200px\"}}\r\n                                    gutterbottom=\"true\"\r\n                                >\r\n                                    <InputLabel id=\"privilege-select\">Privilege</InputLabel>\r\n                                    <Select\r\n                                        name='privilege'\r\n                                        id=\"privilege-select\"\r\n                                        onChange={this.props.updateModelCreator}>\r\n                                        <MenuItem value=\"admin\">Administrator</MenuItem>\r\n                                        <MenuItem value=\"user\">User</MenuItem>\r\n                                    </Select>\r\n                                </FormControl>\r\n                            </Grid>\r\n                            <Grid\r\n                                container\r\n                                item\r\n                                direction=\"column\"\r\n                                justify=\"center\"\r\n                                alignItems=\"center\"\r\n                                xs={12}\r\n                            >\r\n                                <Button\r\n                                    variant=\"contained\"\r\n                                    onClick={this.props.createModel}\r\n                                    style={{\r\n                                        \"width\": \"100%\",\r\n                                        \"marginTop\": \"20px\",\r\n                                        \"backgroundColor\": \"green\",\r\n                                        \"color\": \"white\"\r\n                                    }}\r\n                                >\r\n                                    Create\r\n                                </Button>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </ExpansionPanelDetails>\r\n                </ExpansionPanel>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport Button from '@material-ui/core/Button';\nimport { Privilege } from '../../enums/privilegeTypes';\nimport SaveIcon from '@material-ui/icons/Save';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\n\nexport default class UsersTable extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n        canEdit: false\n    };\n  }\n\n  showDetailedView(index) {\n    this.props.showDetailedView(index);\n  }\n\n  beginEditing = () => {\n    this.setState({ canEdit: true });\n  }\n\n  endEditing = () => {\n    this.setState({ canEdit: false });\n  }\n\n  render() {\n    return (\n      <div>\n        <TableContainer component={Paper}>\n          <Table style={{minWidth: 1000}} aria-label=\"simple table\">\n            <TableHead>\n              <TableRow >\n                {this.props.columns.map(col => (<TableCell align=\"center\"><span id={col} style={{fontWeight: \"bold\"}}>{col}</span></TableCell>))}\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {this.props.vals.map((row, index)=> (\n              <TableRow id={index}>\n                  { this.props.privilege === Privilege.ADMIN ? <TableCell scope=\"row\" align=\"center\">\n                      <Button>\n                        { this.state.canEdit ? <SaveIcon onClick={this.endEditing} /> : <EditIcon onClick={this.beginEditing} /> }\n                      </Button>\n                      <Button>\n                        <DeleteIcon />\n                      </Button>\n                  </TableCell> : null }\n                {this.props.keys.map(key => {\n                    if (key === \"Privilege\") {\n                    return (this.state.canEdit ? <TableCell scope=\"row\" align=\"center\">\n                        <Select\n                            id=\"privilege-select\"\n                            defaultValue={row[key]}\n                        >\n                            <MenuItem value=\"admin\">Administrator</MenuItem>\n                            <MenuItem value=\"user\">User</MenuItem>\n                        </Select>\n                    </TableCell> : <TableCell scope=\"row\" align=\"center\">{row[key] === 'admin' ? 'Administrator' : 'User'}</TableCell>);\n                    }\n\n                  return (<TableCell scope=\"row\" align=\"center\">{row[key]}</TableCell>)\n                })}\n              </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </TableContainer>\n      </div>\n    );\n  }\n}\n","\r\n\r\nexport const GENERAL_USER_ERROR =  \"There was an error in the backend. Could not perform the given user operation at this time.\";\r\n","import React from 'react';\r\nimport axios from 'axios';\r\n\r\nimport { UserCommand } from '../enums/UserCommands.ts'\r\nimport { UserInput } from '../enums/UserInputs.ts'\r\n\r\nimport FilterUser from '../helpers/FilterUser';\r\nimport DetailUser from '../helpers/DetailUser';\r\nimport CreateUser from '../helpers/CreateUser';\r\n\r\nimport getURL from '../../helpers/functions/GetURL';\r\nimport UsersTable from '../helpers/UsersTable';\r\nimport StatusDisplay from '../../helpers/StatusDisplay';\r\n\r\nimport { Privilege } from '../../enums/privilegeTypes.ts'\r\n\r\nimport { Typography } from '@material-ui/core';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport * as UserConstants from \"../UserConstants\";\r\n\r\nconst inputs = [\r\n    'username',\r\n    'email',\r\n    'display_name',\r\n    'privilege',\r\n    'password',\r\n]\r\n\r\nconst columns = [\r\n    'Username',\r\n    'Email',\r\n    'Display Name',\r\n    'Privilege',\r\n]\r\n\r\nconst adminColumns = [\r\n    'Actions',\r\n    'Username',\r\n    'Email',\r\n    'Display Name',\r\n    'Privilege'\r\n]\r\n\r\nconst columnLookup = {\r\n    \"username\": \"Username\",\r\n    \"email\": \"Email\",\r\n    \"display_name\": \"Display Name\",\r\n    'privilege': 'Privilege'\r\n}\r\n\r\nconst usersMainPath = 'users/';\r\n\r\nexport default class UsersView extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n\r\n            // modals\r\n            showCreateModal:false,\r\n            showImportModal:false,\r\n\r\n            // table items\r\n            items:[], //Constants.testUserArray,\r\n\r\n            // vals for creating a new user\r\n            createdUser : {\r\n                'username':'',\r\n                'password':'',\r\n                'display_name':'',\r\n                'email':'',\r\n                'privilege':'',\r\n            },\r\n\r\n            statusOpen:false,\r\n            statusSeverity:'',\r\n            statusMessage:'',\r\n            detailStatusOpen:false,\r\n            detailStatusSeverity:'',\r\n            detailStatusMessage:'',\r\n            createStatusOpen:false,\r\n            createStatusSeverity:'',\r\n            createStatusMessage:'',\r\n\r\n            searchUsernm:'',\r\n            searchEml:'',\r\n            searchDspNm:'',\r\n            searchPriv:'',\r\n\r\n            // vals for deleting a user\r\n            deleteUsername:'',\r\n\r\n            // vals for viewing a user\r\n            viewUser:'',\r\n\r\n            // csv data\r\n            csvData:[],\r\n\r\n            // detailed view\r\n            showDetailedView: false,\r\n            detailViewLoading:false,\r\n            detailedValues : {\r\n                'username':'',\r\n                'display_name':'',\r\n                'email':'',\r\n                'privilege':'',\r\n            },\r\n            originalUsername:'',\r\n\r\n            initialized:false,\r\n        };\r\n\r\n        axios.defaults.headers.common['token'] = this.props.token;\r\n        axios.defaults.headers.common['privilege'] = this.props.privilege;\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.searchUsers();\r\n    }\r\n\r\n    createUser = () => {\r\n        axios.post(\r\n            getURL(usersMainPath, UserCommand.create),\r\n            {\r\n                'username':this.state.createdUser[UserInput.Username],\r\n                'password':this.state.createdUser[UserInput.Password],\r\n                'display_name':this.state.createdUser[UserInput.display_name],\r\n                'email':this.state.createdUser[UserInput.Email],\r\n                'privilege':this.state.createdUser[UserInput.Privilege],\r\n            }\r\n            ).then(response => {\r\n                if (response.data.message === 'success') {\r\n                    this.setState({\r\n                        statusOPen: true,\r\n                        statusMessage: \"Successfully created user\",\r\n                        statusSeverity:\"success\",\r\n                        createdUser : {\r\n                            'username':'',\r\n                            'password':'',\r\n                            'display_name':'',\r\n                            'email':'',\r\n                            'privilege':'',\r\n                        },\r\n                        showCreateModal:false,\r\n                    });\r\n                    this.searchUsers();\r\n                } else {\r\n                    this.setState({ statusOpen: true, statusMessage: response.data.message, statusSeverity:\"error\" })\r\n                }\r\n            }).catch(\r\n                this.setState({ statusOpen: true, statusMessage: UserConstants.GENERAL_USER_ERROR, statusSeverity:\"error\" })\r\n            );\r\n    }\r\n\r\n    editUser = () => {\r\n        axios.post(\r\n            getURL(usersMainPath, UserCommand.edit),\r\n            {\r\n                'username_original':this.state.originalUsername,\r\n                'username':this.state.detailedValues[UserInput.Username],\r\n                'display_name':this.state.detailedValues[UserInput.display_name],\r\n                'email':this.state.detailedValues[UserInput.Email],\r\n                'privilege':this.state.detailedValues[UserInput.Privilege],\r\n            }\r\n            ).then(response => {\r\n                if (response.data.message === 'success') {\r\n                    this.setState({\r\n                        detailStatusOpen: true,\r\n                        detailStatusMessage: \"Successfully edited user\",\r\n                        detailStatusSeverity:\"success\",\r\n                        originalUsername:'',\r\n                        detailedValues : {\r\n                            'username':'',\r\n                            'display_name':'',\r\n                            'email':'',\r\n                            'privilege':'',\r\n                        },\r\n                        showDetailedView:false,\r\n                    });\r\n                    this.searchUsers();\r\n                } else {\r\n                    this.setState({ detailStatusOpen: true, detailStatusMessage: response.data.message, detailStatusSeverity:\"error\" })\r\n                }\r\n            }).catch(\r\n                this.setState({ detailStatusOpen: true, detailStatusMessage: UserConstants.GENERAL_USER_ERROR, detailStatusSeverity:\"error\" })\r\n            );\r\n    }\r\n\r\n\r\n    deleteUser = () => {\r\n        axios.post(\r\n            getURL(usersMainPath, UserCommand.delete),\r\n            {\r\n                'username':this.state.originalUsername,\r\n            }\r\n            ).then(response => {\r\n                if (response.data.message === 'success') {\r\n                    this.setState({\r\n                        statusOpen: true,\r\n                        statusMessage: \"Successfully deleted user\",\r\n                        statusSeverity:\"success\",\r\n                        deleteUsername:'',\r\n                        showDetailedView:false,\r\n                    });\r\n                    this.searchUsers();\r\n                } else {\r\n                    this.setState({ showStatus: true, statusMessage: response.data.message, statusSeverity:\"error\" })\r\n                }\r\n            }).catch(\r\n                this.setState({ showStatus: true, statusMessage: UserConstants.GENERAL_USER_ERROR, statusSeverity:\"error\" })\r\n            );\r\n    }\r\n\r\n    detailViewUser = (username) => {\r\n        axios.post(\r\n            getURL(usersMainPath, UserCommand.detailView),\r\n            {\r\n                'username':username,\r\n            }\r\n            ).then(response => this.setState({ detailedValues: response.data['user'], detailViewLoading:false})\r\n            ).catch(\r\n                this.setState({ showStatus: true, statusMessage: UserConstants.GENERAL_USER_ERROR, statusSeverity:\"error\" })\r\n            );\r\n\r\n        this.setState({\r\n            viewUser:'',\r\n        });\r\n    }\r\n\r\n    searchUsers = () => {\r\n        axios.post(\r\n            getURL(usersMainPath, UserCommand.search),\r\n            {\r\n                'filter':{\r\n                    'username': this.state.searchUsernm,\r\n                    'email': this.state.searchEml,\r\n                    'display_name': this.state.searchDspNm,\r\n                    'privilege': this.state.searchPriv,\r\n                }\r\n            }\r\n            ).then(response => {\r\n                const models = response.data['users'] === undefined ? [] : response.data['users'];\r\n                var rows = [];\r\n                Object.values(models).forEach(model => {\r\n                    var row = {};\r\n                    Object.keys(model).forEach(key => {\r\n                        if (key in columnLookup) {\r\n                            row[columnLookup[key]] = model[key];\r\n                        } else {\r\n                            row[key] = model[key];\r\n                        }\r\n                    });\r\n                    rows.push(row);\r\n                });\r\n\r\n                this.setState({ items: rows });\r\n            });\r\n\r\n        this.setState({ initialized: true})\r\n    }\r\n\r\n    search = (filters) => {\r\n        this.setState({\r\n            searchUsernm:filters['username'],\r\n            searchEml:filters['email'],\r\n            searchDspNm: filters['display_name'],\r\n            searchPriv:filters['privilege'],\r\n        }, this.searchUsers);\r\n    }\r\n\r\n    downloadTable = () => {\r\n        this.csvLink.link.click();\r\n    }\r\n\r\n    openCreateModal = () => {\r\n        this.setState({showCreateModal: true});\r\n    }\r\n\r\n    openImportModal = () => {\r\n        this.setState({showImportModal: true});\r\n    }\r\n\r\n    showDetailedView = (id) => {\r\n        this.setState({\r\n            showDetailedView: true,\r\n            detailViewLoading:true,\r\n            originalUsername:this.state.items[id]['username'],\r\n         });\r\n\r\n        var username = this.state.items[id]['username'];\r\n\r\n        this.detailViewUser(username);\r\n        //this.setState({ detailedValues: Constants.testUserArray[id], detailViewLoading:false})\r\n    }\r\n\r\n    closeCreateModal = () => {\r\n        this.setState({showCreateModal: false});\r\n    }\r\n\r\n    closeImportModal = () => {\r\n        this.setState({showImportModal: false});\r\n    }\r\n\r\n    closeDetailedView = () => {\r\n        this.setState({ showDetailedView: false })\r\n    }\r\n\r\n    updateUserCreator = (event) => {\r\n        const newUser = this.state.createdUser;\r\n        newUser[event.target.name] = event.target.value;\r\n        this.setState({ createdUser: newUser });\r\n        this.forceUpdate();\r\n    }\r\n\r\n    updateUserEdited = (event) => {\r\n        const newDetails = this.state.detailedValues;\r\n        newDetails[event.target.name] = event.target.value;\r\n        this.setState({ detailedValues: newDetails });\r\n        this.forceUpdate()\r\n    }\r\n\r\n    closeShowStatus = () => {\r\n        this.setState({ showStatus: false })\r\n    }\r\n\r\n    createStatusClose = () => {\r\n        this.setState({ createStatusOpen: false })\r\n    }\r\n\r\n    detailStatusClose = () => {\r\n        this.setState({ detailStatusOpen: false })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <StatusDisplay\r\n                    open={this.state.showStatus}\r\n                    severity={this.state.statusSeverity}\r\n                    closeStatus={this.closeShowStatus}\r\n                    message={this.state.statusMessage}\r\n                />\r\n                <Grid\r\n                    container\r\n                    spacing={5}\r\n                    direction=\"row\"\r\n                    justify=\"flex-start\"\r\n                    alignItems=\"center\"\r\n                    style={{margin: \"0px\", maxWidth: \"95vw\"}}\r\n                >\r\n                    <Grid item xs={12}>\r\n                        <Typography variant=\"h4\">\r\n                            Users\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6} md={4} lg={3}>\r\n                        {(this.props.privilege === Privilege.ADMIN) ?\r\n                        (<div>\r\n                            <CreateUser\r\n                                showCreateModal={this.state.showCreateModal}\r\n                                closeCreateModal={this.closeCreateModal}\r\n                                createModel={this.createUser}\r\n                                updateModelCreator={this.updateUserCreator}\r\n                                inputs={inputs}\r\n                                options={[]}\r\n                                useAutocomplete={false}\r\n                            />\r\n                        </div>) : null}\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6} md={4} lg={3}>\r\n                        <FilterUser\r\n                            updateSearchText={this.updateSearchText}\r\n                            search={this.search}\r\n                            filters={columns}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <UsersTable\r\n                            columns={this.props.privilege == Privilege.ADMIN ? adminColumns : columns}\r\n                            vals={this.state.items}\r\n                            keys={columns}\r\n                            privilege={this.props.privilege}\r\n                            showDetailedView={this.showDetailedView}\r\n                            filters={this.props.privilege == Privilege.ADMIN ? adminColumns : columns}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <DetailUser\r\n                            showDetailedView={this.state.showDetailedView}\r\n                            closeDetailedView={this.closeDetailedView}\r\n                            inputs={columns}\r\n                            updateModelEdited={this.updateUserEdited}\r\n                            defaultValues={this.state.detailedValues}\r\n                            loading={this.state.detailViewLoading}\r\n                            edit={this.editUser}\r\n                            delete={this.deleteUser}\r\n                            disabled={this.props.privilege === Privilege.USER}\r\n                        />\r\n                    </Grid>\r\n                </Grid>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","\r\n\r\n\r\nexport const GENERAL_ASSET_ERROR =  \"There was an error in the backend. Could not perform the given asset operation at this time.\";\r\n\r\n\r\nexport const ASSETS_MAIN_PATH = 'instances/';\r\nexport const ASSET_DOWNLOAD_FILE_NAME = 'assets.csv';\r\nexport const SUCCESS_TOKEN = \"success\";\r\nexport const ERROR_TOKEN = \"error\";\r\n","export enum AssetInput {\r\n    MODEL = 'model',\r\n    HOSTNAME = 'hostname',\r\n    RACK = 'rack',\r\n    RACK_U = 'rack_position',\r\n    RACK_ORIGINAL = 'rackOriginal',\r\n    RACK_U_ORIGINAL = 'rack_positionOriginal',\r\n    OWNER = 'owner',\r\n    COMMENT = 'comment',\r\n    DATACENTER = 'datacenter_id',\r\n    TAGS = 'tags',\r\n    MAC_ADDRESS = 'mac_address',\r\n    NETWORK_CONNECTIONS = 'network_connections',\r\n    POWER_CONNECTIONS = 'power_connections',\r\n    ASSET_NUMBER = 'asset_number',\r\n}\r\n","import React from 'react';\r\n\r\nimport axios from 'axios';\r\nimport { CSVLink } from \"react-csv\";\r\n\r\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\r\nimport CloudDownloadIcon from '@material-ui/icons/CloudDownload';\r\nimport Button from '@material-ui/core/Button';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport Fade from '@material-ui/core/Fade';\r\n\r\nimport { AssetCommand } from '../enums/AssetCommands.ts'\r\nimport getURL from '../../helpers/functions/GetURL';\r\nimport * as AssetConstants from \"../AssetConstants\";\r\n\r\nconst useStyles = theme => ({\r\n    modal: {\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n    },\r\n    paper: {\r\n      backgroundColor: theme.palette.background.paper,\r\n      border: '2px solid #000',\r\n      boxShadow: theme.shadows[5],\r\n      padding: theme.spacing(2, 4, 3),\r\n    },\r\n    button: {\r\n        margin: theme.spacing(2, 4, 3),\r\n    }\r\n  });\r\n\r\nclass ImpExpAsset extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            csvData:'',\r\n            importedFile:null,\r\n\r\n            showImport:false,\r\n        };\r\n    }\r\n\r\n    sendUploadedFile = (data) => {\r\n        axios.post(\r\n            getURL(AssetConstants.ASSETS_MAIN_PATH, AssetCommand.UPLOAD_FILE), data\r\n            ).then(response => {\r\n                if (response.data.message === AssetConstants.SUCCESS_TOKEN) {\r\n                    this.setState({ showStatus: true, statusMessage: response.data.summary, statusSeverity:AssetConstants.SUCCESS_TOKEN, showImport: false,})\r\n                } else {\r\n                    this.setState({ showStatus: true, statusMessage: response.data.message, statusSeverity:AssetConstants.ERROR_TOKEN })\r\n                }\r\n            });\r\n        }\r\n\r\n    downloadTable = () => {\r\n        axios.post(\r\n            getURL(AssetConstants.ASSETS_MAIN_PATH, AssetCommand.EXPORT_FILE), { 'filter':this.props.filters }\r\n            ).then(response => {\r\n                this.setState({ csvData: response.data.csvData });\r\n                this.csvLink.link.click();\r\n            });\r\n    }\r\n\r\n    openImportModal = () => {\r\n        this.setState({showImport: true});\r\n    }\r\n\r\n    closeImportModal = () => {\r\n        this.setState({showImport: false});\r\n    }\r\n\r\n    uploadFile = () => {\r\n        const data = new FormData();\r\n        data.append('file', this.state.importedFile);\r\n        this.sendUploadedFile(data);\r\n        this.setState({ showImport: false });\r\n    }\r\n\r\n    chooseFile = (event) => {\r\n        this.setState({ importedFile: event.target.files[0] })\r\n    }\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n\r\n        return(\r\n            <span>\r\n                <Grid container spacing={3}>\r\n                    <Grid item xs={2}>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            startIcon={<CloudUploadIcon />}\r\n                            onClick={() => {this.openImportModal()} }\r\n                        >\r\n                            Import\r\n                        </Button>\r\n                    </Grid>\r\n                    <Grid item xs={2}>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            startIcon={<CloudDownloadIcon />}\r\n                            onClick={() => {this.downloadTable()}}\r\n                        >\r\n                            Export\r\n                        </Button>\r\n                    </Grid>\r\n                </Grid>\r\n\r\n                <CSVLink\r\n                    data={this.state.csvData}\r\n                    filename={AssetConstants.ASSET_DOWNLOAD_FILE_NAME}\r\n                    className=\"hidden\"\r\n                    ref={(r) => this.csvLink = r}\r\n                    target=\"_blank\"\r\n                />\r\n\r\n                <Modal\r\n                    aria-labelledby=\"transition-modal-title\"\r\n                    aria-describedby=\"transition-modal-description\"\r\n                    className={classes.modal}\r\n                    open={this.state.showImport}\r\n                    onClose={this.closeImportModal}\r\n                    closeAfterTransition\r\n                    BackdropComponent={Backdrop}\r\n                    BackdropProps={{\r\n                    timeout: 500,\r\n                    }}\r\n                >\r\n                    <Fade in={this.state.showImport}>\r\n                    <div className={classes.paper}>\r\n                        <input\r\n                            type='file'\r\n                            accept=\".csv\"\r\n                            onChange={this.chooseFile}\r\n                        />\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            onClick={() => {this.uploadFile()}}\r\n                            className={classes.button}\r\n                        >\r\n                            Upload\r\n                        </Button>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            onClick={() => {this.uploadFile()}}\r\n                        >\r\n                            Cancel\r\n                        </Button>\r\n                    </div>\r\n                    </Fade>\r\n                </Modal>\r\n            </span>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withStyles(useStyles)(ImpExpAsset);\r\n","/**\r\n * For MAC addresses, the system should accept a six-byte hexadecimal value\r\n * with any byte seperator punctuation (including colon, dash, underscore, and\r\n * no seperator at all). Upon accepting the value, it should be formatted into a\r\n * lower-case colon-delimited canonical form.\r\n *\r\n * @param {string} val\r\n */\r\n\r\nexport default function stringToMac(val) {\r\n    // A  A  :  A  A  :  A  A  :  A  A  :  A  A  :  A  A\r\n    // 0  1  2  3  4  5  6  7  8  9  10 11 12 13 14 15 16\r\n\r\n    var returnVal = \"\";\r\n\r\n    returnVal = val.replace(/[^0-9A-Fa-f]*/g, \"\").toLowerCase();\r\n\r\n    if (returnVal.length > 12) {\r\n        returnVal = returnVal.substring(0, 12);\r\n    }\r\n\r\n    if (returnVal.length === 1 || returnVal.length === 2) {\r\n        return returnVal;\r\n    }\r\n\r\n    if (returnVal.length === 3 || returnVal.length === 4) {\r\n        return returnVal.substring(0, 2) + \":\" + returnVal.substring(2);\r\n    }\r\n\r\n    if (returnVal.length === 5 || returnVal.length === 6) {\r\n        return returnVal.substring(0, 2) + \":\" + returnVal.substring(2, 4) + \":\" + returnVal.substring(4);\r\n    }\r\n\r\n    if (returnVal.length === 7 || returnVal.length === 8) {\r\n        return returnVal.substring(0, 2)\r\n        + \":\" + returnVal.substring(2, 4)\r\n        + \":\" + returnVal.substring(4, 6)\r\n        + \":\" + returnVal.substring(6);\r\n    }\r\n\r\n    if (returnVal.length === 9 || returnVal.length === 10) {\r\n        return returnVal.substring(0, 2)\r\n        + \":\" + returnVal.substring(2, 4)\r\n        + \":\" + returnVal.substring(4, 6)\r\n        + \":\" + returnVal.substring(6, 8)\r\n        + \":\" + returnVal.substring(8);\r\n    }\r\n\r\n    if (returnVal.length === 11 || returnVal.length === 12) {\r\n        return returnVal.substring(0, 2)\r\n        + \":\" + returnVal.substring(2, 4)\r\n        + \":\" + returnVal.substring(4, 6)\r\n        + \":\" + returnVal.substring(6, 8)\r\n        + \":\" + returnVal.substring(8, 10)\r\n        + \":\" + returnVal.substring(10,12);\r\n    }\r\n\r\n    return returnVal;\r\n}\r\n","import React from 'react';\r\n\r\nimport axios from 'axios';\r\n\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from '@material-ui/core/Button';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\n\r\nimport StatusDisplay from '../../helpers/StatusDisplay';\r\nimport { AssetInput } from '../enums/AssetInputs.ts';\r\nimport { AssetCommand } from '../enums/AssetCommands.ts'\r\nimport getURL from '../../helpers/functions/GetURL';\r\nimport * as AssetConstants from \"../AssetConstants\";\r\nimport * as Constants from \"../../Constants\";\r\nimport { Typography } from '@material-ui/core';\r\nimport stringToMac from \"./functions/StringToMacAddress\"\r\nimport stringToRack from \"./functions/StringToRack\";\r\n\r\nfunction createInputs(name, label, showTooltip, description) {\r\n    return {label, name, showTooltip, description};\r\n}\r\n\r\nconst emptySearch = {\r\n    \"filter\": {\r\n            \"vendor\":null,\r\n            \"model_number\":null,\r\n            \"height\":null,\r\n            \"model\":null,\r\n            \"hostname\":null,\r\n            \"rack\":null,\r\n            \"rack_position\":null,\r\n            \"username\":null,\r\n            \"display_name\":null,\r\n            \"email\":null,\r\n            \"privilege\":null,\r\n            \"model\":null,\r\n            \"hostname\":null,\r\n            \"starting_rack_letter\":null,\r\n            \"ending_rack_letter\":null,\r\n            \"starting_rack_number\":null,\r\n            \"ending_rack_number\":null,\r\n            \"rack\":null,\r\n            \"rack_position\":null\r\n        },\r\n    \"datacenter_name\":\"\",\r\n}\r\n\r\nconst searchPath = \"search/\";\r\nconst left = \"left\";\r\nconst right = \"right\";\r\nconst off = \"off\";\r\n\r\nconst useStyles = theme => ({\r\n    root: {\r\n      flexGrow: 1,\r\n    },\r\n    modal: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        maxWidth: \"80%\",\r\n        margin:\"0 auto\",\r\n        minWidth:\"70%\",\r\n        overflow: \"scroll\"\r\n      },\r\n      paper: {\r\n        backgroundColor: theme.palette.background.paper,\r\n        border: '2px solid #000',\r\n        boxShadow: theme.shadows[5],\r\n        padding: theme.spacing(2, 4, 3),\r\n      },\r\n      progress: {\r\n        display: 'flex',\r\n        '& > * + *': {\r\n          marginLeft: theme.spacing(2),\r\n        },\r\n      },\r\n});\r\n\r\nclass CreateAsset extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            // next available asset number\r\n            loadingAssetNumber:true,\r\n\r\n            // model information\r\n            loadingModels:true,\r\n            modelList:[],\r\n            networkList:null,\r\n            powerPortList:null,\r\n\r\n            // owner information\r\n            loadingOwners:true,\r\n            ownerList:[],\r\n\r\n            // datacenter information\r\n            loadingDatacenters:true,\r\n            datacenterList:[],\r\n\r\n            // hostname information\r\n            loadingHostnames:true,\r\n            assetNumList:[],\r\n            assetNumToModelList:null,\r\n\r\n            model:\"\",\r\n            hostname:\"\",\r\n            rack:\"\",\r\n            rackU:-1,\r\n            owner:\"\",\r\n            comment:\"\",\r\n            datacenter_name:\"\",\r\n            tags:[],\r\n            network_connections:null,\r\n            power_connections:null,\r\n            asset_number:100000,\r\n\r\n            selectedConnection:null,\r\n\r\n            statusOpen: false,\r\n            statusMessage: \"\",\r\n            statusSeverity:\"\",\r\n\r\n            showModal:false,\r\n\r\n            powerPortState:null,\r\n            leftRight:null,\r\n            availableConnections:false,\r\n\r\n            canSubmit:false,\r\n\r\n            inputs: {\r\n                \"model\":createInputs(AssetInput.MODEL, \"Model\", false, \"A reference to an existing model\"),\r\n                \"hostname\":createInputs(AssetInput.HOSTNAME, \"Hostname\", false, \"A short string compliant with RFC 1034’s definition of 'label'\"),\r\n                \"rack\":createInputs(AssetInput.RACK, \"Rack\", false, \"The rack the equipment is installed in, written as a row letter and rack number, e.g. 'B12'\"),\r\n                \"rackU\":createInputs(AssetInput.RACK_U, \"Rack U\", false, \"An integer indicating the vertical location of the bottom of the equipment (e.g. '5')\"),\r\n                \"owner\":createInputs(AssetInput.OWNER, \"Owner\", false, \"A reference to an existing user on the system who owns this equipment\"),\r\n                \"comment\":createInputs(AssetInput.COMMENT, \"Comment\", false, \"Any additional information associated with this asset\"),\r\n                \"datacenter\":createInputs(AssetInput.DATACENTER, \"Datacenter\", false, \"A reference to an existing datacenter\"),\r\n                \"macAddress\":createInputs(AssetInput.MAC_ADDRESS, \"Mac Address\", false, \"A 6-byte hexadecimal string per network port shown canonically in lower case with colon delimiters (e.g., '00:1e:c9:ac:78:aa')\"),\r\n                \"networkConnections\":createInputs(AssetInput.NETWORK_CONNECTIONS, \"Port Name\", false, \"For each network port, a reference to another network port on another piece of gear\"),\r\n                \"powerConnections\":createInputs(AssetInput.POWER_CONNECTIONS, \"Power Connections\", false, \"Choice of PDU port number (0 means not plugged in)\"),\r\n                \"assetNum\":createInputs(AssetInput.ASSET_NUMBER, \"Asset Number\", false, \"A six-digit serial number unique associated with an asset.\"),\r\n            },\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getLists();\r\n    }\r\n\r\n    getLists = () => {\r\n        this.getModelList();\r\n        this.getOwnerList();\r\n        this.getDatacenterList();\r\n        this.getNextAssetNum();\r\n        this.getAssetList();\r\n    }\r\n\r\n    getModelList = () => {\r\n        axios.post(\r\n            getURL(Constants.MODELS_MAIN_PATH, searchPath), emptySearch).then(\r\n            response => {\r\n                var models = response.data.models;\r\n\r\n                var modelNames = [];\r\n                var networkNames = {};\r\n                var powerPortNames = {};\r\n\r\n                models.map(model => {\r\n                    var modelKey = model.vendor + \" \" + model.model_number;\r\n                    modelNames.push(modelKey);\r\n                    networkNames[modelKey] = model.ethernet_ports;\r\n                    powerPortNames[modelKey] = parseInt(model.power_ports);\r\n                });\r\n\r\n                this.setState({ loadingModels: false, modelList: modelNames, networkList: networkNames, powerPortList: powerPortNames }, this.availableNetworkConnections())\r\n            });\r\n    }\r\n\r\n    getOwnerList = () => {\r\n        axios.post(\r\n            getURL(Constants.USERS_MAIN_PATH, searchPath), emptySearch).then(\r\n            response => {\r\n                var users = [];\r\n                response.data.users.map(user => users.push(user.username));\r\n                this.setState({ loadingOwners: false, ownerList: users });\r\n            });\r\n    }\r\n\r\n    getDatacenterList = () => {\r\n        axios.get(\r\n            getURL(Constants.DATACENTERS_MAIN_PATH, \"all/\")).then(\r\n            response => {\r\n                var datacenters = [];\r\n                response.data.datacenters.map(datacenter => datacenters.push(datacenter.name));\r\n                this.setState({ loadingDatacenters: false, datacenterList: datacenters })\r\n            });\r\n    }\r\n\r\n    getNextAssetNum = () => {\r\n        axios.get(\r\n            getURL(Constants.ASSETS_MAIN_PATH, AssetCommand.GET_NEXT_ASSET_NUM)).then(\r\n            response => this.setState({ loadingAssetNumber: false, asset_number: response.data.asset_number }));\r\n    }\r\n\r\n    getAssetList = () => {\r\n        axios.post(\r\n            getURL(Constants.ASSETS_MAIN_PATH, searchPath),emptySearch).then(\r\n            response => {\r\n                var instances = response.data.instances;\r\n\r\n                var assetNums = [];\r\n                var assetNumToModel = {};\r\n                instances.map(instance => {\r\n                    assetNums.push(instance.asset_number);\r\n                    assetNumToModel[instance.asset_number] = instance.model;\r\n                })\r\n\r\n                this.setState({ loadingHostnames: false, assetNumList: assetNums, assetNumToModelList: assetNumToModel }, this.availableNetworkConnections());\r\n            });\r\n    }\r\n\r\n    validJSON = (json) => {\r\n        var valid = (json.model !== \"\"\r\n        && json.owner !== \"\"\r\n        && json.datacenter_name !== \"\"\r\n        && json.rack !== \"\"\r\n        && json.rack_position !== -1\r\n        && json.asset_number >= 100000 && json.asset_number <= 999999)\r\n\r\n        Object.entries(json.network_connections).map(([port, vals]) => {\r\n            var validConnection = (vals.connection_hostname !== undefined && vals.connection_port === undefined) || (vals.connection_hostname === undefined && vals.connection_port !== undefined);\r\n            valid = valid && validConnection;\r\n        });\r\n\r\n        return valid;\r\n    }\r\n\r\n    createAsset = (event) => {\r\n        event.preventDefault();\r\n        var json = this.createJSON();\r\n        if (this.validJSON(json)) {\r\n            axios.post(\r\n                getURL(AssetConstants.ASSETS_MAIN_PATH, AssetCommand.create),\r\n                json).then(\r\n                    response => {\r\n                    if (response.data.message === AssetConstants.SUCCESS_TOKEN) {\r\n                        this.setState({\r\n                            statusOpen: true,\r\n                            statusMessage: \"Successfully created asset\",\r\n                            statusSeverity:AssetConstants.SUCCESS_TOKEN,\r\n                            showModal:false,\r\n\r\n                            model:\"\",\r\n                            hostname:\"\",\r\n                            rack:\"\",\r\n                            rackU:-1,\r\n                            owner:\"\",\r\n                            comment:\"\",\r\n                            datacenter_name:\"\",\r\n                            tags:[],\r\n                            network_connections:[],\r\n                            power_connections:[],\r\n                            asset_number:-1,\r\n                        }, () => { /*this.props.search()*/ });\r\n                    } else {\r\n                        this.setState({ statusOpen: true, statusMessage: response.data.message, statusSeverity:AssetConstants.ERROR_TOKEN }, console.log(this.state.statusOpen));\r\n                    }\r\n                });\r\n        }\r\n\r\n    }\r\n\r\n    updateModel = (event) => {\r\n        this.setState({ model: event.target.value }, () => { this.validateForm() });\r\n    }\r\n\r\n    updateHostname = (event) => {\r\n        this.setState({ hostname: event.target.value }, () => { this.validateForm() });\r\n    }\r\n\r\n    updateRack = (event) => {\r\n        var rackVal = stringToRack(event.target.value);\r\n        this.setState({ rack: rackVal }, () => { this.validateForm() });\r\n    }\r\n\r\n    updateRackU = (event) => {\r\n        this.setState({ rackU: event.target.value }, () => { this.validateForm() });\r\n    }\r\n\r\n    updateOwner = (event) => {\r\n        this.setState({ owner: event.target.value }, () => { this.validateForm() });\r\n    }\r\n\r\n    updateComment = (event) => {\r\n        this.setState({ comment: event.target.value }, () => { this.validateForm() });\r\n    }\r\n\r\n    updateDatacenter = (event) => {\r\n        this.setState({ datacenter_name: event.target.value }, () => { this.validateForm() });\r\n    }\r\n\r\n    updateTags = (event) => {\r\n        this.setState({ tags: event.target.value }, () => { this.validateForm() });\r\n    }\r\n\r\n    changeNetworkMacAddress = (event, port) => {\r\n        var val = stringToMac(event.target.value);\r\n\r\n\r\n        this.setState(prevState => {\r\n            let network_connections = Object.assign({}, prevState.network_connections);\r\n            if (network_connections[port] === undefined) {\r\n                network_connections[port] = {\r\n                    \"mac_address\":val,\r\n                }\r\n            } else {\r\n                network_connections[port].mac_address = val;\r\n            }\r\n\r\n            network_connections[port] = (network_connections[port] === null) ? {} : network_connections[port];\r\n            network_connections[port].mac_address = val;\r\n            return { network_connections };\r\n        }, () => { this.validateForm() });\r\n    }\r\n\r\n    changeNetworkHostname = (event, port) => {\r\n        var val = event.target.value;\r\n\r\n        this.setState(prevState => {\r\n            let network_connections = Object.assign({}, prevState.network_connections);\r\n            network_connections[port] = (network_connections[port] === null) ? {} : network_connections[port];\r\n            network_connections[port].connection_hostname = val;\r\n            return { network_connections };\r\n        }, () => { this.validateForm() });\r\n    }\r\n\r\n    changeNetworkPort = (event, port) => {\r\n        var val = event.target.value;\r\n\r\n        this.setState(prevState => {\r\n            let network_connections = Object.assign({}, prevState.network_connections);\r\n            network_connections[port] = (network_connections[port] === null) ? {} : network_connections[port];\r\n            network_connections[port].connection_port = val;\r\n            return { network_connections };\r\n        }, () => { this.validateForm() });\r\n    }\r\n\r\n    updatePowerPort = (event, port) => {\r\n        var val = event.target.value;\r\n\r\n        this.setState(prevState => {\r\n            let power_connections = Object.assign({}, prevState.power_connections);\r\n            power_connections[port] = val;\r\n            return { power_connections };\r\n        }, () => { this.validateForm() });\r\n    }\r\n\r\n    changePowerPortState = (event, portNum) => {\r\n        var val = event.target.value;\r\n\r\n        this.setState(prevState => {\r\n            let leftRight = Object.assign({}, prevState.leftRight);\r\n            leftRight[portNum] = val;\r\n            return { leftRight };\r\n        }, () => { this.validateForm() });\r\n    }\r\n\r\n    updateAssetNumber = (event) => {\r\n        this.setState({ asset_number: event.target.value }, () => { this.validateForm() });\r\n    }\r\n\r\n    getPowerConnections = () => {\r\n        if (this.state.leftRight===null) {\r\n            return [];\r\n        }\r\n\r\n        var pwrConns = [];\r\n        var defaultValue = 1;\r\n        Object.entries(this.state.leftRight).map(([key, value]) => {\r\n            var num = this.state.power_connections===null ? defaultValue : this.state.power_connections[key];\r\n            switch(value) {\r\n                case left:\r\n                    pwrConns.push(\"L\" + num);\r\n                    break;\r\n                case right:\r\n                    pwrConns.push(\"R\" + num);\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n        });\r\n\r\n        return pwrConns;\r\n    }\r\n\r\n    createJSON = () => {\r\n        return {\r\n            \"model\":this.state.model,\r\n            \"hostname\":this.state.hostname,\r\n            \"rack\":this.state.rack,\r\n            \"rack_position\":this.state.rackU,\r\n            \"owner\":this.state.owner,\r\n            \"comment\":this.state.comment,\r\n            \"datacenter_name\":this.state.datacenter_name,\r\n            \"tags\":this.state.tags,\r\n            \"network_connections\":(this.state.network_connections===null) ? {}:this.state.network_connections,\r\n            \"power_connections\":this.getPowerConnections(),\r\n            'asset_number':this.state.asset_number,\r\n        }\r\n    }\r\n\r\n    availableNetworkConnections = () => {\r\n        var availableNetworks = false;\r\n\r\n        var assets = this.state.assetNumList;\r\n        assets.map(asset => {\r\n            if (Object.keys(this.state.networList[this.state.assetNumToModelList[asset]].length).length > 0) {\r\n                availableNetworks = true;\r\n            }\r\n        });\r\n        this.setState({ availableConnections: availableNetworks });\r\n    }\r\n\r\n    showModal = () => {\r\n        this.setState({ showModal: true });\r\n    }\r\n\r\n    closeModal = () => {\r\n        this.setState({\r\n            // next available asset number\r\n            loadingAssetNumber:true,\r\n\r\n            // model information\r\n            loadingModels:true,\r\n            modelList:[],\r\n            networkList:null,\r\n            powerPortList:null,\r\n\r\n            // owner information\r\n            loadingOwners:true,\r\n            ownerList:[],\r\n\r\n            // datacenter information\r\n            loadingDatacenters:true,\r\n            datacenterList:[],\r\n\r\n            // hostname information\r\n            loadingHostnames:true,\r\n            assetNumList:[],\r\n            assetNumToModelList:null,\r\n\r\n            model:\"\",\r\n            hostname:\"\",\r\n            rack:\"\",\r\n            rackU:-1,\r\n            owner:\"\",\r\n            comment:\"\",\r\n            datacenter_name:\"\",\r\n            tags:[],\r\n            network_connections:null,\r\n            power_connections:null,\r\n            asset_number:100000,\r\n\r\n            selectedConnection:null,\r\n\r\n            statusOpen: false,\r\n            statusMessage: \"\",\r\n            statusSeverity:\"\",\r\n\r\n            showModal:false,\r\n\r\n            powerPortState:null,\r\n            leftRight:null,\r\n            availableConnections:false,\r\n\r\n            canSubmit:false,\r\n        }, this.getLists());\r\n    }\r\n\r\n    statusClose = () => {\r\n        this.setState({ statusOpen: false, statusMessage: \"\", statusSeverity:\"\" });\r\n    }\r\n\r\n    validateForm = () => {\r\n        this.setState({ canSubmit:this.validJSON(this.createJSON()) });\r\n    }\r\n\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n\r\n        return (\r\n        <span>\r\n            <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                onClick={() => {this.showModal()} }\r\n            >\r\n                Create Asset\r\n            </Button>\r\n            <Modal\r\n                    aria-labelledby=\"transition-modal-title\"\r\n                    aria-describedby=\"transition-modal-description\"\r\n                    className={classes.modal}\r\n                    open={this.state.showModal}\r\n                    onClose={this.closeModal}\r\n                    closeAfterTransition\r\n                    BackdropComponent={Backdrop}\r\n                    scroll=\"body\"\r\n                    BackdropProps={{\r\n                        timeout: 500,\r\n                    }}\r\n                >\r\n                    <Fade in={this.state.showModal}>\r\n                    <div className={classes.paper}>\r\n                    {(\r\n                    (this.state.loadingAssetNumber\r\n                    || this.state.loadingDatacenters\r\n                    || this.state.loadingModels\r\n                    || this.state.loadingHostnames\r\n                    || this.state.loadingOwners)\r\n                    //&& false\r\n                    ) ? <div className={classes.progress}><CircularProgress /></div> :\r\n                        <form>\r\n                        <Grid container spacing={3}>\r\n                            <Grid item xs={3}>\r\n                                <Tooltip placement=\"top\" open={this.state.inputs.model.Tooltip} title={this.state.inputs.model.description}>\r\n                                    <Autocomplete\r\n                                        id=\"select-model\"\r\n                                        options={this.state.modelList}\r\n                                        includeInputInList\r\n\r\n                                        renderInput={params => (\r\n                                        <TextField\r\n                                            {...params}\r\n                                            label={this.state.inputs.model.label}\r\n                                            name={this.state.inputs.model.name}\r\n                                            onChange={this.updateModel}\r\n                                            onBlur={this.updateModel}\r\n                                            variant=\"outlined\"\r\n                                            fullWidth\r\n                                            required\r\n                                        />\r\n                                        )}\r\n                                    />\r\n                                </Tooltip>\r\n                            </Grid>\r\n                            <Grid item xs={3}>\r\n                                <Tooltip placement=\"top\" open={this.state.inputs.owner.Tooltip} title={this.state.inputs.owner.description}>\r\n                                    <Autocomplete\r\n                                        id=\"select-owner\"\r\n                                        options={this.state.ownerList}\r\n                                        includeInputInList\r\n                                        renderInput={params => (\r\n                                        <TextField\r\n                                            {...params}\r\n                                            label={this.state.inputs.owner.label}\r\n                                            name={this.state.inputs.owner.name}\r\n                                            onChange={this.updateOwner}\r\n                                            onBlur={this.updateOwner}\r\n                                            variant=\"outlined\"\r\n                                            fullWidth\r\n                                            required\r\n                                        />\r\n                                        )}\r\n                                    />\r\n                                </Tooltip>\r\n                            </Grid>\r\n                            <Grid item xs={3}>\r\n                                <Tooltip placement=\"top\" open={this.state.inputs.datacenter.Tooltip} title={this.state.inputs.datacenter.description}>\r\n                                    <Autocomplete\r\n                                        id=\"input-datacenter\"\r\n                                        options={this.state.datacenterList}\r\n                                        includeInputInList\r\n\r\n                                        renderInput={params => (\r\n                                        <TextField\r\n                                            {...params}\r\n                                            label={this.state.inputs.datacenter.label}\r\n                                            name={this.state.inputs.datacenter.name}\r\n                                            onChange={this.updateDatacenter}\r\n                                            onBlur={this.updateDatacenter}\r\n                                            variant=\"outlined\"\r\n                                            fullWidth\r\n                                            required\r\n                                        />\r\n                                        )}\r\n                                    />\r\n                                </Tooltip>\r\n                            </Grid>\r\n                            <Grid item xs={3}>\r\n                                <Tooltip placement=\"top\" open={this.state.inputs.rack.Tooltip} title={this.state.inputs.rack.description}>\r\n                                    <TextField\r\n                                        id=\"input-rack\"\r\n                                        variant=\"outlined\"\r\n                                        label={this.state.inputs.rack.label}\r\n                                        name={this.state.inputs.rack.name}\r\n                                        onChange={this.updateRack}\r\n                                        value={this.state.rack}\r\n                                        required\r\n                                        fullWidth\r\n                                    />\r\n                                </Tooltip>\r\n                            </Grid>\r\n                            <Grid item xs={3}>\r\n                                <Tooltip placement=\"top\" open={this.state.inputs.rackU.Tooltip} title={this.state.inputs.rackU.description}>\r\n                                    <TextField\r\n                                        id=\"input-rackU\"\r\n                                        variant=\"outlined\"\r\n                                        type=\"number\"\r\n                                        InputProps={{ inputProps: { min: 1, max:42} }}\r\n                                        label={this.state.inputs.rackU.label}\r\n                                        name={this.state.inputs.rackU.name}\r\n                                        onChange={this.updateRackU}\r\n                                        required\r\n                                        fullWidth\r\n                                    />\r\n                                </Tooltip>\r\n                            </Grid>\r\n                            <Grid item xs={3}>\r\n                                <Tooltip placement=\"top\" open={this.state.inputs.assetNum.Tooltip} title={this.state.inputs.assetNum.description}>\r\n                                    <TextField\r\n                                        id=\"input-asset-number\"\r\n                                        variant=\"outlined\"\r\n                                        type=\"number\"\r\n                                        InputProps={{ inputProps: { min: 100000, max:999999} }}\r\n                                        label={this.state.inputs.assetNum.label}\r\n                                        name={this.state.inputs.assetNum.name}\r\n                                        onChange={this.updateAssetNumber}\r\n                                        value={this.state.asset_number}\r\n                                        required\r\n                                        fullWidth\r\n                                    />\r\n                                </Tooltip>\r\n                            </Grid>\r\n                            <Grid item xs={3}>\r\n                                <Tooltip placement=\"top\" open={this.state.inputs.hostname.Tooltip} title={this.state.inputs.hostname.description}>\r\n                                    <TextField\r\n                                        id=\"input-hostname\"\r\n                                        variant=\"outlined\"\r\n                                        label={this.state.inputs.hostname.label}\r\n                                        name={this.state.inputs.hostname.name}\r\n                                        onChange={this.updateHostname}\r\n                                        fullWidth\r\n                                    />\r\n                                </Tooltip>\r\n                            </Grid>\r\n\r\n                            <Grid item xs={12}>\r\n                                {(\r\n                                    (!(this.state.networkList\r\n                                        && this.state.networkList[this.state.model])\r\n                                    || (this.state.hostname===\"\"))\r\n                                    || !this.state.availableConnections\r\n                                ) ? null:\r\n                                this.state.networkList[this.state.model].map(networkPort => (\r\n                                <Grid container spacing={3}>\r\n                                    <Grid item xs={2}>\r\n                                        <Typography>{networkPort + \": \"}</Typography>\r\n                                    </Grid>\r\n                                    <Grid item xs={3}>\r\n                                        <Tooltip placement=\"top\" open={this.state.inputs.macAddress.Tooltip} title={this.state.inputs.macAddress.description}>\r\n                                            <TextField\r\n                                                id=\"input-mac-address\"\r\n                                                variant=\"outlined\"\r\n                                                label={this.state.inputs.macAddress.label}\r\n                                                name={this.state.inputs.macAddress.name}\r\n                                                onChange={(event) => {this.changeNetworkMacAddress(event, networkPort)}}\r\n                                                fullWidth\r\n                                                value={ (this.state.network_connections !== null && this.state.network_connections[networkPort]!==undefined) ? this.state.network_connections[networkPort].mac_address : \"\" }\r\n                                            />\r\n                                        </Tooltip>\r\n                                    </Grid>\r\n                                    <Grid item xs={3}>\r\n                                        <Tooltip placement=\"top\" open={this.state.inputs.networkConnections.Tooltip} title={this.state.inputs.networkConnections.description}>\r\n                                            <Autocomplete\r\n                                                id=\"input-network-ports\"\r\n                                                options={this.state.assetNumList}\r\n                                                includeInputInList\r\n                                                renderInput={params => (\r\n                                                    <TextField\r\n                                                        {...params}\r\n                                                        label={\"Connection Hostname\"}\r\n                                                        name={\"Connection Hostname\"}\r\n                                                        onBlur={(event) => {this.changeNetworkHostname(event, networkPort)}}\r\n                                                        variant=\"outlined\"\r\n                                                        fullWidth\r\n                                                        value={ (this.state.network_connections !== null && this.state.network_connections[networkPort]!==undefined) ? this.state.network_connections[networkPort].connection_hostname : \"\" }\r\n                                                    />\r\n                                                )}\r\n                                            />\r\n                                        </Tooltip>\r\n                                    </Grid>\r\n                                    <Grid item xs={3}>\r\n                                        <Tooltip placement=\"top\" open={this.state.inputs.networkConnections.Tooltip} title={this.state.inputs.networkConnections.description}>\r\n                                            <Autocomplete\r\n                                                id=\"input-network-ports\"\r\n                                                options={this.state.networkList[this.state.assetNumToModelList[networkPort]]}\r\n                                                includeInputInList\r\n                                                renderInput={params => (\r\n                                                    <TextField\r\n                                                        {...params}\r\n                                                        label={\"Connection Port\"}\r\n                                                        name={\"Connection Port\"}\r\n                                                        onBlur={(event) => {this.changeNetworkPort(event, networkPort)}}\r\n                                                        variant=\"outlined\"\r\n                                                        fullWidth\r\n                                                        value={ (this.state.network_connections !== null && this.state.network_connections[networkPort]!==undefined) ? this.state.network_connections[networkPort].connection_port : \"\" }\r\n                                                    />\r\n                                                )}\r\n                                            />\r\n                                        </Tooltip>\r\n                                    </Grid>\r\n                                </Grid>\r\n                                ))}\r\n                            </Grid>\r\n\r\n                            {(\r\n                                !(this.state.powerPortList\r\n                                && this.state.powerPortList[this.state.model])\r\n                                ) ? null :\r\n                            Array.from( { length: this.state.powerPortList[this.state.model] }, (_, k) => (\r\n                            <Grid item xs={12}>\r\n                                <Grid container spacing={3}>\r\n                                    <Grid item xs={12}>\r\n                                        <Typography>{\"Power Port: \" + k}</Typography>\r\n                                    </Grid>\r\n                                    <Grid item xs={3}>\r\n                                        <FormControl component=\"fieldset\">\r\n                                            <RadioGroup\r\n                                                id={\"power-port-\"+k}\r\n                                                aria-label=\"position\"\r\n                                                name={\"position\"+k}\r\n                                                value={(this.state.leftRight===null) ? off:(this.state.leftRight[k]===undefined ? off:this.state.leftRight[k])}\r\n                                                onChange={(event) => {this.changePowerPortState(event, k)} }\r\n                                                row\r\n                                            >\r\n                                                <FormControlLabel\r\n                                                    value={left}\r\n                                                    control={<Radio color=\"primary\" />}\r\n                                                    label=\"Left\"\r\n                                                    labelPlacement=\"bottom\"\r\n                                                />\r\n                                                <FormControlLabel\r\n                                                    value={right}\r\n                                                    control={<Radio color=\"primary\" />}\r\n                                                    label=\"Right\"\r\n                                                    labelPlacement=\"bottom\"\r\n                                                />\r\n                                                <FormControlLabel\r\n                                                    value={off}\r\n                                                    control={<Radio color=\"primary\" />}\r\n                                                    label=\"No Connection\"\r\n                                                    labelPlacement=\"bottom\"\r\n                                                />\r\n                                            </RadioGroup>\r\n                                        </FormControl>\r\n                                    </Grid>\r\n                                    {(this.state.leftRight===null) ? null:(this.state.leftRight[k]===undefined||this.state.leftRight[k]===off ? null:\r\n                                        <Grid item xs={2}>\r\n                                            <TextField\r\n                                                type=\"number\"\r\n                                                value={(this.state.power_connections===null) ? 1 : (this.state.power_connections[k]===undefined?1:this.state.power_connections[k])}\r\n                                                InputProps={{ inputProps: { min: 1, max: 24} }}\r\n                                                onChange={(event) => {this.updatePowerPort(event, k)} }\r\n                                            />\r\n                                            <FormHelperText>Power Port Number</FormHelperText>\r\n                                        </Grid>\r\n                                        )}\r\n                                </Grid>\r\n                            </Grid>\r\n                            ))\r\n                                    }\r\n                            <Grid item xs={6}>\r\n                                    <TextField\r\n                                        id=\"input-comment\"\r\n                                        variant=\"outlined\"\r\n                                        label={this.state.inputs.comment.label}\r\n                                        name={this.state.inputs.comment.name}\r\n                                        onChange={this.updateComment}\r\n                                        multiline={true}\r\n                                        fullWidth\r\n                                    />\r\n                            </Grid>\r\n                            <Grid item xs={6} />\r\n                            <Grid item xs={1}>\r\n                                <Button\r\n                                    variant=\"contained\"\r\n                                    color=\"primary\"\r\n                                    type=\"submit\"\r\n                                    onClick={(event) => {this.createAsset(event)}}\r\n                                    disabled={!this.state.canSubmit}\r\n                                >\r\n                                    Create\r\n                                </Button>\r\n                            </Grid>\r\n                            <Grid item xs={9}>\r\n                                <Button\r\n                                    variant=\"contained\"\r\n                                    color=\"primary\"\r\n                                    type=\"submit\"\r\n                                    onClick={this.closeModal}\r\n                                >\r\n                                    Cancel\r\n                                </Button>\r\n                            </Grid>\r\n                        </Grid></form>}\r\n                        <StatusDisplay\r\n                            open={this.statusOpen}\r\n                            severity={this.statusSeverity}\r\n                            closeStatus={this.statusClose}\r\n                            message={this.statusMessage}\r\n                        />\r\n                    </div>\r\n                    </Fade>\r\n                </Modal>\r\n        </span>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default withStyles(useStyles)(CreateAsset);\r\n","\r\n\r\nexport default function stringToRack(rack) {\r\n    var result = \"\";\r\n    var numRegex = /[0-9]/;\r\n\r\n    result = rack.replace(/[^0-9a-fA-F]*/g, \"\");\r\n\r\n    if (result.length > 2) {\r\n        result = result.substring(0,2);\r\n    }\r\n\r\n    if (result.length == 1) {\r\n        return result.replace(/^(\\d)+/g,\"A$1\").toUpperCase();\r\n    }\r\n\r\n    result = result.replace(/^(\\d)*(\\w)*/, \"$2$1\").toUpperCase();\r\n\r\n    if (result.length == 1) {\r\n        return result.replace(/^(\\d)+/g,\"A$1\").toUpperCase();\r\n    }\r\n\r\n    return result;\r\n\r\n}\r\n","import React from \"react\";\r\nimport Graph from \"react-graph-vis\";\r\n\r\n// nodes: [\r\n//     { id: 1, label: \"Node 1\", title: \"node 1 tootip text\" },\r\n//     { id: 2, label: \"Node 2\", title: \"node 2 tootip text\" },\r\n//     { id: 3, label: \"Node 3\", title: \"node 3 tootip text\" },\r\n//     { id: 4, label: \"Node 4\", title: \"node 4 tootip text\" },\r\n//     { id: 5, label: \"Node 5\", title: \"node 5 tootip text\" }\r\n//   ],\r\n//   edges: [\r\n//     { from: 1, to: 2 },\r\n//     { from: 1, to: 3 },\r\n//     { from: 2, to: 4 },\r\n//     { from: 2, to: 5 },\r\n//     { from: 5, to: 2 }\r\n//   ]\r\n//\r\n// vals: {\r\n//      \"host1\": [ \"host2\", \"host4\" ],\r\n//      \"host3\": [\"host5\", \"host7\", \"host9\", \"host11\"]\r\n// }\r\n\r\nfunction getGraph(primaryHosts, host) {\r\n    var hostnameMapping = {};\r\n    const hostID = 0;\r\n\r\n    var nodes = [];\r\n    nodes.push({\r\n        id:hostID,\r\n        label:\"\" + host,\r\n        color:\"#F5F5DC\"\r\n    });\r\n\r\n    hostnameMapping[host] = hostID;\r\n\r\n    var edges = [];\r\n    var primaryHostID = 1;\r\n\r\n    Object.entries(primaryHosts).map(([primaryHost, secondaryHosts]) => {\r\n        if (hostnameMapping[primaryHost] !== undefined) {\r\n            edges.push({ from: host, to:hostnameMapping[primaryHost] });\r\n        } else {\r\n            nodes.push({\r\n                id:primaryHostID,\r\n                label:\"\" + primaryHost,\r\n                color:\"#F0FFFF\"\r\n            });\r\n            edges.push({ from: hostID, to: primaryHostID });\r\n            hostnameMapping[primaryHost] = primaryHostID;\r\n        }\r\n\r\n        var secondaryHostID = primaryHostID + 1;\r\n        secondaryHosts.map(secondaryHost => {\r\n            if (hostnameMapping[secondaryHost] !== undefined) {\r\n                edges.push({ from: primaryHostID, to: hostnameMapping[secondaryHost]});\r\n            } else {\r\n                nodes.push({\r\n                    id:secondaryHostID,\r\n                    label:\"\" + secondaryHost,\r\n                    color:\"#7FFFD4\"\r\n                });\r\n                edges.push({ from: primaryHostID, to: secondaryHostID });\r\n                hostnameMapping[secondaryHost] = secondaryHostID;\r\n                secondaryHostID++;\r\n            }\r\n\r\n        });\r\n\r\n        primaryHostID = secondaryHostID + 1;\r\n\r\n    });\r\n\r\n    return { nodes:nodes, edges:edges };\r\n}\r\n\r\nclass NetworkGraph extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n        };\r\n    }\r\n\r\n    render() {\r\n          const options = {\r\n            layout: {\r\n              hierarchical: true\r\n            },\r\n            edges: {\r\n              color: \"#000000\"\r\n            },\r\n            height: \"500px\",\r\n            interaction:{\r\n                dragNodes:false,\r\n                dragView: false,\r\n            }\r\n          };\r\n\r\n          const events = {\r\n            select: function(event) {\r\n              var { nodes, edges } = event;\r\n            }\r\n          };\r\n\r\n        return (\r\n            <Graph\r\n                graph={getGraph(this.props.vals, this.props.host)}\r\n                options={options}\r\n                events={events}\r\n                getNetwork={network => {\r\n                    //  if you want access to vis.js network api you can set the state in a parent component using this property\r\n                }}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nconst rootElement = document.getElementById(\"root\");\r\n\r\n\r\nexport default NetworkGraph;\r\n","import React from 'react';\r\n\r\nimport axios from 'axios';\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from '@material-ui/core/Button';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\r\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\r\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\n\r\nimport StatusDisplay from '../../helpers/StatusDisplay';\r\nimport { AssetInput } from '../enums/AssetInputs.ts';\r\nimport { AssetCommand } from '../enums/AssetCommands.ts'\r\nimport getURL from '../../helpers/functions/GetURL';\r\nimport * as AssetConstants from \"../AssetConstants\";\r\nimport * as Constants from \"../../Constants\";\r\nimport { Typography } from '@material-ui/core';\r\nimport stringToMac from \"./functions/StringToMacAddress\"\r\nimport stringToRack from \"./functions/StringToRack\";\r\nimport NetworkGraph from \"./NetworkGraph\";\r\n\r\nfunction createInputs(name, label, showTooltip, description) {\r\n    return {label, name, showTooltip, description};\r\n}\r\n\r\nconst emptySearch = {\r\n    \"filter\": {\r\n            \"vendor\":null,\r\n            \"model_number\":null,\r\n            \"height\":null,\r\n            \"model\":null,\r\n            \"hostname\":null,\r\n            \"rack\":null,\r\n            \"rack_position\":null,\r\n            \"username\":null,\r\n            \"display_name\":null,\r\n            \"email\":null,\r\n            \"privilege\":null,\r\n            \"model\":null,\r\n            \"hostname\":null,\r\n            \"starting_rack_letter\":null,\r\n            \"ending_rack_letter\":null,\r\n            \"starting_rack_number\":null,\r\n            \"ending_rack_number\":null,\r\n            \"rack\":null,\r\n            \"rack_position\":null\r\n        },\r\n    \"datacenter_name\":\"\",\r\n}\r\n\r\nconst searchPath = \"search/\";\r\nconst left = \"left\";\r\nconst right = \"right\";\r\nconst off = \"off\";\r\n\r\nconst useStyles = theme => ({\r\n    root: {\r\n      flexGrow: 1,\r\n    },\r\n    modal: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        maxWidth: \"80%\",\r\n        margin:\"0 auto\",\r\n        minWidth:\"70%\",\r\n      },\r\n      paper: {\r\n        backgroundColor: theme.palette.background.paper,\r\n        border: '2px solid #000',\r\n        boxShadow: theme.shadows[5],\r\n        padding: theme.spacing(2, 4, 3),\r\n      },\r\n      progress: {\r\n        display: 'flex',\r\n        '& > * + *': {\r\n          marginLeft: theme.spacing(2),\r\n        },\r\n      },\r\n});\r\n\r\nclass DetailAsset extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n\r\n            // model information\r\n            loadingModels:true,\r\n            modelList:[],\r\n            networkList:null,\r\n            powerPortList:null,\r\n\r\n            // owner information\r\n            loadingOwners:true,\r\n            ownerList:[],\r\n\r\n            // datacenter information\r\n            loadingDatacenters:true,\r\n            datacenterList:[],\r\n\r\n            // hostname information\r\n            loadingHostnames:true,\r\n            assetNumList:[],\r\n            assetNumToModelList:null,\r\n\r\n            model:\"\",\r\n            hostname:\"\",\r\n            rack:\"\",\r\n            rackU:-1,\r\n            owner:\"\",\r\n            comment:\"\",\r\n            datacenter_name:\"\",\r\n            tags:[],\r\n            network_connections:null,\r\n            power_connections:null,\r\n            asset_number:100000,\r\n\r\n            selectedConnection:null,\r\n\r\n            statusOpen: false,\r\n            statusMessage: \"\",\r\n            statusSeverity:\"\",\r\n\r\n            showModal:false,\r\n\r\n            powerPortState:null,\r\n            leftRight:null,\r\n            availableConnections:false,\r\n\r\n            canSubmit:false,\r\n\r\n            detailAsset:null,\r\n            loadingDetailAsset: true,\r\n\r\n            inputs: {\r\n                \"model\":createInputs(AssetInput.MODEL, \"Model\", false, \"A reference to an existing model\"),\r\n                \"hostname\":createInputs(AssetInput.HOSTNAME, \"Hostname\", false, \"A short string compliant with RFC 1034’s definition of 'label'\"),\r\n                \"rack\":createInputs(AssetInput.RACK, \"Rack\", false, \"The rack the equipment is installed in, written as a row letter and rack number, e.g. 'B12'\"),\r\n                \"rackU\":createInputs(AssetInput.RACK_U, \"Rack U\", false, \"An integer indicating the vertical location of the bottom of the equipment (e.g. '5')\"),\r\n                \"owner\":createInputs(AssetInput.OWNER, \"Owner\", false, \"A reference to an existing user on the system who owns this equipment\"),\r\n                \"comment\":createInputs(AssetInput.COMMENT, \"Comment\", false, \"Any additional information associated with this asset\"),\r\n                \"datacenter\":createInputs(AssetInput.DATACENTER, \"Datacenter\", false, \"A reference to an existing datacenter\"),\r\n                \"macAddress\":createInputs(AssetInput.MAC_ADDRESS, \"Mac Address\", false, \"A 6-byte hexadecimal string per network port shown canonically in lower case with colon delimiters (e.g., '00:1e:c9:ac:78:aa')\"),\r\n                \"networkConnections\":createInputs(AssetInput.NETWORK_CONNECTIONS, \"Port Name\", false, \"For each network port, a reference to another network port on another piece of gear\"),\r\n                \"powerConnections\":createInputs(AssetInput.POWER_CONNECTIONS, \"Power Connections\", false, \"Choice of PDU port number (0 means not plugged in)\"),\r\n                \"assetNum\":createInputs(AssetInput.ASSET_NUMBER, \"Asset Number\", false, \"A six-digit serial number unique associated with an asset.\"),\r\n            },\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getLists();\r\n        this.getDetailView();\r\n    }\r\n\r\n    getDetailView = () => {\r\n        axios.post(getURL(Constants.ASSETS_MAIN_PATH, AssetCommand.detailView), { \"asset_number\":this.props.asset }).then(\r\n            response => {\r\n                this.setState({ detailAsset: response.data.instances[0], loadingDetailAsset: false});\r\n            }\r\n        );\r\n\r\n        var detailTemp = {\r\n            \"model\": \"Dell 27\",\r\n            \"hostname\": \"HOSTNAME\",\r\n            \"rack\": \"A1\",\r\n            \"rack_position\": 1,\r\n            \"owner\": \"OWNER\",\r\n            \"comment\": \"COMMENT\",\r\n            \"datacenter_name\": \"DATACENTER NAME\",\r\n            \"tags\": \"TAGS\",\r\n            \"network_connections\": \"\",\r\n            \"power_connections\": \"\",\r\n            \"asset_number\": 1000005,\r\n        };\r\n        this.setState({ detailAsset: detailTemp });\r\n    }\r\n\r\n    getLists = () => {\r\n        this.getModelList();\r\n        this.getOwnerList();\r\n        this.getDatacenterList();\r\n        this.getAssetList();\r\n    }\r\n\r\n    getModelList = () => {\r\n        axios.post(\r\n            getURL(Constants.MODELS_MAIN_PATH, searchPath), emptySearch).then(\r\n            response => {\r\n                var models = response.data.models;\r\n\r\n                var modelNames = [];\r\n                var networkNames = {};\r\n                var powerPortNames = {};\r\n\r\n                models.map(model => {\r\n                    var modelKey = model.vendor + \" \" + model.model_number;\r\n                    modelNames.push(modelKey);\r\n                    networkNames[modelKey] = model.ethernet_ports;\r\n                    powerPortNames[modelKey] = parseInt(model.power_ports);\r\n                });\r\n\r\n                this.setState({ loadingModels: false, modelList: modelNames, networkList: networkNames, powerPortList: powerPortNames }, this.availableNetworkConnections())\r\n            });\r\n    }\r\n\r\n    getOwnerList = () => {\r\n        axios.post(\r\n            getURL(Constants.USERS_MAIN_PATH, searchPath), emptySearch).then(\r\n            response => {\r\n                var users = [];\r\n                response.data.users.map(user => users.push(user.username));\r\n                this.setState({ loadingOwners: false, ownerList: users });\r\n            });\r\n    }\r\n\r\n    getDatacenterList = () => {\r\n        axios.get(\r\n            getURL(Constants.DATACENTERS_MAIN_PATH, \"all/\")).then(\r\n            response => {\r\n                var datacenters = [];\r\n                response.data.datacenters.map(datacenter => datacenters.push(datacenter.name));\r\n                this.setState({ loadingDatacenters: false, datacenterList: datacenters })\r\n            });\r\n    }\r\n\r\n    getAssetList = () => {\r\n        axios.post(\r\n            getURL(Constants.ASSETS_MAIN_PATH, searchPath),emptySearch).then(\r\n            response => {\r\n                var instances = response.data.instances;\r\n\r\n                var assetNums = [];\r\n                var assetNumToModel = {};\r\n                instances.map(instance => {\r\n                    assetNums.push(instance.asset_number);\r\n                    assetNumToModel[instance.asset_number] = instance.model;\r\n                })\r\n\r\n                this.setState({ loadingHostnames: false, assetNumList: assetNums, assetNumToModelList: assetNumToModel }, this.availableNetworkConnections());\r\n            });\r\n    }\r\n\r\n    validJSON = (json) => {\r\n        var valid = (json.model !== \"\"\r\n        && json.owner !== \"\"\r\n        && json.datacenter_name !== \"\"\r\n        && json.rack !== \"\"\r\n        && json.rack_position !== -1\r\n        && json.asset_number >= 100000 && json.asset_number <= 999999)\r\n\r\n        Object.entries(json.network_connections).map(([port, vals]) => {\r\n            var validConnection = (vals.connection_hostname !== undefined && vals.connection_port === undefined) || (vals.connection_hostname === undefined && vals.connection_port !== undefined);\r\n            valid = valid && validConnection;\r\n        });\r\n\r\n        return valid;\r\n    }\r\n\r\n    createAsset = (event) => {\r\n        event.preventDefault();\r\n        var json = this.createJSON();\r\n        if (this.validJSON(json)) {\r\n            axios.post(\r\n                getURL(AssetConstants.ASSETS_MAIN_PATH, AssetCommand.create),\r\n                json).then(\r\n                    response => {\r\n                    if (response.data.message === AssetConstants.SUCCESS_TOKEN) {\r\n                        this.setState({\r\n                            statusOpen: true,\r\n                            statusMessage: \"Successfully created asset\",\r\n                            statusSeverity:AssetConstants.SUCCESS_TOKEN,\r\n                            showModal:false,\r\n\r\n                            model:\"\",\r\n                            hostname:\"\",\r\n                            rack:\"\",\r\n                            rackU:-1,\r\n                            owner:\"\",\r\n                            comment:\"\",\r\n                            datacenter_name:\"\",\r\n                            tags:[],\r\n                            network_connections:[],\r\n                            power_connections:[],\r\n                            asset_number:-1,\r\n                        }, this.props.search());\r\n                    } else {\r\n                        this.setState({ statusOpen: true, statusMessage: response.data.message, statusSeverity:AssetConstants.ERROR_TOKEN }, console.log(this.state.statusOpen));\r\n                    }\r\n                });\r\n        }\r\n\r\n    }\r\n\r\n    updateModel = (event) => {\r\n        this.setState({ model: event.target.value }, () => { this.validateForm() });\r\n    }\r\n\r\n    updateHostname = (event) => {\r\n        this.setState({ hostname: event.target.value }, () => { this.validateForm() });\r\n    }\r\n\r\n    updateRack = (event) => {\r\n        //var rackVal = stringToRack(event.target.value);\r\n        this.setState({ rack: event.target.value }, () => { this.validateForm() });\r\n    }\r\n\r\n    updateRackU = (event) => {\r\n        this.setState({ rackU: event.target.value }, () => { this.validateForm() });\r\n    }\r\n\r\n    updateOwner = (event) => {\r\n        this.setState({ owner: event.target.value }, () => { this.validateForm() });\r\n    }\r\n\r\n    updateComment = (event) => {\r\n        this.setState({ comment: event.target.value }, () => { this.validateForm() });\r\n    }\r\n\r\n    updateDatacenter = (event) => {\r\n        this.setState({ datacenter_name: event.target.value }, () => { this.validateForm() });\r\n    }\r\n\r\n    updateTags = (event) => {\r\n        this.setState({ tags: event.target.value }, () => { this.validateForm() });\r\n    }\r\n\r\n    changeNetworkMacAddress = (event, port) => {\r\n        var val = stringToMac(event.target.value);\r\n\r\n\r\n        this.setState(prevState => {\r\n            let network_connections = Object.assign({}, prevState.network_connections);\r\n            if (network_connections[port] === undefined) {\r\n                network_connections[port] = {\r\n                    \"mac_address\":val,\r\n                }\r\n            } else {\r\n                network_connections[port].mac_address = val;\r\n            }\r\n\r\n            network_connections[port] = (network_connections[port] === null) ? {} : network_connections[port];\r\n            network_connections[port].mac_address = val;\r\n            return { network_connections };\r\n        }, () => { this.validateForm() });\r\n    }\r\n\r\n    changeNetworkHostname = (event, port) => {\r\n        var val = event.target.value;\r\n\r\n        this.setState(prevState => {\r\n            let network_connections = Object.assign({}, prevState.network_connections);\r\n            network_connections[port] = (network_connections[port] === null) ? {} : network_connections[port];\r\n            network_connections[port].connection_hostname = val;\r\n            return { network_connections };\r\n        }, () => { this.validateForm() });\r\n    }\r\n\r\n    changeNetworkPort = (event, port) => {\r\n        var val = event.target.value;\r\n\r\n        this.setState(prevState => {\r\n            let network_connections = Object.assign({}, prevState.network_connections);\r\n            network_connections[port] = (network_connections[port] === null) ? {} : network_connections[port];\r\n            network_connections[port].connection_port = val;\r\n            return { network_connections };\r\n        }, () => { this.validateForm() });\r\n    }\r\n\r\n    updatePowerPort = (event, port) => {\r\n        var val = event.target.value;\r\n\r\n        this.setState(prevState => {\r\n            let power_connections = Object.assign({}, prevState.power_connections);\r\n            power_connections[port] = val;\r\n            return { power_connections };\r\n        }, () => { this.validateForm() });\r\n    }\r\n\r\n    changePowerPortState = (event, portNum) => {\r\n        var val = event.target.value;\r\n\r\n        this.setState(prevState => {\r\n            let leftRight = Object.assign({}, prevState.leftRight);\r\n            leftRight[portNum] = val;\r\n            return { leftRight };\r\n        }, () => { this.validateForm() });\r\n    }\r\n\r\n    updateAssetNumber = (event) => {\r\n        this.setState({ asset_number: event.target.value }, () => { this.validateForm() });\r\n    }\r\n\r\n    getPowerConnections = () => {\r\n        if (this.state.leftRight===null) {\r\n            return [];\r\n        }\r\n\r\n        var pwrConns = [];\r\n        var defaultValue = 1;\r\n        Object.entries(this.state.leftRight).map(([key, value]) => {\r\n            var num = this.state.power_connections===null ? defaultValue : this.state.power_connections[key];\r\n            switch(value) {\r\n                case left:\r\n                    pwrConns.push(\"L\" + num);\r\n                    break;\r\n                case right:\r\n                    pwrConns.push(\"R\" + num);\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n        });\r\n\r\n        return pwrConns;\r\n    }\r\n\r\n    createJSON = () => {\r\n        return {\r\n            \"model\":this.state.model,\r\n            \"hostname\":this.state.hostname,\r\n            \"rack\":this.state.rack,\r\n            \"rack_position\":this.state.rackU,\r\n            \"owner\":this.state.owner,\r\n            \"comment\":this.state.comment,\r\n            \"datacenter_name\":this.state.datacenter_name,\r\n            \"tags\":this.state.tags,\r\n            \"network_connections\":(this.state.network_connections===null) ? {}:this.state.network_connections,\r\n            \"power_connections\":this.getPowerConnections(),\r\n            'asset_number':this.state.asset_number,\r\n        }\r\n    }\r\n\r\n    availableNetworkConnections = () => {\r\n        var availableNetworks = false;\r\n\r\n        var assets = this.state.assetNumList;\r\n        assets.map(asset => {\r\n            if (Object.keys(this.state.networList[this.state.assetNumToModelList[asset]].length).length > 0) {\r\n                availableNetworks = true;\r\n            }\r\n        });\r\n        this.setState({ availableConnections: availableNetworks });\r\n    }\r\n\r\n    showModal = () => {\r\n        this.setState({ showModal: true });\r\n    }\r\n\r\n    closeModal = () => {\r\n        this.setState({\r\n\r\n            // model information\r\n            loadingModels:true,\r\n            modelList:[],\r\n            networkList:null,\r\n            powerPortList:null,\r\n\r\n            // owner information\r\n            loadingOwners:true,\r\n            ownerList:[],\r\n\r\n            // datacenter information\r\n            loadingDatacenters:true,\r\n            datacenterList:[],\r\n\r\n            // hostname information\r\n            loadingHostnames:true,\r\n            assetNumList:[],\r\n            assetNumToModelList:null,\r\n\r\n            model:\"\",\r\n            hostname:\"\",\r\n            rack:\"\",\r\n            rackU:-1,\r\n            owner:\"\",\r\n            comment:\"\",\r\n            datacenter_name:\"\",\r\n            tags:[],\r\n            network_connections:null,\r\n            power_connections:null,\r\n            asset_number:100000,\r\n\r\n            selectedConnection:null,\r\n\r\n            statusOpen: false,\r\n            statusMessage: \"\",\r\n            statusSeverity:\"\",\r\n\r\n            showModal:false,\r\n\r\n            powerPortState:null,\r\n            leftRight:null,\r\n            availableConnections:false,\r\n\r\n            canSubmit:false,\r\n        }, this.getLists());\r\n    }\r\n\r\n    statusClose = () => {\r\n        this.setState({ statusOpen: false, statusMessage: \"\", statusSeverity:\"\" });\r\n    }\r\n\r\n    validateForm = () => {\r\n        this.setState({ canSubmit:this.validJSON(this.createJSON()) });\r\n    }\r\n\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n\r\n        return (\r\n        <span>\r\n            <Modal\r\n                    aria-labelledby=\"transition-modal-title\"\r\n                    aria-describedby=\"transition-modal-description\"\r\n                    className={classes.modal}\r\n                    open={this.props.open}\r\n                    onClose={this.props.close}\r\n                    closeAfterTransition\r\n                    BackdropComponent={Backdrop}\r\n                    scroll=\"body\"\r\n                    BackdropProps={{\r\n                        timeout: 500,\r\n                    }}\r\n                >\r\n                    <Fade in={this.props.open}>\r\n                    <div className={classes.paper}>\r\n\r\n                    <ExpansionPanel>\r\n                        <ExpansionPanelSummary\r\n                            expandIcon={<ExpandMoreIcon />}\r\n                            aria-controls=\"panel1a-content\"\r\n                            id=\"fields-header\"\r\n                        >\r\n                        <Typography>Asset General Details</Typography>\r\n                        </ExpansionPanelSummary>\r\n                        <ExpansionPanelDetails>\r\n\r\n\r\n                            {(\r\n                            this.state.loadingDatacenters\r\n                            || this.state.loadingModels\r\n                            || this.state.loadingHostnames\r\n                            || this.state.loadingOwners\r\n                            //|| this.state.loadingDetailAsset\r\n                            //&& false\r\n                            ) ? <div className={classes.progress}><CircularProgress /></div> :\r\n                                <form>\r\n                                <Grid container spacing={3}>\r\n                                    <Grid item xs={3}>\r\n                                        <Tooltip placement=\"top\" open={this.state.inputs.model.Tooltip} title={this.state.inputs.model.description}>\r\n                                            <Autocomplete\r\n                                                id=\"select-model\"\r\n                                                options={this.state.modelList}\r\n                                                includeInputInList\r\n                                                defaultValue={this.state.detailAsset.model}\r\n                                                renderInput={params => (\r\n                                                <TextField\r\n                                                    {...params}\r\n                                                    label={this.state.inputs.model.label}\r\n                                                    name={this.state.inputs.model.name}\r\n                                                    onChange={this.updateModel}\r\n                                                    onBlur={this.updateModel}\r\n                                                    variant=\"outlined\"\r\n                                                    fullWidth\r\n                                                    required\r\n\r\n                                                />\r\n                                                )}\r\n                                            />\r\n                                        </Tooltip>\r\n                                    </Grid>\r\n                                    <Grid item xs={3}>\r\n                                        <Tooltip placement=\"top\" open={this.state.inputs.owner.Tooltip} title={this.state.inputs.owner.description}>\r\n                                            <Autocomplete\r\n                                                id=\"select-owner\"\r\n                                                options={this.state.ownerList}\r\n                                                includeInputInList\r\n                                                defaultValue={this.state.detailAsset.owner}\r\n                                                renderInput={params => (\r\n                                                <TextField\r\n                                                    {...params}\r\n                                                    label={this.state.inputs.owner.label}\r\n                                                    name={this.state.inputs.owner.name}\r\n                                                    onChange={this.updateOwner}\r\n                                                    onBlur={this.updateOwner}\r\n                                                    variant=\"outlined\"\r\n                                                    fullWidth\r\n                                                    required\r\n                                                />\r\n                                                )}\r\n                                            />\r\n                                        </Tooltip>\r\n                                    </Grid>\r\n                                    <Grid item xs={3}>\r\n                                        <Tooltip placement=\"top\" open={this.state.inputs.datacenter.Tooltip} title={this.state.inputs.datacenter.description}>\r\n                                            <Autocomplete\r\n                                                id=\"input-datacenter\"\r\n                                                options={this.state.datacenterList}\r\n                                                includeInputInList\r\n                                                defaultValue={this.state.detailAsset.datacenter_name}\r\n                                                renderInput={params => (\r\n                                                <TextField\r\n                                                    {...params}\r\n                                                    label={this.state.inputs.datacenter.label}\r\n                                                    name={this.state.inputs.datacenter.name}\r\n                                                    onChange={this.updateDatacenter}\r\n                                                    onBlur={this.updateDatacenter}\r\n                                                    variant=\"outlined\"\r\n                                                    fullWidth\r\n                                                    required\r\n                                                />\r\n                                                )}\r\n                                            />\r\n                                        </Tooltip>\r\n                                    </Grid>\r\n                                    <Grid item xs={3}>\r\n                                        <Tooltip placement=\"top\" open={this.state.inputs.rack.Tooltip} title={this.state.inputs.rack.description}>\r\n                                            <TextField\r\n                                                id=\"input-rack\"\r\n                                                variant=\"outlined\"\r\n                                                label={this.state.inputs.rack.label}\r\n                                                name={this.state.inputs.rack.name}\r\n                                                onChange={this.updateRack}\r\n                                                required\r\n                                                fullWidth\r\n                                                defaultValue={this.state.detailAsset.rack}\r\n                                            />\r\n                                        </Tooltip>\r\n                                    </Grid>\r\n                                    <Grid item xs={3}>\r\n                                        <Tooltip placement=\"top\" open={this.state.inputs.rackU.Tooltip} title={this.state.inputs.rackU.description}>\r\n                                            <TextField\r\n                                                id=\"input-rackU\"\r\n                                                variant=\"outlined\"\r\n                                                type=\"number\"\r\n                                                InputProps={{ inputProps: { min: 1, max:42} }}\r\n                                                label={this.state.inputs.rackU.label}\r\n                                                name={this.state.inputs.rackU.name}\r\n                                                onChange={this.updateRackU}\r\n                                                required\r\n                                                fullWidth\r\n                                                defaultValue={this.state.detailAsset.rack_position}\r\n                                            />\r\n                                        </Tooltip>\r\n                                    </Grid>\r\n                                    <Grid item xs={3}>\r\n                                        <Tooltip placement=\"top\" open={this.state.inputs.assetNum.Tooltip} title={this.state.inputs.assetNum.description}>\r\n                                            <TextField\r\n                                                id=\"input-asset-number\"\r\n                                                variant=\"outlined\"\r\n                                                type=\"number\"\r\n                                                InputProps={{ inputProps: { min: 100000, max:999999} }}\r\n                                                label={this.state.inputs.assetNum.label}\r\n                                                name={this.state.inputs.assetNum.name}\r\n                                                onChange={this.updateAssetNumber}\r\n                                                required\r\n                                                fullWidth\r\n                                                defaultValue={this.state.detailAsset.asset_number}\r\n                                            />\r\n                                        </Tooltip>\r\n                                    </Grid>\r\n                                    <Grid item xs={3}>\r\n                                        <Tooltip placement=\"top\" open={this.state.inputs.hostname.Tooltip} title={this.state.inputs.hostname.description}>\r\n                                            <TextField\r\n                                                id=\"input-hostname\"\r\n                                                variant=\"outlined\"\r\n                                                label={this.state.inputs.hostname.label}\r\n                                                name={this.state.inputs.hostname.name}\r\n                                                onChange={this.updateHostname}\r\n                                                fullWidth\r\n                                                defaultValue={this.state.detailAsset.hostname}\r\n                                            />\r\n                                        </Tooltip>\r\n                                    </Grid>\r\n                                    <Grid item xs={6}>\r\n                                            <TextField\r\n                                                id=\"input-comment\"\r\n                                                variant=\"outlined\"\r\n                                                label={this.state.inputs.comment.label}\r\n                                                name={this.state.inputs.comment.name}\r\n                                                onChange={this.updateComment}\r\n                                                multiline={true}\r\n                                                fullWidth\r\n                                                defaultValue={this.state.detailAsset.comment}\r\n                                            />\r\n                                    </Grid>\r\n                                </Grid></form>}\r\n                                <StatusDisplay\r\n                                    open={this.statusOpen}\r\n                                    severity={this.statusSeverity}\r\n                                    closeStatus={this.statusClose}\r\n                                    message={this.statusMessage}\r\n                                />\r\n\r\n                        </ExpansionPanelDetails>\r\n                    </ExpansionPanel>\r\n\r\n                    <ExpansionPanel>\r\n                        <ExpansionPanelSummary\r\n                            expandIcon={<ExpandMoreIcon />}\r\n                            aria-controls=\"panel1a-content\"\r\n                            id=\"networks-header\"\r\n                        >\r\n                            <Typography>Asset Network Management</Typography>\r\n                        </ExpansionPanelSummary>\r\n                        <ExpansionPanelDetails>\r\n                            <NetworkGraph\r\n                                vals={{\r\n                                         \"host1\": [ \"host2\", \"host4\", \"host11\" ],\r\n                                         \"host3\": [\"host5\", \"host7\", \"host9\", \"host11\"]\r\n                                    }}\r\n                                host={this.props.hostname}\r\n                            />\r\n                        </ExpansionPanelDetails>\r\n                    </ExpansionPanel>\r\n                    <ExpansionPanel>\r\n                        <ExpansionPanelSummary\r\n                            expandIcon={<ExpandMoreIcon />}\r\n                            aria-controls=\"panel1a-content\"\r\n                            id=\"power-header\"\r\n                        >\r\n                            <Typography>Asset Power Management</Typography>\r\n                        </ExpansionPanelSummary>\r\n                        <ExpansionPanelDetails>\r\n                        </ExpansionPanelDetails>\r\n                    </ExpansionPanel>\r\n                    <Button>\r\n                        Save edits\r\n                    </Button>\r\n                    <Button>\r\n                        Delete asset\r\n                    </Button>\r\n                    <Button>\r\n                        Close without saving\r\n                    </Button>\r\n\r\n\r\n                    </div>\r\n                    </Fade>\r\n                </Modal>\r\n        </span>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default withStyles(useStyles)(DetailAsset);\r\n","import React from 'react';\r\n\r\nimport axios from 'axios';\r\n\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport { MenuItem, TextField } from '@material-ui/core';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nimport { AssetCommand } from '../enums/AssetCommands.ts'\r\nimport getURL from '../../helpers/functions/GetURL';\r\nimport * as AssetConstants from \"../AssetConstants\";\r\nimport * as Constants from '../../Constants';\r\n\r\nconst emptySearch = {\r\n    \"filter\": {\r\n            \"vendor\":null,\r\n            \"model_number\":null,\r\n            \"height\":null,\r\n            \"model\":null,\r\n            \"hostname\":null,\r\n            \"rack\":null,\r\n            \"rack_position\":null,\r\n            \"username\":null,\r\n            \"display_name\":null,\r\n            \"email\":null,\r\n            \"privilege\":null,\r\n            \"model\":null,\r\n            \"hostname\":null,\r\n            \"starting_rack_letter\":null,\r\n            \"ending_rack_letter\":null,\r\n            \"starting_rack_number\":null,\r\n            \"ending_rack_number\":null,\r\n            \"rack\":null,\r\n            \"rack_position\":null\r\n        },\r\n    \"datacenter_name\":\"\",\r\n}\r\n\r\nconst searchPath = \"search/\";\r\n\r\nconst useStyles = theme => ({\r\n    root: {\r\n      flexGrow: 1,\r\n    },\r\n    searchbar: {\r\n        minWidth: \"200px\",\r\n        flexGrow: 1,\r\n    }\r\n}\r\n);\r\n\r\nclass FilterAsset extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            model:\"\",\r\n            hostname:\"\",\r\n            datacenter_id:\"\",\r\n            startingLetter:\"\",\r\n            endingLetter:\"\",\r\n            startingNum:null,\r\n            endingNum:null,\r\n\r\n            loadingModels:true,\r\n            loadingHostnames:true,\r\n            loadingDatacenters:true,\r\n\r\n            modelList:[],\r\n            datacenterList:[],\r\n            hostnamesList:[],\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.search();\r\n        this.getModelList();\r\n        this.getDatacenterList();\r\n        this.getAssetList();\r\n    }\r\n\r\n    getModelList = () => {\r\n        axios.post(\r\n            getURL(Constants.MODELS_MAIN_PATH, searchPath), emptySearch).then(\r\n            response => {\r\n                var models = response.data.models;\r\n                var modelNames = [];\r\n                models.map(model => {\r\n                    var modelKey = model.vendor + \" \" + model.model_number;\r\n                    modelNames.push(modelKey);\r\n                });\r\n                this.setState({ loadingModels: false, modelList: modelNames });\r\n            });\r\n    }\r\n\r\n    getDatacenterList = () => {\r\n        axios.get(\r\n            getURL(Constants.DATACENTERS_MAIN_PATH, \"all/\")).then(\r\n            response => {\r\n                var datacenters = [];\r\n                response.data.datacenters.map(datacenter => datacenters.push(datacenter.name));\r\n                this.setState({ loadingDatacenters: false, datacenterList: datacenters })\r\n            });\r\n    }\r\n\r\n    getAssetList = () => {\r\n        axios.post(\r\n            getURL(Constants.ASSETS_MAIN_PATH, searchPath),emptySearch).then(\r\n            response => {\r\n                var instances = response.data.instances;\r\n                var hostnames = [];\r\n                instances.map(instance => {\r\n                    hostnames.push(instance.asset_number);\r\n                })\r\n                this.setState({ loadingHostnames: false, hostnamesList: hostnames });\r\n            });\r\n    }\r\n\r\n    updateModel = (event) => {\r\n        this.setState({ model: event.target.value }, () => { this.search() });\r\n    }\r\n\r\n    updateHostname = (event) => {\r\n        this.setState({ hostname: event.target.value }, () => { this.search() });\r\n    }\r\n\r\n    updateDatacenter = (event) => {\r\n        this.setState({ datacenter_id: event.target.value }, () => { this.search() });\r\n    }\r\n\r\n    updateStartingLetter = (event) => {\r\n        this.setState({ startingLetter: event.target.value }, () => { this.search() });\r\n    }\r\n\r\n    updateEndingLetter = (event) => {\r\n        this.setState({ endingLetter: event.target.value }, () => { this.search() });\r\n    }\r\n\r\n    updateStartingNum = (event) => {\r\n        this.setState({ startingNum: event.target.value }, () => { this.search() });\r\n    }\r\n\r\n    updateEndingNum = (event) => {\r\n        this.setState({ endingNum: event.target.value }, () => { this.search() });\r\n    }\r\n\r\n    getSearchJSON = () => {\r\n        return {\r\n            \"datacenter_name\":this.state.datacenter_id,\r\n            \"filters\": {\r\n                \"model\":this.state.model,\r\n                \"hostname\":this.state.hostname,\r\n                \"starting_rack_letter\":this.state.startingLetter,\r\n                \"ending_rack_letter\":this.state.endingLetter,\r\n                \"starting_rack_number\":this.state.startingNum,\r\n                \"ending_rack_number\":this.state.endingNum\r\n            }\r\n        }\r\n    }\r\n\r\n    search = () => {\r\n        axios.post(\r\n            getURL(AssetConstants.ASSETS_MAIN_PATH, AssetCommand.search), this.getSearchJSON()\r\n            ).then(response => {\r\n                this.props.updateItems(response.data.instances);\r\n            });\r\n    }\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <Grid container spacing={3} className={classes.root}>\r\n                    <Grid item xs={3}>\r\n                        <FormControl>\r\n                            {this.state.loadingDatacenters ? <CircularProgress /> :\r\n                            <Autocomplete\r\n                                id=\"select-datacenter\"\r\n                                options={this.state.datacenterList}\r\n                                includeInputInList\r\n                                renderInput={params => (\r\n                                <TextField\r\n                                    {...params}\r\n                                    className={classes.searchbar}\r\n                                    name={\"select-datacenter\"}\r\n                                    placeholder=\"datacenter\"\r\n                                    fullWidth\r\n                                />\r\n                                )}\r\n                            />}\r\n                            <FormHelperText>Filter by Datacenter</FormHelperText>\r\n                        </FormControl>\r\n                    </Grid>\r\n                    <Grid item xs={3}>\r\n                        <FormControl>\r\n                            {this.state.loadingModels ? <CircularProgress /> :\r\n                            <Autocomplete\r\n                                id=\"select-model\"\r\n                                options={this.state.modelList}\r\n                                includeInputInList\r\n                                renderInput={params => (\r\n                                <TextField\r\n                                    className={classes.searchbar}\r\n                                    {...params}\r\n                                    name={\"select-model\"}\r\n                                    placeholder=\"model\"\r\n                                    fullWidth\r\n                                />\r\n                                )}\r\n                            />}\r\n                            <FormHelperText>Filter by model</FormHelperText>\r\n                        </FormControl>\r\n                    </Grid>\r\n                    <Grid item xs={6}>\r\n                        <FormControl>\r\n                            {this.state.loadingHostnames ? <CircularProgress /> :\r\n                            <Autocomplete\r\n                                id=\"select-hostname\"\r\n                                options={this.state.hostnameList}\r\n                                includeInputInList\r\n                                renderInput={params => (\r\n                                <TextField\r\n                                    {...params}\r\n                                    className={classes.searchbar}\r\n                                    name={\"select-hostname\"}\r\n                                    placeholder=\"hostname\"\r\n                                    fullWidth\r\n                                />\r\n                                )}\r\n                            />}\r\n                            <FormHelperText>Filter by hostname</FormHelperText>\r\n                        </FormControl>\r\n                    </Grid>\r\n                    <Grid item xs={1}>\r\n                        <FormControl>\r\n                                <Select\r\n                                    id=\"starting-letter-selector\"\r\n                                    value={this.state.startingRackLetter}\r\n                                    onChange={this.changeStartingLetter}\r\n                                >\r\n                                    {Constants.RackX.map(val => (<MenuItem value={val}>{val}</MenuItem>))}\r\n                                </Select>\r\n                                <FormHelperText>Starting Letter</FormHelperText>\r\n                        </FormControl>\r\n                    </Grid>\r\n                    <Grid item xs={1}>\r\n                        <FormControl>\r\n                                <Select\r\n                                    id=\"ending-letter-selector\"\r\n                                    value={this.state.endingRackLetter}\r\n                                    onChange={this.changeEndingLetter}\r\n                                >\r\n                                    {Constants.RackX.map(val => (<MenuItem value={val}>{val}</MenuItem>))}\r\n                                </Select>\r\n                                <FormHelperText>Ending Letter</FormHelperText>\r\n                        </FormControl>\r\n                    </Grid>\r\n                    <Grid item xs={1}>\r\n                        <FormControl>\r\n                                <TextField\r\n                                    id=\"starting-num-selector\"\r\n                                    type=\"number\"\r\n                                    value={this.state.startingRackNumber}\r\n                                    onChange={this.changeStartingNum}\r\n                                    InputProps={{ inputProps: { min: 1} }}\r\n                                />\r\n                                <FormHelperText>Starting Number</FormHelperText>\r\n                        </FormControl>\r\n                    </Grid>\r\n                    <Grid item xs={1}>\r\n                        <FormControl>\r\n                                <TextField\r\n                                    id=\"ending-num-selector\"\r\n                                    type=\"number\"\r\n                                    value={this.state.endingRackNumber}\r\n                                    onChange={this.changeEndingNum}\r\n                                    InputProps={{ inputProps: { min: 1} }}\r\n                                />\r\n                                <FormHelperText>Ending Number</FormHelperText>\r\n                        </FormControl>\r\n                    </Grid>\r\n                </Grid>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withStyles(useStyles)(FilterAsset);\r\n","export default function descendingComparator(a, b, orderBy) {\r\n    if (b[orderBy] < a[orderBy]) {\r\n      return -1;\r\n    }\r\n    if (b[orderBy] > a[orderBy]) {\r\n      return 1;\r\n    }\r\n    return 0;\r\n  }\r\n","import React from 'react';\r\n\r\nimport axios from 'axios';\r\n\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport { Button } from '@material-ui/core';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\r\n\r\nimport { AssetInput } from '../enums/AssetInputs.ts';\r\nimport { AssetCommand } from '../enums/AssetCommands.ts';\r\nimport getURL from '../../helpers/functions/GetURL';\r\nimport * as AssetConstants from \"../AssetConstants\";\r\nimport DetailAsset from \"./DetailsAsset\";\r\nimport FilterAsset from './FilterAsset';\r\nimport stableSort from \"../../helpers/functions/StableSort\";\r\nimport getComparator from \"../../helpers/functions/GetComparator\";\r\nimport { Privilege } from \"../../enums/privilegeTypes.ts\";\r\n\r\n\r\nconst useStyles = theme => ({\r\n\tstyledTableRow: {\r\n\t'&:nth-of-type(odd)': {\r\n\t\tbackgroundColor: theme.palette.primary.light,\r\n\t},\r\n\t},\r\n\ttableCellHead: {\r\n\t\tbackgroundColor: theme.palette.primary.light,\r\n\t\tcolor: theme.palette.common.white,\r\n\t},\r\n\tstyledTableCell:{\r\n\t\tfontSize: 14,\r\n\t},\r\n\ttable: {\r\n\t\tminWidth: 700,\r\n\t},\r\n  \tpaper: {\r\n\t\twidth: '100%',\r\n\t\tmarginBottom: theme.spacing(2),\r\n\t},\r\n\tvisuallyHidden: {\r\n\t\tborder: 0,\r\n\t\tclip: 'rect(0 0 0 0)',\r\n\t\theight: 1,\r\n\t\tmargin: -1,\r\n\t\toverflow: 'hidden',\r\n\t\tpadding: 0,\r\n\t\tposition: 'absolute',\r\n\t\ttop: 20,\r\n\t\twidth: 1,\r\n\t  },\r\n});\r\n\r\nfunction createData(model, hostname, datacenter, rack, rackU, owner, assetNum) {\r\n  return { model, hostname, datacenter, rack, rackU, owner, assetNum };\r\n}\r\n\r\nconst headCells = [\r\n\t{ id: 'datacenter', numeric: false, label:\"Datacenter\", align:\"left\" },\r\n\t{ id: 'hostname', numeric: false, label:\"Hostname\", align:\"left\" },\r\n\t{ id: 'model', numeric: false, label:\"Model\", align:\"left\" },\r\n\t{ id: 'rack', numeric: false, label:\"Location\", align:\"left\" },\r\n\t{ id: 'owner', numeric: false, label:\"Owner\", align:\"left\" },\r\n\t{ id: 'assetNumber', numeric: false, label:\"Asset Number\", align:\"right\" },\r\n];\r\n\r\nconst testRows = [\r\n\tcreateData('Frozen yoghurt', 159, 6.0, 24, 4.0),\r\n\tcreateData('Ice cream sandwich', 237, 9.0, 37, 4.3),\r\n\tcreateData('Eclair', 262, 16.0, 24, 6.0),\r\n\tcreateData('Cupcake', 305, 3.7, 67, 4.3),\r\n\tcreateData('Gingerbread', 356, 16.0, 49, 3.9),\r\n  ];\r\n\r\n\r\nclass TableAsset extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n\t  tableItems:[],\r\n\r\n\t  detailStatusOpen:false,\r\n\t  detailStatusSeverity:'',\r\n\t  detailStatusMessage:'',\r\n\r\n\t  deleteAssetRack:'',\r\n\t  deleteAssetrack_position:'',\r\n\r\n\t  showDetailedView: false,\r\n\t  detailViewLoading:false,\r\n\t  detailAsset:-1,\r\n\t  detailHostname:\"\",\r\n\t  originalRack:'',\r\n\t  originalrack_position:'',\r\n\r\n\t  order:\"asc\",\r\n\t  orderBy:\"datacenter\",\r\n    };\r\n  }\r\n\r\n\teditAsset = () => {\r\n\t\tlet body = this.state.detailedValues.getAssetAsJSON();\r\n\t\tbody[AssetInput.RACK_ORIGINAL] = this.state.originalRack;\r\n\t\tbody[AssetInput.RACK_U_ORIGINAL] = this.state.originalrack_position;\r\n\t\taxios.post(\r\n\t\t\tgetURL(AssetConstants.ASSETS_MAIN_PATH, AssetCommand.edit),body\r\n\t\t\t).then(response => {\r\n\t\t\t\tif (response.data.message === AssetConstants.SUCCESS_TOKEN) {\r\n\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\tshowStatus: true,\r\n\t\t\t\t\t\tstatusMessage: \"Successfully edited asset\",\r\n\t\t\t\t\t\tstatusSeverity:AssetConstants.SUCCESS_TOKEN,\r\n\t\t\t\t\t\tdetailedValues : null,\r\n\t\t\t\t\t\tshowDetailedView:false,\r\n\t\t\t\t\t});\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.setState({ detailStatusOpen: true, detailStatusMessage: response.data.message, detailStatusSeverity:AssetConstants.ERROR_TOKEN })\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t}\r\n\r\n\r\n\tdeleteAsset = () => {\r\n\t\tvar body = {};\r\n\t\tbody[AssetInput.RACK] = this.state.originalRack;\r\n\t\tbody[AssetInput.RACK_U] = this.state.originalrack_position;\r\n\r\n\t\taxios.post(\r\n\t\t\tgetURL(AssetConstants.ASSETS_MAIN_PATH, AssetCommand.delete), body\r\n\t\t\t).then(response => {\r\n\t\t\t\tif (response.data.message === AssetConstants.SUCCESS_TOKEN) {\r\n\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\tshowStatus: true,\r\n\t\t\t\t\t\tstatusMessage: \"Successfully deleted asset\",\r\n\t\t\t\t\t\tstatusSeverity:AssetConstants.SUCCESS_TOKEN,\r\n\t\t\t\t\t\toriginalRack:'',\r\n\t\t\t\t\t\toriginalrack_position:'',\r\n\t\t\t\t\t\tshowDetailedView:false\r\n\t\t\t\t\t});\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.setState({ showStatus: true, statusMessage: response.data.message, statusSeverity:AssetConstants.ERROR_TOKEN })\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t}\r\n\r\n\tgetAssetDetails = (rack, rack_position) => {\r\n\t\tthis.setState({ detailViewLoading: true });\r\n\r\n\t\tvar body = {};\r\n\t\tbody[AssetInput.RACK] = rack;\r\n\t\tbody[AssetInput.RACK_U] = rack_position;\r\n\r\n\t\taxios.post(\r\n\t\t\tgetURL(AssetConstants.ASSETS_MAIN_PATH, AssetCommand.detailView), body\r\n\t\t\t).then(response => this.setState({ detailedValues: response.data['assets'][0], detailViewLoading:false}));\r\n\t}\r\n\r\n\tcloseDetailedView = () => {\r\n\t\tthis.setState({ showDetailedView: false })\r\n\t}\r\n\r\n\tcloseShowStatus = () => {\r\n\t\tthis.setState({ showStatus: false })\r\n\t}\r\n\r\n\tcreateSortHandler = (event, property) => {\r\n\t\tconst isAsc = this.state.orderBy === property && this.state.order === 'asc';\r\n\t\tthis.setState({ order: isAsc ? 'desc' : 'asc', orderBy:property });\r\n\t}\r\n\r\n\topenDetailedView = (event, assetNum, hostname) => {\r\n\t\tthis.setState({ detailAsset: assetNum, showDetailedView: true, detailHostname:hostname });\r\n\t}\r\n\r\n\tupdateItems(assets) {\r\n\t\tvar items = [];\r\n\r\n\t\tassets.map(asset => {\r\n\t\t\titems.push(createData(asset.model, asset.hostname, asset.datacenter_id, asset.rack, asset.rack_position, asset.owner, asset.asset_number));\r\n\t\t});\r\n\r\n\t\tthis.setState({ tableItems : items });\r\n\t}\r\n\r\n\trender() {\r\n\tconst { classes } = this.props;\r\n\r\n\treturn (\r\n\t\t<React.Fragment>\r\n\t\t\t<Grid container spacing={3}>\r\n\t\t\t\t<Grid item xs={6}>\r\n\t\t\t\t\t<FilterAsset\r\n\t\t\t\t\t\tupdateItems={this.updateItems}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</Grid>\r\n\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t<TableContainer component={Paper}>\r\n\t\t\t\t\t\t<Table className={classes.table} aria-label=\"customized table\">\r\n\t\t\t\t\t\t\t<TableHead>\r\n\t\t\t\t\t\t\t<TableRow className={classes.styledTableRow}>\r\n\t\t\t\t\t\t\t{headCells.map(headCell => (\r\n\t\t\t\t\t\t\t\t<TableCell\r\n\t\t\t\t\t\t\t\t\tclassName={classes.tableCellHead}\r\n\t\t\t\t\t\t\t\t\tkey={headCell.id}\r\n\t\t\t\t\t\t\t\t\talign={headCell.align}\r\n\t\t\t\t\t\t\t\t\tsortDirection={this.state.orderBy === headCell.id ? this.state.order : false}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t<TableSortLabel\r\n\t\t\t\t\t\t\t\t\t\tactive={this.state.orderBy === headCell.id}\r\n\t\t\t\t\t\t\t\t\t\tdirection={this.state.orderBy === headCell.id ? this.state.order : 'asc'}\r\n\t\t\t\t\t\t\t\t\t\tonClick={(event) => {this.createSortHandler(event, headCell.id)} }\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t{headCell.label}\r\n\t\t\t\t\t\t\t\t\t{this.state.orderBy === headCell.id ? (\r\n\t\t\t\t\t\t\t\t\t\t<span className={classes.visuallyHidden}>\r\n\t\t\t\t\t\t\t\t\t\t\t{this.state.order === 'desc' ? 'sorted descending' : 'sorted ascending'}\r\n\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t) : null}\r\n\t\t\t\t\t\t\t\t\t</TableSortLabel>\r\n\t\t\t\t\t\t\t\t</TableCell>\r\n\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t\t<TableCell align=\"left\" className={classes.tableCellHead}>{\"\"}</TableCell>\r\n\t\t\t\t\t\t\t</TableRow>\r\n\t\t\t\t\t\t\t</TableHead>\r\n\t\t\t\t\t\t\t<TableBody>\r\n\r\n\r\n\t\t\t\t\t\t\t\t{stableSort(this.state.tableItems, getComparator(this.state.order, this.state.orderBy))\r\n\t\t\t\t\t\t\t\t\t//.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n\t\t\t\t\t\t\t\t\t.map((row, index) => {\r\n\t\t\t\t\t\t\t\t\t\tconst labelId = `enhanced-table-checkbox-${index}`;\r\n\r\n\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t<TableRow\r\n\t\t\t\t\t\t\t\t\t\t\t\thover\r\n\t\t\t\t\t\t\t\t\t\t\t\ttabIndex={-1}\r\n\t\t\t\t\t\t\t\t\t\t\t\tkey={row.assetNum}\r\n\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<TableCell component=\"th\" id={labelId} scope=\"row\">{row.model}</TableCell>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<TableCell align=\"left\">{row.hostname}</TableCell>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<TableCell align=\"left\">{row.datacenter}</TableCell>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<TableCell align=\"left\">{row.rack + \" U\" + row.rackU}</TableCell>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<TableCell align=\"left\">{row.owner}</TableCell>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<TableCell align=\"right\">{row.assetNum}</TableCell>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<TableCell align=\"center\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tvariant=\"contained\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={(event) => {this.openDetailedView(event, row.assetNum, row.hostname)}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tMore Details\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</TableCell>\r\n\t\t\t\t\t\t\t\t\t\t\t</TableRow>\r\n\t\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t\t{/*emptyRows > 0 && (\r\n\t\t\t\t\t\t\t\t\t\t<TableRow style={{ height: (dense ? 33 : 53) * emptyRows }}>\r\n\t\t\t\t\t\t\t\t\t\t<TableCell colSpan={6} />\r\n\t\t\t\t\t\t\t\t\t\t</TableRow>\r\n\t\t\t\t\t\t\t\t\t)*/}\r\n\t\t\t\t\t\t\t</TableBody>\r\n\t\t\t\t\t\t</Table>\r\n\t\t\t\t\t</TableContainer>\r\n\t\t\t\t</Grid>\r\n\t\t\t</Grid>\r\n\t\t<DetailAsset\r\n\t\t\topen={this.state.showDetailedView}\r\n\t\t\tclose={this.closeDetailedView}\r\n\t\t\tsearch={this.search}\r\n\t\t\tdisabled={this.props.privilege===Privilege.USER /* && username !== row.owner*/}\r\n\t\t\tasset={this.state.detailAsset}\r\n\t\t\thostname={this.state.detailHostname}\r\n\t\t/>\r\n\t\t</React.Fragment>\r\n\t);\r\n  }\r\n}\r\n\r\nexport default withStyles(useStyles)(TableAsset);\r\n","export enum DatacenterCommand {\r\n    GET_ALL_DATACENTERS = \"all/\",\r\n    CREATE = \"create/\",\r\n    EDIT = \"edit/\",\r\n    DELETE = \"delete/\",\r\n}\r\n","import descendingComparator from \"./DescendingComparator\";\r\n\r\nexport default function getComparator(order, orderBy) {\r\n    return order === 'desc'\r\n      ? (a, b) => descendingComparator(a, b, orderBy)\r\n      : (a, b) => -descendingComparator(a, b, orderBy);\r\n  }\r\n","export default function stableSort(array, comparator) {\r\n    const stabilizedThis = array.map((el, index) => [el, index]);\r\n    stabilizedThis.sort((a, b) => {\r\n      const order = comparator(a[0], b[0]);\r\n      if (order !== 0) return order;\r\n      return a[1] - b[1];\r\n    });\r\n    return stabilizedThis.map(el => el[0]);\r\n  }\r\n","import React from 'react';\r\n\r\nexport default class ErrorBoundary extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = { hasError: false };\r\n    }\r\n\r\n    static getDerivedStateFromError(error) {\r\n      // Update state so the next render will show the fallback UI.\r\n      return \"An unforseen error occurred. Please refresh the page and try again later.\";\r\n    }\r\n\r\n    componentDidCatch(error, errorInfo) {\r\n      // You can also log the error to an error reporting service\r\n      //logErrorToMyService(error, errorInfo);\r\n    }\r\n\r\n    render() {\r\n      if (this.state.hasError) {\r\n        // You can render any custom fallback UI\r\n        return <h1>Something went wrong.</h1>;\r\n      }\r\n\r\n      return this.props.children;\r\n    }\r\n}\r\n","import React from 'react';\r\n\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nimport { Privilege } from '../../enums/privilegeTypes.ts'\r\nimport ImpExpAsset from '../helpers/ImpExpAsset';\r\nimport CreateAsset from '../helpers/CreateAsset';\r\nimport StatusDisplay from '../../helpers/StatusDisplay';\r\nimport TableAsset from '../helpers/TableAssets';\r\nimport ErrorBoundary from '../../errors/ErrorBoundry';\r\nimport \"../stylesheets/AssetStyles.css\";\r\n\r\nexport default class AssetsView extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            statusSeverity:'',\r\n            statusMessage:'',\r\n            showStatus:false,\r\n        };\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        console.log(\"updated\");\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <ErrorBoundary>\r\n                    <StatusDisplay\r\n                        open={this.state.showStatus}\r\n                        severity={this.state.statusSeverity}\r\n                        closeStatus={this.closeShowStatus}\r\n                        message={this.state.statusMessage}\r\n                    />\r\n                    <Grid container spacing={3}>\r\n                        <Grid item xs={3}>\r\n                            {(this.props.privilege === Privilege.ADMIN) ? <CreateAsset />:null}\r\n                        </Grid>\r\n                        <Grid item xs={6}>\r\n                            {(this.props.privilege === Privilege.ADMIN) ? <ImpExpAsset downloadTable={this.downloadTable} />:null}\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <TableAsset />\r\n                        </Grid>\r\n                    </Grid>\r\n                </ErrorBoundary>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React from \"react\";\r\n\r\nimport axios from \"axios\";\r\n\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from '@material-ui/core/Button';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport * as Constants from \"../../Constants\";\r\nimport { DatacenterCommand } from \"../enums/DatacenterCommands\";\r\nimport getURL from \"../../helpers/functions/GetURL\";\r\n\r\nconst useStyles = theme => ({\r\n    root: {\r\n      width: '100%',\r\n    },\r\n    modal: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    paper: {\r\n        backgroundColor: theme.palette.background.paper,\r\n        border: '2px solid #000',\r\n        boxShadow: theme.shadows[5],\r\n        padding: theme.spacing(2, 4, 3),\r\n    },\r\n  });\r\n\r\nclass CreateDatacenter extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            showCreate:false,\r\n\r\n            datacenterName:\"\",\r\n            datacenterAbbreviation:\"\",\r\n        };\r\n    }\r\n\r\n    generateCreateJSON = () => {\r\n        return {\r\n            \"abbreviation\" : this.state.datacenterAbbreviation,\r\n            \"datacenter_name\": this.state.datacenterName\r\n        }\r\n    }\r\n\r\n    createDatacenter = () => {\r\n        axios.post(\r\n            getURL(Constants.DATACENTERS_MAIN_PATH, DatacenterCommand.CREATE), this.generateCreateJSON()).then(\r\n            response => {\r\n                if (response.status === Constants.HTTPS_STATUS_OK) {\r\n                    this.setState({\r\n                        showCreate: false,\r\n                        datacenterName:\"\",\r\n                        datacenterAbbreviation:\"\",\r\n                    }, () => this.props.search());\r\n                } else {\r\n                    this.setState({\r\n                    })\r\n                }\r\n            });\r\n    }\r\n\r\n    updateDatacenterName = (event) => {\r\n        this.setState({ datacenterName: event.target.value });\r\n    }\r\n\r\n    updateDatacenterAbbrevation = (event) => {\r\n        this.setState({ datacenterAbbreviation: this.getAbbreviation(event.target.value) });\r\n    }\r\n\r\n    getAbbreviation = (val) => {\r\n        if (val.length > 6) {\r\n            return val.substring(0,7);\r\n        }\r\n\r\n        return val;\r\n    }\r\n\r\n    showCreate = () => {\r\n        this.setState({ showCreate: true });\r\n    }\r\n\r\n    closeCreate = () => {\r\n        this.setState({\r\n            showCreate: false,\r\n            datacenterName:\"\",\r\n            datacenterAbbreviation:\"\",\r\n         });\r\n    }\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n\r\n        return (\r\n            <React.Fragment>\r\n            <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                onClick={() => {this.showCreate()} }\r\n            >\r\n                Create New Datacenter\r\n            </Button>\r\n            <Modal\r\n                aria-labelledby=\"transition-modal-title\"\r\n                aria-describedby=\"transition-modal-description\"\r\n                className={classes.modal}\r\n                open={this.state.showCreate}\r\n                onClose={this.closeCreate}\r\n                closeAfterTransition\r\n                BackdropComponent={Backdrop}\r\n                scroll=\"body\"\r\n                BackdropProps={{\r\n                    timeout: 500,\r\n                }}\r\n            >\r\n                <Fade in={this.state.showCreate}>\r\n                    <div className={classes.paper}>\r\n                        <Grid container spacing={3}>\r\n                            <Grid item xs={2}>\r\n                                <Typography>Datcenter Name:</Typography>\r\n                            </Grid>\r\n                            <Grid item xs={9}>\r\n                                <TextField\r\n                                    id=\"input-rack\"\r\n                                    variant=\"outlined\"\r\n                                    label={\"datacenter-name\"}\r\n                                    name={\"datacenter-name\"}\r\n                                    onChange={this.updateDatacenterName}\r\n                                    required\r\n                                    fullWidth\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={2}>\r\n                                <Typography>Datcenter Abbreviation:</Typography>\r\n                            </Grid>\r\n                            <Grid item xs={9}>\r\n                                <Tooltip placement=\"top\" title={\"Max 6 characters\"}>\r\n                                    <TextField\r\n                                        id=\"input-rack\"\r\n                                        variant=\"outlined\"\r\n                                        label={\"datacenter-abbreviation\"}\r\n                                        name={\"datacenter-abbreviation\"}\r\n                                        onChange={this.updateDatacenterAbbrevation}\r\n                                        value={this.state.datacenterAbbreviation}\r\n                                        required\r\n                                        fullWidth\r\n                                    />\r\n                                </Tooltip>\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                            <Button\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                type=\"submit\"\r\n                                disabled={!(this.state.datacenterAbbreviation && this.state.datacenterName)}\r\n                                onClick={() => { this.createDatacenter() }}\r\n                            >\r\n                                Create Datacenter\r\n                            </Button>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </div>\r\n                </Fade>\r\n            </Modal>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withStyles(useStyles)(CreateDatacenter);\r\n","export enum RackCommand {\r\n    GET_ALL_RACKS = \"all\",\r\n    CREATE_RACKS = \"create\",\r\n    DELETE_RACKS = \"delete\",\r\n    GET_RACK_DETAILS = \"details\"\r\n}\r\n","import React from \"react\";\r\n\r\nimport axios from \"axios\";\r\n\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from '@material-ui/core/Button';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport * as Constants from \"../../Constants\";\r\nimport { DatacenterCommand } from \"../enums/DatacenterCommands\";\r\nimport getURL from \"../../helpers/functions/GetURL\";\r\n\r\nconst useStyles = theme => ({\r\n    root: {\r\n      width: '100%',\r\n    },\r\n    modal: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    paper: {\r\n        backgroundColor: theme.palette.background.paper,\r\n        border: '2px solid #000',\r\n        boxShadow: theme.shadows[5],\r\n        padding: theme.spacing(2, 4, 3),\r\n    },\r\n  });\r\n\r\nclass EditDatacenter extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            datacenterName:props.dcName,\r\n            datacenterAbbreviation:props.dcAbbrev,\r\n\t\t};\r\n\r\n\t}\r\n\r\n    generateEditJSON = () => {\r\n\t\tconsole.log(\"generating edit\")\r\n\t\tconsole.log(this.props.dcName);\r\n        return {\r\n\t\t\t\"nameOriginal\": this.props.dcName,\r\n            \"abbreviation\" : this.state.datacenterAbbreviation||this.props.dcAbbrev,\r\n            \"datacenter_name\": this.state.datacenterName||this.props.dcName,\r\n        }\r\n    }\r\n\r\n    editDatacenter = () => {\r\n\t\tconsole.log(\"sending\");\r\n\t\tconsole.log(this.state.datacenterName);\r\n        axios.post(\r\n            getURL(Constants.DATACENTERS_MAIN_PATH, DatacenterCommand.EDIT), this.generateEditJSON()).then(\r\n            response => {\r\n                console.log(response);\r\n                if (response.status === Constants.HTTPS_STATUS_OK) {\r\n                    this.setState({\r\n                        datacenterName:\"\",\r\n                        datacenterAbbreviation:\"\",\r\n                    }, () => {this.props.search(); this.props.close() } );\r\n                } else {\r\n                    this.setState({\r\n                    })\r\n                }\r\n            });\r\n    }\r\n\r\n    updateDatacenterName = (event) => {\r\n        this.setState({ datacenterName: event.target.value });\r\n    }\r\n\r\n    updateDatacenterAbbrevation = (event) => {\r\n        this.setState({ datacenterAbbreviation: this.getAbbreviation(event.target.value) });\r\n    }\r\n\r\n    getAbbreviation = (val) => {\r\n        if (val.length > 6) {\r\n            return val.substring(0,7);\r\n        }\r\n\r\n        return val;\r\n\t}\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n\r\n        return (\r\n            <React.Fragment>\r\n            <Modal\r\n                aria-labelledby=\"transition-modal-title\"\r\n                aria-describedby=\"transition-modal-description\"\r\n                className={classes.modal}\r\n                open={this.props.show}\r\n                onClose={this.props.close}\r\n                closeAfterTransition\r\n                BackdropComponent={Backdrop}\r\n                scroll=\"body\"\r\n                BackdropProps={{\r\n                    timeout: 500,\r\n                }}\r\n            >\r\n                <Fade in={this.props.show}>\r\n                    <div className={classes.paper}>\r\n                        <Grid container spacing={3}>\r\n                            <Grid item xs={2}>\r\n                                <Typography>Datcenter Name:</Typography>\r\n                            </Grid>\r\n                            <Grid item xs={9}>\r\n                                <TextField\r\n                                    id=\"input-rack\"\r\n                                    variant=\"outlined\"\r\n                                    label={\"datacenter-name\"}\r\n                                    name={\"datacenter-name\"}\r\n\t\t\t\t\t\t\t\t\tonChange={this.updateDatacenterName}\r\n\t\t\t\t\t\t\t\t\tvalue={this.state.datacenterName||this.props.dcName}\r\n                                    required\r\n\t\t\t\t\t\t\t\t\tfullWidth\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={2}>\r\n                                <Typography>Datcenter Abbreviation:</Typography>\r\n                            </Grid>\r\n                            <Grid item xs={9}>\r\n                                <Tooltip placement=\"top\" title={\"Max 6 characters\"}>\r\n                                    <TextField\r\n                                        id=\"input-rack\"\r\n                                        variant=\"outlined\"\r\n                                        label={\"datacenter-abbreviation\"}\r\n                                        name={\"datacenter-abbreviation\"}\r\n                                        onChange={this.updateDatacenterAbbrevation}\r\n\t\t\t\t\t\t\t\t\t\tvalue={this.state.datacenterAbbreviation||this.props.dcAbbrev}\r\n                                        required\r\n\t\t\t\t\t\t\t\t\t\tfullWidth\r\n                                    />\r\n                                </Tooltip>\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\tvariant=\"contained\"\r\n\t\t\t\t\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t\t\t\t\t\ttype=\"submit\"\r\n\t\t\t\t\t\t\t\t\tonClick={() => { this.editDatacenter() }}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\tSave Edits\r\n\t\t\t\t\t\t\t\t</Button>\r\n                            </Grid>\r\n\t\t\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\tvariant=\"contained\"\r\n\t\t\t\t\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t\t\t\t\t\tonClick={this.props.close}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\tCancel\r\n\t\t\t\t\t\t\t\t</Button>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </div>\r\n                </Fade>\r\n            </Modal>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withStyles(useStyles)(EditDatacenter);\r\n","import React from 'react';\r\n\r\nimport axios from 'axios';\r\n\r\nimport Select from '@material-ui/core/Select';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport { MenuItem, Button, TextField } from '@material-ui/core';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport Fade from '@material-ui/core/Fade';\r\n\r\nimport { RackCommand } from \"../enums/RackCommands.ts\";\r\nimport { Privilege } from '../../enums/privilegeTypes.ts';\r\nimport \"../stylesheets/RackStyles.css\";\r\n\r\nimport getURL from '../../helpers/functions/GetURL';\r\nimport * as Constants from '../../Constants';\r\nimport StatusDisplay from '../../helpers/StatusDisplay';\r\nimport ErrorBoundray from '../../errors/ErrorBoundry';\r\n\r\nconst racksMainPath = 'racks/';\r\n\r\nconst useStyles = theme => ({\r\n    root: {\r\n      width: '100%',\r\n    },\r\n    heading: {\r\n      fontSize: theme.typography.pxToRem(15),\r\n      fontWeight: theme.typography.fontWeightRegular,\r\n    },\r\n    modal: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n      },\r\n      paper: {\r\n        backgroundColor: theme.palette.background.paper,\r\n        border: '2px solid #000',\r\n        boxShadow: theme.shadows[5],\r\n        padding: theme.spacing(2, 4, 3),\r\n      },\r\n  });\r\n\r\nclass RacksView extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            items: [],\r\n            firstRack: 'A1',\r\n            secondRack: 'A1',\r\n\r\n            showStatus: false,\r\n            statusMessage: '',\r\n            statusSeverity: 'info',\r\n\r\n            showConfirmationBox: false,\r\n\r\n            racksList: [],\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getAllRacks();\r\n    }\r\n\r\n    handleFormat = (event, newFormats) => {\r\n        if (newFormats.length) {\r\n            this.setState({formats: newFormats});\r\n        }\r\n    };\r\n\r\n    getAllRacks = () => {\r\n        axios.get(getURL(racksMainPath, RackCommand.GET_ALL_RACKS)).then(response => {\r\n                if (response.data.message === 'success') {\r\n                    this.setState({ showStatus: true, statusMessage: \"Success\", statusSeverity:\"success\", racksList:response.data.racks })\r\n                } else {\r\n                    this.setState({ showStatus: true, statusMessage: response.data.message, statusSeverity:\"error\" })\r\n                }\r\n            });\r\n    }\r\n\r\n    updateRacks(command) {\r\n        axios.post(\r\n            getURL(racksMainPath, command),\r\n            {\r\n                'start_letter':this.state.startingRackLetter,\r\n                'stop_letter':this.state.endingRackLetter,\r\n                'start_number':this.state.startingRackNumber,\r\n                'stop_number':this.state.endingRackNumber,\r\n                \"datacenter_name\": this.props.datacenter,\r\n            }\r\n            ).then(response => {\r\n                if (response.data.message === 'success') {\r\n                    this.setState({ showStatus: true, statusMessage: \"Success\", statusSeverity:\"success\", showConfirmationBox:false });\r\n                    if (command === RackCommand.GET_RACK_DETAILS) {\r\n                        const win = window.open(response.data.link, '_blank');\r\n                        if (win != null) {\r\n                            win.focus();\r\n                        }\r\n                    }\r\n                } else {\r\n                    this.setState({ showStatus: true, statusMessage: response.data.message, statusSeverity:\"error\" })\r\n                }\r\n            });\r\n    }\r\n\r\n    createRacks = () => {\r\n        this.updateRacks(RackCommand.CREATE_RACKS);\r\n    }\r\n\r\n    deleteRacks = () => {\r\n        this.updateRacks(RackCommand.DELETE_RACKS);\r\n    }\r\n\r\n    viewRacks = () => {\r\n        this.updateRacks(RackCommand.GET_RACK_DETAILS);\r\n    }\r\n\r\n    changeStartingRack = (event) => {\r\n        this.setState({ firstRack: event.target.value })\r\n    }\r\n\r\n    changeEndingRack = (event) => {\r\n        this.setState({ secondRack: event.target.value })\r\n    }\r\n\r\n    closeShowStatus = () => {\r\n        this.setState({ showStatus: false })\r\n    }\r\n\r\n    changeRackType = (type) => {\r\n        this.setState({ rackType: type})\r\n    }\r\n\r\n    closeConfirmationBox = () => {\r\n        this.setState({ showConfirmationBox: false });\r\n    }\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n        return (\r\n            <ErrorBoundray>\r\n                <Grid container>\r\n                    <Grid item xs={1}>\r\n                        <FormControl>\r\n                                <Select id=\"starting-letter-selector\" value={this.state.startingRackLetter} onChange={this.changeStartingLetter}>\r\n                                    {Constants.RackX.map(val => (<MenuItem value={val}>{val}</MenuItem>))}\r\n                                </Select>\r\n                                <FormHelperText>Starting Letter</FormHelperText>\r\n                        </FormControl>\r\n                    </Grid>\r\n                    <Grid item xs={1}>\r\n                        <FormControl>\r\n                                <Select id=\"ending-letter-selector\" value={this.state.endingRackLetter} onChange={this.changeEndingLetter}>\r\n                                    {Constants.RackX.map(val => (<MenuItem value={val}>{val}</MenuItem>))}\r\n                                </Select>\r\n                                <FormHelperText>Ending Letter</FormHelperText>\r\n                        </FormControl>\r\n                    </Grid>\r\n                    <Grid item xs={2}>\r\n                        <FormControl>\r\n                                <TextField\r\n                                    id=\"starting-num-selector\"\r\n                                    type=\"number\"\r\n                                    value={this.state.startingRackNumber}\r\n                                    onChange={this.changeStartingNum}\r\n                                    InputProps={{ inputProps: { min: 1} }}\r\n                                />\r\n                                <FormHelperText>Starting Number</FormHelperText>\r\n                        </FormControl>\r\n                    </Grid>\r\n                    <Grid item xs={8}>\r\n                        <FormControl>\r\n                                <TextField\r\n                                    id=\"ending-num-selector\"\r\n                                    type=\"number\"\r\n                                    value={this.state.endingRackNumber}\r\n                                    onChange={this.changeEndingNum}\r\n                                    InputProps={{ inputProps: { min: 1} }}\r\n                                />\r\n                                <FormHelperText>Ending Number</FormHelperText>\r\n                        </FormControl>\r\n                    </Grid>\r\n                    <Grid item xs={2}>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            onClick={this.viewRacks}\r\n                        >\r\n                            View Racks\r\n                        </Button>\r\n                    </Grid>\r\n                    <Grid item xs={2}>\r\n                        {(this.props.privilege === Privilege.ADMIN) ?\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            onClick={this.createRacks}\r\n                        >\r\n                            Create Racks\r\n                        </Button> : null}\r\n                    </Grid>\r\n                    <Grid item xs={2}>\r\n                        {(this.props.privilege === Privilege.ADMIN) ?\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            onClick={() => this.setState({ showConfirmationBox: true, })}\r\n                        >\r\n                            Delete Racks\r\n                        </Button> : null}\r\n                    </Grid>\r\n                </Grid>\r\n                <Modal\r\n                    aria-labelledby=\"transition-modal-title\"\r\n                    aria-describedby=\"transition-modal-description\"\r\n                    className={classes.modal}\r\n                    open={this.state.showConfirmationBox}\r\n                    onClose={this.closeConfirmationBox}\r\n                    closeAfterTransition\r\n                    BackdropComponent={Backdrop}\r\n                    BackdropProps={{\r\n                    timeout: 500,\r\n                    }}\r\n                >\r\n                    <Fade in={this.state.showConfirmationBox}>\r\n                        <div className={classes.paper}>\r\n                            <Grid container spacing={5}>\r\n                                <Grid item xs={12}>\r\n                                    Are you sure you wish to delete?\r\n                                </Grid>\r\n                                <Grid item xs={2}>\r\n                                    <Button\r\n                                        variant=\"contained\"\r\n                                        color=\"primary\"\r\n                                        onClick={this.deleteRacks}\r\n                                    >\r\n                                        Yes\r\n                                    </Button>\r\n                                </Grid>\r\n                                <Grid item xs={1}>\r\n                                    <Button\r\n                                        variant=\"contained\"\r\n                                        color=\"primary\"\r\n                                        onClick={() => this.setState({ showConfirmationBox: false, })}\r\n                                    >\r\n                                        No\r\n                                    </Button>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </div>\r\n                    </Fade>\r\n                </Modal>\r\n\r\n                <StatusDisplay\r\n                    open={this.state.showStatus}\r\n                    severity={this.state.statusSeverity}\r\n                    closeStatus={this.closeShowStatus}\r\n                    message={this.state.statusMessage}\r\n                />\r\n            </ErrorBoundray>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withStyles(useStyles)(RacksView);\r\n","import React from \"react\";\r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\r\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\r\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nimport RacksView from \"../../pages/RacksView\";\r\n\r\nexport default function ShowDatacenters(props) {\r\n    try {\r\n        if (props.datacentersList.length == 0) {\r\n            return <Typography>There are currently no datacenters being managed.</Typography>\r\n        } else {\r\n            return (<div>{\r\n                props.datacentersList.map(datacenter => (\r\n                    <ExpansionPanel>\r\n                        <ExpansionPanelSummary\r\n                            expandIcon={<ExpandMoreIcon />}\r\n                            aria-controls={datacenter.abbreviation}\r\n                            id={datacenter.abbreviation}\r\n                        >\r\n                            <Typography className={props.classes.heading}>{datacenter.name + \"/\" + datacenter.abbreviation}</Typography>\r\n                        </ExpansionPanelSummary>\r\n                        <ExpansionPanelDetails>\r\n                            <Grid container spacing={5}>\r\n                                <Grid item xs={12}>\r\n                                    <RacksView\r\n                                        privilege={props.privilege}\r\n                                        datacenter={datacenter.name}\r\n                                    />\r\n                                </Grid>\r\n                                <Grid item xs={12}>\r\n                                    <Button\r\n                                        variant=\"contained\"\r\n                                        color=\"primary\"\r\n                                        onClick={(event) => {props.editDatacenter(event, datacenter.name, datacenter.abbreviation)} }\r\n                                    >\r\n                                        Edit Datecenter\r\n                                    </Button>\r\n                                </Grid>\r\n                                <Grid item xs={12}>\r\n                                    <Button\r\n                                        variant=\"contained\"\r\n                                        color=\"primary\"\r\n                                        onClick={(event) => {props.openConfirmationBox(event, datacenter.name)} }\r\n                                    >\r\n                                        Delete Datecenter\r\n                                    </Button>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </ExpansionPanelDetails>\r\n                    </ExpansionPanel>\r\n                ))\r\n            }</div>\r\n            );\r\n        }\r\n    } catch (exception) {\r\n        return <Typography>Could not load any datacenters at this time</Typography>\r\n    }\r\n}\r\n","import React from 'react';\r\n\r\nimport axios from 'axios';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\r\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\r\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport Fade from '@material-ui/core/Fade';\r\n\r\nimport getURL from \"../../helpers/functions/GetURL\";\r\nimport * as Constants from \"../../Constants\";\r\nimport { DatacenterCommand } from \"../enums/DatacenterCommands.ts\";\r\nimport RacksView from \"../pages/RacksView\";\r\nimport ErrorBoundary from \"../../errors/ErrorBoundry\";\r\nimport CreateDatacenter from \"./CreateDatacenter\";\r\nimport { Privilege } from '../../enums/privilegeTypes.ts';\r\nimport EditDatacenter from \"./EditDatacenter\";\r\nimport ShowDatacenters from \"./functions/ShowDatacenters\";\r\n\r\nconst useStyles = theme => ({\r\n    root: {\r\n      width: '100%',\r\n    },\r\n    heading: {\r\n      fontSize: theme.typography.pxToRem(15),\r\n      fontWeight: theme.typography.fontWeightRegular,\r\n    },\r\n    progress: {\r\n        display: 'flex',\r\n        '& > * + *': {\r\n          marginLeft: theme.spacing(2),\r\n        },\r\n        justify:\"center\",\r\n        alignItems:\"center\",\r\n      },\r\n    modal: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    paper: {\r\n        backgroundColor: theme.palette.background.paper,\r\n        border: '2px solid #000',\r\n        boxShadow: theme.shadows[5],\r\n        padding: theme.spacing(2, 4, 3),\r\n    },\r\n  });\r\n\r\nclass ConfirmDeteleDC extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\r\n\t\tthis.state = {\r\n\r\n\t\t};\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst { classes } = this.props;\r\n\r\n\t\treturn (\r\n\t\t\t<Modal\r\n                    aria-labelledby=\"transition-modal-title\"\r\n                    aria-describedby=\"transition-modal-description\"\r\n                    className={classes.modal}\r\n                    open={this.props.showConfirmationBox}\r\n                    onClose={this.props.closeConfirmationBox}\r\n                    closeAfterTransition\r\n                    BackdropComponent={Backdrop}\r\n                    BackdropProps={{\r\n                    timeout: 500,\r\n                    }}\r\n                >\r\n                    <Fade in={this.props.showConfirmationBox}>\r\n                        <div className={classes.paper}>\r\n                            <Grid container spacing={5}>\r\n                                <Grid item xs={12}>\r\n                                    Are you sure you wish to delete?\r\n                                </Grid>\r\n                                <Grid item xs={2}>\r\n                                    <Button\r\n                                        variant=\"contained\"\r\n                                        color=\"primary\"\r\n                                        onClick={this.props.deleteDatacenter}\r\n                                    >\r\n                                        Yes\r\n                                    </Button>\r\n                                </Grid>\r\n                                <Grid item xs={1}>\r\n                                    <Button\r\n                                        variant=\"contained\"\r\n                                        color=\"primary\"\r\n                                        onClick={() => this.props.closeConfirmationBox()}\r\n                                    >\r\n                                        No\r\n                                    </Button>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </div>\r\n                    </Fade>\r\n                </Modal>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default withStyles(useStyles)(ConfirmDeteleDC);\r\n","export enum StatsCommand {\r\n    GENERATE_REPORT = \"generate-report\",\r\n    TEST = \"test\",\r\n}\r\n","import React from 'react';\r\n\r\nimport axios from 'axios';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nimport getURL from \"../../helpers/functions/GetURL\";\r\nimport * as Constants from \"../../Constants\";\r\nimport { DatacenterCommand } from \"../enums/DatacenterCommands.ts\";\r\nimport ErrorBoundary from \"../../errors/ErrorBoundry\";\r\nimport CreateDatacenter from \"../helpers/CreateDatacenter\";\r\nimport { Privilege } from '../../enums/privilegeTypes.ts';\r\nimport EditDatacenter from \"../helpers/EditDatacenter\";\r\nimport ConfirmDeteleDC from \"../helpers/ConfirmDeleteDC\";\r\nimport ShowDatacenters from \"../helpers/functions/ShowDatacenters\";\r\n\r\nconst useStyles = theme => ({\r\n    root: {\r\n      width: '100%',\r\n    },\r\n    heading: {\r\n      fontSize: theme.typography.pxToRem(15),\r\n      fontWeight: theme.typography.fontWeightRegular,\r\n    },\r\n    progress: {\r\n        display: 'flex',\r\n        '& > * + *': {\r\n          marginLeft: theme.spacing(2),\r\n        },\r\n        justify:\"center\",\r\n        alignItems:\"center\",\r\n      },\r\n    modal: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    paper: {\r\n        backgroundColor: theme.palette.background.paper,\r\n        border: '2px solid #000',\r\n        boxShadow: theme.shadows[5],\r\n        padding: theme.spacing(2, 4, 3),\r\n    },\r\n  });\r\n\r\n\r\nclass DatacenterView extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            datacentersList:[],\r\n            loadingDCList:true,\r\n            showConfirmationBox:false,\r\n            currentDatacenter:\"\",\r\n            showEditDC:false,\r\n            editDCName:\"\",\r\n            editDCAbbr:\"\",\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getDatacenters();\r\n    }\r\n\r\n    getDatacenters = () => {\r\n        axios.get(getURL(Constants.DATACENTERS_MAIN_PATH, DatacenterCommand.GET_ALL_DATACENTERS)).then(\r\n            response => {\r\n                this.setState({ datacentersList: response.data.datacenters, loadingDCList:false });\r\n            }\r\n        );\r\n    }\r\n\r\n    deleteDatacenter = () => {\r\n        axios.post(getURL(Constants.DATACENTERS_MAIN_PATH, DatacenterCommand.DELETE),\r\n        {\r\n            \"datacenter_name\":this.state.currentDatacenter\r\n        }\r\n        ).then(\r\n            response => {\r\n                console.log(\"Deleteting\");\r\n                console.log(response);\r\n                if (response.data.message === \"success\") {\r\n                    this.setState({ showConfirmationBox: false });\r\n                    this.getDatacenters();\r\n                }\r\n\r\n            }\r\n        );\r\n    }\r\n\r\n    openConfirmationBox = (event, datacenter) => {\r\n        this.setState({ showConfirmationBox: true, currentDatacenter:datacenter });\r\n    }\r\n\r\n    closeConfirmationBox = () => {\r\n        this.setState({ showConfirmationBox: false });\r\n    }\r\n\r\n    openEditDatacenter= (event, datacenterName, datacenterAbbrev) => {\r\n        this.setState({ editDCName: datacenterName, editDCAbbr: datacenterAbbrev }, () => this.setState({ showEditDC: true, }));\r\n    }\r\n\r\n    closeEditDatacenter = () => {\r\n        this.setState({\r\n            showEditDC: false,\r\n            editDCName:\"\",\r\n            editDCAbbr:\"\",\r\n         });\r\n    }\r\n\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <ErrorBoundary>\r\n                    {this.props.privilege === Privilege.ADMIN ? <CreateDatacenter search={this.getDatacenters} /> : null }\r\n                    {this.state.loadingDCList ?\r\n                    <div className={classes.progress}><CircularProgress /></div> :\r\n                    <ShowDatacenters\r\n                        classes={classes}\r\n                        datacentersList={this.state.datacentersList}\r\n                        privilege={this.props.privilege}\r\n                        openConfirmationBox={this.openConfirmationBox}\r\n                        editDatacenter={this.openEditDatacenter}\r\n                    />}\r\n                    <EditDatacenter\r\n                        show={this.state.showEditDC}\r\n                        close={this.closeEditDatacenter}\r\n                        dcName={this.state.editDCName}\r\n                        dcAbbrev={this.state.editDCAbbr}\r\n                        search={this.getDatacenters}\r\n                    />\r\n                    <ConfirmDeteleDC\r\n                        showConfirmationBox={this.state.showConfirmationBox}\r\n                        closeConfirmationBox={this.closeConfirmationBox}\r\n                        deleteDatacenter={this.deleteDatacenter}\r\n                        close={this.closeEditDatacneter}\r\n                    />\r\n                </ErrorBoundary>\r\n            </React.Fragment>\r\n        );\r\n}\r\n  }\r\n\r\n\r\n  export default withStyles(useStyles)(DatacenterView);\r\n","import React from 'react';\r\n\r\nimport axios from 'axios';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nimport ErrorBoundary from \"../../errors/ErrorBoundry\";\r\nimport DatacenterView from \"./DatacentersView\";\r\n\r\nconst useStyles = theme => ({\r\n\r\n  });\r\n\r\nclass DatacenterManagerView extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n        };\r\n    }\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <ErrorBoundary>\r\n                    <Paper>\r\n                        <DatacenterView privilege={this.props.privilege} />\r\n                    </Paper>\r\n                </ErrorBoundary>\r\n            </React.Fragment>\r\n        );\r\n}\r\n  }\r\n\r\n\r\n  export default withStyles(useStyles)(DatacenterManagerView);\r\n","export default function jsonToArr(incomingJSON) {\r\n    var json = {};\r\n    try {\r\n        json = JSON.parse(incomingJSON);\r\n    } catch (e) {\r\n        json = incomingJSON;\r\n    }\r\n\r\n    if (Object.entries(json).length === 0 && json.constructor === Object) {\r\n        return [];\r\n    }\r\n\r\n    const items = [];\r\n\r\n    Object.keys(json).map((key) => {\r\n        const row = [];\r\n        row.push(key);\r\n        row.push(json[key]);\r\n        items.push(row);\r\n\r\n        return key;\r\n    });\r\n    return items;\r\n}\r\n","import React from 'react';\r\nimport axios from 'axios';\r\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\r\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\r\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport getURL from '../../helpers/functions/GetURL';\r\nimport  Button from '@material-ui/core/Button';\r\nimport { StatsCommand } from \"../enums/StatsCommands.ts\";\r\nimport JSONtoArr from \"../../helpers/functions/JSONtoArr\";\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport StatusDisplay from '../../helpers/StatusDisplay';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport ErrorBoundray from '../../errors/ErrorBoundry';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nconst statsMainPath = 'stats/';\r\nconst tables = {\r\n    \"totalUsage\":\"Total Usage\",\r\n    \"spaceUsage\": \"Space Usage\",\r\n    \"vendorUsage\": \"Vendor Usage\",\r\n    \"modelUsage\": \"Model Usage\",\r\n    \"ownerUsage\": \"Owner Usage\",\r\n}\r\n\r\nconst tableCols = {\r\n    \"totalUsage\":[\"Total\", \"Usage\"],\r\n    \"spaceUsage\": [\"Rack\", \"Usage\"],\r\n    \"vendorUsage\": [\"Vendor\", \"Usage\"],\r\n    \"modelUsage\": [\"Model\", \"Usage\"],\r\n    \"ownerUsage\": [\"Ownder\", \"Usage\"],\r\n}\r\n\r\nexport default class StatisticsView extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            tableValues: {\r\n                \"totalUsage\":[],\r\n                \"spaceUsage\": [],\r\n                \"vendorUsage\": [],\r\n                \"modelUsage\": [],\r\n                \"ownerUsage\": [],\r\n            },\r\n            totalUsage:[],\r\n            spaceUsage:[],\r\n            vendorUsage:[],\r\n            modelUsage:[],\r\n            ownerUsage:[],\r\n\r\n            showStatus:false,\r\n            statusMessage:'',\r\n            statusSeverity:'',\r\n        };\r\n\r\n        this.closeShowStatus = this.closeShowStatus.bind(this);\r\n        this.generateReport = this.generateReport.bind(this);\r\n\r\n        axios.defaults.headers.common['token'] = this.props.token;\r\n        axios.defaults.headers.common['privilege'] = this.props.privilege;\r\n    }\r\n\r\n    generateReport() {\r\n        axios.post(getURL(statsMainPath, StatsCommand.GENERATE_REPORT)).then(response => {\r\n                try {\r\n                    var data = response.data;\r\n                    var totalUsage = [];\r\n                    var totalUsageRow = [\"Total Usage\"];\r\n                    totalUsageRow.push(data[\"totalUsage\"]);\r\n                    totalUsage.push(totalUsageRow);\r\n\r\n                    var spaceUsage = JSONtoArr(data[\"spaceUsage\"]);\r\n                    if (spaceUsage.length === 0) {\r\n                        spaceUsage.push([\"No space is currently being used\", []])\r\n                    }\r\n                    var vendorUsage = JSONtoArr(data[\"vendorUsage\"]);\r\n                    if (vendorUsage.length === 0) {\r\n                        vendorUsage.push([\"No vendors currently using space\", []])\r\n                    }\r\n                    var modelUsage = JSONtoArr(data[\"modelUsage\"]);\r\n                    if (modelUsage.length === 0) {\r\n                        modelUsage.push([\"No models currently using space\", []])\r\n                    }\r\n                    var ownerUsage = JSONtoArr(data[\"ownerUsage\"]);\r\n                    if (ownerUsage.length === 0) {\r\n                        ownerUsage.push([\"No owners currently using space\", []])\r\n                    }\r\n\r\n                    this.setState({\r\n                        showStatus: true,\r\n                        statusSeverity:\"success\",\r\n                        statusMessage: \"Success\",\r\n                        tableValues: {\r\n                            \"totalUsage\":totalUsage,\r\n                            \"spaceUsage\": spaceUsage,\r\n                            \"vendorUsage\": vendorUsage,\r\n                            \"modelUsage\": modelUsage,\r\n                            \"ownerUsage\": ownerUsage,\r\n                        },\r\n                     })\r\n                } catch {\r\n                    this.setState({ showStatus: true, statusMessage: response.data.message, statusSeverity:\"error\" })\r\n                }\r\n            });\r\n    }\r\n\r\n    closeShowStatus() {\r\n        this.setState({ showStatus: false })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <ErrorBoundray >\r\n                <StatusDisplay\r\n                    open={this.state.showStatus}\r\n                    severity={this.state.statusSeverity}\r\n                    closeStatus={this.closeShowStatus}\r\n                    message={this.state.statusMessage}\r\n                />\r\n                <Grid\r\n                    container\r\n                    spacing={5}\r\n                    direction=\"row\"\r\n                    justify=\"flex-start\"\r\n                    alignItems=\"center\"\r\n                    style={{margin: \"0px\", maxWidth: \"95vw\"}}\r\n                >\r\n                    <Grid item xs={12}>\r\n                        <Typography variant=\"h4\">\r\n                            Reports\r\n                        </Typography>\r\n                    </Grid>\r\n                </Grid>\r\n                <div>\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        onClick={this.generateReport}\r\n                    >\r\n                        Generate New Report\r\n                    </Button>\r\n                </div>\r\n                {Object.keys(tables).map(key => (\r\n                <ExpansionPanel>\r\n                    <ExpansionPanelSummary\r\n                        expandIcon={<ExpandMoreIcon />}\r\n                    >\r\n                        <Typography>{tables[key]}</Typography>\r\n                    </ExpansionPanelSummary>\r\n                    <ExpansionPanelDetails>\r\n                        <TableContainer component={Paper}>\r\n                            <Table>\r\n                                <TableHead>\r\n                                    <TableRow >\r\n                                        {tableCols[key].map(column => (<TableCell><span id={column}>{column}</span></TableCell>))}\r\n                                    </TableRow>\r\n                                </TableHead>\r\n                                <TableBody>\r\n                                {this.state.tableValues[key].map(row => (\r\n                                    <TableRow>\r\n                                        {row.map(column => (<TableCell><span id={column}>{column + (isNaN(column) ? \"\" : \"%\")}</span></TableCell>))}\r\n                                    </TableRow>\r\n                                ))}\r\n                                </TableBody>\r\n                            </Table>\r\n                        </TableContainer>\r\n                    </ExpansionPanelDetails>\r\n                </ExpansionPanel>\r\n                ))}\r\n                </ErrorBoundray>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","export enum LogCommand {\r\n    TEST = \"test/\",\r\n    GET_LOGS = \"getlogs/\",\r\n}\r\n","import React from \"react\"\r\n\r\nimport axios from 'axios';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Button from '@material-ui/core/Button';\r\nimport { TextField } from '@material-ui/core';\r\n\r\nimport { LogCommand } from \"../enums/LogCommands.ts\";\r\nimport getURL from \"../../helpers/functions/GetURL\";\r\nimport * as Constants from \"../../Constants\";\r\n\r\nconst useStyles = {\r\n    table: {\r\n      minWidth: 650,\r\n    },\r\n    searchbar: {\r\n        minWidth: \"200px\",\r\n        flexGrow: 1,\r\n    },\r\n  };\r\n\r\nfunction makeTableData(index, timestamp, type, message) {\r\n    return { index, timestamp, type, message };\r\n}\r\n\r\nconst typeKey = \"type\";\r\nconst timestampKey = \"timestamp\";\r\nconst USER_KEY = \"user\";\r\nconst ASSET_KEY = \"asset\";\r\n\r\nclass LogsView extends React.Component  {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            logItems:[],\r\n            filteredLogs:[],\r\n            allLogs:null,\r\n            filterUser:\"\",\r\n            filterAsset:\"\",\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getLogs();\r\n    }\r\n\r\n    getLogs = () => {\r\n        axios.get(getURL(Constants.LOGS_MAIN_PATH, LogCommand.GET_LOGS)).then(response => this.parseLog(response.data.log));\r\n    }\r\n\r\n    parseLog = (logs) => {\r\n        var items = [];\r\n        logs.map((log, index) => {\r\n            var message = \"\";\r\n            Object.entries(log).map(([key, value]) => {\r\n                if (key === typeKey || key === timestampKey) {\r\n                    return;\r\n                }\r\n                message += value + \"\\n\";\r\n            });\r\n            items.push(makeTableData(index, log[timestampKey], log[typeKey], message));\r\n        });\r\n\r\n        this.setState({ logItems: items, filteredLogs:items, allLogs:logs });\r\n    }\r\n\r\n    filter = () => {\r\n        this.filterByUser();\r\n    }\r\n\r\n    filterByUser = () => {\r\n        var user = this.state.filterUser;\r\n        var filteredItems = [];\r\n\r\n        this.state.logItems.map((log) => {\r\n            var entry = this.state.allLogs[log.index];\r\n            if (USER_KEY in entry) {\r\n                if (entry[USER_KEY].includes(user)) {\r\n                    filteredItems.push(log);\r\n                }\r\n            }\r\n        });\r\n\r\n        let items = (user===\"\") ? this.state.logItems : filteredItems;\r\n        this.setState({ filteredLogs:items }, () => { this.filterByAsset() });\r\n    }\r\n\r\n    filterByAsset = () => {\r\n        var asset = this.state.filterAsset;\r\n        var filteredItems = [];\r\n\r\n        this.state.filteredLogs.map((log) => {\r\n            var entry = this.state.allLogs[log.index];\r\n            if (ASSET_KEY in entry) {\r\n                if (entry[ASSET_KEY].includes(asset)) {\r\n                    filteredItems.push(log);\r\n                }\r\n            }\r\n        });\r\n\r\n        let items = (asset===\"\") ? this.state.filteredLogs : filteredItems;\r\n        this.setState({ filteredLogs:items });\r\n    }\r\n\r\n    updateFilterUser = (event) => {\r\n        this.setState({ filterUser: event.target.value }, () => { this.filter() });\r\n    }\r\n\r\n    updateFilterAsset = (event) => {\r\n        this.setState({ filterAsset: event.target.value }, () => { this.filter() });\r\n    }\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    onClick={this.getLogs}\r\n                >\r\n                    Refresh Logs\r\n                </Button>\r\n                <TextField\r\n                    className={classes.searchbar}\r\n                    name={\"filter-users\"}\r\n                    placeholder=\"Search users\"\r\n                    fullWidth\r\n                    onChange={this.updateFilterUser}\r\n                />\r\n                <TextField\r\n                    className={classes.searchbar}\r\n                    name={\"filter-assets\"}\r\n                    placeholder=\"Search assets\"\r\n                    fullWidth\r\n                    onChange={this.updateFilterAsset}\r\n                />\r\n                <TableContainer component={Paper}>\r\n                    <Table className={classes.table} aria-label=\"simple table\">\r\n                        <TableHead>\r\n                        <TableRow>\r\n                            <TableCell align=\"left\">Timestamp</TableCell>\r\n                            <TableCell align=\"left\">type</TableCell>\r\n                            <TableCell align=\"left\">Message</TableCell>\r\n                        </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                        {this.state.filteredLogs.map(logItem => (\r\n                            <TableRow key={logItem.timestamp}>\r\n                                <TableCell aligh=\"left\">{logItem.timestamp}</TableCell>\r\n                                <TableCell align=\"left\">{logItem.type}</TableCell>\r\n                                <TableCell align=\"left\">{logItem.message}</TableCell>\r\n                            </TableRow>\r\n                        ))}\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withStyles(useStyles)(LogsView);\r\n","import React from 'react';\r\n\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport AccountCircle from '@material-ui/icons/AccountCircle';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\n\r\nimport ModelsView from './models/pages/ModelsView';\r\nimport UsersView from './users/pages/UsersView';\r\nimport AssetsView from './assets/pages/AssetsView';\r\nimport DatacenterManagerView from './racks/pages/DatacenterManagerView';\r\nimport StatisticsView from './statistics/pages/StatisticsView';\r\nimport LogsView from \"./logs/pages/LogsView\";\r\n\r\nimport { Privilege } from './enums/privilegeTypes.ts'\r\n\r\nimport ErrorBoundry from './errors/ErrorBoundry';\r\n\r\nimport '../stylesheets/TabStyles.css';\r\n\r\nconst useStyles = theme => ({\r\n    root: {\r\n      flexGrow: 1,\r\n    },\r\n    menuButton: {\r\n      marginRight: theme.spacing(2),\r\n    },\r\n    title: {\r\n      flexGrow: 1,\r\n    },\r\n    tab:{\r\n        flexGrow:'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        maxWidth: \"100%\",\r\n        width:\"100%\",\r\n        margin:\"0 auto\",\r\n    }\r\n  });\r\n\r\nclass TabViewer extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            currentTabID:0,\r\n            anchorEl: null,\r\n            isMenuOpen:false,\r\n        };\r\n        this.handleChange = this.handleChange.bind(this);\r\n    }\r\n\r\n    handleChange(event, newValue) {\r\n        this.setState({ currentTabID: newValue })\r\n    }\r\n\r\n    handleProfileMenuOpen = (event) => {\r\n        this.setState({ anchorEl: event.currentTarget, isMenuOpen:true });\r\n    }\r\n\r\n    handleMenuClose = () => {\r\n        this.setState({ anchorEl: null, isMenuOpen:false });\r\n    };\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n\r\n        return (\r\n        <div className={classes.root}>\r\n            <ErrorBoundry>\r\n            <AppBar position=\"static\">\r\n                <Toolbar>\r\n                    <Typography variant=\"h6\" className={classes.title}>\r\n                        Hyposoft Server Management\r\n                    </Typography>\r\n                    <div>\r\n                        <IconButton\r\n                            aria-label=\"account of current user\"\r\n                            aria-controls=\"menu-appbar\"\r\n                            aria-haspopup=\"true\"\r\n                            color=\"inherit\"\r\n                            onClick={this.handleProfileMenuOpen}\r\n                        >\r\n                            <AccountCircle />\r\n                        </IconButton>\r\n                        <Menu\r\n                            anchorEl={this.state.anchorEl}\r\n                            anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n                            id='primary-search-account-menu'\r\n                            keepMounted\r\n                            transformOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n                            open={this.state.isMenuOpen}\r\n                            onClose={this.handleMenuClose}\r\n                        >\r\n                            <MenuItem>{\"Username: \" + this.props.username}</MenuItem>\r\n                            <MenuItem>{\"Privilege: \" + this.props.privilege}</MenuItem>\r\n                            <MenuItem onClick={this.props.logout} >LOGOUT</MenuItem>\r\n                        </Menu>\r\n                    </div>\r\n                </Toolbar>\r\n            </AppBar>\r\n\r\n            <Tabs value={this.state.currentTabID} onChange={this.handleChange}\r\n                indicatorColor=\"primary\"\r\n                textColor=\"primary\"\r\n                centered\r\n            >\r\n                    <Tab value={0} style={{flexGrow: 1,}} label=\"Models\"> </Tab>\r\n                    <Tab value={1} style={{flexGrow: 1,}} label=\"Assets\" ></Tab>\r\n                    {(this.props.privilege === Privilege.ADMIN) ? <Tab value={2} style={{flexGrow: 1,}} label=\"Users\"></Tab> : null}\r\n                    <Tab value={3} style={{flexGrow: 1,}} label=\"Datcenters\" />\r\n                    <Tab value={4} style={{flexGrow: 1,}} label=\"Statistics\" />\r\n                    <Tab value={5} style={{flexGrow: 1,}} label=\"Logs\" />\r\n            </Tabs>\r\n            {this.state.currentTabID !== 0 ? null :\r\n            <Typography\r\n                component=\"div\"\r\n                role=\"tabpanel\"\r\n                id={`simple-tabpanel-0`}\r\n                aria-labelledby={`simple-tab-0`}\r\n            >\r\n                <Container className={classes.tab} ><ModelsView token={this.props.token} privilege={this.props.privilege} /></Container>\r\n            </Typography>}\r\n            {this.state.currentTabID !== 1 ? null :\r\n            <Typography\r\n                component=\"div\"\r\n                role=\"tabpanel\"\r\n                id={`simple-tabpanel-0`}\r\n                aria-labelledby={`simple-tab-0`}\r\n            >\r\n                <Container className={classes.tab} ><AssetsView token={this.props.token} privilege={this.props.privilege} /></Container>\r\n            </Typography>}\r\n            {this.state.currentTabID !== 2 ? null :\r\n            <Typography\r\n                component=\"div\"\r\n                role=\"tabpanel\"\r\n                id={`simple-tabpanel-0`}\r\n                aria-labelledby={`simple-tab-0`}\r\n            >\r\n                <Container className={classes.tab} ><UsersView token={this.props.token} privilege={this.props.privilege} /></Container>\r\n            </Typography>}\r\n            {this.state.currentTabID !== 3 ? null :\r\n            <Typography\r\n                component=\"div\"\r\n                role=\"tabpanel\"\r\n                id={`simple-tabpanel-0`}\r\n                aria-labelledby={`simple-tab-0`}\r\n            >\r\n                <Container className={classes.tab} ><DatacenterManagerView token={this.props.token} privilege={this.props.privilege} /></Container>\r\n            </Typography>}\r\n            {this.state.currentTabID !== 4 ? null :\r\n            <Typography\r\n                component=\"div\"\r\n                role=\"tabpanel\"\r\n                hidden={this.state.currentTabID !== 4}\r\n                id={`simple-tabpanel-0`}\r\n                aria-labelledby={`simple-tab-0`}\r\n            >\r\n                <Container className={classes.tab} ><StatisticsView token={this.props.token} privilege={this.props.privilege} /></Container>\r\n            </Typography>}\r\n            {this.state.currentTabID !== 5 ? null :\r\n            <Typography\r\n                component=\"div\"\r\n                role=\"tabpanel\"\r\n                hidden={this.state.currentTabID !== 5}\r\n                id={`tab-panel-logs`}\r\n                aria-labelledby={`tab-panel-logs`}\r\n            >\r\n                <Container className={classes.tab} ><LogsView /></Container>\r\n            </Typography>}\r\n            </ErrorBoundry>\r\n        </div>);\r\n    }\r\n}\r\n\r\n\r\nexport default withStyles(useStyles)(TabViewer);\r\n","import React from \"react\";\r\n\r\nimport axios from 'axios';\r\n\r\nimport Login from \"./Login\";\r\nimport TabViewer from \"./Tabs\";\r\nimport getURL from './helpers/functions/GetURL';\r\nimport * as Constants from \"./Constants\";\r\n\r\nconst storedToken = 'token';\r\nconst storedPrivilege = 'privilege';\r\nconst storedLoggedIn = 'loggedIn';\r\nconst storedUsername = 'username';\r\n\r\nexport default class PageSelector extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      token:sessionStorage.getItem(storedToken) || '',\r\n      privilege:sessionStorage.getItem(storedPrivilege) || '',\r\n      loggedIn:sessionStorage.getItem(storedLoggedIn) || '',\r\n      username:sessionStorage.getItem(storedUsername) || '',\r\n    };\r\n\r\n  }\r\n\r\n  componentDidMount() {\r\n\taxios.defaults.headers.common['token'] = this.state.token;\r\n    axios.defaults.headers.common['privilege'] = this.state.privilege;\r\n  }\r\n\r\n  login = (token, username, privilege) => {\r\n    sessionStorage.setItem(storedToken, token);\r\n    sessionStorage.setItem(storedPrivilege, privilege);\r\n    sessionStorage.setItem(storedLoggedIn, true);\r\n    sessionStorage.setItem(storedUsername, username);\r\n\r\n    axios.defaults.headers.common['token'] = token;\r\n    axios.defaults.headers.common['privilege'] = privilege;\r\n\r\n    this.setState({\r\n      token:token,\r\n      privilege:privilege,\r\n      loggedIn:true,\r\n      username: username,\r\n\t});\r\n\r\n\twindow.history.replaceState({}, \"Hyposoft Asset Management\", \"/\")\r\n  }\r\n\r\n  loginWithOAuth = (token, username, privilege) => {\r\n\tsessionStorage.setItem(storedToken, token);\r\n\tsessionStorage.setItem(storedPrivilege, privilege);\r\n\tsessionStorage.setItem(storedLoggedIn, true);\r\n\tsessionStorage.setItem(storedUsername, username);\r\n\r\n\taxios.defaults.headers.common['token'] = token;\r\n\taxios.defaults.headers.common['privilege'] = privilege;\r\n\r\n\tthis.setState({\r\n\ttoken:token,\r\n\tprivilege:privilege,\r\n\tloggedIn:true,\r\n\tusername: username,\r\n\t}, () => { window.history.replaceState({}, \"Hyposoft Asset Management\", \"/\") });\r\n\t//window.location.href = Constants.SHIB_REDIRECT_URI;\r\n  }\r\n\r\n  logout = () => {\r\n    axios.get(getURL('users/', 'logout'));\r\n\r\n    this.setState({\r\n      token:'',\r\n      privilege:'',\r\n      loggedIn:false,\r\n      username:'',\r\n    });\r\n\r\n    sessionStorage.removeItem(storedToken);\r\n    sessionStorage.removeItem(storedPrivilege);\r\n    sessionStorage.removeItem(storedLoggedIn);\r\n    sessionStorage.removeItem(storedUsername);\r\n\r\n\twindow.history.replaceState({}, \"Hyposoft Asset Management\", \"/\")\r\n\tconsole.log(window.location.href);\r\n\tconsole.log(Constants.SHIB_REDIRECT_URI);\r\n\t//window.location = Constants.SHIB_REDIRECT_URI;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        {this.state.loggedIn ?\r\n          \t<TabViewer\r\n\t\t\t\ttoken={this.state.token}\r\n\t\t\t\tusername={this.state.username}\r\n\t\t\t\tprivilege={this.state.privilege}\r\n\t\t\t\tlogout={this.logout}\r\n          \t/> :\r\n\t\t  \t<Login\r\n\t\t\t\tloginFunc={this.login}\r\n\t\t\t\tshib={this.props.redirected}\r\n\t\t\t\tloginFuncOAuth={this.loginWithOAuth}\r\n\t\t\t/>}\r\n      </div>\r\n    );\r\n  }\r\n\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './stylesheets/index.css';\nimport PageSelector from './javascript/PageSelector';\n\nReactDOM.render(<PageSelector redirected={document.referrer}/>, document.getElementById('root'));\n"],"sourceRoot":""}
