{"version":3,"sources":["javascript/enums/privilegeTypes.ts","javascript/Constants.jsx","javascript/helpers/functions/GetURL.jsx","javascript/models/enums/ModelCommands.ts","javascript/models/enums/ModelInputs.ts","javascript/helpers/StatusDisplay.jsx","javascript/errors/ErrorBoundry.jsx","javascript/Login.jsx","javascript/users/enums/UserCommands.ts","javascript/users/enums/UserInputs.ts","javascript/models/helpers/ButtonsModel.jsx","javascript/models/helpers/FilterModel.jsx","javascript/models/helpers/DetailModel.jsx","javascript/models/helpers/CreateModel.jsx","javascript/helpers/UploadModal.jsx","javascript/helpers/TableView.jsx","javascript/models/pages/ModelsView.jsx","javascript/users/helpers/ButtonsUser.jsx","javascript/instances/enums/InstanceCommands.ts","javascript/instances/enums/InstanceInputs.ts","javascript/users/helpers/FilterUser.jsx","javascript/users/helpers/DetailUser.jsx","javascript/users/helpers/CreateUser.jsx","javascript/users/pages/UsersView.jsx","javascript/racks/enums/RackCommands.ts","javascript/instances/helpers/InstanceButtons.jsx","javascript/instances/helpers/FilterInstance.jsx","javascript/instances/helpers/DetailInstance.jsx","javascript/instances/helpers/CreateInstance.jsx","javascript/instances/pages/InstancesView.jsx","javascript/racks/pages/RacksView.jsx","javascript/statistics/enums/StatsCommands.ts","javascript/helpers/functions/JSONtoArr.jsx","javascript/statistics/pages/StatisticsView.jsx","javascript/Tabs.jsx","javascript/PageSelector.jsx","index.jsx","images/logo.png"],"names":["Privilege","serverEndpoint","RackX","RackY","getURL","path","endpoint","Constants","ModelCommand","ModelInput","StatusDisplay","props","state","Collapse","in","this","open","Alert","severity","action","IconButton","aria-label","color","size","onClick","closeStatus","fontSize","message","React","Component","ErrorBoundary","hasError","error","errorInfo","children","Login","username","password","statusMessage","showStatus","statusSeverity","closeShowStatus","bind","submitCredentials","axios","post","then","response","data","setState","loginFunc","ADMIN","event","target","value","console","log","key","preventDefault","stopPropagation","Grid","container","spacing","direction","justify","alignItems","onKeyDown","e","onKeyPressed","style","item","xs","src","logo","height","Card","minWidth","CardContent","Typography","variant","fontWeight","gutterBottom","TextField","id","label","required","ref","onChange","updateUsername","type","updatePassword","Button","direciton","width","UserCommand","UserInput","ButtonsModel","startIcon","openImportModal","downloadTable","FilterModel","filters","hasOwnProperty","forceUpdate","search","map","filter","index","InputBase","placeholder","inputProps","updateSearchText","DetailModel","showConfirmationBox","closeModal","confirmDelete","deleteItem","delete","showDetailedView","ExpansionPanel","ExpansionPanelSummary","expandIcon","ExpansionPanelDetails","loading","CircularProgress","inputs","input","name","disabled","updateModelEdited","defaultValue","defaultValues","edit","CreateModel","class","useAutocomplete","Autocomplete","options","includeInputInList","freeSolo","renderInput","params","updateModelCreator","onBlur","fullWidth","createModel","UploadModal","Modal","top","left","transform","background","aria-labelledby","aria-describedby","showImportModal","onClose","closeImportModal","accept","chooseFile","uploadFile","textDescription","TableView","TableContainer","component","Paper","Table","className","TableHead","TableRow","columns","col","TableCell","TableBody","vals","row","keys","scope","ModelsView","showCreateModal","items","createdModel","createdVendor","createdModelNum","createdHeight","createdDispClr","createdEthPorts","createdPwrPorts","createdCPU","createdMem","createdStorage","createdComments","deleteVendor","deleteModel","viewVendor","viewModel","searchText","searchVendor","searchModelNum","searchHeight","csvData","importedFile","detailViewLoading","detailedValues","originalVendor","originalModelNumber","originalHeight","vendorsList","madeVendorQuery","openCreateModal","closeCreateModal","editModel","closeDetailedView","getVendorList","sendUploadedFile","initialize","defaults","headers","common","token","privilege","create","Vendor","model_number","Height","display_color","ethernet_ports","power_ports","CPU","Memory","Storage","Comment","searchModels","vendor","modelNum","detailView","get","VENDOR_VALUES","results","UPLOAD_FILE","summary","EXPORT_FILE","csvLink","link","click","detailViewModel","FormData","append","files","filename","r","USER","InstanceCommand","InstanceInput","Filters","DetailedView","CreateModal","UsersView","createdUser","searchUsernm","searchEml","searchDspNm","searchPriv","deleteUsername","viewUser","originalUsername","initialized","createUser","editUser","deleteUser","detailViewUser","searchUsers","updateUserCreator","updateUserEdited","Username","Password","display_name","Email","RackCommand","InstanceButtons","FilterInstance","DetailInstance","CreateInstance","InstancesView","createdInstance","deleteInstanceRack","deleteInstancerack_position","viewInstanceRack","viewInstancerack_position","searchModel","searchHostname","searchRack","searchRackU","originalRack","originalrack_position","modelList","madeModelQuery","createInstance","editInstance","deleteInstance","detailViewInstance","searchInstances","updateInstanceCreator","updateInstanceEdited","getModelList","Model","Hostname","Rack","RackU","Owner","rack","rack_position","GET_ALL_MODELS","StatsCommand","RacksView","startingRackLetter","endingRackLetter","startingRackNumber","endingRackNumber","getAllRacks","updateRacks","createRacks","deleteRacks","viewRacks","changeStartingLetter","changeEndingLetter","changeStartingNum","changeEndingNum","GET_ALL_RACKS","command","GET_RACK_DETAILS","win","window","focus","CREATE_RACKS","DELETE_RACKS","FormControl","Select","val","MenuItem","FormHelperText","jsonToArr","incomingJSON","json","JSON","parse","Object","entries","length","constructor","push","tables","tableCols","StatisticsView","tableValues","totalUsage","spaceUsage","vendorUsage","modelUsage","ownerUsage","generateReport","GENERATE_REPORT","totalUsageRow","JSONtoArr","column","isNaN","TabViewer","currentTabID","handleChange","newValue","AppBar","position","Tabs","Tab","flexGrow","logout","role","hidden","storedToken","storedPrivilege","storedLoggedIn","PageSelector","sessionStorage","getItem","loggedIn","login","setItem","removeItem","location","reload","ReactDOM","render","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.67d3ae6f.chunk.js","sourcesContent":["export enum Privilege  {\r\n    ADMIN = \"admin\",\r\n    USER = \"user\",\r\n};\r\n","/**\r\n * Constants file\r\n */\r\n\r\nexport const localServerEndpoint = 'http://localhost:4010/';\r\nexport const testServerEndpoint = ' https://parseltongue-finishinge-lfw68m.herokuapp.com/';\r\nexport const devServerEndpoint = 'https://parseltongue-dev.herokuapp.com/';\r\nexport const prodServerEndpoint = 'https://parseltongue-prod.herokuapp.com/';\r\n\r\nexport const serverEndpoint = localServerEndpoint;\r\n\r\n\r\nexport const RackX = [\r\n    'A', 'B', 'C', 'D', 'E',\r\n    'F', 'G', 'H', 'I', 'J',\r\n    'K', 'L', 'M', 'N', 'O',\r\n    'P', 'Q', 'R', 'S', 'T',\r\n    'W', 'X', 'Y', 'Z',\r\n]\r\n\r\nexport const RackY = [\r\n    1, 2, 3, 4, 5, 6, 7, 8, 9, 10,\r\n    11, 12, 13, 14, 15, 16, 17, 18, 19 , 20,\r\n    21, 22, 23, 24, 25, 26, 27, 28, 29, 30,\r\n    31, 32, 33, 34, 35, 36, 37, 38, 39, 40,\r\n    41, 42, 43, 44, 45, 46, 47, 48, 49, 50,\r\n    51, 52, 53, 54, 55, 56, 57, 58, 59, 60,\r\n]\r\n","import * as Constants from '../../Constants';\r\n\r\nexport default function getURL(path, endpoint) {\r\n    return Constants.serverEndpoint + path + endpoint;\r\n}\r\n","export enum ModelCommand {\r\n    create = 'create/',\r\n    delete = 'delete/',\r\n    edit = 'edit/',\r\n    view = 'view/',\r\n    detailView = 'detailView/',\r\n    search = 'search/',\r\n    VENDOR_VALUES = 'assistedvendor/',\r\n    UPLOAD_FILE = 'import/',\r\n    EXPORT_FILE = 'export/'\r\n}\r\n","export enum ModelInput {\r\n    Vendor = 'vendor',\r\n    model_number = 'model_number',\r\n    Height = 'height',\r\n    display_color = 'display_color',\r\n    ethernet_ports = 'ethernet_ports',\r\n    power_ports = 'power_ports',\r\n    CPU = 'cpu',\r\n    Memory = 'memory',\r\n    Storage = 'storage',\r\n    Comment = 'comment'\r\n}\r\n","import React from 'react';\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport Button from '@material-ui/core/Button';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\n\r\nexport default class StatusDisplay extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n\r\n        };\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Collapse in={this.props.open}>\r\n                    <Alert\r\n                        severity={this.props.severity}\r\n                        action={\r\n                        <IconButton\r\n                            aria-label=\"close\"\r\n                            color=\"inherit\"\r\n                            size=\"small\"\r\n                            onClick={this.props.closeStatus}\r\n                        >\r\n                            <CloseIcon fontSize=\"inherit\" />\r\n                        </IconButton>\r\n                        }\r\n                    >\r\n                        {this.props.message}\r\n                    </Alert>\r\n                </Collapse>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\r\n\r\nexport default class ErrorBoundary extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = { hasError: false };\r\n    }\r\n\r\n    static getDerivedStateFromError(error) {\r\n      // Update state so the next render will show the fallback UI.\r\n      return \"An unforseen error occurred. Please refresh the page and try again later.\";\r\n    }\r\n\r\n    componentDidCatch(error, errorInfo) {\r\n      // You can also log the error to an error reporting service\r\n      //logErrorToMyService(error, errorInfo);\r\n    }\r\n\r\n    render() {\r\n      if (this.state.hasError) {\r\n        // You can render any custom fallback UI\r\n        return <h1>Something went wrong.</h1>;\r\n      }\r\n\r\n      return this.props.children;\r\n    }\r\n}\r\n","import React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport axios from 'axios';\r\nimport getURL from './helpers/functions/GetURL';\r\nimport { Privilege } from './enums/privilegeTypes.ts'\r\nimport StatusDisplay from './helpers/StatusDisplay';\r\nimport ErrorBoundry from './errors/ErrorBoundry';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport logo from '../images/logo.png';\r\nimport Divider from '@material-ui/core/Divider';\r\n\r\nconst loginMainPath = 'users/';\r\n\r\nexport default class Login extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            username:'',\r\n            password:'',\r\n            statusMessage:'',\r\n            showStatus:false,\r\n            statusSeverity:'info',\r\n        };\r\n\r\n        this.closeShowStatus = this.closeShowStatus.bind(this);\r\n        this.submitCredentials = this.submitCredentials.bind(this);\r\n    }\r\n\r\n    submitCredentials() {\r\n        axios.post(\r\n            getURL(loginMainPath, 'authenticate'),\r\n            {\r\n                \"username\":this.state.username,\r\n                \"password\":this.state.password,\r\n            }\r\n            ).then(response => {\r\n                var valid = response.data['message'];\r\n                if (valid == 'success') {\r\n                    this.setState({ message: '' });\r\n                    this.props.loginFunc(response.data['token'], response.data['privilege']);\r\n                } else {\r\n                    this.setState({ showStatus:true, statusMessage:response.data['message'] });\r\n                }\r\n            });\r\n        this.props.loginFunc('token', Privilege.ADMIN);\r\n    }\r\n\r\n    updateUsername(event) {\r\n        this.setState({ username: event.target.value })\r\n    }\r\n\r\n    updatePassword(event) {\r\n        this.setState({ password: event.target.value })\r\n    }\r\n\r\n    closeShowStatus() {\r\n        this.setState({ showStatus: false })\r\n    }\r\n\r\n    onKeyPressed(event) {\r\n        console.log(\"key down\");\r\n        if (event.key === 'Enter') {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n            this.submitCredentials();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Grid\r\n                container\r\n                spacing={5}\r\n                direction=\"column\"\r\n                justify=\"flex-start\"\r\n                alignItems=\"center\"\r\n                onKeyDown={(e) => this.onKeyPressed(e)}\r\n                style={{\r\n                    \"minHeight\": \"102vh\",\r\n                    \"background\": \"#56ab2f\",\r\n                    \"background\": \"-webkit-linear-gradient(to top, #a8e063, #56ab2f)\",\r\n                    \"background\": \"linear-gradient(to top, #a8e063, #56ab2f)\",\r\n                }}\r\n            >\r\n                <Grid item xs={12}>\r\n                    <img src={logo} style={{height: \"200px\", \"marginTop\": \"50px\"}} />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <Card\r\n                        style={\r\n                            {\r\n                                minWidth: '20vw',\r\n                            }\r\n                        }\r\n                    >\r\n                        <CardContent>\r\n                            <Grid\r\n                                container\r\n                                spacing={1}\r\n                                direction=\"column\"\r\n                                justify=\"center\"\r\n                                alignItems=\"center\"\r\n                            >\r\n                                <Grid container item alignItems=\"flex-start\" xs={12}>\r\n                                    <Typography\r\n                                        variant=\"h4\"\r\n                                        color=\"textPrimary\"\r\n                                        fontWeight=\"fontWeightBold\"\r\n                                        gutterBottom\r\n                                    >\r\n                                        Login\r\n                                    </Typography>\r\n                                </Grid>\r\n                                <Grid item xs={12}>\r\n                                    <TextField\r\n                                        id=\"outlined-basic\"\r\n                                        label=\"Username\"\r\n                                        variant=\"outlined\"\r\n                                        required={true}\r\n                                        ref='username'\r\n                                        onChange={this.updateUsername.bind(this)}\r\n                                        style={{minWidth: \"15vw\"}}\r\n                                    />\r\n                                </Grid>\r\n                                <Grid item xs={12}>\r\n                                    <TextField\r\n                                        id=\"outlined-basic\"\r\n                                        label=\"Password\"\r\n                                        variant=\"outlined\"\r\n                                        required={true}\r\n                                        ref='password'\r\n                                        type=\"password\"\r\n                                        onChange={this.updatePassword.bind(this)}\r\n                                        style={{minWidth: \"15vw\"}}\r\n                                    />\r\n                                </Grid>\r\n                                <Grid item xs={12}>\r\n                                    <Button\r\n                                        onClick={this.submitCredentials}\r\n                                        variant=\"contained\"\r\n                                        color=\"primary\"\r\n                                        style={{minWidth: \"15vw\"}}\r\n                                    >\r\n                                        Sign In\r\n                                    </Button>\r\n                                </Grid>\r\n                                <Grid container item direciton=\"row\" justify=\"center\" alignItems=\"center\" xs={12}>\r\n                                        <hr style={{width: \"5vw\"}} />\r\n                                        <Typography color=\"textSecondary\">\r\n                                            Or\r\n                                        </Typography>\r\n                                        <hr style={{width: \"5vw\"}} />\r\n                                </Grid>\r\n                                <Grid item xs={12}>\r\n                                    <Button\r\n                                        onClick={this.submitCredentials}\r\n                                        variant=\"contained\"\r\n                                        color=\"primary\"\r\n                                    >\r\n                                        Sign In with NetID\r\n                                    </Button>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </CardContent>\r\n                    </Card>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <StatusDisplay\r\n                        open={this.state.showStatus}\r\n                        severity={this.state.statusSeverity}\r\n                        closeStatus={this.closeShowStatus}\r\n                        message={this.state.statusMessage}\r\n                    />\r\n                </Grid>\r\n            </Grid>\r\n\r\n        );\r\n    }\r\n}\r\n","export enum UserCommand {\r\n    create = 'create/',\r\n    delete = 'delete/',\r\n    edit = 'edit/',\r\n    view = 'view/',\r\n    detailView = 'detailView/',\r\n    search='search/',\r\n}\r\n","export enum UserInput {\r\n    Username='username',\r\n    Password='password',\r\n    Email='email',\r\n    display_name='display_name',\r\n    Privilege='privilege',\r\n}\r\n","import React from 'react';\r\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\r\nimport CloudDownloadIcon from '@material-ui/icons/CloudDownload';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nexport default class ButtonsModel extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n\r\n        };\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div>\r\n                <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    startIcon={<CloudUploadIcon />}\r\n                    onClick={this.props.openImportModal}\r\n                >\r\n                    Import\r\n                </Button>\r\n                <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    startIcon={<CloudDownloadIcon />}\r\n                    onClick={this.props.downloadTable}\r\n                >\r\n                    Export\r\n                </Button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nexport default class FilterModel extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            filters:{},\r\n        };\r\n    }\r\n\r\n    updateSearchText(event) {\r\n        if (this.state.filters.hasOwnProperty(event.target.id)) {\r\n            this.state.filters[event.target.id] = event.target.value;\r\n            this.forceUpdate();\r\n        } else {\r\n            var value = (event.target.value == null) ? '' : event.target.value;\r\n            this.state.filters[event.target.id] = event.target.value;\r\n            //this.state.filters.push({ key:event.target.id, value: value});\r\n            this.forceUpdate();\r\n        }\r\n    }\r\n\r\n    search() {\r\n        this.props.search(this.state.filters);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.props.filters.map((filter, index) => (\r\n                    <div>\r\n                        <SearchIcon />\r\n                        <InputBase\r\n                            placeholder={filter+\" filter\"}\r\n                            inputProps={{ 'aria-label': 'search' }}\r\n                            onChange={this.updateSearchText.bind(this)}\r\n                            id={filter}\r\n                        />\r\n                    </div>\r\n                ))\r\n                }\r\n                <div>\r\n                    <Button\r\n                        onClick={this.search.bind(this)}\r\n                    >\r\n                        Search\r\n                    </Button>\r\n                </div>\r\n                Click the search button to populate table. Searching with empty filters searches over all values. Click on row values to see detailed view.\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from '@material-ui/core/Button';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport { palette } from '@material-ui/system';\r\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\r\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\r\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\n\r\nexport default class DetailModel extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            showConfirmationBox:false,\r\n        };\r\n\r\n        this.closeModal = this.closeModal.bind(this);\r\n        this.confirmDelete = this.confirmDelete.bind(this);\r\n        this.deleteItem = this.deleteItem.bind(this);\r\n    }\r\n\r\n    confirmDelete() {\r\n        this.setState({ showConfirmationBox: true });\r\n    }\r\n\r\n    closeModal() {\r\n        this.setState({showConfirmationBox:false,});\r\n    }\r\n\r\n    deleteItem() {\r\n        this.setState({ showConfirmationBox: false });\r\n        this.props.delete();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n        <div>\r\n            {!this.props.showDetailedView ? null:\r\n            <ExpansionPanel >\r\n                    <ExpansionPanelSummary\r\n                        expandIcon={<ExpandMoreIcon />}\r\n                    >\r\n                        <Typography>Create</Typography>\r\n                    </ExpansionPanelSummary>\r\n                    <ExpansionPanelDetails>\r\n                    {\r\n                this.props.loading ? <CircularProgress /> :\r\n                <div>\r\n                    {this.props.inputs.map(input => (\r\n                        <TextField name={input} disabled={this.props.disabled} id=\"standard-basic\" label={input} onChange={this.props.updateModelEdited} defaultValue={this.props.defaultValues[input]}/>\r\n                    ))}\r\n                    {this.props.disabled ? null:\r\n                    <div>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            onClick={this.props.edit}\r\n                            disabled={this.state.showConfirmationBox}\r\n                        >\r\n                            Save\r\n                        </Button>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            onClick={this.confirmDelete}\r\n                            disabled={this.state.showConfirmationBox}\r\n                        >\r\n                            Delete\r\n                        </Button>\r\n                    </div>}\r\n                    {this.state.showConfirmationBox ? <div>\r\n                        Are you sure you wish to delete?\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            onClick={this.deleteItem}\r\n                        >\r\n                            Yes\r\n                        </Button>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            onClick={this.closeModal}\r\n                        >\r\n                            No\r\n                        </Button>\r\n                    </div>:null}\r\n                </div>}\r\n                    </ExpansionPanelDetails>\r\n                </ExpansionPanel>}\r\n        </div>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from '@material-ui/core/Button';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\r\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\r\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport '../../../stylesheets/Models.css';\r\n\r\nexport default class CreateModel extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n\r\n        };\r\n    }\r\n\r\n    render() {\r\n        return (\r\n        <div>\r\n            <ExpansionPanel class=\"create-expansion-tab\">\r\n                    <ExpansionPanelSummary\r\n                        expandIcon={<ExpandMoreIcon />}\r\n                    >\r\n                        <Typography>Create</Typography>\r\n                    </ExpansionPanelSummary>\r\n                    <ExpansionPanelDetails class=\"create-expansion-tab\">\r\n                    <div>\r\n                    {this.props.inputs.map((input, index) => (\r\n                        (index===0 && this.props.useAutocomplete) ? <Autocomplete\r\n                            id=\"combo-box-demo\"\r\n                            options={this.props.options}\r\n                            includeInputInList\r\n                            freeSolo\r\n                            renderInput={params => (\r\n                            <TextField {...params} label={input} name={input} onChange={this.props.updateModelCreator} onBlur={this.props.updateModelCreator} variant=\"outlined\" fullWidth />\r\n                            )}\r\n                        /> :\r\n                        <TextField id=\"standard-basic\" variant=\"outlined\" label={input} name={input} onChange={this.props.updateModelCreator}/>\r\n                    ))}\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        onClick={this.props.createModel}\r\n                    >\r\n                        Create\r\n                    </Button>\r\n                </div>\r\n                    </ExpansionPanelDetails>\r\n                </ExpansionPanel>\r\n        </div>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport { palette } from '@material-ui/system';\r\n\r\nexport default class UploadModal extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {};\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Modal\r\n                style={{top: `50%`,left: `50%`,transform: `translate(-50%, -50%)`, background:'#AAAAAA'}}\r\n                aria-labelledby=\"simple-modal-title\"\r\n                aria-describedby=\"simple-modal-description\"\r\n                open={this.props.showImportModal}\r\n                onClose={this.props.closeImportModal}\r\n            >\r\n                <div>\r\n                    <div>\r\n                    <input\r\n                        type='file'\r\n                        accept=\".csv\"\r\n                        onChange={this.props.chooseFile}\r\n                    />\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        onClick={this.props.uploadFile}\r\n                    >\r\n                        Upload\r\n                    </Button>\r\n                    </div>\r\n                    <p\r\n                        style={{color: `white`}}\r\n                    >\r\n                        {this.props.textDescription}\r\n                    </p>\r\n                </div>\r\n            </Modal>\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nexport default class TableView extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n\r\n    };\r\n  }\r\n\r\n  showDetailedView(event) {\r\n    this.props.showDetailedView(event.target.id);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <TableContainer component={Paper}>\r\n          <Table className={{minWidth: 650}} aria-label=\"simple table\">\r\n            <TableHead>\r\n              <TableRow >\r\n                {this.props.columns.map(col => (<TableCell><span id={col}>{col}</span></TableCell>))}\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {this.props.vals.map((row, index)=> (\r\n              <TableRow>\r\n                {this.props.keys.map(key => (<TableCell scope=\"row\"><span id={index} onClick={this.showDetailedView.bind(this)}>{row[key]}</span></TableCell>))}\r\n              </TableRow>\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport axios from 'axios';\r\nimport { CSVLink } from \"react-csv\";\r\n\r\nimport { ModelCommand } from '../enums/ModelCommands.ts'\r\nimport { ModelInput } from '../enums/ModelInputs.ts'\r\n\r\nimport ButtonsModel from '../helpers/ButtonsModel';\r\nimport FilterModel from '../helpers/FilterModel';\r\nimport DetailModel from '../helpers/DetailModel';\r\nimport CreateModel from '../helpers/CreateModel';\r\n\r\nimport { Privilege } from '../../enums/privilegeTypes.ts'\r\n\r\nimport UploadModal from '../../helpers/UploadModal';\r\nimport getURL from '../../helpers/functions/GetURL';\r\nimport TableView from '../../helpers/TableView';\r\nimport StatusDisplay from '../../helpers/StatusDisplay';\r\n\r\nimport ErrorBoundray from '../../errors/ErrorBoundry';\r\n\r\nconst inputs = [\r\n    'vendor',\r\n    'model_number',\r\n    'height',\r\n    'display_color',\r\n    'ethernet_ports',\r\n    'power_ports',\r\n    'cpu',\r\n    'memory',\r\n    'storage',\r\n    'comments',\r\n]\r\n\r\nconst columns = [\r\n    'vendor',\r\n    'model_number',\r\n    'height',\r\n]\r\n\r\nconst modelsMainPath = 'models/';\r\nconst modelDownloadFileName = 'models.csv';\r\n\r\nexport default class ModelsView extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n\r\n            // modals\r\n            showCreateModal:false,\r\n            showImportModal:false,\r\n\r\n            // table items\r\n            items:[], //Constants.testModelArray,\r\n\r\n            // vals for creating a new model\r\n            createdModel : {\r\n                'vendor':'',\r\n                'model_number':'',\r\n                'height':'',\r\n                'display_color':'',\r\n                'ethernet_ports':'',\r\n                'power_ports':'',\r\n                'cpu':'',\r\n                'memory':'',\r\n                'storage':'',\r\n                'comment':'',\r\n            },\r\n            createdVendor:'',\r\n            createdModelNum:'',\r\n            createdHeight:'',\r\n            createdDispClr:'',\r\n            createdEthPorts:'',\r\n            createdPwrPorts:'',\r\n            createdCPU:'',\r\n            createdMem:'',\r\n            createdStorage:'',\r\n            createdComments:'',\r\n\r\n            // vals for deleting a model\r\n            deleteVendor:'',\r\n            deleteModel:'',\r\n\r\n            // vals for viewing a model\r\n            viewVendor:'',\r\n            viewModel:'',\r\n\r\n            // searching a model\r\n            searchText:\"\",\r\n            searchVendor:'',\r\n            searchModelNum:'',\r\n            searchHeight:'',\r\n\r\n            // csv data\r\n            csvData:'',\r\n            importedFile:null,\r\n\r\n            // detailed view\r\n            showDetailedView: false,\r\n            detailViewLoading:false,\r\n            detailedValues : {\r\n                'vendor':'',\r\n                'model_number':'',\r\n                'height':'',\r\n                'display_color':'',\r\n                'ethernet_ports':'',\r\n                'power_ports':'',\r\n                'cpu':'',\r\n                'memory':'',\r\n                'storage':'',\r\n                'comment':'',\r\n            },\r\n            originalVendor:'',\r\n            originalModelNumber:'',\r\n            originalHeight:'',\r\n\r\n            showStatus:false,\r\n            statusSeverity:'',\r\n            statusMessage:'',\r\n\r\n            vendorsList:[],\r\n            madeVendorQuery:false,\r\n\r\n        };\r\n\r\n        this.openCreateModal = this.openCreateModal.bind(this);\r\n        this.openImportModal = this.openImportModal.bind(this);\r\n        this.downloadTable = this.downloadTable.bind(this);\r\n        this.updateSearchText = this.updateSearchText.bind(this);\r\n        this.search = this.search.bind(this);\r\n        this.closeImportModal = this.closeImportModal.bind(this);\r\n        this.closeCreateModal = this.closeCreateModal.bind(this);\r\n        this.showDetailedView = this.showDetailedView.bind(this);\r\n        this.editModel = this.editModel.bind(this);\r\n        this.closeDetailedView = this.closeDetailedView.bind(this);\r\n        this.updateModelEdited = this.updateModelEdited.bind(this);\r\n        this.closeCreateModal = this.closeCreateModal.bind(this);\r\n        this.createModel = this.createModel.bind(this);\r\n        this.updateModelCreator = this.updateModelCreator.bind(this);\r\n        this.deleteModel = this.deleteModel.bind(this);\r\n        this.closeShowStatus = this.closeShowStatus.bind(this);\r\n        this.getVendorList = this.getVendorList.bind(this);\r\n        this.chooseFile = this.chooseFile.bind(this);\r\n        this.uploadFile = this.uploadFile.bind(this);\r\n        this.sendUploadedFile = this.sendUploadedFile.bind(this);\r\n        this.initialize = this.initialize.bind(this);\r\n\r\n        axios.defaults.headers.common['token'] = this.props.token;\r\n        axios.defaults.headers.common['privilege'] = this.props.privilege;\r\n    }\r\n\r\n    createModel() {\r\n        axios.post(\r\n            getURL(modelsMainPath, ModelCommand.create),\r\n            {\r\n                'vendor':this.state.createdModel[ModelInput.Vendor],\r\n                'model_number':this.state.createdModel[ModelInput.model_number],\r\n                'height':this.state.createdModel[ModelInput.Height],\r\n                'display_color':this.state.createdModel[ModelInput.display_color],\r\n                'ethernet_ports':this.state.createdModel[ModelInput.ethernet_ports],\r\n                'power_ports':this.state.createdModel[ModelInput.power_ports],\r\n                'cpu':this.state.createdModel[ModelInput.CPU],\r\n                'memory':this.state.createdModel[ModelInput.Memory],\r\n                'storage':this.state.createdModel[ModelInput.Storage],\r\n                'comment':this.state.createdModel[ModelInput.Comment],\r\n            }\r\n            ).then(\r\n                response => {\r\n                    if (response.data.message === 'success') {\r\n                        this.setState({\r\n                            showStatus: true,\r\n                            statusMessage:'success',\r\n                            statusMessage: \"Successfully created model\",\r\n                            statusSeverity:\"success\",\r\n                            createdModel : {\r\n                                'vendor':'',\r\n                                'model_number':'',\r\n                                'height':'',\r\n                                'display_color':'',\r\n                                'ethernet_ports':'',\r\n                                'power_ports':'',\r\n                                'cpu':'',\r\n                                'memory':'',\r\n                                'storage':'',\r\n                                'comment':'',\r\n                            },\r\n                            showCreateModal:false,\r\n                        });\r\n                        this.getVendorList();\r\n                        this.searchModels();\r\n                    } else {\r\n                        this.setState({ showStatus: true, statusMessage: response.data.message, statusSeverity:\"error\" })\r\n                    }\r\n                });\r\n    }\r\n\r\n    editModel() {\r\n        axios.post(\r\n            getURL(modelsMainPath, ModelCommand.edit),\r\n            {\r\n                'vendorOriginal':this.state.originalVendor,\r\n                'model_numberOriginal':this.state.originalModelNumber,\r\n                'heightOriginal':this.state.originalHeight,\r\n\r\n                'vendor':this.state.detailedValues[ModelInput.Vendor],\r\n                'model_number':this.state.detailedValues[ModelInput.model_number],\r\n                'height':this.state.detailedValues[ModelInput.Height],\r\n                'display_color':this.state.detailedValues[ModelInput.display_color],\r\n                'ethernet_ports':this.state.detailedValues[ModelInput.ethernet_ports],\r\n                'power_ports':this.state.detailedValues[ModelInput.power_ports],\r\n                'cpu':this.state.detailedValues[ModelInput.CPU],\r\n                'memory':this.state.detailedValues[ModelInput.Memory],\r\n                'storage':this.state.detailedValues[ModelInput.Storage],\r\n                'comment':this.state.detailedValues[ModelInput.Comment],\r\n            }\r\n            ).then(\r\n                response => {\r\n                    if (response.data.message === 'success') {\r\n                        this.setState({\r\n                            showStatus: true,\r\n                            statusSeverity:'success',\r\n                            statusMessage: \"Successfully edited model\",\r\n                            originalVendor:'',\r\n                            originalModelNumber:'',\r\n                            originalHeight:'',\r\n                            detailedValues : {\r\n                                'vendor':'',\r\n                                'model_number':'',\r\n                                'height':'',\r\n                                'display_color':'',\r\n                                'ethernet_ports':'',\r\n                                'power_ports':'',\r\n                                'cpu':'',\r\n                                'memory':'',\r\n                                'storage':'',\r\n                                'comment':'',\r\n                            },\r\n                            showDetailedView:false\r\n                        });\r\n                        this.getVendorList();\r\n                        this.searchModels();\r\n                    } else {\r\n                        this.setState({ showStatus: true, statusMessage: response.data.message, statusSeverity:\"error\" })\r\n                    }\r\n                });\r\n    }\r\n\r\n\r\n    deleteModel() {\r\n        axios.post(\r\n            getURL(modelsMainPath, ModelCommand.delete),\r\n            {\r\n                'vendor':this.state.originalVendor,\r\n                'model_number':this.state.originalModelNumber,\r\n            }\r\n            ).then(\r\n                response => {\r\n                    if (response.data.message === 'success') {\r\n                        this.setState({\r\n                            showStatus: true,\r\n                            statusSeverity:'success',\r\n                            statusMessage: \"Successfully deleted model\",\r\n                            detailedValues : {\r\n                                'vendor':'',\r\n                                'model_number':'',\r\n                                'height':'',\r\n                                'display_color':'',\r\n                                'ethernet_ports':'',\r\n                                'power_ports':'',\r\n                                'cpu':'',\r\n                                'memory':'',\r\n                                'storage':'',\r\n                                'comment':'',\r\n                            },\r\n                            showDetailedView:false\r\n                        });\r\n                        this.getVendorList();\r\n                        this.searchModels();\r\n                    } else {\r\n                        this.setState({ showStatus: true, statusMessage: response.data.message, statusSeverity:\"error\" })\r\n                    }\r\n                });\r\n    }\r\n\r\n    detailViewModel(vendor, modelNum) {\r\n        axios.post(\r\n            getURL(modelsMainPath, ModelCommand.detailView),\r\n            {\r\n                'vendor':vendor,\r\n                'model_number':modelNum,\r\n            }, this.props.headers\r\n            ).then(response => this.setState({ detailedValues: response.data['models'][0], detailViewLoading:false}));\r\n\r\n        this.setState({\r\n            viewVendor:'',\r\n            viewModel:'',\r\n        });\r\n    }\r\n\r\n    searchModels() {\r\n        axios.post(\r\n            getURL(modelsMainPath, ModelCommand.search),\r\n            {\r\n                'filter':{\r\n                    'vendor':this.state.searchVendor,\r\n                    'model_number':this.state.searchModelNum,\r\n                    'height':this.state.searchHeight,\r\n                }\r\n            }\r\n            ).then(response => {\r\n                this.setState({ items: response.data['models'] })\r\n            });\r\n\r\n        this.setState({\r\n            searchText:'',\r\n        });\r\n    }\r\n\r\n    getVendorList() {\r\n        axios.get(\r\n            getURL(modelsMainPath, ModelCommand.VENDOR_VALUES), {}\r\n            ).then(response => this.setState({ vendorsList: response.data.results }));\r\n\r\n        this.setState({ madeVendorQuery: true });\r\n    }\r\n\r\n    sendUploadedFile(data) {\r\n        axios.post(\r\n            getURL(modelsMainPath, ModelCommand.UPLOAD_FILE), data\r\n            ).then(response => {\r\n                if (response.data.message === 'success') {\r\n                    this.setState({ showStatus: true, statusMessage: response.data.summary, statusSeverity:'success', showImportModal: false,})\r\n                    this.searchModels();\r\n                } else {\r\n                    this.setState({ showStatus: true, statusMessage: response.data.message, statusSeverity:\"error\" })\r\n                }\r\n            });\r\n    }\r\n\r\n    downloadTable() {\r\n        axios.post(\r\n            getURL(modelsMainPath, ModelCommand.EXPORT_FILE),\r\n            {\r\n                'filter':{\r\n                    'vendor':this.state.searchVendor,\r\n                    'model_number':this.state.searchModelNum,\r\n                    'height':this.state.searchHeight,\r\n                }\r\n            }\r\n            ).then(response => {\r\n                this.setState({ csvData: response.data.csvData });\r\n                this.csvLink.link.click();\r\n            });\r\n    }\r\n\r\n    search(filters) {\r\n        this.setState({ searchVendor:filters['vendor'], searchModelNum:filters['model_number'], searchHeight:filters['height']}, this.searchModels);\r\n    }\r\n\r\n    openCreateModal() {\r\n        this.setState({showCreateModal: true});\r\n    }\r\n\r\n    openImportModal() {\r\n        this.setState({showImportModal: true});\r\n    }\r\n\r\n    showDetailedView(id) {\r\n        this.setState({\r\n            showDetailedView: true,\r\n            detailViewLoading:true,\r\n\r\n            originalHeight:this.state.items[id]['height'],\r\n            originalModelNumber:this.state.items[id]['model_number'],\r\n            originalVendor:this.state.items[id]['vendor'],\r\n         });\r\n\r\n        var vendor = this.state.items[id]['vendor'];\r\n        var modelNum = this.state.items[id]['model_number'];\r\n\r\n        this.detailViewModel(vendor, modelNum);\r\n    }\r\n\r\n    closeCreateModal() {\r\n        this.setState({showCreateModal: false});\r\n    }\r\n\r\n    closeImportModal() {\r\n        this.setState({showImportModal: false});\r\n    }\r\n\r\n    closeDetailedView() {\r\n        this.setState({ showDetailedView: false })\r\n    }\r\n\r\n    updateModelCreator(event) {\r\n        this.state.createdModel[event.target.name] = event.target.value;\r\n        this.forceUpdate()\r\n    }\r\n\r\n    updateModelEdited(event) {\r\n        this.state.detailedValues[event.target.name] = event.target.value;\r\n        this.forceUpdate()\r\n    }\r\n\r\n    updateSearchText(event) {\r\n        this.setState({ searchText: event.target.value})\r\n    }\r\n\r\n    closeShowStatus() {\r\n        this.setState({ showStatus: false })\r\n    }\r\n\r\n    uploadFile() {\r\n        const data = new FormData();\r\n        data.append('file', this.state.importedFile);\r\n        this.sendUploadedFile(data);\r\n    }\r\n\r\n    chooseFile(event) {\r\n        this.setState({ importedFile: event.target.files[0] })\r\n    }\r\n\r\n    initialize() {\r\n        this.searchModels();\r\n        this.getVendorList();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <ErrorBoundray>\r\n                {(this.state.madeVendorQuery) ? null: this.initialize()}\r\n                <StatusDisplay\r\n                    open={this.state.showStatus}\r\n                    severity={this.state.statusSeverity}\r\n                    closeStatus={this.closeShowStatus}\r\n                    message={this.state.statusMessage}\r\n                />\r\n                {(this.props.privilege == Privilege.ADMIN) ?\r\n                    (<div><ButtonsModel\r\n                    openCreateModal={this.openCreateModal}\r\n                    openImportModal={this.openImportModal}\r\n                    downloadTable={this.downloadTable}\r\n                />\r\n                <CSVLink\r\n                    data={this.state.csvData}\r\n                    filename={modelDownloadFileName}\r\n                    className=\"hidden\"\r\n                    ref={(r) => this.csvLink = r}\r\n                    target=\"_blank\"\r\n                />\r\n                <CreateModel\r\n                    showCreateModal={this.state.showCreateModal}\r\n                    closeCreateModal={this.closeCreateModal}\r\n                    createModel={this.createModel}\r\n                    updateModelCreator={this.updateModelCreator}\r\n                    inputs={inputs}\r\n                    options={this.state.vendorsList}\r\n                    useAutocomplete={true}\r\n                />\r\n                <UploadModal\r\n                    showImportModal={this.state.showImportModal}\r\n                    closeImportModal={this.closeImportModal}\r\n                    uploadFile={this.uploadFile}\r\n                    chooseFile={this.chooseFile}\r\n                    textDescription=\"The following format should be used for each row: vendor,model_number,height,display_color,ethernet_ports,power_ports,cpu,memory,storage,comment\"\r\n                /></div>):null\r\n                }\r\n                <FilterModel\r\n                    updateSearchText={this.updateSearchText}\r\n                    search={this.search}\r\n                    filters={columns}\r\n                />\r\n                <TableView\r\n                    columns={columns}\r\n                    vals={this.state.items}\r\n                    keys={columns}\r\n                    showDetailedView={this.showDetailedView}\r\n                    filters={columns}\r\n                />\r\n                <DetailModel\r\n                    showDetailedView={this.state.showDetailedView}\r\n                    closeDetailedView={this.closeDetailedView}\r\n                    inputs={inputs}\r\n                    updateModelEdited={this.updateModelEdited}\r\n                    defaultValues={this.state.detailedValues}\r\n                    loading={this.state.detailViewLoading}\r\n                    edit={this.editModel}\r\n                    delete={this.deleteModel}\r\n                    disabled={this.props.privilege==Privilege.USER}\r\n                />\r\n            </ErrorBoundray>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\r\nimport CloudDownloadIcon from '@material-ui/icons/CloudDownload';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nexport default class ButtonsUser extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n\r\n        };\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div>\r\n                <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    startIcon={<CloudUploadIcon />}\r\n                    onClick={this.props.openImportModal}\r\n                >\r\n                    Import\r\n                </Button>\r\n                <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    startIcon={<CloudDownloadIcon />}\r\n                    onClick={this.props.downloadTable}\r\n                >\r\n                    Export\r\n                </Button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","export enum InstanceCommand {\r\n    create = 'create/',\r\n    delete = 'delete/',\r\n    edit = 'edit/',\r\n    view = 'view/',\r\n    detailView = 'detailView/',\r\n    search = 'search/',\r\n    GET_ALL_MODELS = 'assistedmodel/',\r\n    UPLOAD_FILE = 'import/',\r\n    EXPORT_FILE = 'export/',\r\n}\r\n","export enum InstanceInput {\r\n    Model = 'model',\r\n    Hostname = 'hostname',\r\n    Rack = 'rack',\r\n    RackU = 'rack_position',\r\n    Owner = 'owner',\r\n    Comment = 'comment',\r\n}\r\n","import React from 'react';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nexport default class Filters extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            filters:{},\r\n        };\r\n    }\r\n\r\n    updateSearchText(event) {\r\n        if (this.state.filters.hasOwnProperty(event.target.id)) {\r\n            this.state.filters[event.target.id] = event.target.value;\r\n            this.forceUpdate();\r\n        } else {\r\n            var value = (event.target.value == null) ? '' : event.target.value;\r\n            this.state.filters[event.target.id] = event.target.value;\r\n            //this.state.filters.push({ key:event.target.id, value: value});\r\n            this.forceUpdate();\r\n        }\r\n    }\r\n\r\n    search() {\r\n        this.props.search(this.state.filters);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.props.filters.map((filter, index) => (\r\n                    <div>\r\n                        <SearchIcon />\r\n                        <InputBase\r\n                            placeholder={filter+\" filter\"}\r\n                            inputProps={{ 'aria-label': 'search' }}\r\n                            onChange={this.updateSearchText.bind(this)}\r\n                            id={filter}\r\n                        />\r\n                    </div>\r\n                ))\r\n                }\r\n                <div>\r\n                    <Button\r\n                        onClick={this.search.bind(this)}\r\n                    >\r\n                        Search\r\n                    </Button>\r\n                </div>\r\n                Click the search button to populate table. Searching with empty filters searches over all values. Click on row values to see detailed view.\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from '@material-ui/core/Button';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport { palette } from '@material-ui/system';\r\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\r\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\r\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\n\r\nexport default class DetailedView extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            showConfirmationBox:false,\r\n        };\r\n\r\n        this.closeModal = this.closeModal.bind(this);\r\n        this.confirmDelete = this.confirmDelete.bind(this);\r\n        this.deleteItem = this.deleteItem.bind(this);\r\n    }\r\n\r\n    confirmDelete() {\r\n        this.setState({ showConfirmationBox: true });\r\n    }\r\n\r\n    closeModal() {\r\n        this.setState({showConfirmationBox:false,});\r\n    }\r\n\r\n    deleteItem() {\r\n        this.setState({ showConfirmationBox: false });\r\n        this.props.delete();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n        <div>\r\n            {!this.props.showDetailedView ? null:\r\n            <ExpansionPanel >\r\n                    <ExpansionPanelSummary\r\n                        expandIcon={<ExpandMoreIcon />}\r\n                    >\r\n                        <Typography>Create</Typography>\r\n                    </ExpansionPanelSummary>\r\n                    <ExpansionPanelDetails>\r\n                    {\r\n                this.props.loading ? <CircularProgress /> :\r\n                <div>\r\n                    {this.props.inputs.map(input => (\r\n                        <TextField name={input} disabled={this.props.disabled} id=\"standard-basic\" label={input} onChange={this.props.updateModelEdited} defaultValue={this.props.defaultValues[input]}/>\r\n                    ))}\r\n                    {this.props.disabled ? null:\r\n                    <div>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            onClick={this.props.edit}\r\n                            disabled={this.state.showConfirmationBox}\r\n                        >\r\n                            Save\r\n                        </Button>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            onClick={this.confirmDelete}\r\n                            disabled={this.state.showConfirmationBox}\r\n                        >\r\n                            Delete\r\n                        </Button>\r\n                    </div>}\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            onClick={this.props.closeDetailedView}\r\n                            disabled={this.state.showConfirmationBox}\r\n                        >\r\n                            Close\r\n                        </Button>\r\n\r\n                    {this.state.showConfirmationBox ? <div>\r\n                        Are you sure you wish to delete?\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            onClick={this.deleteItem}\r\n                        >\r\n                            Yes\r\n                        </Button>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            onClick={this.closeModal}\r\n                        >\r\n                            No\r\n                        </Button>\r\n                    </div>:null}\r\n                </div>}\r\n                    </ExpansionPanelDetails>\r\n                </ExpansionPanel>}\r\n        </div>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from '@material-ui/core/Button';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\r\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\r\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport '../../../stylesheets/Models.css';\r\n\r\nexport default class CreateModal extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n\r\n        };\r\n    }\r\n\r\n    render() {\r\n        return (\r\n        <div>\r\n            <ExpansionPanel class=\"create-expansion-tab\">\r\n                    <ExpansionPanelSummary\r\n                        expandIcon={<ExpandMoreIcon />}\r\n                    >\r\n                        <Typography>Create</Typography>\r\n                    </ExpansionPanelSummary>\r\n                    <ExpansionPanelDetails class=\"create-expansion-tab\">\r\n                    <div>\r\n                    {this.props.inputs.map((input, index) => (\r\n                        (index===0 && this.props.useAutocomplete) ? <Autocomplete\r\n                            id=\"combo-box-demo\"\r\n                            options={this.props.options}\r\n                            includeInputInList\r\n                            freeSolo\r\n                            renderInput={params => (\r\n                            <TextField {...params} label={input} name={input} onChange={this.props.updateModelCreator} onBlur={this.props.updateModelCreator} variant=\"outlined\" fullWidth />\r\n                            )}\r\n                        /> :\r\n                        <TextField id=\"standard-basic\" variant=\"outlined\" label={input} name={input} onChange={this.props.updateModelCreator}/>\r\n                    ))}\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        onClick={this.props.createModel}\r\n                    >\r\n                        Create\r\n                    </Button>\r\n                </div>\r\n                    </ExpansionPanelDetails>\r\n                </ExpansionPanel>\r\n        </div>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\nimport axios from 'axios';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport { UserCommand } from '../enums/UserCommands.ts'\r\nimport { UserInput } from '../enums/UserInputs.ts'\r\n\r\n\r\nimport ButtonsUser from '../helpers/ButtonsUser';\r\nimport FilterUser from '../helpers/FilterUser';\r\nimport DetailUser from '../helpers/DetailUser';\r\nimport CreateUser from '../helpers/CreateUser';\r\n\r\nimport UploadModal from '../../helpers/UploadModal';\r\nimport getURL from '../../helpers/functions/GetURL';\r\nimport TableView from '../../helpers/TableView';\r\nimport StatusDisplay from '../../helpers/StatusDisplay';\r\n\r\nimport { Privilege } from '../../enums/privilegeTypes.ts'\r\n\r\nimport ErrorBoundray from '../../errors/ErrorBoundry';\r\n\r\nconst inputs = [\r\n    'username',\r\n    'email',\r\n    'display_name',\r\n    'privilege',\r\n    'password',\r\n]\r\n\r\nconst columns = [\r\n    'username',\r\n    'email',\r\n    'display_name',\r\n    'privilege',\r\n]\r\n\r\nconst usersMainPath = 'users/';\r\nconst userDownloadFileName = 'users.csv';\r\n\r\nexport default class UsersView extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n\r\n            // modals\r\n            showCreateModal:false,\r\n            showImportModal:false,\r\n\r\n            // table items\r\n            items:[], //Constants.testUserArray,\r\n\r\n            // vals for creating a new user\r\n            createdUser : {\r\n                'username':'',\r\n                'password':'',\r\n                'display_name':'',\r\n                'email':'',\r\n                'privilege':'',\r\n            },\r\n\r\n            showStatus:false,\r\n            statusMessage:'',\r\n            statusSeverity:'',\r\n\r\n            searchUsernm:'',\r\n            searchEml:'',\r\n            searchDspNm:'',\r\n            searchPriv:'',\r\n\r\n            // vals for deleting a user\r\n            deleteUsername:'',\r\n\r\n            // vals for viewing a user\r\n            viewUser:'',\r\n\r\n            // csv data\r\n            csvData:[],\r\n\r\n            // detailed view\r\n            showDetailedView: false,\r\n            detailViewLoading:false,\r\n            detailedValues : {\r\n                'username':'',\r\n                'display_name':'',\r\n                'email':'',\r\n                'privilege':'',\r\n            },\r\n            originalUsername:'',\r\n\r\n            initialized:false,\r\n        };\r\n\r\n        this.createUser = this.createUser.bind(this);\r\n        this.editUser = this.editUser.bind(this);\r\n        this.deleteUser = this.deleteUser.bind(this);\r\n        this.detailViewUser = this.detailViewUser.bind(this);\r\n        this.searchUsers = this.searchUsers.bind(this);\r\n        this.search = this.search.bind(this);\r\n        this.openCreateModal = this.openCreateModal.bind(this);\r\n        this.openImportModal = this.openImportModal.bind(this);\r\n        this.showDetailedView = this.showDetailedView.bind(this);\r\n        this.closeCreateModal = this.closeCreateModal.bind(this);\r\n        this.closeImportModal = this.closeImportModal.bind(this);\r\n        this.closeDetailedView = this.closeDetailedView.bind(this);\r\n        this.updateUserCreator = this.updateUserCreator.bind(this);\r\n        this.updateUserEdited = this.updateUserEdited.bind(this);\r\n        this.closeShowStatus = this.closeShowStatus.bind(this);\r\n        this.initialized = this.initialized.bind(this);\r\n\r\n        axios.defaults.headers.common['token'] = this.props.token;\r\n        axios.defaults.headers.common['privilege'] = this.props.privilege;\r\n\r\n    }\r\n\r\n    createUser() {\r\n        axios.post(\r\n            getURL(usersMainPath, UserCommand.create),\r\n            {\r\n                'username':this.state.createdUser[UserInput.Username],\r\n                'password':this.state.createdUser[UserInput.Password],\r\n                'display_name':this.state.createdUser[UserInput.display_name],\r\n                'email':this.state.createdUser[UserInput.Email],\r\n                'privilege':this.state.createdUser[UserInput.Privilege],\r\n            }\r\n            ).then(response => {\r\n                if (response.data.message === 'success') {\r\n                    this.setState({\r\n                        showStatus: true,\r\n                        statusMessage: \"Successfully created user\",\r\n                        statusSeverity:\"success\",\r\n                        createdUser : {\r\n                            'username':'',\r\n                            'password':'',\r\n                            'display_name':'',\r\n                            'email':'',\r\n                            'privilege':'',\r\n                        },\r\n                        showCreateModal:false,\r\n                    });\r\n                    this.searchUsers();\r\n                } else {\r\n                    this.setState({ showStatus: true, statusMessage: response.data.message, statusSeverity:\"error\" })\r\n                }\r\n            });\r\n    }\r\n\r\n    editUser() {\r\n        axios.post(\r\n            getURL(usersMainPath, UserCommand.edit),\r\n            {\r\n                'username_original':this.state.originalUsername,\r\n                'username':this.state.detailedValues[UserInput.Username],\r\n                'display_name':this.state.detailedValues[UserInput.display_name],\r\n                'email':this.state.detailedValues[UserInput.Email],\r\n                'privilege':this.state.detailedValues[UserInput.Privilege],\r\n            }\r\n            ).then(response => {\r\n                if (response.data.message === 'success') {\r\n                    this.setState({\r\n                        showStatus: true,\r\n                        statusMessage: \"Successfully edited user\",\r\n                        statusSeverity:\"success\",\r\n                        originalUsername:'',\r\n                        detailedValues : {\r\n                            'username':'',\r\n                            'display_name':'',\r\n                            'email':'',\r\n                            'privilege':'',\r\n                        },\r\n                        showDetailedView:false,\r\n                    });\r\n                    this.searchUsers();\r\n                } else {\r\n                    this.setState({ showStatus: true, statusMessage: response.data.message, statusSeverity:\"error\" })\r\n                }\r\n            });\r\n    }\r\n\r\n\r\n    deleteUser() {\r\n        axios.post(\r\n            getURL(usersMainPath, UserCommand.delete),\r\n            {\r\n                'username':this.state.originalUsername,\r\n            }\r\n            ).then(response => {\r\n                if (response.data.message === 'success') {\r\n                    this.setState({\r\n                        showStatus: true,\r\n                        statusMessage: \"Successfully deleted user\",\r\n                        statusSeverity:\"success\",\r\n                        deleteUsername:'',\r\n                        showDetailedView:false,\r\n                    });\r\n                    this.searchUsers();\r\n                } else {\r\n                    this.setState({ showStatus: true, statusMessage: response.data.message, statusSeverity:\"error\" })\r\n                }\r\n            });\r\n    }\r\n\r\n    detailViewUser(username) {\r\n        axios.post(\r\n            getURL(usersMainPath, UserCommand.detailView),\r\n            {\r\n                'username':username,\r\n            }\r\n            ).then(response => this.setState({ detailedValues: response.data['user'], detailViewLoading:false}));\r\n\r\n        this.setState({\r\n            viewUser:'',\r\n        });\r\n    }\r\n\r\n    searchUsers() {\r\n        axios.post(\r\n            getURL(usersMainPath, UserCommand.search),\r\n            {\r\n                'filter':{\r\n                    'username':this.state.searchUsernm,\r\n                    'email':this.state.searchEml,\r\n                    'display_name':this.state.searchDspNm,\r\n                    'privilege':this.state.searchPriv,\r\n                }\r\n            }\r\n            ).then(response => this.setState({ items: (response.data['users']==null) ? [] : response.data['users'] }));\r\n\r\n        this.setState({ initialized: true})\r\n    }\r\n\r\n    search(filters) {\r\n        this.setState({\r\n            searchUsernm:filters['username'],\r\n            searchEml:filters['email'],\r\n            searchDspNm: filters['display_name'],\r\n            searchPriv:filters['privilege'],\r\n        }, this.searchUsers);\r\n    }\r\n\r\n    downloadTable() {\r\n        this.csvLink.link.click();\r\n    }\r\n\r\n    openCreateModal() {\r\n        this.setState({showCreateModal: true});\r\n    }\r\n\r\n    openImportModal() {\r\n        this.setState({showImportModal: true});\r\n    }\r\n\r\n    showDetailedView(id) {\r\n        this.setState({\r\n            showDetailedView: true,\r\n            detailViewLoading:true,\r\n            originalUsername:this.state.items[id]['username'],\r\n         });\r\n\r\n        var username = this.state.items[id]['username'];\r\n\r\n        this.detailViewUser(username);\r\n        //this.setState({ detailedValues: Constants.testUserArray[id], detailViewLoading:false})\r\n    }\r\n\r\n    closeCreateModal() {\r\n        this.setState({showCreateModal: false});\r\n    }\r\n\r\n    closeImportModal() {\r\n        this.setState({showImportModal: false});\r\n    }\r\n\r\n    closeDetailedView() {\r\n        this.setState({ showDetailedView: false })\r\n    }\r\n\r\n    updateUserCreator(event) {\r\n        this.state.createdUser[event.target.name] = event.target.value;\r\n        this.forceUpdate()\r\n    }\r\n\r\n    updateUserEdited(event) {\r\n        this.state.detailedValues[event.target.name] = event.target.value;\r\n        this.forceUpdate()\r\n    }\r\n\r\n    closeShowStatus() {\r\n        this.setState({ showStatus: false })\r\n    }\r\n\r\n    initialized() {\r\n        this.searchUsers();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {(this.state.initialized) ? null: this.initialized()}\r\n                <ErrorBoundray>\r\n                <StatusDisplay\r\n                    open={this.state.showStatus}\r\n                    severity={this.state.statusSeverity}\r\n                    closeStatus={this.closeShowStatus}\r\n                    message={this.state.statusMessage}\r\n                />\r\n                {(this.props.privilege == Privilege.ADMIN) ?\r\n                    (<div>\r\n                <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    onClick={this.openCreateModal}\r\n                >\r\n                    Create\r\n                </Button>\r\n                <CreateUser\r\n                    showCreateModal={this.state.showCreateModal}\r\n                    closeCreateModal={this.closeCreateModal}\r\n                    createModel={this.createUser}\r\n                    updateModelCreator={this.updateUserCreator}\r\n                    inputs={inputs}\r\n                    options={[]}\r\n                    useAutocomplete={false}\r\n                />\r\n                <UploadModal\r\n                    showImportModal={this.state.showImportModal}\r\n                    closeImportModal={this.closeImportModal}\r\n                /></div>):null\r\n            }\r\n                <FilterUser\r\n                    updateSearchText={this.updateSearchText}\r\n                    search={this.search}\r\n                    filters={columns}\r\n                />\r\n                <TableView\r\n                    columns={columns}\r\n                    vals={this.state.items}\r\n                    keys={columns}\r\n                    showDetailedView={this.showDetailedView}\r\n                    filters={columns}\r\n                />\r\n                <DetailUser\r\n                    showDetailedView={this.state.showDetailedView}\r\n                    closeDetailedView={this.closeDetailedView}\r\n                    inputs={columns}\r\n                    updateModelEdited={this.updateUserEdited}\r\n                    defaultValues={this.state.detailedValues}\r\n                    loading={this.state.detailViewLoading}\r\n                    edit={this.editUser}\r\n                    delete={this.deleteUser}\r\n                    disabled={this.props.privilege==Privilege.USER}\r\n                />\r\n                </ErrorBoundray>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","export enum RackCommand {\r\n    GET_ALL_RACKS = \"all\",\r\n    CREATE_RACKS = \"create\",\r\n    DELETE_RACKS = \"delete\",\r\n    GET_RACK_DETAILS = \"details\"\r\n}\r\n","import React from 'react';\r\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\r\nimport CloudDownloadIcon from '@material-ui/icons/CloudDownload';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nexport default class InstanceButtons extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n\r\n        };\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div>\r\n                <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    startIcon={<CloudUploadIcon />}\r\n                    onClick={this.props.openImportModal}\r\n                >\r\n                    Import\r\n                </Button>\r\n                <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    startIcon={<CloudDownloadIcon />}\r\n                    onClick={this.props.downloadTable}\r\n                >\r\n                    Export\r\n                </Button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nexport default class FilterInstance extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            filters:{},\r\n        };\r\n    }\r\n\r\n    updateSearchText(event) {\r\n        if (this.state.filters.hasOwnProperty(event.target.id)) {\r\n            this.state.filters[event.target.id] = event.target.value;\r\n            this.forceUpdate();\r\n        } else {\r\n            var value = (event.target.value == null) ? '' : event.target.value;\r\n            this.state.filters[event.target.id] = event.target.value;\r\n            //this.state.filters.push({ key:event.target.id, value: value});\r\n            this.forceUpdate();\r\n        }\r\n    }\r\n\r\n    search() {\r\n        this.props.search(this.state.filters);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.props.filters.map((filter, index) => (\r\n                    <div>\r\n                        <SearchIcon />\r\n                        <InputBase\r\n                            placeholder={filter+\" filter\"}\r\n                            inputProps={{ 'aria-label': 'search' }}\r\n                            onChange={this.updateSearchText.bind(this)}\r\n                            id={filter}\r\n                        />\r\n                    </div>\r\n                ))\r\n                }\r\n                <div>\r\n                    <Button\r\n                        onClick={this.search.bind(this)}\r\n                    >\r\n                        Search\r\n                    </Button>\r\n                </div>\r\n                Click the search button to populate table. Searching with empty filters searches over all values. Click on row values to see detailed view.\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from '@material-ui/core/Button';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport { palette } from '@material-ui/system';\r\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\r\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\r\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\n\r\nexport default class DetailInstance extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            showConfirmationBox:false,\r\n        };\r\n\r\n        this.closeModal = this.closeModal.bind(this);\r\n        this.confirmDelete = this.confirmDelete.bind(this);\r\n        this.deleteItem = this.deleteItem.bind(this);\r\n    }\r\n\r\n    confirmDelete() {\r\n        this.setState({ showConfirmationBox: true });\r\n    }\r\n\r\n    closeModal() {\r\n        this.setState({showConfirmationBox:false,});\r\n    }\r\n\r\n    deleteItem() {\r\n        this.setState({ showConfirmationBox: false });\r\n        this.props.delete();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n        <div>\r\n            {!this.props.showDetailedView ? null:\r\n            <ExpansionPanel >\r\n                    <ExpansionPanelSummary\r\n                        expandIcon={<ExpandMoreIcon />}\r\n                    >\r\n                        <Typography>Create</Typography>\r\n                    </ExpansionPanelSummary>\r\n                    <ExpansionPanelDetails>\r\n                    {\r\n                this.props.loading ? <CircularProgress /> :\r\n                <div>\r\n                    {this.props.inputs.map(input => (\r\n                        <TextField name={input} disabled={this.props.disabled} id=\"standard-basic\" label={input} onChange={this.props.updateModelEdited} defaultValue={this.props.defaultValues[input]}/>\r\n                    ))}\r\n                    {this.props.disabled ? null:\r\n                    <div>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            onClick={this.props.edit}\r\n                            disabled={this.state.showConfirmationBox}\r\n                        >\r\n                            Save\r\n                        </Button>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            onClick={this.confirmDelete}\r\n                            disabled={this.state.showConfirmationBox}\r\n                        >\r\n                            Delete\r\n                        </Button>\r\n                    </div>}\r\n                    {this.state.showConfirmationBox ? <div>\r\n                        Are you sure you wish to delete?\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            onClick={this.deleteItem}\r\n                        >\r\n                            Yes\r\n                        </Button>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            onClick={this.closeModal}\r\n                        >\r\n                            No\r\n                        </Button>\r\n                    </div>:null}\r\n                </div>}\r\n                    </ExpansionPanelDetails>\r\n                </ExpansionPanel>}\r\n        </div>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from '@material-ui/core/Button';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\r\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\r\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport '../../../stylesheets/Models.css';\r\n\r\nexport default class CreateInstance extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n\r\n        };\r\n    }\r\n\r\n    render() {\r\n        return (\r\n        <div>\r\n            <ExpansionPanel class=\"create-expansion-tab\">\r\n                    <ExpansionPanelSummary\r\n                        expandIcon={<ExpandMoreIcon />}\r\n                    >\r\n                        <Typography>Create</Typography>\r\n                    </ExpansionPanelSummary>\r\n                    <ExpansionPanelDetails class=\"create-expansion-tab\">\r\n                    <div>\r\n                    {this.props.inputs.map((input, index) => (\r\n                        (index===0 && this.props.useAutocomplete) ? <Autocomplete\r\n                            id=\"combo-box-demo\"\r\n                            options={this.props.options}\r\n                            includeInputInList\r\n                            freeSolo\r\n                            renderInput={params => (\r\n                            <TextField {...params} label={input} name={input} onChange={this.props.updateModelCreator} onBlur={this.props.updateModelCreator} variant=\"outlined\" fullWidth />\r\n                            )}\r\n                        /> :\r\n                        <TextField id=\"standard-basic\" variant=\"outlined\" label={input} name={input} onChange={this.props.updateModelCreator}/>\r\n                    ))}\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        onClick={this.props.createModel}\r\n                    >\r\n                        Create\r\n                    </Button>\r\n                </div>\r\n                    </ExpansionPanelDetails>\r\n                </ExpansionPanel>\r\n        </div>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\nimport axios from 'axios';\r\nimport { InstanceCommand } from '../enums/InstanceCommands.ts'\r\nimport { InstanceInput } from '../enums/InstanceInputs.ts'\r\nimport { Privilege } from '../../enums/privilegeTypes.ts'\r\nimport { CSVLink } from \"react-csv\";\r\nimport InstanceButtons from '../helpers/InstanceButtons';\r\nimport FilterInstance from '../helpers/FilterInstance';\r\nimport UploadModal from '../../helpers/UploadModal';\r\nimport getURL from '../../helpers/functions/GetURL';\r\nimport DetailInstance from '../helpers/DetailInstance';\r\nimport CreateInstance from '../helpers/CreateInstance';\r\nimport StatusDisplay from '../../helpers/StatusDisplay';\r\nimport TableView from '../../helpers/TableView';\r\nimport ErrorBoundary from '../../errors/ErrorBoundry';\r\n\r\nconst inputs = [\r\n    'model',\r\n    'hostname',\r\n    'rack',\r\n    'rack_position',\r\n    'owner',\r\n    'comment',\r\n]\r\n\r\nconst columns = [\r\n    'model',\r\n    'hostname',\r\n    'rack',\r\n    'rack_position',\r\n]\r\n\r\nconst instancesMainPath = 'instances/';\r\nconst instanceDownloadFileName = 'instances.csv';\r\n\r\n\r\n\r\nexport default class InstancesView extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n\r\n            // modals\r\n            showCreateModal:false,\r\n            showImportModal:false,\r\n\r\n            // table items\r\n            items:[], //Constants.testInstanceArray,\r\n\r\n            // vals for creating a new instance\r\n            createdInstance : {\r\n                'model':'',\r\n                'hostname':'',\r\n                'rack':'',\r\n                'rack_position':'',\r\n                'owner':'',\r\n                'comment':'',\r\n            },\r\n\r\n            showStatus:false,\r\n            statusMessage:'',\r\n            statusSeverity:'',\r\n\r\n            // vals for deleting an instance\r\n            deleteInstanceRack:'',\r\n            deleteInstancerack_position:'',\r\n\r\n            // vals for viewing an instance\r\n            viewInstanceRack:'',\r\n            viewInstancerack_position:'',\r\n\r\n            searchModel:'',\r\n            searchHostname:'',\r\n            searchRack:'',\r\n            searchRackU:'',\r\n\r\n            // csv data\r\n            csvData:'',\r\n            importedFile:null,\r\n\r\n            // detailed view\r\n            showDetailedView: false,\r\n            detailViewLoading:false,\r\n            detailedValues : {\r\n                'model':'',\r\n                'hostname':'',\r\n                'rack':'',\r\n                'rack_position':'',\r\n                'owner':'',\r\n                'comment':'',\r\n            },\r\n            originalRack:'',\r\n            originalrack_position:'',\r\n            modelList:[],\r\n            madeModelQuery: false,\r\n        };\r\n\r\n        this.createInstance = this.createInstance.bind(this);\r\n        this.editInstance = this.editInstance.bind(this);\r\n        this.deleteInstance = this.deleteInstance.bind(this);\r\n        this.detailViewInstance = this.detailViewInstance.bind(this);\r\n        this.searchInstances = this.searchInstances.bind(this);\r\n        this.search = this.search.bind(this);\r\n        this.openCreateModal = this.openCreateModal.bind(this);\r\n        this.openImportModal = this.openImportModal.bind(this);\r\n        this.showDetailedView = this.showDetailedView.bind(this);\r\n        this.closeCreateModal = this.closeCreateModal.bind(this);\r\n        this.closeImportModal = this.closeImportModal.bind(this);\r\n        this.closeDetailedView = this.closeDetailedView.bind(this);\r\n        this.updateInstanceCreator = this.updateInstanceCreator.bind(this);\r\n        this.updateInstanceEdited = this.updateInstanceEdited.bind(this);\r\n        this.closeShowStatus = this.closeShowStatus.bind(this);\r\n        this.getModelList = this.getModelList.bind(this);\r\n        this.chooseFile = this.chooseFile.bind(this);\r\n        this.uploadFile = this.uploadFile.bind(this);\r\n        this.sendUploadedFile = this.sendUploadedFile.bind(this);\r\n        this.downloadTable = this.downloadTable.bind(this);\r\n        this.initialize = this.initialize.bind(this);\r\n\r\n        axios.defaults.headers.common['token'] = this.props.token;\r\n        axios.defaults.headers.common['privilege'] = this.props.privilege;\r\n\r\n    }\r\n\r\n    createInstance() {\r\n        axios.post(\r\n            getURL(instancesMainPath, InstanceCommand.create),\r\n            {\r\n                'model':this.state.createdInstance[InstanceInput.Model],\r\n                'hostname':this.state.createdInstance[InstanceInput.Hostname],\r\n                'rack':this.state.createdInstance[InstanceInput.Rack],\r\n                'rack_position':this.state.createdInstance[InstanceInput.RackU],\r\n                'owner':this.state.createdInstance[InstanceInput.Owner],\r\n                'comment':this.state.createdInstance[InstanceInput.Comment],\r\n            }\r\n            ).then(response => {\r\n                if (response.data.message === 'success') {\r\n                    this.setState({\r\n                        showStatus: true,\r\n                        statusMessage: \"Successfully created instance\",\r\n                        statusSeverity:\"success\",\r\n                        createdInstance : {\r\n                            'model':'',\r\n                            'hostname':'',\r\n                            'rack':'',\r\n                            'rack_position':'',\r\n                            'owner':'',\r\n                            'comment':'',\r\n                        },\r\n                        showCreateModal:false,\r\n                    });\r\n                    this.searchInstances();\r\n                } else {\r\n                    this.setState({ showStatus: true, statusMessage: response.data.message, statusSeverity:\"error\" })\r\n                }\r\n            });\r\n    }\r\n\r\n    editInstance() {\r\n        axios.post(\r\n            getURL(instancesMainPath, InstanceCommand.edit),\r\n            {\r\n                'rackOriginal':this.state.originalRack,\r\n                'rack_positionOriginal':this.state.originalrack_position,\r\n                'model':this.state.detailedValues[InstanceInput.Model],\r\n                'hostname':this.state.detailedValues[InstanceInput.Hostname],\r\n                'rack':this.state.detailedValues[InstanceInput.Rack],\r\n                'rack_position':this.state.detailedValues[InstanceInput.RackU],\r\n                'owner':this.state.detailedValues[InstanceInput.Owner],\r\n                'comment':this.state.detailedValues[InstanceInput.Comment],\r\n            }\r\n            ).then(response => {\r\n                if (response.data.message === 'success') {\r\n                    this.setState({\r\n                        showStatus: true,\r\n                        statusMessage: \"Successfully edited instance\",\r\n                        statusSeverity:\"success\",\r\n                        detailedValues : {\r\n                            'model':'',\r\n                            'hostname':'',\r\n                            'rack':'',\r\n                            'rack_position':'',\r\n                            'owner':'',\r\n                            'comment':'',\r\n                        },\r\n                        showDetailedView:false,\r\n                    });\r\n                    this.searchInstances();\r\n\r\n                } else {\r\n                    this.setState({ showStatus: true, statusMessage: response.data.message, statusSeverity:\"error\" })\r\n                }\r\n            });\r\n    }\r\n\r\n\r\n    deleteInstance() {\r\n        axios.post(\r\n            getURL(instancesMainPath, InstanceCommand.delete),\r\n            {\r\n                'rack':this.state.originalRack,\r\n                'rack_position':this.state.originalrack_position,\r\n            }\r\n            ).then(response => {\r\n                if (response.data.message === 'success') {\r\n                    this.setState({\r\n                        showStatus: true,\r\n                        statusMessage: \"Successfully deleted instance\",\r\n                        statusSeverity:\"success\",\r\n                        originalRack:'',\r\n                        originalrack_position:'',\r\n                        showDetailedView:false\r\n                    });\r\n                    this.searchInstances();\r\n                } else {\r\n                    this.setState({ showStatus: true, statusMessage: response.data.message, statusSeverity:\"error\" })\r\n                }\r\n            });\r\n    }\r\n\r\n    detailViewInstance(rack, rack_position) {\r\n        axios.post(\r\n            getURL(instancesMainPath, InstanceCommand.detailView),\r\n            {\r\n                'rack':rack,\r\n                'rack_position':rack_position,\r\n            }\r\n            ).then(response => this.setState({ detailedValues: response.data['instances'][0], detailViewLoading:false}));\r\n\r\n        this.setState({\r\n            viewInstanceRack:'',\r\n        });\r\n    }\r\n\r\n    searchInstances() {\r\n        axios.post(\r\n            getURL(instancesMainPath, InstanceCommand.search),\r\n            {\r\n                'filter':{\r\n                    'model':this.state.searchModel,\r\n                    'hostname':this.state.searchHostname,\r\n                    'rack':this.state.searchRack,\r\n                    'rack_position':this.state.searchRackU,\r\n                }\r\n            }\r\n            ).then(response => {\r\n                this.setState({ items: response.data['instances'] });\r\n            });\r\n    }\r\n\r\n    getModelList() {\r\n        axios.get(\r\n            getURL(instancesMainPath, InstanceCommand.GET_ALL_MODELS), {}\r\n            ).then(response => this.setState({ modelList: response.data.results }));\r\n        this.setState({ madeModelQuery: true });\r\n    }\r\n\r\n    sendUploadedFile(data) {\r\n        axios.post(\r\n            getURL(instancesMainPath, InstanceCommand.UPLOAD_FILE), data\r\n            ).then(response => {\r\n                if (response.data.message === 'success') {\r\n                    this.setState({ showStatus: true, statusMessage: response.data.summary, statusSeverity:'success', showImportModal: false,})\r\n                    this.searchInstances();\r\n                } else {\r\n                    this.setState({ showStatus: true, statusMessage: response.data.message, statusSeverity:\"error\" })\r\n                }\r\n            });\r\n    }\r\n\r\n    search(filters) {\r\n        this.setState({\r\n            searchModel:filters['model'],\r\n            searchHostname:filters['hostname'],\r\n            searchRack:filters['rack'],\r\n            searchRackU:filters['rack_position'],\r\n        }, this.searchInstances);\r\n    }\r\n\r\n    downloadTable() {\r\n        axios.post(\r\n            getURL(instancesMainPath, InstanceCommand.EXPORT_FILE),\r\n            {\r\n                'filter':{\r\n                    'model':this.state.searchModel,\r\n                    'hostname':this.state.searchHostname,\r\n                    'rack':this.state.searchRack,\r\n                    'rack_position':this.state.searchRackU,\r\n                }\r\n            }\r\n            ).then(response => {\r\n                this.setState({ csvData: response.data.csvData });\r\n                this.csvLink.link.click();\r\n            });\r\n    }\r\n\r\n    openCreateModal() {\r\n        this.getModelList();\r\n        this.setState({showCreateModal: true});\r\n    }\r\n\r\n    openImportModal() {\r\n        this.setState({showImportModal: true});\r\n    }\r\n\r\n    showDetailedView(id) {\r\n        this.setState({\r\n            showDetailedView: true,\r\n            detailViewLoading:true,\r\n            originalRack: this.state.items[id]['rack'],\r\n            originalrack_position: this.state.items[id]['rack_position'],\r\n        });\r\n\r\n        var model = this.state.items[id]['model'];\r\n        var hostname = this.state.items[id]['hostname'];\r\n        var rack = this.state.items[id]['rack'];\r\n        var rack_position = this.state.items[id]['rack_position'];\r\n\r\n        this.detailViewInstance(rack, rack_position);\r\n    }\r\n\r\n    closeCreateModal() {\r\n        this.setState({showCreateModal: false});\r\n    }\r\n\r\n    closeImportModal() {\r\n        this.setState({showImportModal: false});\r\n    }\r\n\r\n    closeDetailedView() {\r\n        this.setState({ showDetailedView: false })\r\n    }\r\n\r\n    updateInstanceCreator(event) {\r\n        this.state.createdInstance[event.target.name] = event.target.value;\r\n        this.forceUpdate()\r\n    }\r\n\r\n    updateInstanceEdited(event) {\r\n        this.state.detailedValues[event.target.name] = event.target.value;\r\n        this.forceUpdate()\r\n    }\r\n    closeShowStatus() {\r\n        this.setState({ showStatus: false })\r\n    }\r\n\r\n    uploadFile() {\r\n        const data = new FormData();\r\n        data.append('file', this.state.importedFile);\r\n        this.sendUploadedFile(data);\r\n    }\r\n\r\n    chooseFile(event) {\r\n        this.setState({ importedFile: event.target.files[0] })\r\n    }\r\n\r\n    initialize() {\r\n        this.searchInstances();\r\n        this.getModelList();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <ErrorBoundary>\r\n                {(this.state.madeModelQuery) ? null: this.initialize()}\r\n                <StatusDisplay\r\n                    open={this.state.showStatus}\r\n                    severity={this.state.statusSeverity}\r\n                    closeStatus={this.closeShowStatus}\r\n                    message={this.state.statusMessage}\r\n                />\r\n                {(this.props.privilege == Privilege.ADMIN) ?\r\n                    (<div>\r\n                <InstanceButtons\r\n                    openCreateModal={this.openCreateModal}\r\n                    openImportModal={this.openImportModal}\r\n                    downloadTable={this.downloadTable}\r\n                />\r\n                <CSVLink\r\n                    data={this.state.csvData}\r\n                    filename={instanceDownloadFileName}\r\n                    className=\"hidden\"\r\n                    ref={(r) => this.csvLink = r}\r\n                    target=\"_blank\"\r\n                />\r\n                <CreateInstance\r\n                    showCreateModal={this.state.showCreateModal}\r\n                    closeCreateModal={this.closeCreateModal}\r\n                    createModel={this.createInstance}\r\n                    updateModelCreator={this.updateInstanceCreator}\r\n                    inputs={inputs}\r\n                    options={this.state.modelList}\r\n                    useAutocomplete={true}\r\n                />\r\n                <UploadModal\r\n                    showImportModal={this.state.showImportModal}\r\n                    closeImportModal={this.closeImportModal}\r\n                    uploadFile={this.uploadFile}\r\n                    chooseFile={this.chooseFile}\r\n                    textDescription=\"The following format should be used for each row: hostname,rack,rack_position,vendor,model_number,owner,comment\"\r\n                /></div>):null\r\n            }\r\n                <FilterInstance\r\n                    updateSearchText={this.updateSearchText}\r\n                    search={this.search}\r\n                    filters={columns}\r\n                />\r\n                <TableView\r\n                    columns={columns}\r\n                    vals={this.state.items}\r\n                    keys={columns}\r\n                    showDetailedView={this.showDetailedView}\r\n                    filters={columns}\r\n                />\r\n                <DetailInstance\r\n                    showDetailedView={this.state.showDetailedView}\r\n                    closeDetailedView={this.closeDetailedView}\r\n                    inputs={inputs}\r\n                    updateModelEdited={this.updateInstanceEdited}\r\n                    defaultValues={this.state.detailedValues}\r\n                    loading={this.state.detailViewLoading}\r\n                    edit={this.editInstance}\r\n                    delete={this.deleteInstance}\r\n                    disabled={this.props.privilege==Privilege.USER}\r\n                />\r\n            </ErrorBoundary>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\nimport axios from 'axios';\r\nimport Select from '@material-ui/core/Select';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport { MenuItem, Button } from '@material-ui/core';\r\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\r\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\r\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\n\r\n\r\nimport { RackCommand } from \"../enums/RackCommands.ts\";\r\nimport { Privilege } from '../../enums/privilegeTypes.ts';\r\n\r\nimport getURL from '../../helpers/functions/GetURL';\r\nimport * as Constants from '../../Constants';\r\nimport StatusDisplay from '../../helpers/StatusDisplay';\r\n\r\nimport ErrorBoundray from '../../errors/ErrorBoundry';\r\n\r\nconst racksMainPath = 'racks/';\r\n\r\nexport default class RacksView extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            items:[],\r\n            startingRackLetter:'',\r\n            endingRackLetter:'',\r\n            startingRackNumber:-1,\r\n            endingRackNumber:-1,\r\n\r\n            showStatus:false,\r\n            statusMessage:'',\r\n            statusSeverity:'',\r\n\r\n            showConfirmationBox:false,\r\n        };\r\n\r\n        this.getAllRacks = this.getAllRacks.bind(this);\r\n        this.updateRacks = this.updateRacks.bind(this);\r\n        this.createRacks = this.createRacks.bind(this);\r\n        this.deleteRacks = this.deleteRacks.bind(this);\r\n        this.viewRacks = this.viewRacks.bind(this);\r\n        this.changeStartingLetter = this.changeStartingLetter.bind(this);\r\n        this.changeEndingLetter = this.changeEndingLetter.bind(this);\r\n        this.changeStartingNum = this.changeStartingNum.bind(this);\r\n        this.changeEndingNum = this.changeEndingNum.bind(this);\r\n        this.closeShowStatus = this.closeShowStatus.bind(this);\r\n\r\n        axios.defaults.headers.common['token'] = this.props.token;\r\n        axios.defaults.headers.common['privilege'] = this.props.privilege;\r\n\r\n    }\r\n\r\n    getAllRacks() {\r\n        axios.get(getURL(racksMainPath, RackCommand.GET_ALL_RACKS)).then(response => {\r\n                if (response.data.message === 'success') {\r\n                    this.setState({ showStatus: true, statusMessage: \"Success\" })\r\n                } else {\r\n                    this.setState({ showStatus: true, statusMessage: response.data.message, statusSeverity:\"error\" })\r\n                }\r\n            });\r\n    }\r\n\r\n    updateRacks(command) {\r\n        axios.post(\r\n            getURL(racksMainPath, command),\r\n            {\r\n                'start_letter':this.state.startingRackLetter,\r\n                'stop_letter':this.state.endingRackLetter,\r\n                'start_number':this.state.startingRackNumber,\r\n                'stop_number':this.state.endingRackNumber,\r\n            }\r\n            ).then(response => {\r\n                console.log(response);\r\n                if (response.data.message === 'success') {\r\n                    this.setState({ showStatus: true, statusMessage: \"Success\", statusSeverity:\"success\", showConfirmationBox:false });\r\n                    if (command == RackCommand.GET_RACK_DETAILS) {\r\n                        const win = window.open(response.data.link, '_blank');\r\n                        if (win != null) {\r\n                            win.focus();\r\n                        }\r\n                    }\r\n                } else {\r\n                    this.setState({ showStatus: true, statusMessage: response.data.message, statusSeverity:\"error\" })\r\n                }\r\n            });\r\n    }\r\n\r\n    createRacks() {\r\n        this.updateRacks(RackCommand.CREATE_RACKS);\r\n    }\r\n\r\n    deleteRacks() {\r\n        this.updateRacks(RackCommand.DELETE_RACKS);\r\n    }\r\n\r\n    viewRacks() {\r\n        this.updateRacks(RackCommand.GET_RACK_DETAILS);\r\n    }\r\n\r\n    changeStartingLetter(event) {\r\n        this.setState({ startingRackLetter: event.target.value })\r\n    }\r\n\r\n    changeEndingLetter(event) {\r\n        this.setState({ endingRackLetter: event.target.value })\r\n    }\r\n\r\n    changeStartingNum(event) {\r\n        this.setState({ startingRackNumber: event.target.value })\r\n    }\r\n\r\n    changeEndingNum(event) {\r\n        this.setState({ endingRackNumber: event.target.value })\r\n    }\r\n\r\n    closeShowStatus() {\r\n        this.setState({ showStatus: false })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <ErrorBoundray>\r\n                <StatusDisplay\r\n                    open={this.state.showStatus}\r\n                    severity={this.state.statusSeverity}\r\n                    closeStatus={this.closeShowStatus}\r\n                    message={this.state.statusMessage}\r\n                />\r\n                <FormControl>\r\n                    <Select id=\"starting-letter-selector\" value={this.state.startingRackLetter} onChange={this.changeStartingLetter}>\r\n                        {Constants.RackX.map(val => (<MenuItem value={val}>{val}</MenuItem>))}\r\n                    </Select>\r\n                    <FormHelperText>Starting Letter</FormHelperText>\r\n                </FormControl>\r\n                <FormControl>\r\n                    <Select id=\"ending-letter-selector\" value={this.state.endingRackLetter} onChange={this.changeEndingLetter}>\r\n                        {Constants.RackX.map(val => (<MenuItem value={val}>{val}</MenuItem>))}\r\n                    </Select>\r\n                    <FormHelperText>Ending Letter</FormHelperText>\r\n                </FormControl>\r\n                <FormControl>\r\n                    <Select id=\"starting-num-selector\" value={this.state.startingRackNumber} onChange={this.changeStartingNum}>\r\n                        {Constants.RackY.map(val => (<MenuItem value={val}>{val}</MenuItem>))}\r\n                    </Select>\r\n                    <FormHelperText>Starting Number</FormHelperText>\r\n                </FormControl>\r\n                <FormControl>\r\n                    <Select id=\"ending-num-selector\" value={this.state.endingRackNumber} onChange={this.changeEndingNum}>\r\n                        {Constants.RackY.map(val => (<MenuItem value={val}>{val}</MenuItem>))}\r\n                    </Select>\r\n                    <FormHelperText>Ending Number</FormHelperText>\r\n                </FormControl>\r\n                <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    onClick={this.viewRacks}\r\n                    disabled={this.state.showConfirmationBox}\r\n                >\r\n                    View\r\n                </Button>\r\n                {(this.props.privilege == Privilege.ADMIN) ?\r\n                (<div>\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        onClick={this.createRacks}\r\n                        disabled={this.state.showConfirmationBox}\r\n                    >\r\n                        Create\r\n                    </Button>\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        onClick={() => this.setState({ showConfirmationBox: true, })}\r\n                        disabled={this.state.showConfirmationBox}\r\n                    >\r\n                        Delete\r\n                    </Button>\r\n                </div>):null}\r\n\r\n                {this.state.showConfirmationBox ? <div>\r\n                        Are you sure you wish to delete?\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            onClick={this.deleteRacks}\r\n                        >\r\n                            Yes\r\n                        </Button>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            onClick={() => this.setState({ showConfirmationBox: false, })}\r\n                        >\r\n                            No\r\n                        </Button>\r\n                    </div>:null}\r\n\r\n                    {this.state.items.map(rack => (\r\n                    <ExpansionPanel>\r\n                        <ExpansionPanelSummary\r\n                            expandIcon={<ExpandMoreIcon />}\r\n                        >\r\n                            <Typography>{rack.label}</Typography>\r\n                        </ExpansionPanelSummary>\r\n                        <ExpansionPanelDetails>\r\n                            {rack}\r\n                            {/*<TableContainer component={Paper}>\r\n                                <Table>\r\n                                    <TableHead>\r\n                                        <TableRow >\r\n                                            {tableCols[key].map(column => (<TableCell><span id={column}>{column}</span></TableCell>))}\r\n                                        </TableRow>\r\n                                    </TableHead>\r\n                                    <TableBody>\r\n                                    {this.state.tableValues[key].map(row => (\r\n                                        <TableRow>\r\n                                            {row.map(column => (<TableCell><span id={column}>{column}</span></TableCell>))}\r\n                                        </TableRow>\r\n                                    ))}\r\n                                    </TableBody>\r\n                                </Table>\r\n                            </TableContainer>*/}\r\n                        </ExpansionPanelDetails>\r\n                    </ExpansionPanel>\r\n                    ))}\r\n                </ErrorBoundray>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","export enum StatsCommand {\r\n    GENERATE_REPORT = \"generate-report\",\r\n    TEST = \"test\",\r\n}\r\n","export default function jsonToArr(incomingJSON) {\r\n    try {\r\n        var json = JSON.parse(incomingJSON);\r\n    } catch (e) {\r\n        var json = incomingJSON;\r\n    }\r\n\r\n    if (Object.entries(json).length === 0 && json.constructor === Object) {\r\n        return [];\r\n    }\r\n\r\n    const items = [];\r\n\r\n    Object.keys(json).map(function(key) {\r\n        const row = [];\r\n        row.push(key);\r\n        row.push(json[key]);\r\n        items.push(row);\r\n    });\r\n    return items;\r\n}\r\n","import React from 'react';\r\nimport axios from 'axios';\r\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\r\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\r\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport getURL from '../../helpers/functions/GetURL';\r\nimport  Button from '@material-ui/core/Button';\r\nimport { StatsCommand } from \"../enums/StatsCommands.ts\";\r\nimport JSONtoArr from \"../../helpers/functions/JSONtoArr\";\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport StatusDisplay from '../../helpers/StatusDisplay';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport ErrorBoundray from '../../errors/ErrorBoundry';\r\n\r\n\r\nconst statsMainPath = 'stats/';\r\nconst tables = {\r\n    \"totalUsage\":\"Total Usage\",\r\n    \"spaceUsage\": \"Space Usage\",\r\n    \"vendorUsage\": \"Vendor Usage\",\r\n    \"modelUsage\": \"Model Usage\",\r\n    \"ownerUsage\": \"Owner Usage\",\r\n}\r\n\r\nconst tableCols = {\r\n    \"totalUsage\":[\"Total\", \"Usage\"],\r\n    \"spaceUsage\": [\"Rack\", \"Usage\"],\r\n    \"vendorUsage\": [\"Vendor\", \"Usage\"],\r\n    \"modelUsage\": [\"Model\", \"Usage\"],\r\n    \"ownerUsage\": [\"Ownder\", \"Usage\"],\r\n}\r\n\r\nexport default class StatisticsView extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            tableValues: {\r\n                \"totalUsage\":[],\r\n                \"spaceUsage\": [],\r\n                \"vendorUsage\": [],\r\n                \"modelUsage\": [],\r\n                \"ownerUsage\": [],\r\n            },\r\n            totalUsage:[],\r\n            spaceUsage:[],\r\n            vendorUsage:[],\r\n            modelUsage:[],\r\n            ownerUsage:[],\r\n\r\n            showStatus:false,\r\n            statusMessage:'',\r\n            statusSeverity:'',\r\n        };\r\n\r\n        this.closeShowStatus = this.closeShowStatus.bind(this);\r\n        this.generateReport = this.generateReport.bind(this);\r\n\r\n        axios.defaults.headers.common['token'] = this.props.token;\r\n        axios.defaults.headers.common['privilege'] = this.props.privilege;\r\n    }\r\n\r\n    generateReport() {\r\n        axios.get(getURL(statsMainPath, StatsCommand.GENERATE_REPORT)).then(response => {\r\n                try {\r\n                    var data = response.data;\r\n                    var totalUsage = [];\r\n                    var totalUsageRow = [\"Total Usage\"];\r\n                    totalUsageRow.push(data[\"totalUsage\"]);\r\n                    totalUsage.push(totalUsageRow);\r\n\r\n                    var spaceUsage = JSONtoArr(data[\"spaceUsage\"]);\r\n                    if (spaceUsage.length == 0) {\r\n                        spaceUsage.push([\"No space is currently being used\", []])\r\n                    }\r\n                    var vendorUsage = JSONtoArr(data[\"vendorUsage\"]);\r\n                    if (vendorUsage.length == 0) {\r\n                        vendorUsage.push([\"No vendors currently using space\", []])\r\n                    }\r\n                    var modelUsage = JSONtoArr(data[\"modelUsage\"]);\r\n                    if (modelUsage.length == 0) {\r\n                        modelUsage.push([\"No models currently using space\", []])\r\n                    }\r\n                    var ownerUsage = JSONtoArr(data[\"ownerUsage\"]);\r\n                    if (ownerUsage.length == 0) {\r\n                        ownerUsage.push([\"No owners currently using space\", []])\r\n                    }\r\n\r\n                    this.setState({\r\n                        showStatus: true,\r\n                        statusSeverity:\"success\",\r\n                        statusMessage: \"Success\",\r\n                        tableValues: {\r\n                            \"totalUsage\":totalUsage,\r\n                            \"spaceUsage\": spaceUsage,\r\n                            \"vendorUsage\": vendorUsage,\r\n                            \"modelUsage\": modelUsage,\r\n                            \"ownerUsage\": ownerUsage,\r\n                        },\r\n                     })\r\n                } catch {\r\n                    this.setState({ showStatus: true, statusMessage: response.data.message, statusSeverity:\"error\" })\r\n                }\r\n            });\r\n    }\r\n\r\n    closeShowStatus() {\r\n        this.setState({ showStatus: false })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <ErrorBoundray >\r\n                <StatusDisplay\r\n                    open={this.state.showStatus}\r\n                    severity={this.state.statusSeverity}\r\n                    closeStatus={this.closeShowStatus}\r\n                    message={this.state.statusMessage}\r\n                />\r\n                <div>\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        onClick={this.generateReport}\r\n                    >\r\n                        Generate New Report\r\n                    </Button>\r\n                </div>\r\n                {Object.keys(tables).map(key => (\r\n                <ExpansionPanel>\r\n                    <ExpansionPanelSummary\r\n                        expandIcon={<ExpandMoreIcon />}\r\n                    >\r\n                        <Typography>{tables[key]}</Typography>\r\n                    </ExpansionPanelSummary>\r\n                    <ExpansionPanelDetails>\r\n                        <TableContainer component={Paper}>\r\n                            <Table>\r\n                                <TableHead>\r\n                                    <TableRow >\r\n                                        {tableCols[key].map(column => (<TableCell><span id={column}>{column}</span></TableCell>))}\r\n                                    </TableRow>\r\n                                </TableHead>\r\n                                <TableBody>\r\n                                {this.state.tableValues[key].map(row => (\r\n                                    <TableRow>\r\n                                        {row.map(column => (<TableCell><span id={column}>{column + (isNaN(column) ? \"\" : \"%\")}</span></TableCell>))}\r\n                                    </TableRow>\r\n                                ))}\r\n                                </TableBody>\r\n                            </Table>\r\n                        </TableContainer>\r\n                    </ExpansionPanelDetails>\r\n                </ExpansionPanel>\r\n                ))}\r\n                </ErrorBoundray>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport ModelsView from './models/pages/ModelsView';\r\nimport UsersView from './users/pages/UsersView';\r\nimport InstancesView from './instances/pages/InstancesView';\r\nimport RacksView from './racks/pages/RacksView';\r\nimport StatisticsView from './statistics/pages/StatisticsView';\r\n\r\nimport { Privilege } from './enums/privilegeTypes.ts'\r\n\r\nimport ErrorBoundry from './errors/ErrorBoundry';\r\n\r\nexport default class TabViewer extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            currentTabID:0,\r\n        };\r\n        this.handleChange = this.handleChange.bind(this);\r\n    }\r\n\r\n    handleChange(event, newValue) {\r\n        this.setState({ currentTabID: newValue })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n        <div>\r\n            <ErrorBoundry>\r\n            <AppBar position=\"static\">\r\n                <Tabs value={this.state.currentTabID} onChange={this.handleChange}>\r\n                    <Tab value={0} style={{flexGrow: 1,}} label=\"Models\"> </Tab>\r\n                    <Tab value={1} style={{flexGrow: 1,}} label=\"Instances\" ></Tab>\r\n                    {(this.props.privilege == Privilege.ADMIN) ? <Tab value={2} style={{flexGrow: 1,}} label=\"Users\"></Tab> : null}\r\n                    <Tab value={3} style={{flexGrow: 1,}} label=\"Racks\" />\r\n                    <Tab value={4} style={{flexGrow: 1,}} label=\"Statistics\" />\r\n                    <Button\r\n                        style={{flexGrow: 1,}}\r\n                        variant=\"contained\"\r\n                        color=\"secondary\"\r\n                        onClick={this.props.logout}\r\n                    >\r\n                        Logout\r\n                    </Button>\r\n                </Tabs>\r\n            </AppBar>\r\n            <Typography\r\n                component=\"div\"\r\n                role=\"tabpanel\"\r\n                hidden={this.state.currentTabID !== 0}\r\n                id={`simple-tabpanel-0`}\r\n                aria-labelledby={`simple-tab-0`}\r\n            >\r\n                <ModelsView token={this.props.token} privilege={this.props.privilege} />\r\n            </Typography>\r\n            <Typography\r\n                component=\"div\"\r\n                role=\"tabpanel\"\r\n                hidden={this.state.currentTabID !== 1}\r\n                id={`simple-tabpanel-0`}\r\n                aria-labelledby={`simple-tab-0`}\r\n            >\r\n                <InstancesView token={this.props.token} privilege={this.props.privilege} />\r\n            </Typography>\r\n            <Typography\r\n                component=\"div\"\r\n                role=\"tabpanel\"\r\n                hidden={this.state.currentTabID !== 2}\r\n                id={`simple-tabpanel-0`}\r\n                aria-labelledby={`simple-tab-0`}\r\n            >\r\n                <UsersView token={this.props.token} privilege={this.props.privilege} />\r\n            </Typography>\r\n            <Typography\r\n                component=\"div\"\r\n                role=\"tabpanel\"\r\n                hidden={this.state.currentTabID !== 3}\r\n                id={`simple-tabpanel-0`}\r\n                aria-labelledby={`simple-tab-0`}\r\n            >\r\n                <RacksView token={this.props.token} privilege={this.props.privilege} />\r\n            </Typography>\r\n            <Typography\r\n                component=\"div\"\r\n                role=\"tabpanel\"\r\n                hidden={this.state.currentTabID !== 4}\r\n                id={`simple-tabpanel-0`}\r\n                aria-labelledby={`simple-tab-0`}\r\n            >\r\n                <StatisticsView token={this.props.token} privilege={this.props.privilege} />\r\n            </Typography>\r\n            </ErrorBoundry>\r\n        </div>);\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport Login from \"./Login\";\r\nimport TabViewer from \"./Tabs\";\r\nimport axios from 'axios';\r\nimport getURL from './helpers/functions/GetURL';\r\n\r\nconst storedToken = 'token';\r\nconst storedPrivilege = 'privilege';\r\nconst storedLoggedIn = 'loggedIn';\r\n\r\nexport default class PageSelector extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      token:sessionStorage.getItem(storedToken) || '',\r\n      privilege:sessionStorage.getItem(storedPrivilege) || '',\r\n      loggedIn:sessionStorage.getItem(storedLoggedIn) || '',\r\n    };\r\n\r\n    this.login = this.login.bind(this);\r\n    this.logout = this.logout.bind(this);\r\n  }\r\n\r\n  login(token, privilege) {\r\n    sessionStorage.setItem(storedToken, token);\r\n    sessionStorage.setItem(storedPrivilege, privilege);\r\n    sessionStorage.setItem(storedLoggedIn, true);\r\n\r\n    this.setState({\r\n      token:token,\r\n      privilege:privilege,\r\n      loggedIn:true,\r\n    })\r\n  }\r\n\r\n  logout() {\r\n    axios.get(getURL('users/', 'logout'));\r\n\r\n    this.setState({\r\n      token:'',\r\n      privilege:'',\r\n      loggedIn:false,\r\n    });\r\n\r\n    sessionStorage.removeItem(storedToken);\r\n    sessionStorage.removeItem(storedPrivilege);\r\n    sessionStorage.removeItem(storedLoggedIn);\r\n\r\n    window.location.reload();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        {this.state.loggedIn ?  <TabViewer token={this.state.token} privilege={this.state.privilege} logout={this.logout} /> : <Login loginFunc={this.login} />}\r\n      </div>\r\n    );\r\n  }\r\n\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './stylesheets/index.css';\nimport PageSelector from './javascript/PageSelector';\n\nReactDOM.render(<PageSelector />, document.getElementById('root'));\n","module.exports = __webpack_public_path__ + \"static/media/logo.df79d0ea.png\";"],"sourceRoot":""}
