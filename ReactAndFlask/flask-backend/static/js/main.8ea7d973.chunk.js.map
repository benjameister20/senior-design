{"version":3,"sources":["images/logo.png","javascript/Constants.jsx","javascript/enums/privilegeTypes.ts","javascript/helpers/functions/GetURL.jsx","javascript/models/enums/ModelCommands.ts","javascript/models/enums/ModelInputs.ts","javascript/helpers/StatusDisplay.jsx","javascript/ShibLogin.jsx","javascript/Login.jsx","javascript/models/helpers/ExportModel.jsx","javascript/models/helpers/FilterModel.jsx","javascript/models/helpers/CreateModel.jsx","javascript/models/ModelConstants.jsx","javascript/models/helpers/ModelsTable.jsx","javascript/users/enums/UserCommands.ts","javascript/users/enums/UserInputs.ts","javascript/models/pages/ModelsView.jsx","javascript/assets/enums/AssetInputs.ts","javascript/assets/enums/AssetCommands.ts","javascript/users/helpers/FilterUser.jsx","javascript/users/helpers/DetailUser.jsx","javascript/users/helpers/CreateUser.jsx","javascript/users/helpers/UsersTable.jsx","javascript/users/UserConstants.jsx","javascript/users/pages/UsersView.jsx","javascript/assets/AssetConstants.jsx","javascript/assets/helpers/NetworkGraph.jsx","javascript/assets/helpers/functions/StringToMacAddress.jsx","javascript/assets/helpers/EditAsset.jsx","javascript/assets/helpers/DetailsAsset.jsx","javascript/assets/helpers/FilterAsset.jsx","javascript/helpers/functions/DescendingComparator.jsx","javascript/assets/helpers/CreateAsset.jsx","javascript/assets/helpers/ImportAsset.jsx","javascript/assets/helpers/AddAsset.jsx","javascript/assets/helpers/ExportAsset.jsx","javascript/assets/helpers/TableAssets.jsx","javascript/racks/enums/DatacenterCommands.ts","javascript/helpers/functions/GetComparator.jsx","javascript/helpers/functions/StableSort.jsx","javascript/errors/ErrorBoundry.jsx","javascript/assets/pages/AssetsView.jsx","javascript/racks/helpers/CreateDatacenter.jsx","javascript/racks/helpers/EditDatacenter.jsx","javascript/racks/pages/RacksView.jsx","javascript/racks/enums/RackCommands.ts","javascript/racks/helpers/functions/ShowDatacenters.jsx","javascript/racks/helpers/ConfirmDeleteDC.jsx","javascript/statistics/enums/StatsCommands.ts","javascript/racks/pages/DatacentersView.jsx","javascript/racks/pages/DatacenterManagerView.jsx","javascript/helpers/functions/JSONtoArr.jsx","javascript/statistics/pages/StatisticsView.jsx","javascript/logs/enums/LogCommands.ts","javascript/logs/pages/LogsView.jsx","javascript/Tabs.jsx","javascript/PageSelector.jsx","index.jsx"],"names":["module","exports","serverEndpoint","RackX","ASSETS_MAIN_PATH","MODELS_MAIN_PATH","USERS_MAIN_PATH","RACKS_MAIN_PATH","DATACENTERS_MAIN_PATH","LOGS_MAIN_PATH","CLIENT_ID","SHIB_REDIRECT_URI","window","location","href","Privilege","SHIBBOLETH_LOGIN","encodeURIComponent","HTTPS_STATUS_OK","getURL","path","endpoint","Constants","ModelCommand","ModelInput","StatusDisplay","props","state","Snackbar","open","this","autoHideDuration","onClose","closeStatus","elevation","variant","severity","message","IconButton","aria-label","color","size","onClick","fontSize","React","Component","ShibLogin","username","password","statusMessage","showStatus","statusSeverity","Grid","container","spacing","direction","justify","alignItems","onKeyDown","e","onKeyPressed","style","item","xs","src","logo","alt","height","Card","minWidth","CardContent","Typography","fontWeight","gutterBottom","closeShowStatus","loginMainPath","queryString","require","Login","getDukeCredentials","token","axios","get","headers","then","response","post","data","netid","mail","displayName","console","log","status","setState","initialized","oauth","loginFuncOAuth","loginWithOAuth","bind","submitCredentials","params","parse","hash","substring","access_token","loginFunc","event","target","value","key","preventDefault","stopPropagation","TextField","id","label","required","ref","onChange","updateUsername","type","updatePassword","Button","direciton","width","ExportModel","Paper","downloadTable","startIcon","showAll","createInputs","name","inputs","FilterModel","filters","hasOwnProperty","newFilters","forceUpdate","search","sm","md","lg","Autocomplete","options","includeInputInList","freeSolo","renderInput","vendor","updateSearchText","onBlur","fullWidth","InputProps","inputProps","min","max","CreateModel","updateColor","updateModelColor","hex","showModal","showImportModal","closeModal","networkPorts","numPorts","closeImportModal","create","createModel","uploadFile","FormData","append","importedFile","sendUploadedFile","chooseFile","files","updateNetworkPorts","ports","i","push","toString","updateModelCreator","updatePort","port","classes","background","Modal","aria-labelledby","aria-describedby","className","modal","closeAfterTransition","Fade","in","Backdrop","grid","onSubmit","modelNumber","ethernetPorts","powerPorts","cpu","memory","storage","comment","List","root","subheader","ListSubheader","component","maxHeight","overflow","Array","from","length","x","map","_","index","labelId","ListItem","role","undefined","dense","button","ListItemText","primary","defaultValue","accept","withStyles","theme","flexGrow","display","justifyContent","backgroundColor","palette","paper","boxShadow","shadows","padding","progress","marginLeft","GENERAL_MODEL_ERROR","modelsMainPath","UserCommand","UserInput","ModelsTable","showDetailedView","row","detailViewLoading","detailViewModel","modelNum","detailView","model","detailedValues","originalVendor","originalModelNumber","originalHeight","catch","error","ModelConstants","closeDetailedView","showDeleteModal","closeDeleteModal","delete","deleteModel","clickInfo","popoverAnchor","clickComment","commentPopover","handlePopoverClose","handleCommentPopoverClose","updateModelEdited","save","editModel","defaults","common","privilege","TableContainer","Table","TableHead","TableRow","columns","col","TableCell","align","TableBody","vals","hover","ADMIN","scope","keys","Popover","Boolean","anchorEl","anchorOrigin","vertical","horizontal","transformOrigin","CircularProgress","model_number","ethernet_ports","power_ports","margin","adminColumns","columnLookup","ModelsView","createdModel","Vendor","Height","display_color","CPU","Memory","Storage","Comment","showCreateModal","getVendorList","searchModels","createshowStatus","originalModelNum","edit","detailshowStatus","detailStatusMessage","detailStatusSeverity","viewVendor","viewModel","searchVendor","searchModelNum","searchHeight","models","rows","Object","values","forEach","items","searchText","VENDOR_VALUES","vendorsList","results","madeVendorQuery","UPLOAD_FILE","summary","EXPORT_FILE","csvData","csvLink","link","click","searchAll","openCreateModal","openImportModal","closeCreateModal","updateModelColorDetails","reason","createStatusClose","detailStatusClose","createdVendor","createdModelNum","createdHeight","createdDispClr","createdEthPorts","createdPwrPorts","createdCPU","createdMem","createdStorage","createdComments","deleteVendor","maxWidth","statusClose","useAutocomplete","filename","r","AssetInput","AssetCommand","Filters","ExpansionPanel","ExpansionPanelSummary","expandIcon","ExpansionPanelDetails","placeholder","FormControl","InputLabel","Select","MenuItem","DetailedView","showConfirmationBox","confirmDelete","deleteItem","statusOpen","loading","input","disabled","defaultValues","CreateModal","resetCreate","success","display_name","email","pivilege","gutterbottom","UsersTable","beginEditing","canEdit","endEditing","GENERAL_USER_ERROR","usersMainPath","UsersView","createUser","completion","createdUser","searchUsers","editUser","originalUsername","Username","Email","detailStatusOpen","UserConstants","deleteUser","deleteUsername","detailViewUser","viewUser","searchUsernm","searchEml","searchDspNm","searchPriv","updateUserCreator","newUser","updateUserEdited","newDetails","createStatusOpen","createStatusSeverity","createStatusMessage","USER","SUCCESS_TOKEN","ERROR_TOKEN","getGraph","primaryHosts","host","hostnameMapping","nodes","edges","primaryHostID","entries","primaryHost","secondaryHosts","to","secondaryHostID","secondaryHost","Exception","NetworkGraph","graph","GET_NETWORK_NEIGHBORHOOD","assetNum","layout","hierarchical","interaction","dragNodes","dragView","events","select","getNetwork","network","document","getElementById","stringToMac","val","returnVal","replace","toLowerCase","showTooltip","description","emptySearch","searchPath","left","right","EditAsset","forwardRef","Slide","getPowerFromProps","pwrCons","pwr","pwrCon","includes","getPowerPortFromProps","pwrPorts","parseInt","getLists","getModelList","getOwnerList","getDatacenterList","getAssetList","modelNames","networkNames","powerPortNames","modelKey","loadingModels","modelList","networkList","powerPortList","users","user","loadingOwners","ownerList","datacenters","datacenter","loadingDatacenters","datacenterList","instances","hostnames","hostToModel","instance","hostname","loadingHostnames","assetNumList","assetNumToModelList","availableNetworkConnections","editAsset","json","createJSON","AssetConstants","updateModel","networkConns","network_connections","updateHostname","updateRack","rackVal","rack","updateRackU","rackU","updateOwner","owner","updateComment","updateDatacenter","datacenter_name","updateTags","tags","changeNetworkMacAddress","prevState","assign","mac_address","changeNetworkHostname","connection_hostname","getPortOptions","changeNetworkPort","connection_port","updatePowerPort","power_connections","changePowerPortState","portNum","leftRight","updateAssetNumber","asset_number","getPowerConnections","pwrConns","num","split","availableNetworks","asset","networList","availableConnections","loadingAssetNumber","selectedConnection","powerPortState","portOptions","canSubmit","close","getModel","displayNetworks","getNetworkConnections","getMacValue","netCons","getConnectingHostname","getConnectionPort","connectionsDisabled","deleteAsset","openConfirmationBox","closeConfirmationBox","updated","MODEL","HOSTNAME","RACK","RACK_U","OWNER","COMMENT","DATACENTER","MAC_ADDRESS","NETWORK_CONNECTIONS","POWER_CONNECTIONS","ASSET_NUMBER","rack_position","dialogDiv","Tooltip","placement","title","networkPort","macAddress","networkConnections","k","RadioGroup","FormControlLabel","control","Radio","labelPlacement","FormHelperText","multiline","Alert","action","BackdropComponent","BackdropProps","timeout","border","appBar","position","flex","Transition","DetailAsset","closeDetailView","networkNodes","Dialog","fullScreen","TransitionComponent","AppBar","Toolbar","edge","aria-controls","FilterAsset","updateStartingLetter","startingLetter","updateEndingLetter","endingLetter","updateStartingNum","startingNum","updateEndingNum","endingNum","allAssets","abbreviation","updateItems","Fragment","descendingComparator","a","b","orderBy","CreateAsset","getNextAssetNum","GET_NEXT_ASSET_NUM","validJSON","createAsset","validateForm","firstFree","free_left","pwrLst","powerPort","exception","next_pair","free_right","ImportAsset","setFile","file","closeImport","showImport","AddAsset","openImport","openCreate","showCreate","closeCreate","ExportAsset","createData","DatacenterCommand","headCells","numeric","TableAsset","body","originalRack","originalrack_position","createSortHandler","property","isAsc","order","openDetailedView","dAsset","currAsset","detailAsset","assets","tableItems","showStatusBar","deleteAssetRack","deleteAssetrack_position","detailHostname","table","styledTableRow","headCell","tableCellHead","sortDirection","TableSortLabel","active","visuallyHidden","array","comparator","stabilizedThis","el","sort","stableSort","tabIndex","styledTableCell","marginBottom","clip","top","ErrorBoundary","hasError","errorInfo","children","AssetsView","CreateDatacenter","generateCreateJSON","datacenterAbbreviation","datacenterName","createDatacenter","CREATE","updateDatacenterName","updateDatacenterAbbrevation","getAbbreviation","selectedDatacenter","selectDatacenter","scroll","EditDatacenter","generateEditJSON","dcName","dcAbbrev","editDatacenter","EDIT","show","MinusSquare","SvgIcon","d","PlusSquare","CloseSquare","useSpring","opacity","transform","div","Collapse","RackCommand","StyledTreeItem","iconContainer","group","paddingLeft","borderLeft","fade","text","TreeItem","RacksView","handleFormat","newFormats","formats","firstRack","secondRack","racksList","racks","f","TreeView","defaultExpanded","defaultCollapseIcon","defaultExpandIcon","defaultEndIcon","nodeId","heading","typography","pxToRem","fontWeightRegular","ShowDatacenters","useState","rackType","setRackType","rack1","setRack1","rack2","setRack2","datacentersList","ToggleButtonGroup","exclusive","newType","ToggleButton","updateRacks","CREATE_RACKS","GET_RACK_DETAILS","DELETE_RACKS","StatsCommand","ConfirmDeteleDC","deleteDatacenter","racksMainPath","DatacenterView","getDatacenters","loadingDCList","GET_ALL_DATACENTERS","getAllRacks","currentDatacenter","DELETE","openEditDatacenter","datacenterAbbrev","editDCName","editDCAbbr","showEditDC","closeEditDatacenter","command","win","focus","showSnack","GET_ALL_RACKS","letter","closeEditDatacneter","DatacenterManagerView","jsonToArr","incomingJSON","JSON","constructor","LogCommand","tables","tableCols","StatisticsView","tableValues","totalUsage","spaceUsage","vendorUsage","modelUsage","ownerUsage","generateReport","GENERATE_REPORT","totalUsageRow","JSONtoArr","column","isNaN","typeKey","timestampKey","LogsView","getLogs","GET_LOGS","parseLog","filter","logs","timestamp","makeTableData","logItems","filteredLogs","allLogs","filterUser","filterAsset","filteredItems","entry","hasAsset","hasUser","match","request","updateFilterUser","updateFilterAsset","searchbar","logItem","aligh","TabViewer","handleProfileMenuOpen","currentTarget","isMenuOpen","handleMenuClose","currentTabID","handleChange","newValue","aria-haspopup","Menu","keepMounted","logout","Tabs","indicatorColor","textColor","centered","Tab","Container","tab","hidden","menuButton","marginRight","storedToken","storedPrivilege","storedLoggedIn","storedUsername","PageSelector","login","sessionStorage","setItem","loggedIn","history","replaceState","removeItem","getItem","shib","redirected","ReactDOM","render","referrer"],"mappings":"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","file":"static/js/main.8ea7d973.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.df79d0ea.png\";","/**\r\n * Constants file\r\n */\r\n\r\nexport const localServerEndpoint = 'http://localhost:4010/';\r\nexport const testServerEndpoint = 'https://parseltongue-finishinge-lfw68m.herokuapp.com/';\r\nexport const devServerEndpoint = 'https://parseltongue-dev.herokuapp.com/';\r\nexport const prodServerEndpoint = 'https://parseltongue-prod.herokuapp.com/';\r\n\r\nexport const serverEndpoint = localServerEndpoint;\r\n\r\n\r\nexport const RackX = [\r\n    'A', 'B', 'C', 'D', 'E',\r\n    'F', 'G', 'H', 'I', 'J',\r\n    'K', 'L', 'M', 'N', 'O',\r\n    'P', 'Q', 'R', 'S', 'T',\r\n    'W', 'X', 'Y', 'Z',\r\n]\r\n\r\nexport const ASSETS_MAIN_PATH = 'instances/';\r\nexport const MODELS_MAIN_PATH = \"models/\";\r\nexport const USERS_MAIN_PATH = \"users/\";\r\nexport const RACKS_MAIN_PATH = \"racks/\";\r\nexport const DATACENTERS_MAIN_PATH = \"datacenters/\";\r\nexport const LOGS_MAIN_PATH = \"logs/\"\r\n\r\nexport const CLIENT_ID = \"ParselTonguesUserAuth\";\r\nexport const CLIENT_SECRET = \"LpUwB*eiK4Iw#1gaCu5jYp1u5uRF3ERsdmuNUGoKYNzn7rHm7b\";\r\nexport const SCOPE = \"basic\";\r\n\r\nexport var SHIB_REDIRECT_URI = \"\";\r\n\r\nif (window.location.href === \"http://localhost:3000\" || window.location.href === \"http://localhost:3000/\") {\r\n    SHIB_REDIRECT_URI = window.location.href;\r\n} else {\r\n    SHIB_REDIRECT_URI = serverEndpoint;\r\n}\r\n\r\nexport const SHIBBOLETH_LOGIN =\r\n    \"https://oauth.oit.duke.edu/oauth/authorize.php?\"\r\n     + \"client_id=\" + encodeURIComponent(CLIENT_ID)\r\n     + \"&client_secret=\" + encodeURIComponent(CLIENT_SECRET)\r\n     + \"&redirect_uri=\" + encodeURIComponent(SHIB_REDIRECT_URI)\r\n     + \"&response_type=token\"\r\n     + \"&state=1129\"\r\n     + \"&scope=\" + encodeURIComponent(SCOPE);\r\n\r\nexport const HTTPS_STATUS_OK = 200;\r\n","export enum Privilege  {\r\n    ADMIN = \"admin\",\r\n    USER = \"user\",\r\n};\r\n","import * as Constants from '../../Constants';\r\n\r\nexport default function getURL(path, endpoint) {\r\n    return Constants.serverEndpoint + path + endpoint;\r\n}\r\n","export enum ModelCommand {\r\n    create = 'create/',\r\n    delete = 'delete/',\r\n    edit = 'edit/',\r\n    view = 'view/',\r\n    detailView = 'detailView/',\r\n    search = 'search/',\r\n    VENDOR_VALUES = 'assistedvendor/',\r\n    UPLOAD_FILE = 'import/',\r\n    EXPORT_FILE = 'export/'\r\n}\r\n","export enum ModelInput {\r\n    Vendor = 'vendor',\r\n    model_number = 'model_number',\r\n    Height = 'height',\r\n    display_color = 'display_color',\r\n    ethernet_ports = 'ethernet_ports',\r\n    power_ports = 'power_ports',\r\n    CPU = 'cpu',\r\n    Memory = 'memory',\r\n    Storage = 'storage',\r\n    Comment = 'comment'\r\n}\r\n","import React from 'react';\r\n\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\n\r\n\r\nexport default class StatusDisplay extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n\r\n        };\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Snackbar open={this.props.open} autoHideDuration={4000} onClose={this.props.closeStatus}>\r\n                    <MuiAlert elevation={6} variant=\"filled\"\r\n                        severity={this.props.severity}\r\n                    >\r\n                        <div>\r\n                        {this.props.message}\r\n                        <IconButton\r\n                            aria-label=\"close\"\r\n                            color=\"inherit\"\r\n                            size=\"small\"\r\n                            onClick={this.props.closeStatus}\r\n                        >\r\n                            <CloseIcon fontSize=\"inherit\" />\r\n                        </IconButton>\r\n                        </div>\r\n                    </MuiAlert >\r\n                </Snackbar>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport StatusDisplay from './helpers/StatusDisplay';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport logo from '../images/logo.png';\r\n\r\n\r\n\r\nexport default class ShibLogin extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            username:'',\r\n            password:'',\r\n            statusMessage:'',\r\n            showStatus:false,\r\n            statusSeverity:'info',\r\n        };\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Grid\r\n                container\r\n                spacing={5}\r\n                direction=\"column\"\r\n                justify=\"flex-start\"\r\n                alignItems=\"center\"\r\n                onKeyDown={(e) => this.onKeyPressed(e)}\r\n                style={{\r\n                    \"minHeight\": \"102vh\",\r\n                    \"background\": \"linear-gradient(to top, #a8e063, #56ab2f)\",\r\n                }}\r\n            >\r\n                <Grid item xs={12}>\r\n                    <img src={logo} alt=\"\" style={{height: \"200px\", \"marginTop\": \"50px\"}} />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <Card\r\n                        style={\r\n                            {\r\n                                minWidth: '20vw',\r\n                            }\r\n                        }\r\n                    >\r\n                        <CardContent>\r\n                            <Grid\r\n                                container\r\n                                spacing={1}\r\n                                direction=\"column\"\r\n                                justify=\"center\"\r\n                                alignItems=\"center\"\r\n                            >\r\n                                <Grid container item alignItems=\"flex-start\" xs={12}>\r\n                                    <Typography\r\n                                        variant=\"h6\"\r\n                                        color=\"textPrimary\"\r\n                                        fontWeight=\"fontWeightBold\"\r\n                                        gutterBottom\r\n                                    >\r\n                                        Please wait while we log you in...\r\n                                    </Typography>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </CardContent>\r\n                    </Card>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <StatusDisplay\r\n                        open={this.state.showStatus}\r\n                        severity={this.state.statusSeverity}\r\n                        closeStatus={this.closeShowStatus}\r\n                        message={this.state.statusMessage}\r\n                    />\r\n                </Grid>\r\n            </Grid>\r\n\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport axios from 'axios';\r\nimport getURL from './helpers/functions/GetURL';\r\nimport { Privilege } from './enums/privilegeTypes.ts'\r\nimport StatusDisplay from './helpers/StatusDisplay';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport logo from '../images/logo.png';\r\nimport ShibLogin from './ShibLogin';\r\nimport * as Constants from \"./Constants\";\r\n\r\nconst loginMainPath = 'users/';\r\nconst queryString = require('query-string');\r\n\r\nexport default class Login extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            username:'',\r\n            password:'',\r\n            statusMessage:'',\r\n            showStatus:false,\r\n            statusSeverity:'info',\r\n            initialized:false,\r\n            oauth:false,\r\n        };\r\n\r\n        this.closeShowStatus = this.closeShowStatus.bind(this);\r\n        this.submitCredentials = this.submitCredentials.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        try {\r\n            var params = queryString.parse(window.location.hash.substring(1));\r\n            if (params.access_token != null) {\r\n                this.getDukeCredentials(params.access_token);\r\n                this.setState({ oauth: true });\r\n            }\r\n        } catch(e) {\r\n            console.log(\"tried:\")\r\n        }\r\n        this.setState({ initialized: true });\r\n    }\r\n\r\n    submitCredentials() {\r\n        axios.post(\r\n            getURL(loginMainPath, 'authenticate'), {\r\n                username: this.state.username,\r\n                password: this.state.password,\r\n            }).then(response => {\r\n                console.log(response);\r\n                var valid = response.data['message'];\r\n                if (valid === 'success') {\r\n                    this.setState({ message: '' });\r\n                    this.props.loginFunc(response.data['token'], this.state.username, response.data['privilege']);\r\n                } else {\r\n                    this.setState({ showStatus:true, statusMessage:response.data['message'] });\r\n                }\r\n            });\r\n        //this.props.loginFunc('token', \"Administrator\", Privilege.ADMIN);\r\n    }\r\n\r\n    updateUsername(event) {\r\n        this.setState({ username: event.target.value })\r\n    }\r\n\r\n    updatePassword(event) {\r\n        this.setState({ password: event.target.value })\r\n    }\r\n\r\n    closeShowStatus() {\r\n        this.setState({ showStatus: false })\r\n    }\r\n\r\n    onKeyPressed(event) {\r\n        if (event.key === 'Enter') {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n            this.submitCredentials();\r\n        }\r\n    }\r\n\r\n    getDukeCredentials = (token) => {\r\n        axios.get('https://api.colab.duke.edu/identity/v1/', {\r\n            headers: {\r\n                'x-api-key': Constants.CLIENT_ID,\r\n                'Authorization': `Bearer ${token}`\r\n            }\r\n        }).then(response => {\r\n            axios.post(\r\n                getURL(loginMainPath, 'oauth'),\r\n                {\r\n                    \"username\":response.data.netid,\r\n                    \"email\":response.data.mail,\r\n                    \"display_name\":response.data.displayName,\r\n                    \"client_id\":Constants.CLIENT_ID,\r\n                    \"token\":token,\r\n                }\r\n                ).then(response => {\r\n                    console.log(\"response:\")\r\n                    console.log(response);\r\n                    var valid = response.data['message'];\r\n                    if (response.status === Constants.HTTPS_STATUS_OK) {\r\n                        this.setState({\r\n                            username:'',\r\n                            password:'',\r\n                            statusMessage:'',\r\n                            showStatus:false,\r\n                            statusSeverity:'info',\r\n                            initialized:false,\r\n                            oauth:false,\r\n                         });\r\n                        this.props.loginFuncOAuth(response.data['token'], response.data.username, response.data['privilege']);\r\n                    } else {\r\n                        this.setState({ showStatus:true, statusMessage:response.data['message'] });\r\n                    }\r\n            });\r\n        });\r\n    }\r\n\r\n    loginWithOAuth = () => {\r\n        window.location = Constants.SHIBBOLETH_LOGIN;\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                { (this.state.oauth) ? <ShibLogin /> :\r\n                <Grid\r\n                    container\r\n                    spacing={5}\r\n                    direction=\"column\"\r\n                    justify=\"flex-start\"\r\n                    alignItems=\"center\"\r\n                    onKeyDown={(e) => this.onKeyPressed(e)}\r\n                    style={{\r\n                        \"minHeight\": \"102vh\",\r\n                        \"background\": \"#56ab2f\",\r\n                        \"background\": \"-webkit-linear-gradient(to top, #a8e063, #56ab2f)\",\r\n                        \"background\": \"linear-gradient(to top, #a8e063, #56ab2f)\",\r\n                    }}\r\n                >\r\n                    <Grid item xs={12}>\r\n                        <img src={logo} style={{height: \"200px\", \"marginTop\": \"50px\"}} alt=\"Hyposoft\" />\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <Card\r\n                            style={\r\n                                {\r\n                                    minWidth: '20vw',\r\n                                }\r\n                            }\r\n                        >\r\n                            <CardContent>\r\n                                <Grid\r\n                                    container\r\n                                    spacing={1}\r\n                                    direction=\"column\"\r\n                                    justify=\"center\"\r\n                                    alignItems=\"center\"\r\n                                >\r\n                                    <Grid container item alignItems=\"flex-start\" xs={12}>\r\n                                        <Typography\r\n                                            variant=\"h4\"\r\n                                            color=\"textPrimary\"\r\n                                            fontWeight=\"fontWeightBold\"\r\n                                            gutterBottom\r\n                                        >\r\n                                            Login\r\n                                        </Typography>\r\n                                    </Grid>\r\n                                    <Grid item xs={12}>\r\n                                        <TextField\r\n                                            id=\"username-input\"\r\n                                            label=\"Username\"\r\n                                            variant=\"outlined\"\r\n                                            required={true}\r\n                                            ref='username'\r\n                                            onChange={this.updateUsername.bind(this)}\r\n                                            style={{minWidth: \"15vw\"}}\r\n                                        />\r\n                                    </Grid>\r\n                                    <Grid item xs={12}>\r\n                                        <TextField\r\n                                            id=\"password-input\"\r\n                                            label=\"Password\"\r\n                                            variant=\"outlined\"\r\n                                            required={true}\r\n                                            ref='password'\r\n                                            type=\"password\"\r\n                                            onChange={this.updatePassword.bind(this)}\r\n                                            style={{minWidth: \"15vw\"}}\r\n                                        />\r\n                                    </Grid>\r\n                                    <Grid item xs={12}>\r\n                                        <Button\r\n                                            onClick={this.submitCredentials}\r\n                                            variant=\"contained\"\r\n                                            color=\"primary\"\r\n                                            style={{minWidth: \"15vw\"}}\r\n                                        >\r\n                                            Sign In\r\n                                        </Button>\r\n                                    </Grid>\r\n                                    <Grid container item direciton=\"row\" justify=\"center\" alignItems=\"center\" xs={12}>\r\n                                            <hr style={{width: \"5vw\"}} />\r\n                                            <Typography color=\"textSecondary\">\r\n                                                Or\r\n                                            </Typography>\r\n                                            <hr style={{width: \"5vw\"}} />\r\n                                    </Grid>\r\n                                    <Grid item xs={12}>\r\n                                        <Button\r\n                                            onClick={this.loginWithOAuth}\r\n                                            variant=\"contained\"\r\n                                            color=\"primary\"\r\n                                        >\r\n                                            Sign In with NetID\r\n                                        </Button>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </CardContent>\r\n                        </Card>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <StatusDisplay\r\n                            open={this.state.showStatus}\r\n                            severity={this.state.statusSeverity}\r\n                            closeStatus={this.closeShowStatus}\r\n                            message={this.state.statusMessage}\r\n                        />\r\n                    </Grid>\r\n                </Grid>}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport CloudDownloadIcon from '@material-ui/icons/CloudDownload';\n\nexport default class ExportModel extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {};\n    }\n\n    render() {\n        return (\n            <div>\n                <Paper elevation={3}>\n                <Grid\n                    container\n                    spacing={2}\n                    direction=\"row\"\n                    justify=\"flex-start\"\n                    alignItems=\"center\"\n                    style={{\"padding\": \"10px\"}}\n                >\n                    <Grid item xs={12}>\n                        <Typography variant=\"h6\">Export</Typography>\n                    </Grid>\n                    <Grid item xs={12}>\n                        <Typography>Download what is currently shown in the table.</Typography>\n                    </Grid>\n                    <Grid item xs={12}>\n                        <Button\n                            onClick={this.props.downloadTable}\n                            variant=\"contained\"\n                            color=\"primary\"\n                            startIcon={<CloudDownloadIcon />}\n                            style={{\n                                width: \"100%\"\n                            }}\n                        >\n                            Export\n                        </Button>\n                    </Grid>\n                    <Grid container item direciton=\"row\" justify=\"center\" alignItems=\"center\" xs={12}>\n                        <hr style={{width: \"5vw\"}} />\n                        <Typography color=\"textSecondary\">\n                            Or\n                        </Typography>\n                        <hr style={{width: \"5vw\"}} />\n                    </Grid>\n                    <Grid item xs={12}>\n                        <Button\n                            onClick={this.props.showAll}\n                            variant=\"contained\"\n                            color=\"default\"\n                            style={{\n                                width: \"100%\"\n                            }}\n                        >\n                            Show all models\n                        </Button>\n                    </Grid>\n                </Grid>\n            </Paper>\n            </div>\n        );\n    }\n}\n","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\n\r\nfunction createInputs(name, label) {\r\n    return {label, name};\r\n}\r\n\r\nconst inputs = {\r\n    \"vendor\": createInputs('vendor', \"Vendor\"),\r\n    \"modelNumber\": createInputs('model_number', \"Model Number\"),\r\n    \"height\": createInputs('height', \"Height\"),\r\n    \"displayColor\": createInputs('display_color', \"Display Color\"),\r\n    \"ethernetPorts\": createInputs('ethernet_ports', \"Network Ports\"),\r\n    \"powerPorts\": createInputs('power_ports', \"Power Ports\"),\r\n    \"cpu\": createInputs('cpu', \"CPU\"),\r\n    \"memory\": createInputs('memory', \"Memory\"),\r\n    \"storage\": createInputs('storage', \"Storage\"),\r\n    \"comments\": createInputs('comments', \"Comments\"),\r\n}\r\n\r\nexport default class FilterModel extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            filters: {},\r\n        };\r\n    }\r\n\r\n    updateSearchText(event) {\r\n        if (this.state.filters.hasOwnProperty(event.target.id)) {\r\n            const newFilters = this.state.filters;\r\n            newFilters[event.target.id] = event.target.value;\r\n            this.setState({ filters: newFilters });\r\n            this.forceUpdate();\r\n        } else {\r\n            const newFilters = this.state.filters;\r\n            newFilters[event.target.id] = event.target.value;\r\n            this.setState({ filters: newFilters });\r\n            this.forceUpdate();\r\n        }\r\n    }\r\n\r\n    search() {\r\n        this.props.search(this.state.filters);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Paper elevation={3}>\r\n                <Grid\r\n                    container\r\n                    spacing={2}\r\n                    direction=\"row\"\r\n                    justify=\"flex-start\"\r\n                    alignItems=\"center\"\r\n                    style={{\"padding\": \"10px\"}}\r\n                >\r\n                    <Grid item xs={12}>\r\n                        <Typography variant=\"h5\">Search</Typography>\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6} md={4} lg={3}>\r\n                        <Autocomplete\r\n                            id=\"vendor\"\r\n                            options={this.props.options}\r\n                            includeInputInList\r\n                            freeSolo\r\n                            renderInput={params => (\r\n                            <TextField {...params} label={inputs.vendor.label} name={inputs.vendor.name} onChange={this.updateSearchText.bind(this)} onBlur={this.updateSearchText.bind(this)} variant=\"outlined\" fullWidth />\r\n                            )}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6} md={4} lg={3}>\r\n                        <TextField id=\"model_number\" variant=\"outlined\" label=\"Model Number\" name=\"model_number\" onChange={this.updateSearchText.bind(this)} style={{width: \"100%\"}} />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6} md={4} lg={3}>\r\n                        <TextField id=\"min_height\" type=\"number\" variant=\"outlined\" label=\"Min Height\" name=\"min_height\" onChange={this.updateSearchText.bind(this)} style={{width: \"100%\"}} InputProps={{ inputProps: { min: 1, max: 42} }}/>\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6} md={4} lg={3}>\r\n                        <TextField id=\"max_height\" type=\"number\" variant=\"outlined\" label=\"Max Height\" name=\"max_height\" onChange={this.updateSearchText.bind(this)} style={{width: \"100%\"}} InputProps={{ inputProps: { min: 1, max: 42} }}/>\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6} md={4} lg={3}>\r\n                        <TextField id=\"min_ethernet_ports\" type=\"number\" variant=\"outlined\" label=\"Min Network Ports\" name=\"min_ethernet_ports\" onChange={this.updateSearchText.bind(this)} style={{width: \"100%\"}} InputProps={{ inputProps: { min: 0} }}/>\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6} md={4} lg={3}>\r\n                        <TextField id=\"max_ethernet_ports\" type=\"number\" variant=\"outlined\" label=\"Max Network Ports\" name=\"max_ethernet_ports\" onChange={this.updateSearchText.bind(this)} style={{width: \"100%\"}} InputProps={{ inputProps: { min: 0} }}/>\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6} md={4} lg={3}>\r\n                        <TextField id=\"min_power_ports\" type=\"number\" variant=\"outlined\" label=\"Min Power Ports\" name=\"min_power_ports\" onChange={this.updateSearchText.bind(this)} style={{width: \"100%\"}} InputProps={{ inputProps: { min: 0} }}/>\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6} md={4} lg={3}>\r\n                        <TextField id=\"max_power_ports\" type=\"number\" variant=\"outlined\" label=\"Max Power Ports\" name=\"max_power_ports\" onChange={this.updateSearchText.bind(this)} style={{width: \"100%\"}} InputProps={{ inputProps: { min: 0} }}/>\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6} md={4} lg={3}>\r\n                        <TextField id=\"cpu\" variant=\"outlined\" label=\"CPU\" name=\"cpu\" onChange={this.updateSearchText.bind(this)} style={{width: \"100%\"}}/>\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6} md={4} lg={3}>\r\n                        <TextField id=\"memory\" type=\"number\" variant=\"outlined\" label=\"Memory\" name=\"memory\" onChange={this.updateSearchText.bind(this)} style={{width: \"100%\"}} InputProps={{ inputProps: { min: 0} }}/>\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6} md={4} lg={3}>\r\n                        <TextField id=\"storage\" variant=\"outlined\" label=\"Storage\" name=\"storage\" onChange={this.updateSearchText.bind(this)} style={{width: \"100%\"}}/>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <Button\r\n                            onClick={this.search.bind(this)}\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            style={{\r\n                                width: \"100%\"\r\n                            }}\r\n                        >\r\n                            Search\r\n                        </Button>\r\n                    </Grid>\r\n                </Grid>\r\n            </Paper>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\n\r\nimport axios from \"axios\";\r\n\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from '@material-ui/core/Button';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { CompactPicker } from 'react-color';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport '../stylesheets/ModelStyles.css';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\r\nimport Dropzone from 'react-dropzone'\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListSubheader from '@material-ui/core/ListSubheader';\r\n\r\nimport getURL from \"../../helpers/functions/GetURL\";\r\nimport * as Constants from \"../../Constants\";\r\n\r\nfunction createInputs(name, label) {\r\n    return {label, name};\r\n}\r\n\r\nconst inputs = {\r\n    \"vendor\": createInputs('vendor', \"Vendor\"),\r\n    \"modelNumber\": createInputs('model_number', \"Model Number\"),\r\n    \"height\": createInputs('height', \"Height\"),\r\n    \"displayColor\": createInputs('display_color', \"Display Color\"),\r\n    \"ethernetPorts\": createInputs('ethernet_ports', \"Network Ports\"),\r\n    \"powerPorts\": createInputs('power_ports', \"Power Ports\"),\r\n    \"cpu\": createInputs('cpu', \"CPU\"),\r\n    \"memory\": createInputs('memory', \"Memory\"),\r\n    \"storage\": createInputs('storage', \"Storage\"),\r\n    \"comment\": createInputs('comment', \"Comment\"),\r\n}\r\n\r\nconst useStyles = theme => ({\r\n    root: {\r\n      flexGrow: 1,\r\n    },\r\n    modal: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        width: \"100%\",\r\n      },\r\n      grid: {\r\n          backgroundColor: theme.palette.background.paper,\r\n          boxShadow: theme.shadows[5],\r\n          padding: theme.spacing(2, 4, 3),\r\n          width: \"50%\"\r\n      },\r\n      progress: {\r\n        display: 'flex',\r\n        '& > * + *': {\r\n          marginLeft: theme.spacing(2),\r\n        },\r\n      },\r\n});\r\n\r\nclass CreateModel extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            color: '#000',\r\n            showModal: false,\r\n            showImportModal: false,\r\n            importedFile: null,\r\n            networkPorts: [],\r\n            numPorts: 0,\r\n        };\r\n    }\r\n\r\n    updateColor = (color) => {\r\n        this.setState({ color: color });\r\n        this.props.updateModelColor(color.hex);\r\n    }\r\n\r\n    showModal = () => {\r\n        this.setState({ showModal: true });\r\n    }\r\n\r\n    showImportModal = () => {\r\n        this.setState({ showImportModal: true });\r\n    }\r\n\r\n    closeModal = () => {\r\n        this.setState({ showModal: false, networkPorts: [], numPorts: 0 });\r\n    }\r\n\r\n    closeImportModal = () => {\r\n        this.setState({ showImportModal: false });\r\n    }\r\n\r\n    create = (event) => {\r\n        event.preventDefault();\r\n        this.props.createModel(this.state.networkPorts);\r\n        this.closeModal();\r\n    }\r\n\r\n    uploadFile = () => {\r\n        const data = new FormData();\r\n        data.append('file', this.state.importedFile);\r\n        this.props.sendUploadedFile(data);\r\n    }\r\n\r\n    chooseFile = (event) => {\r\n        console.log(event);\r\n        this.setState({ importedFile: event.target.files[0] })\r\n    }\r\n\r\n    updateNetworkPorts = (event) => {\r\n        const numPorts = event.target.value === '' ? 0 : event.target.value;\r\n\r\n        var ports = [];\r\n        for (var i = 1; i <= numPorts; i++) {\r\n            ports.push(i.toString());\r\n        }\r\n\r\n        this.setState({ networkPorts: ports, numPorts: numPorts });\r\n        this.props.updateModelCreator(event);\r\n    }\r\n\r\n    updatePort = (port, event) => {\r\n        const ports = this.state.networkPorts;\r\n        ports[port] = event.target.value;\r\n\r\n        this.setState({ networkPorts: ports });\r\n    }\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n\r\n        return (\r\n        <div>\r\n            <Paper elevation={3}>\r\n                <Grid\r\n                    container\r\n                    spacing={2}\r\n                    direction=\"row\"\r\n                    justify=\"flex-start\"\r\n                    alignItems=\"center\"\r\n                    style={{\"padding\": \"10px\"}}\r\n                >\r\n                    <Grid item xs={12}>\r\n                        <Typography\r\n                            variant=\"h5\"\r\n                        >\r\n                            Add\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            style={{\r\n                                width: \"100%\",\r\n                                background: \"green\",\r\n                                color: \"white\"\r\n                            }}\r\n                            onClick={this.showModal}\r\n                        >\r\n                            Create\r\n                        </Button>\r\n                    </Grid>\r\n                    <Grid container item direciton=\"row\" justify=\"center\" alignItems=\"center\" xs={12}>\r\n                        <hr style={{width: \"5vw\"}} />\r\n                        <Typography color=\"textSecondary\">\r\n                            Or\r\n                        </Typography>\r\n                        <hr style={{width: \"5vw\"}} />\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            style={{width: \"100%\"}}\r\n                            startIcon={<CloudUploadIcon />}\r\n                            onClick={() => {this.showImportModal()} }\r\n                        >\r\n                            Import\r\n                        </Button>\r\n                    </Grid>\r\n                </Grid>\r\n            </Paper>\r\n            <Modal\r\n                aria-labelledby=\"transition-modal-title\"\r\n                aria-describedby=\"transition-modal-description\"\r\n                className={classes.modal}\r\n                open={this.state.showModal}\r\n                onClose={this.closeModal}\r\n                closeAfterTransition\r\n            >\r\n                <Fade in={this.state.showModal}>\r\n                    <Backdrop\r\n                        open={this.state.showModal}\r\n                    >\r\n                        <div className={classes.grid}>\r\n                            <form\r\n                                onSubmit={(event) => this.create(event)}\r\n                            >\r\n                        <Grid\r\n                            container\r\n                            spacing={1}\r\n                            direction=\"row\"\r\n                            justify=\"flex-start\"\r\n                            alignItems=\"center\"\r\n                        >\r\n                            <Grid item xs={12}>\r\n                                <Typography variant=\"h5\">New Model</Typography>\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={12} md={6} lg={6}>\r\n                                <Autocomplete\r\n                                    id=\"select-vendor\"\r\n                                    options={this.props.options}\r\n                                    includeInputInList\r\n                                    freeSolo\r\n                                    renderInput={params => (\r\n                                        <TextField {...params} required={true} label={inputs.vendor.label} name={inputs.vendor.name} onChange={this.props.updateModelCreator} onBlur={this.props.updateModelCreator} variant=\"outlined\" fullWidth />\r\n                                    )}\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={6} md={4} lg={3}>\r\n                                <TextField id=\"standard-basic\" required={true} variant=\"outlined\" label={inputs.modelNumber.label} name={inputs.modelNumber.name} onChange={this.props.updateModelCreator}/>\r\n                            </Grid>\r\n                            <Grid item xs={3}>\r\n                                <TextField type=\"number\" id=\"standard-basic\" required={true} variant=\"outlined\" label={inputs.height.label} name={inputs.height.name} onChange={this.props.updateModelCreator} InputProps={{ inputProps: { min: 1, max: 42} }} style={{ width: \"100%\" }} />\r\n                            </Grid>\r\n                            <Grid item xs={3}>\r\n                                <TextField type=\"number\" id=\"standard-basic\" variant=\"outlined\" label={inputs.ethernetPorts.label} name={inputs.ethernetPorts.name} onChange={this.updateNetworkPorts} InputProps={{ inputProps: { min: 0} }} />\r\n                            </Grid>\r\n                            <Grid item xs={3}>\r\n                                <TextField type=\"number\" id=\"standard-basic\" variant=\"outlined\" label={inputs.powerPorts.label} name={inputs.powerPorts.name} onChange={this.props.updateModelCreator} InputProps={{ inputProps: { min: 0} }}/>\r\n                            </Grid>\r\n                            <Grid item xs={3}>\r\n                                <TextField id=\"standard-basic\" variant=\"outlined\" label={inputs.cpu.label} name={inputs.cpu.name} onChange={this.props.updateModelCreator}/>\r\n                            </Grid>\r\n                            <Grid item xs={3}>\r\n                                <TextField type=\"number\" id=\"standard-basic\" variant=\"outlined\" label={inputs.memory.label} name={inputs.memory.name} onChange={this.props.updateModelCreator} InputProps={{ inputProps: { min: 0} }} style={{ width: \"100%\" }}/>\r\n                            </Grid>\r\n                            <Grid item xs={3}>\r\n                                <TextField id=\"standard-basic\" variant=\"outlined\" label={inputs.storage.label} name={inputs.storage.name} onChange={this.props.updateModelCreator}/>\r\n                            </Grid>\r\n                            <Grid item xs={3}>\r\n                                <TextField id=\"standard-basic\" variant=\"outlined\" label={inputs.comment.label} name={inputs.comment.name} onChange={this.props.updateModelCreator}/>\r\n                            </Grid>\r\n                            <Grid item xs={6}>\r\n                                <Typography>Display Color</Typography>\r\n                                <CompactPicker\r\n                                    color={this.state.color}\r\n                                    onChange={this.updateColor}\r\n\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                            <List\r\n                                className={classes.root}\r\n                                subheader={\r\n                                    <ListSubheader component=\"div\" id=\"nested-list-subheader\">\r\n                                      Network Ports\r\n                                    </ListSubheader>\r\n                                  }\r\n                                style={{\r\n                                    maxHeight: \"30vh\",\r\n                                    overflow: \"auto\"\r\n                                }}\r\n                            >\r\n                                {Array.from({length: this.state.numPorts}, (x,i) => i).map((_, index) => {\r\n                                    const labelId = `list-label-${this.state.networkPorts[index]}`;\r\n\r\n                                    return (\r\n                                    <ListItem key={index} role={undefined} dense button>\r\n                                        <ListItemText id={labelId} primary={\"Port \" + (index+1).toString()} />\r\n                                        <TextField defaultValue={this.state.networkPorts[index]} onChange={(e) => this.updatePort(index, e)} />\r\n                                    </ListItem>\r\n                                    );\r\n                                })}\r\n                                {this.state.numPorts === 0 ? <ListItem key=\"add-items\" role={undefined} dense>\r\n                                <ListItemText id=\"add-items-label\" primary=\"Enter the number of network ports above\" />\r\n                                </ListItem> : null}\r\n                                </List>\r\n                            </Grid>\r\n                            <Grid item xs={3}>\r\n                                <Button\r\n                                    variant=\"contained\"\r\n                                    color=\"primary\"\r\n                                    type=\"submit\"\r\n                                    style={{width: \"100%\"}}\r\n                                >\r\n                                    Create\r\n                                </Button>\r\n                            </Grid>\r\n                            <Grid item xs={3}>\r\n                                <Button\r\n                                    variant=\"contained\"\r\n                                    color=\"secondary\"\r\n                                    onClick={this.closeModal}\r\n                                    style={{width: \"100%\"}}\r\n                                >\r\n                                    Cancel\r\n                                </Button>\r\n                            </Grid>\r\n                        </Grid>\r\n                        </form>\r\n                </div>\r\n                </Backdrop>\r\n\r\n                </Fade>\r\n            </Modal>\r\n\r\n            <Modal\r\n                aria-labelledby=\"transition-modal-title\"\r\n                aria-describedby=\"transition-modal-description\"\r\n                className={classes.modal}\r\n                open={this.state.showImportModal}\r\n                onClose={this.closeImportModal}\r\n                closeAfterTransition\r\n            >\r\n                <Fade in={this.state.showImportModal}>\r\n                    <Backdrop\r\n                        open={this.state.showImportModal}\r\n                    >\r\n                        <div className={classes.grid}>\r\n                        <Grid\r\n                            container\r\n                            spacing={1}\r\n                            direction=\"row\"\r\n                            justify=\"flex-start\"\r\n                            alignItems=\"center\"\r\n                        >\r\n                            <Grid item xs={9}>\r\n                                <Typography variant=\"h5\">Import Models</Typography>\r\n                            </Grid>\r\n                            <Grid item xs={3}>\r\n                                <Button\r\n                                    onClick={this.closeImportModal}\r\n                                    style={{ width: \"100%\" }}\r\n                                >\r\n                                    Close\r\n                                </Button>\r\n                            </Grid>\r\n                            <Grid container item direction=\"row\" justify=\"center\" alignItems=\"center\" xs={12}>\r\n\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\ttype='file'\r\n                                    accept=\".csv\"\r\n                                    name=\"models_upload\"\r\n\t\t\t\t\t\t\t\t\tonChange={(event) => this.chooseFile(event)}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t<Grid container item direciton=\"row\" justify=\"center\" alignItems=\"center\" xs={12}>\r\n                                <Button\r\n                                    variant=\"contained\"\r\n                                    color=\"primary\"\r\n\t\t\t\t\t\t\t\t\tstyle={{width: \"40%\"}}\r\n\t\t\t\t\t\t\t\t\tonClick={() => {this.uploadFile()}}\r\n                                >\r\n                                    Upload File\r\n                                </Button>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </div>\r\n                </Backdrop>\r\n                </Fade>\r\n            </Modal>\r\n        </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withStyles(useStyles)(CreateModel);\r\n","\r\n\r\n\r\nexport const GENERAL_MODEL_ERROR =  \"There was an error in the backend. Could not perform the given model operation at this time.\";\r\n","import React from 'react';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport Popover from '@material-ui/core/Popover';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport Typography from '@material-ui/core/Typography';\nimport Modal from '@material-ui/core/Modal';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport Fade from '@material-ui/core/Fade';\nimport { withStyles } from '@material-ui/core/styles';\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { CompactPicker } from 'react-color';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ViewListIcon from '@material-ui/icons/ViewList';\nimport { Privilege } from '../../enums/privilegeTypes.ts'\nimport EditIcon from '@material-ui/icons/Edit';\nimport ListSubheader from '@material-ui/core/ListSubheader';\nimport CommentIcon from '@material-ui/icons/Comment';\nimport axios from 'axios';\nimport { CircularProgress } from '@material-ui/core';\nimport { ModelCommand } from '../enums/ModelCommands.ts'\nimport getURL from '../../helpers/functions/GetURL';\nimport * as ModelConstants from \"../ModelConstants\";\n\n\nconst useStyles = theme => ({\n    root: {\n      flexGrow: 1,\n    },\n    modal: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        width: \"100%\",\n        margin:\"0 auto\",\n        overflow: \"scroll\"\n      },\n      grid: {\n          backgroundColor: theme.palette.background.paper,\n          boxShadow: theme.shadows[5],\n          padding: theme.spacing(2, 4, 3),\n          width: \"50%\"\n      },\n      progress: {\n        display: 'flex',\n        '& > * + *': {\n          marginLeft: theme.spacing(2),\n        },\n      },\n});\n\nconst modelsMainPath = 'models/';\n\nfunction createInputs(name, label) {\n    return {label, name};\n}\n\nconst inputs = {\n    \"vendor\": createInputs('vendor', \"Vendor\", ),\n    \"modelNumber\": createInputs('model_number', \"Model Number\"),\n    \"height\": createInputs('height', \"Height\"),\n    \"displayColor\": createInputs('display_color', \"Display Color\"),\n    \"ethernetPorts\": createInputs('ethernet_ports', \"Network Ports\"),\n    \"powerPorts\": createInputs('power_ports', \"Power Ports\"),\n    \"cpu\": createInputs('cpu', \"CPU\"),\n    \"memory\": createInputs('memory', \"Memory\"),\n    \"storage\": createInputs('storage', \"Storage\"),\n    \"comment\": createInputs('comment', \"Comment\"),\n}\n\nclass ModelsTable extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n        popoverAnchor: null,\n        commentPopover: null,\n        networkPorts: [],\n        numPorts: 0,\n        showDetailedView: false,\n        showDeleteModal: false,\n        row: null,\n        comment: \"\",\n        color: '#000',\n        detailViewLoading: false,\n\n        detailedValues : {\n            'vendor':'',\n            'model_number':'',\n            'height':'',\n            'display_color':'',\n            'ethernet_ports':[],\n            'power_ports':'',\n            'cpu':'',\n            'memory':'',\n            'storage':'',\n            'comment':'',\n        },\n        originalVendor:'',\n        originalModelNumber:'',\n        originalHeight:'',\n    };\n\n    axios.defaults.headers.common['token'] = this.props.token;\n    axios.defaults.headers.common['privilege'] = this.props.privilege;\n  }\n\n  updateColor = (color) => {\n    this.setState({ color: color });\n    this.props.updateModelColor(color.hex);\n}\n\n  showDetailedView = (row) => {\n    this.setState({\n        row: row,\n        showDetailedView: true,\n        detailViewLoading: true,\n        color: row[\"Display Color\"] === null ? \"#000000\" : row[\"Display Color\"],\n        networkPorts: row[\"Network Ports\"] === null ? [] : row[\"Network Ports\"],\n        numPorts: row[\"Network Ports\"] === null ? 0 : row[\"Network Ports\"].length\n    });\n\n    this.detailViewModel(row[\"Vendor\"], row[\"Model Number\"]);\n  }\n\n  detailViewModel = (vendor, modelNum) => {\n    axios.post(\n        getURL(modelsMainPath, ModelCommand.detailView),\n        {\n            'vendor': vendor,\n            'model_number': modelNum,\n        }\n        ).then(response => {\n            const model = response.data['models'][0];\n            this.setState({\n                detailedValues: model,\n                detailViewLoading: false,\n                originalVendor: model[\"vendor\"],\n                originalModelNumber: model[\"model_number\"],\n                originalHeight: model[\"height\"]\n            });\n        }\n        ).catch(function(error) {\n            this.setState({ showStatus: true, statusMessage: ModelConstants.GENERAL_MODEL_ERROR, statusSeverity:\"error\" });\n        });\n}\n\n  closeDetailedView = () => {\n      this.setState({ showDetailedView: false, row: null, color: \"#000000\", originalVendor: \"\", originalModelNumber: \"\", originalHeight: \"\" });\n  }\n\n  showDeleteModal = (row) => {\n      this.setState({ showDeleteModal: true, originalVendor: row[\"Vendor\"], originalModelNumber: row[\"Model Number\"] });\n  }\n\n  closeDeleteModal = () => {\n        this.setState({ showDeleteModal: false, originalVendor: \"\", originalModelNumber: \"\", originalHeight: \"\" });\n  }\n\n  delete = () => {\n      this.props.deleteModel(this.state.originalVendor, this.state.originalModelNumber);\n      this.closeDeleteModal();\n  }\n\n  clickInfo = (event, ports) => {\n      this.setState({ popoverAnchor: event.target, networkPorts: ports });\n  }\n\n  clickComment = (event, comment) => {\n      this.setState({ commentPopover: event.target, comment: comment });\n  }\n\n  handlePopoverClose = () => {\n      this.setState({ popoverAnchor: null });\n  }\n\n  handleCommentPopoverClose = () => {\n      this.setState({ commentPopover: null });\n  }\n\n  updateNetworkPorts = (event) => {\n    const numPorts = event.target.value === '' ? 0 : event.target.value;\n\n    var ports = [];\n    for (var i = 1; i <= numPorts; i++) {\n        ports.push(i.toString());\n    }\n\n    this.setState({ networkPorts: ports, numPorts: numPorts });\n    this.props.updateModelEdited(event);\n  }\n\n    updatePort = (port, event) => {\n        const ports = this.state.networkPorts;\n        ports[port] = event.target.value;\n\n        this.setState({ networkPorts: ports });\n    }\n\n    save = () => {\n        this.props.editModel(this.state.originalVendor, this.state.originalModelNumber, this.state.originalHeight, this.state.detailedValues, this.state.networkPorts);\n        this.closeDetailedView();\n    }\n\n    updateModelEdited = (event) => {\n        this.state.detailedValues[event.target.name] = event.target.value;\n        this.forceUpdate()\n    }\n\n\n\n  render() {\n    const { classes } = this.props;\n\n    return (\n      <div>\n        <TableContainer component={Paper}>\n          <Table style={{minWidth: 1000}} aria-label=\"simple table\">\n            <TableHead>\n              <TableRow >\n                {this.props.columns.map(col => (<TableCell align=\"center\"><span id={col} style={{fontWeight: \"bold\"}}>{col}</span></TableCell>))}\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {this.props.vals.map((row, index) => (\n              <TableRow id={index} hover={true}>\n                  { this.props.privilege === Privilege.ADMIN ? <TableCell scope=\"row\" align=\"center\">\n                      <Button\n                        startIcon={<EditIcon />}\n                        onClick={() => this.showDetailedView(row)}\n                        />\n                      <Button\n                        startIcon={<DeleteIcon />}\n                        onClick={() => this.showDeleteModal(row)}\n                        />\n                  </TableCell> : null }\n                {this.props.keys.map(key => {\n                  if (key === \"Display Color\") {\n                    return (\n                      <TableCell\n                        scope=\"row\"\n                        align=\"center\"\n                        style={{\n                          backgroundColor: row[key]\n                        }}\n                      >\n                      </TableCell>\n                    )\n                  }\n\n                  if (key === \"Network Ports\") {\n                    return (\n                      <TableCell\n                        scope=\"row\"\n                        align=\"center\"\n                      >\n                        {row[key] === null ? \"\" : row[key].length}\n                        {row[key] == null ? null : <Button style={{\"margin\": \"5px\"}}><ViewListIcon onClick={(e) => {this.clickInfo(e, row[key])}} /></Button>}\n                      </TableCell>\n                    )\n                  }\n\n                  if (key == \"Comment\") {\n                    return (row[\"Comment\"] !== null && row[\"Comment\"].length > 0 ? <TableCell scope=\"row\" align=\"center\">\n                        <Button\n                            startIcon={<CommentIcon />}\n                            onClick={(e) => this.clickComment(e, row[\"Comment\"])}\n                        />\n                    </TableCell> : <TableCell scope=\"row\" align=\"center\"></TableCell>);\n                  }\n\n                  return (<TableCell scope=\"row\" align=\"center\">{row[key]}</TableCell>)\n                })}\n              </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </TableContainer>\n        <Popover\n            id={Boolean(this.state.popoverAnchor) ? 'simple-popover': undefined}\n            open={Boolean(this.state.popoverAnchor)}\n            anchorEl={this.state.popoverAnchor}\n            onClose={this.handlePopoverClose}\n            anchorOrigin={{\n                vertical: 'bottom',\n                horizontal: 'center',\n            }}\n            transformOrigin={{\n                vertical: 'top',\n                horizontal: 'center',\n            }}\n        >\n            <List\n                className={classes.root}\n                subheader={\n                    <ListSubheader component=\"div\" id=\"nested-list-subheader\">\n                      Network Ports\n                    </ListSubheader>\n                  }\n            >\n                                {this.state.networkPorts.map(value => {\n                                    const labelId = `checkbox-list-label-${value}`;\n\n                                    return (\n                                    <ListItem key={value} role={undefined} dense button>\n                                        <ListItemText id={labelId} primary={value} />\n                                    </ListItem>\n                                    );\n                                })}\n                                </List>\n        </Popover>\n        <Popover\n            id={Boolean(this.state.commentPopover) ? 'simple-popover': undefined}\n            open={Boolean(this.state.commentPopover)}\n            anchorEl={this.state.commentPopover}\n            onClose={this.handleCommentPopoverClose}\n            anchorOrigin={{\n                vertical: 'bottom',\n                horizontal: 'center',\n            }}\n            transformOrigin={{\n                vertical: 'top',\n                horizontal: 'center',\n            }}\n        >\n            <Typography\n                variant=\"body1\"\n                style={{\n                    padding: \"30px\"\n                }}\n            >\n                {this.state.comment}\n            </Typography>\n        </Popover>\n        <Modal\n                aria-labelledby=\"transition-modal-title\"\n                aria-describedby=\"transition-modal-description\"\n                className={classes.modal}\n                open={this.state.showDetailedView}\n                onClose={this.closeDetailedView}\n                closeAfterTransition\n            >\n                <Fade in={this.state.showDetailedView}>\n                    <Backdrop\n                        open={this.state.showDetailedView}\n                    >\n                        <div className={classes.grid}>\n                            {this.state.detailViewLoading ? <CircularProgress /> :\n                        <Grid\n                            container\n                            spacing={1}\n                            direction=\"row\"\n                            justify=\"flex-start\"\n                            alignItems=\"center\"\n                        >\n                            <Grid item xs={12}>\n                                <Typography variant=\"h5\">Model Details</Typography>\n                            </Grid>\n                            <Grid item xs={12} sm={12} md={6} lg={6}>\n                                <Autocomplete\n                                    id=\"select-vendor\"\n                                    options={this.props.options}\n                                    defaultValue={this.state.detailedValues == null ? '' : this.state.detailedValues.vendor}\n                                    includeInputInList\n                                    freeSolo\n                                    renderInput={params => (\n                                        <TextField {...params} label={inputs.vendor.label} name={inputs.vendor.name} onChange={this.updateModelEdited} onBlur={this.updateModelEdited} variant=\"outlined\" fullWidth />\n                                    )}\n                                />\n                            </Grid>\n                            <Grid item xs={12} sm={6} md={4} lg={3}>\n                                <TextField id=\"standard-basic\" variant=\"outlined\" label={inputs.modelNumber.label} name={inputs.modelNumber.name} defaultValue={this.state.detailedValues == null ? '' : this.state.detailedValues.model_number} onChange={this.updateModelEdited}/>\n                            </Grid>\n                            <Grid item xs={3}>\n                                <TextField type=\"number\" id=\"standard-basic\" variant=\"outlined\" label={inputs.height.label} name={inputs.height.name} defaultValue={this.state.detailedValues == null ? '' : this.state.detailedValues.height} onChange={this.updateModelEdited} InputProps={{ inputProps: { min: 1, max: 42} }} style={{ width: \"100%\" }} />\n                            </Grid>\n                            <Grid item xs={3}>\n                                <TextField type=\"number\" id=\"standard-basic\" variant=\"outlined\" label={inputs.ethernetPorts.label} name={inputs.ethernetPorts.name} defaultValue={this.state.detailedValues == null ? '' : (this.state.detailedValues.ethernet_ports == null ? '' : this.state.detailedValues.ethernet_ports.length)} onChange={this.updateNetworkPorts} InputProps={{ inputProps: { min: 0} }} />\n                            </Grid>\n                            <Grid item xs={3}>\n                                <TextField type=\"number\" id=\"standard-basic\" variant=\"outlined\" label={inputs.powerPorts.label} name={inputs.powerPorts.name} defaultValue={this.state.detailedValues == null ? '' : this.state.detailedValues.power_ports} onChange={this.updateModelEdited} InputProps={{ inputProps: { min: 0} }}/>\n                            </Grid>\n                            <Grid item xs={3}>\n                                <TextField id=\"standard-basic\" variant=\"outlined\" label={inputs.cpu.label} name={inputs.cpu.name} defaultValue={this.state.detailedValues == null ? '' : this.state.detailedValues.cpu} onChange={this.updateModelEdited}/>\n                            </Grid>\n                            <Grid item xs={3}>\n                                <TextField type=\"number\" id=\"standard-basic\" variant=\"outlined\" label={inputs.memory.label} name={inputs.memory.name} defaultValue={this.state.detailedValues == null ? '' : this.state.detailedValues.memory} onChange={this.updateModelEdited} InputProps={{ inputProps: { min: 0} }} style={{ width: \"100%\" }}/>\n                            </Grid>\n                            <Grid item xs={3}>\n                                <TextField id=\"standard-basic\" variant=\"outlined\" label={inputs.storage.label} name={inputs.storage.name} defaultValue={this.state.detailedValues == null ? '' : this.state.detailedValues.storage} onChange={this.updateModelEdited}/>\n                            </Grid>\n                            <Grid item xs={3}>\n                                <TextField id=\"standard-basic\" variant=\"outlined\" label={inputs.comment.label} name={inputs.comment.name} defaultValue={this.state.detailedValues == null ? '' : this.state.detailedValues.comment} onChange={this.updateModelEdited}/>\n                            </Grid>\n                            <Grid item xs={6}>\n                                <Typography>Display Color</Typography>\n                                <CompactPicker\n                                    color={this.state.color}\n                                    onChange={this.updateColor}\n                                />\n                            </Grid>\n                            <Grid item xs={12}>\n                            <List\n                                className={classes.root}\n                                subheader={\n                                    <ListSubheader component=\"div\" id=\"nested-list-subheader\">\n                                      Network Ports\n                                    </ListSubheader>\n                                  }\n                                style={{\n                                    maxHeight: \"30vh\",\n                                    overflow: \"auto\"\n                                }}\n                            >\n                                {Array.from({length: this.state.numPorts}, (x,i) => i).map((_, index) => {\n                                    const labelId = `list-label-${this.state.networkPorts[index]}`;\n\n                                    return (\n                                    <ListItem key={index} role={undefined} dense button>\n                                        <ListItemText id={labelId} primary={\"Port \" + (index+1).toString()} />\n                                        <TextField defaultValue={this.state.networkPorts[index]} onChange={(e) => this.updatePort(index, e)} />\n                                    </ListItem>\n                                    );\n                                })}\n                                {this.state.numPorts === 0 ? <ListItem key=\"add-items\" role={undefined} dense>\n                                <ListItemText id=\"add-items-label\" primary=\"Enter the number of network ports above\" />\n                                </ListItem> : null}\n                                </List>\n                            </Grid>\n                            <Grid item xs={3}>\n                                <Button\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    onClick={this.save}\n                                    style={{width: \"100%\"}}\n                                >\n                                    Save\n                                </Button>\n                            </Grid>\n                            <Grid item xs={3}>\n                                <Button\n                                    variant=\"contained\"\n                                    color=\"secondary\"\n                                    onClick={this.closeDetailedView}\n                                    style={{width: \"100%\"}}\n                                >\n                                    Cancel\n                                </Button>\n                            </Grid>\n                        </Grid>}\n                </div>\n                </Backdrop>\n\n                </Fade>\n            </Modal>\n\n            <Modal\n                aria-labelledby=\"transition-modal-title\"\n                aria-describedby=\"transition-modal-description\"\n                className={classes.modal}\n                open={this.state.showDeleteModal}\n                onClose={this.closeDeleteModal}\n                closeAfterTransition\n            >\n                <Fade in={this.state.showDeleteModal}>\n                    <Backdrop\n                        open={this.state.showDeleteModal}\n                    >\n                        <div className={classes.grid}>\n                        <Grid\n                            container\n                            spacing={1}\n                            direction=\"row\"\n                            justify=\"flex-start\"\n                            alignItems=\"center\"\n                        >\n                            <Grid item xs={12}>\n                                <Typography variant=\"h5\">Are you sure?</Typography>\n                            </Grid>\n                            <Grid item xs={12} sm={12} md={6} lg={6}>\n                                <Typography variant=\"body1\">\n                                    Doing this will remove the model permanently.\n                                </Typography>\n                            </Grid>\n\n                            <Grid item xs={3}>\n                                <Button\n                                    variant=\"contained\"\n                                    color=\"secondary\"\n                                    onClick={this.delete}\n                                    style={{width: \"100%\"}}\n                                >\n                                    Yes\n                                </Button>\n                            </Grid>\n                            <Grid item xs={3}>\n                                <Button\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    onClick={this.closeDeleteModal}\n                                    style={{width: \"100%\"}}\n                                >\n                                    No\n                                </Button>\n                            </Grid>\n                        </Grid>\n                </div>\n                </Backdrop>\n\n                </Fade>\n            </Modal>\n\n      </div>\n    );\n  }\n}\n\nexport default withStyles(useStyles)(ModelsTable);\n","export enum UserCommand {\r\n    create = 'create/',\r\n    delete = 'delete/',\r\n    edit = 'edit/',\r\n    view = 'view/',\r\n    detailView = 'detailView/',\r\n    search='search/',\r\n}\r\n","export enum UserInput {\r\n    Username='username',\r\n    Password='password',\r\n    Email='email',\r\n    display_name='display_name',\r\n    Privilege='privilege',\r\n}\r\n","import React from 'react';\r\nimport axios from 'axios';\r\nimport { CSVLink } from \"react-csv\";\r\n\r\nimport { ModelCommand } from '../enums/ModelCommands.ts'\r\nimport { ModelInput } from '../enums/ModelInputs.ts'\r\n\r\nimport ExportModel from '../helpers/ExportModel';\r\nimport FilterModel from '../helpers/FilterModel';\r\nimport CreateModel from '../helpers/CreateModel';\r\n\r\nimport { Privilege } from '../../enums/privilegeTypes.ts'\r\n\r\nimport getURL from '../../helpers/functions/GetURL';\r\nimport ModelsTable from '../helpers/ModelsTable';\r\nimport { Typography } from '@material-ui/core';\r\n\r\nimport * as ModelConstants from \"../ModelConstants\";\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nimport StatusDisplay from \"../../helpers/StatusDisplay\";\r\n\r\nconst columns = [\r\n    'Vendor',\r\n    'Model Number',\r\n    'Height',\r\n    'Display Color',\r\n    'Network Ports',\r\n    'Power Ports',\r\n    'CPU',\r\n    'Memory',\r\n    'Storage',\r\n    'Comment',\r\n]\r\n\r\nconst adminColumns = [\r\n    'Actions',\r\n    'Vendor',\r\n    'Model Number',\r\n    'Height',\r\n    'Display Color',\r\n    'Network Ports',\r\n    'Power Ports',\r\n    'CPU',\r\n    'Memory',\r\n    'Storage',\r\n    'Comment',\r\n]\r\n\r\nconst columnLookup = {\r\n    \"vendor\": \"Vendor\",\r\n    \"model_number\": \"Model Number\",\r\n    \"height\": \"Height\",\r\n    'display_color': 'Display Color',\r\n    'ethernet_ports': 'Network Ports',\r\n    'power_ports': 'Power Ports',\r\n    'cpu': 'CPU',\r\n    'memory': 'Memory',\r\n    'storage': 'Storage',\r\n    'comment': \"Comment\"\r\n}\r\n\r\nconst modelsMainPath = 'models/';\r\nconst modelDownloadFileName = 'models.csv';\r\n\r\nexport default class ModelsView extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            // modals\r\n            showCreateModal: false,\r\n            showImportModal: false,\r\n\r\n            // table items\r\n            items: [],\r\n            rows: [],\r\n\r\n            // vals for creating a new model\r\n            createdModel : {\r\n                'vendor':'',\r\n                'model_number':'',\r\n                'height':'',\r\n                'display_color':'',\r\n                'ethernet_ports':'',\r\n                'power_ports':'',\r\n                'cpu':'',\r\n                'memory':'',\r\n                'storage':'',\r\n                'comment':'',\r\n            },\r\n            createdVendor:'',\r\n            createdModelNum:'',\r\n            createdHeight:'',\r\n            createdDispClr:'',\r\n            createdEthPorts:'',\r\n            createdPwrPorts:'',\r\n            createdCPU:'',\r\n            createdMem:'',\r\n            createdStorage:'',\r\n            createdComments:'',\r\n\r\n            // vals for deleting a model\r\n            deleteVendor:'',\r\n            deleteModel:'',\r\n\r\n            // vals for viewing a model\r\n            viewVendor:'',\r\n            viewModel:'',\r\n\r\n            // searching a model\r\n            searchText:\"\",\r\n            searchVendor:'',\r\n            searchModelNum:'',\r\n            searchHeight:'',\r\n\r\n            // csv data\r\n            csvData:'',\r\n\r\n            showStatus:false,\r\n            statusSeverity:'',\r\n            statusMessage:'',\r\n            detailshowStatus:false,\r\n            detailStatusSeverity:'',\r\n            detailStatusMessage:'',\r\n            createshowStatus:false,\r\n            statusSeverity:'',\r\n            statusMessage:'',\r\n\r\n            vendorsList:[],\r\n            madeVendorQuery:false,\r\n\r\n        };\r\n\r\n        axios.defaults.headers.common['token'] = this.props.token;\r\n        axios.defaults.headers.common['privilege'] = this.props.privilege;\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.searchModels();\r\n        this.getVendorList();\r\n    }\r\n\r\n    createModel = (networkPorts) => {\r\n        axios.post(\r\n            getURL(modelsMainPath, ModelCommand.create),\r\n            {\r\n                'vendor':this.state.createdModel[ModelInput.Vendor],\r\n                'model_number':this.state.createdModel[ModelInput.model_number],\r\n                'height':this.state.createdModel[ModelInput.Height],\r\n                'display_color':this.state.createdModel[ModelInput.display_color],\r\n                'ethernet_ports':this.state.createdModel[ModelInput.ethernet_ports],\r\n                'power_ports':this.state.createdModel[ModelInput.power_ports],\r\n                'cpu':this.state.createdModel[ModelInput.CPU],\r\n                'memory':this.state.createdModel[ModelInput.Memory],\r\n                'storage':this.state.createdModel[ModelInput.Storage],\r\n                'comment':this.state.createdModel[ModelInput.Comment],\r\n                'ethernet_ports': networkPorts,\r\n            }\r\n            ).then(\r\n                response => {\r\n                    console.log(response);\r\n                    if (response.data.message === 'success') {\r\n                        this.setState({\r\n                            showStatus: true,\r\n                            statusMessage: \"Successfully created model\",\r\n                            statusSeverity:\"success\",\r\n                            createdModel : {\r\n                                'vendor':'',\r\n                                'model_number':'',\r\n                                'height':'',\r\n                                'display_color':'',\r\n                                'ethernet_ports':'',\r\n                                'power_ports':'',\r\n                                'cpu':'',\r\n                                'memory':'',\r\n                                'storage':'',\r\n                                'comment':'',\r\n                            },\r\n                            showCreateModal:false,\r\n                        });\r\n                        this.getVendorList();\r\n                        this.searchModels();\r\n                    } else {\r\n                        this.setState({ createshowStatus: true, showStatus:true, statusMessage: response.data.message, statusSeverity:\"error\" })\r\n                    }\r\n                }).catch(\r\n                    this.setState({ createshowStatus: true, statusMessage: ModelConstants.GENERAL_MODEL_ERROR, statusSeverity:\"error\" })\r\n                );\r\n    }\r\n\r\n    editModel = (originalVendor, originalModelNum, originalHeight, detailedValues, networkPorts) => {\r\n        axios.post(\r\n            getURL(modelsMainPath, ModelCommand.edit),\r\n            {\r\n                'vendorOriginal': originalVendor,\r\n                'model_numberOriginal': originalModelNum,\r\n                'heightOriginal': originalHeight,\r\n                'vendor': detailedValues[ModelInput.Vendor],\r\n                'model_number': detailedValues[ModelInput.model_number],\r\n                'height': detailedValues[ModelInput.Height],\r\n                'display_color': detailedValues[ModelInput.display_color],\r\n                'ethernet_ports': networkPorts,\r\n                'power_ports': detailedValues[ModelInput.power_ports],\r\n                'cpu': detailedValues[ModelInput.CPU],\r\n                'memory': detailedValues[ModelInput.Memory],\r\n                'storage': detailedValues[ModelInput.Storage],\r\n                'comment': detailedValues[ModelInput.Comment],\r\n            }\r\n            ).then(\r\n                response => {\r\n                    console.log(response);\r\n                    if (response.data.message === 'success') {\r\n                        this.setState({\r\n                            showStatus: true,\r\n                            statusSeverity:'success',\r\n                            statusMessage: \"Successfully edited model\",\r\n                            showDetailedView:false\r\n                        });\r\n                        this.getVendorList();\r\n                        this.searchModels();\r\n                    } else {\r\n                        this.setState({ detailshowStatus: true, detailStatusMessage: response.data.message, detailStatusSeverity:\"error\" })\r\n                    }\r\n                }).catch(\r\n                    this.setState({ detailshowStatus: true, detailStatusMessage: ModelConstants.GENERAL_MODEL_ERROR, detailStatusSeverity:\"error\" })\r\n                );\r\n    }\r\n\r\n    deleteModel = (originalVendor, originalModelNumber) => {\r\n        console.log(originalVendor);\r\n        axios.post(\r\n            getURL(modelsMainPath, ModelCommand.delete),\r\n            {\r\n                'vendor': originalVendor,\r\n                'model_number': originalModelNumber,\r\n            }\r\n            ).then(\r\n                response => {\r\n                    if (response.data.message === 'success') {\r\n                        this.setState({\r\n                            showStatus: true,\r\n                            statusSeverity:'success',\r\n                            statusMessage: \"Successfully deleted model\",\r\n                        });\r\n                        this.getVendorList();\r\n                        this.searchModels();\r\n                    } else {\r\n                        this.setState({ showStatus: true, statusMessage: response.data.message, statusSeverity:\"error\" })\r\n                    }\r\n                }).catch(\r\n                    this.setState({ showStatus: true, statusMessage: ModelConstants.GENERAL_MODEL_ERROR, statusSeverity:\"error\" })\r\n                );\r\n    }\r\n\r\n    detailViewModel = (vendor, modelNum) => {\r\n        axios.post(\r\n            getURL(modelsMainPath, ModelCommand.detailView),\r\n            {\r\n                'vendor': vendor,\r\n                'model_number': modelNum,\r\n            }\r\n            ).then(response => {\r\n                this.setState({ detailedValues: response.data['models'][0], detailViewLoading: false});\r\n            }\r\n            ).catch(function(error) {\r\n                this.setState({ showStatus: true, statusMessage: ModelConstants.GENERAL_MODEL_ERROR, statusSeverity:\"error\" });\r\n            });\r\n\r\n        this.setState({\r\n            viewVendor: '',\r\n            viewModel: '',\r\n        });\r\n    }\r\n\r\n    searchModels = () => {\r\n        axios.post(\r\n            getURL(modelsMainPath, ModelCommand.search),\r\n            {\r\n                'filter': {\r\n                    'vendor': this.state.searchVendor,\r\n                    'model_number': this.state.searchModelNum,\r\n                    'height': this.state.searchHeight,\r\n                }\r\n            }\r\n            ).then(response => {\r\n                const models = response.data['models'] === undefined ? [] : response.data['models'];\r\n                var rows = [];\r\n                Object.values(models).forEach(model => {\r\n                    var row = {};\r\n                    Object.keys(model).forEach(key => {\r\n                        if (key in columnLookup) {\r\n                            row[columnLookup[key]] = model[key];\r\n                        } else {\r\n                            row[key] = model[key];\r\n                        }\r\n                    });\r\n                    rows.push(row);\r\n                });\r\n\r\n                this.setState({ rows: rows, items: models })\r\n            });\r\n\r\n        this.setState({\r\n            searchText: '',\r\n        });\r\n    }\r\n\r\n    getVendorList = () => {\r\n        axios.get(\r\n            getURL(modelsMainPath, ModelCommand.VENDOR_VALUES), {}\r\n            ).then(response => this.setState({ vendorsList: response.data.results }));\r\n\r\n        this.setState({ madeVendorQuery: true });\r\n    }\r\n\r\n    sendUploadedFile = (data) => {\r\n        console.log(\"sending\");\r\n        console.log(data);\r\n        axios.post(\r\n            getURL(\"models/\", ModelCommand.UPLOAD_FILE), data\r\n            ).then(response => {\r\n                console.log(\"import response\");\r\n                console.log(response);\r\n                if (response.data.message === 'success') {\r\n                    this.setState({ showStatus: true, statusMessage: response.data.summary, statusSeverity:'success', showImportModal: false,})\r\n                    this.searchModels();\r\n                } else {\r\n                    this.setState({ showStatus: true, statusMessage: response.data.message, statusSeverity:\"error\" })\r\n                }\r\n            });\r\n    }\r\n\r\n    downloadTable = () => {\r\n        axios.post(\r\n            getURL(modelsMainPath, ModelCommand.EXPORT_FILE),\r\n            {\r\n                'filter': {\r\n                    'vendor':this.state.searchVendor,\r\n                    'model_number':this.state.searchModelNum,\r\n                    'height':this.state.searchHeight,\r\n                }\r\n            }\r\n            ).then(response => {\r\n                this.setState({ csvData: response.data.csvData });\r\n                this.csvLink.link.click();\r\n            });\r\n    }\r\n\r\n    search = (filters) => {\r\n        this.setState({ searchVendor: filters['vendor'], searchModelNum: filters['model_number'], searchHeight: filters['height']}, this.searchModels);\r\n    }\r\n\r\n    searchAll = () => {\r\n        var filters = {\r\n            'vendor': '',\r\n            'model_number': '',\r\n            'height': ''\r\n        };\r\n\r\n        this.search(filters);\r\n    }\r\n\r\n    openCreateModal = () => {\r\n        this.setState({showCreateModal: true});\r\n    }\r\n\r\n    openImportModal = () => {\r\n        this.setState({showImportModal: true});\r\n    }\r\n\r\n    showDetailedView = (row) => {\r\n        this.setState({\r\n            detailViewLoading: true,\r\n         });\r\n\r\n        var vendor = row['Vendor'];\r\n        var modelNum = row['Model Number'];\r\n\r\n        this.detailViewModel(vendor, modelNum);\r\n    }\r\n\r\n    closeCreateModal = () => {\r\n        this.setState({showCreateModal: false});\r\n    }\r\n\r\n    closeImportModal = () => {\r\n        this.setState({showImportModal: false});\r\n    }\r\n\r\n    closeDetailedView = () => {\r\n        this.setState({ showDetailedView: false })\r\n    }\r\n\r\n    updateModelCreator = (event) => {\r\n        this.state.createdModel[event.target.name] = event.target.value;\r\n        this.forceUpdate();\r\n    }\r\n\r\n    updateModelColor = (color) => {\r\n        this.state.createdModel['display_color'] = color;\r\n        this.forceUpdate();\r\n    }\r\n\r\n    updateModelColorDetails = (color) => {\r\n        this.state.detailedValues['display_color'] = color;\r\n        this.forceUpdate();\r\n    }\r\n\r\n    updateSearchText = (event) => {\r\n        this.setState({ searchText: event.target.value})\r\n    }\r\n\r\n    closeShowStatus = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n        this.setState({ showStatus: false })\r\n    }\r\n\r\n    createStatusClose = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n        this.setState({ createshowStatus: false })\r\n    }\r\n\r\n    detailStatusClose = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n        this.setState({ detailshowStatus: false })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Grid\r\n                    container\r\n                    spacing={5}\r\n                    direction=\"row\"\r\n                    justify=\"flex-start\"\r\n                    alignItems=\"center\"\r\n                    style={{margin: \"0px\", maxWidth: \"95vw\"}}\r\n                >\r\n                    <Grid item xs={12}>\r\n                        <Typography variant=\"h4\">\r\n                            Models\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6} md={4} lg={3}>\r\n                        {(this.props.privilege == Privilege.ADMIN) ?\r\n                        (<div>\r\n                            <CreateModel\r\n                                showStatus={this.state.createshowStatus}\r\n                                statusSeverity={this.state.statusSeverity}\r\n                                statusClose={this.createStatusClose}\r\n                                statusMessage={this.state.statusMessage}\r\n                                showCreateModal={this.state.showCreateModal}\r\n                                closeCreateModal={this.closeCreateModal}\r\n                                createModel={this.createModel}\r\n                                updateModelCreator={this.updateModelCreator}\r\n                                options={this.state.vendorsList}\r\n                                useAutocomplete={true}\r\n                                updateModelColor={this.updateModelColor}\r\n                                sendUploadedFile={this.sendUploadedFile}\r\n                            />\r\n                        </div>) : null}\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6} md={6} lg={6}>\r\n                        <FilterModel\r\n                            updateSearchText={this.updateSearchText}\r\n                            search={this.search}\r\n                            filters={columns}\r\n                            options={this.state.vendorsList}\r\n                            useAutocomplete={true}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6} md={4} lg={3}>\r\n                        {(this.props.privilege === Privilege.ADMIN) ?\r\n                        (<div>\r\n\r\n                        <ExportModel\r\n                            downloadTable={this.downloadTable}\r\n                            showAll={this.searchAll}\r\n                        />\r\n\r\n                        <CSVLink\r\n                            data={this.state.csvData}\r\n                            filename={modelDownloadFileName}\r\n                            className=\"hidden\"\r\n                            ref={(r) => this.csvLink = r}\r\n                            target=\"_blank\"\r\n                        />\r\n                        </div>):null\r\n                        }\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <ModelsTable\r\n                            columns={this.props.privilege == Privilege.ADMIN ? adminColumns : columns}\r\n                            vals={this.state.rows}\r\n                            privilege={this.props.privilege}\r\n                            token={this.props.token}\r\n                            keys={columns}\r\n                            filters={this.props.privilege == Privilege.ADMIN ? adminColumns : columns}\r\n                            updateModelColor={this.updateModelColorDetails}\r\n                            deleteModel={this.deleteModel}\r\n                            editModel={this.editModel}\r\n                        />\r\n                    </Grid>\r\n                </Grid>\r\n                <StatusDisplay\r\n                    open={this.state.showStatus}\r\n                    severity={this.state.statusSeverity}\r\n                    closeStatus={this.closeShowStatus}\r\n                    message={this.state.statusMessage}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","export enum AssetInput {\r\n    MODEL = 'model',\r\n    HOSTNAME = 'hostname',\r\n    RACK = 'rack',\r\n    RACK_U = 'rack_position',\r\n    RACK_ORIGINAL = 'rackOriginal',\r\n    RACK_U_ORIGINAL = 'rack_positionOriginal',\r\n    OWNER = 'owner',\r\n    COMMENT = 'comment',\r\n    DATACENTER = 'datacenter_id',\r\n    TAGS = 'tags',\r\n    MAC_ADDRESS = 'mac_address',\r\n    NETWORK_CONNECTIONS = 'network_connections',\r\n    POWER_CONNECTIONS = 'power_connections',\r\n    ASSET_NUMBER = 'asset_number',\r\n}\r\n","export enum AssetCommand {\r\n    create = 'create/',\r\n    delete = 'delete/',\r\n    edit = 'edit/',\r\n    view = 'view/',\r\n    detailView = 'detailView/',\r\n    search = 'search/',\r\n    GET_ALL_MODELS = 'assistedmodel/',\r\n    GET_ALL_OWNERS = 'assistedowner/',\r\n    GET_ALL_DATACENTERS = 'assisteddatacenter/',\r\n    GET_ALL_HOSTNAME = 'assistedhostname/',\r\n    UPLOAD_FILE = 'import/',\r\n    EXPORT_FILE = 'export/',\r\n    GET_NEXT_ASSET_NUM = 'nextAssetNumber/',\r\n    GET_NETWORK_NEIGHBORHOOD = \"networkNeighborhood/\",\r\n}\r\n","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\r\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\r\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nexport default class Filters extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            filters:{},\r\n        };\r\n    }\r\n\r\n    updateSearchText(event) {\r\n        if (this.state.filters.hasOwnProperty(event.target.id)) {\r\n            this.state.filters[event.target.id] = event.target.value;\r\n            this.forceUpdate();\r\n        } else {\r\n            this.state.filters[event.target.id] = event.target.value;\r\n            this.forceUpdate();\r\n        }\r\n    }\r\n\r\n    search() {\r\n        this.props.search(this.state.filters);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <ExpansionPanel>\r\n                    <ExpansionPanelSummary\r\n                        expandIcon={<ExpandMoreIcon />}\r\n                    >\r\n                        <Typography>Search</Typography>\r\n                    </ExpansionPanelSummary>\r\n                    <ExpansionPanelDetails>\r\n                        <Grid\r\n                            container\r\n                            spacing={1}\r\n                            direction=\"row\"\r\n                            justify=\"flex-start\"\r\n                            alignItems=\"center\"\r\n                        >\r\n                            <Grid item xs={6}>\r\n                                <TextField\r\n                                    id={\"username\"}\r\n                                    inputProps={{ 'aria-label': 'search' }}\r\n                                    variant=\"outlined\"\r\n                                    label=\"Username\"\r\n                                    placeholder={\"Username\"}\r\n                                    name=\"username\"\r\n                                    onChange={this.updateSearchText.bind(this)}\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={6}>\r\n                                <TextField id=\"standard-basic\" variant=\"outlined\" label=\"Display Name\" name=\"display_name\" onChange={this.props.updateModelCreator}/>\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                                <TextField\r\n                                    id=\"standard-basic\"\r\n                                    variant=\"outlined\"\r\n                                    label=\"Email\"\r\n                                    name=\"email\"\r\n                                    onChange={this.props.updateModelCreator}\r\n                                    style={{\"width\": \"100%\"}}\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={6}>\r\n                                <FormControl\r\n                                    style={{\"minWidth\": \"200px\"}}\r\n                                >\r\n                                    <InputLabel id=\"privilege-select\">Privilege</InputLabel>\r\n                                    <Select\r\n                                        id=\"privilege-select\"\r\n                                        onChange={this.props.updateModelCreator}>\r\n                                        <MenuItem value=\"admin\">Administrator</MenuItem>\r\n                                        <MenuItem value=\"user\">User</MenuItem>\r\n                                    </Select>\r\n                                </FormControl>\r\n                            </Grid>\r\n                            <Grid\r\n                                container\r\n                                item\r\n                                direction=\"column\"\r\n                                justify=\"center\"\r\n                                alignItems=\"center\"\r\n                                xs={12}\r\n                            >\r\n                                <Button\r\n                                    variant=\"contained\"\r\n                                    color=\"primary\"\r\n                                    onClick={this.search.bind(this)}\r\n                                    style={{\"width\": \"100%\", \"marginTop\": \"20px\"}}\r\n                                >\r\n                                    Search\r\n                                </Button>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </ExpansionPanelDetails>\r\n                </ExpansionPanel>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from '@material-ui/core/Button';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\r\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\r\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport StatusDisplay from '../../helpers/StatusDisplay';\r\n\r\nexport default class DetailedView extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            showConfirmationBox:false,\r\n        };\r\n\r\n        this.closeModal = this.closeModal.bind(this);\r\n        this.confirmDelete = this.confirmDelete.bind(this);\r\n        this.deleteItem = this.deleteItem.bind(this);\r\n    }\r\n\r\n    confirmDelete() {\r\n        this.setState({ showConfirmationBox: true });\r\n    }\r\n\r\n    closeModal() {\r\n        this.setState({showConfirmationBox:false,});\r\n    }\r\n\r\n    deleteItem() {\r\n        this.setState({ showConfirmationBox: false });\r\n        this.props.delete();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n        <div>\r\n            {!this.props.showDetailedView ? null:\r\n            <ExpansionPanel >\r\n                    <ExpansionPanelSummary\r\n                        expandIcon={<ExpandMoreIcon />}\r\n                    >\r\n                        <Typography>Create</Typography>\r\n                    </ExpansionPanelSummary>\r\n                    <ExpansionPanelDetails>\r\n                        <StatusDisplay\r\n                            open={this.props.statusOpen}\r\n                            severity={this.props.statusSeverity}\r\n                            closeStatus={this.props.statusClose}\r\n                            message={this.props.statusMessage}\r\n                        />\r\n                    {\r\n                this.props.loading ? <CircularProgress /> :\r\n                <div>\r\n                    {this.props.inputs.map(input => (\r\n                        <TextField name={input} disabled={this.props.disabled} id=\"standard-basic\" label={input} onChange={this.props.updateModelEdited} defaultValue={this.props.defaultValues[input]}/>\r\n                    ))}\r\n                    {this.props.disabled ? null:\r\n                    <div>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            onClick={this.props.edit}\r\n                            disabled={this.state.showConfirmationBox}\r\n                        >\r\n                            Save\r\n                        </Button>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            onClick={this.confirmDelete}\r\n                            disabled={this.state.showConfirmationBox}\r\n                        >\r\n                            Delete\r\n                        </Button>\r\n                    </div>}\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            onClick={this.props.closeDetailedView}\r\n                            disabled={this.state.showConfirmationBox}\r\n                        >\r\n                            Close\r\n                        </Button>\r\n\r\n                    {this.state.showConfirmationBox ? <div>\r\n                        Are you sure you wish to delete?\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            onClick={this.deleteItem}\r\n                        >\r\n                            Yes\r\n                        </Button>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            onClick={this.closeModal}\r\n                        >\r\n                            No\r\n                        </Button>\r\n                    </div>:null}\r\n                </div>}\r\n                    </ExpansionPanelDetails>\r\n                </ExpansionPanel>}\r\n        </div>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from '@material-ui/core/Button';\r\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\r\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\r\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport '../../../stylesheets/Models.css';\r\n\r\nexport default class CreateModal extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            username: \"\",\r\n            display_name: \"\",\r\n            password: \"\",\r\n            email: \"\",\r\n            privilege: \"\",\r\n        };\r\n    }\r\n\r\n    resetCreate = (success) => {\r\n        if (success) {\r\n            this.setState({username: \"\", display_name: \"\", password: \"\", email: \"\", privilege: \"\"});\r\n        }\r\n    }\r\n\r\n    createModel = () => {\r\n        this.props.createModel(this.state.username, this.state.password, this.state.display_name, this.state.email, this.state.privilege, this.resetCreate);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <ExpansionPanel>\r\n                    <ExpansionPanelSummary\r\n                        expandIcon={<ExpandMoreIcon />}\r\n                    >\r\n                        <Typography>Create</Typography>\r\n                    </ExpansionPanelSummary>\r\n                    <ExpansionPanelDetails>\r\n                        <Grid\r\n                            container\r\n                            spacing={1}\r\n                            direction=\"row\"\r\n                            justify=\"flex-start\"\r\n                            alignItems=\"center\"\r\n                        >\r\n                            <Grid item xs={6}>\r\n                                <TextField id=\"standard-basic\" variant=\"outlined\" label=\"Username\" name=\"username\" value={this.state.username} onChange={(e) => this.setState({ username: e.target.value })}/>\r\n                            </Grid>\r\n                            <Grid item xs={6}>\r\n                                <TextField id=\"standard-basic\" variant=\"outlined\" label=\"Display Name\" name=\"display_name\" value={this.state.display_name} onChange={(e) => this.setState({ display_name: e.target.value })}/>\r\n                            </Grid>\r\n                            <Grid item xs={6}>\r\n                                <TextField id=\"standard-basic\" variant=\"outlined\" label=\"Password\" name=\"password\" type=\"password\" value={this.state.password} onChange={(e) => this.setState({ password: e.target.value })}/>\r\n                            </Grid>\r\n                            <Grid item xs={6}>\r\n                                <TextField id=\"standard-basic\" variant=\"outlined\" label=\"Email\" name=\"email\" type=\"email\" value={this.state.email} onChange={(e) => this.setState({ email: e.target.value })}/>\r\n                            </Grid>\r\n                            <Grid item xs={6}>\r\n                                <FormControl\r\n                                    style={{\"minWidth\": \"200px\"}}\r\n                                    value={this.state.pivilege}\r\n                                    gutterbottom=\"true\"\r\n                                >\r\n                                    <InputLabel id=\"privilege-select\">Privilege</InputLabel>\r\n                                    <Select\r\n                                        name='privilege'\r\n                                        id=\"privilege-select\"\r\n                                        onChange={(e) => this.setState({ privilege: e.target.value })}>\r\n                                        <MenuItem value=\"admin\">Administrator</MenuItem>\r\n                                        <MenuItem value=\"user\">User</MenuItem>\r\n                                    </Select>\r\n                                </FormControl>\r\n                            </Grid>\r\n                            <Grid\r\n                                container\r\n                                item\r\n                                direction=\"column\"\r\n                                justify=\"center\"\r\n                                alignItems=\"center\"\r\n                                xs={12}\r\n                            >\r\n                                <Button\r\n                                    variant=\"contained\"\r\n                                    onClick={this.createModel}\r\n                                    style={{\r\n                                        \"width\": \"100%\",\r\n                                        \"marginTop\": \"20px\",\r\n                                        \"backgroundColor\": \"green\",\r\n                                        \"color\": \"white\"\r\n                                    }}\r\n                                >\r\n                                    Create\r\n                                </Button>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </ExpansionPanelDetails>\r\n                </ExpansionPanel>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport Button from '@material-ui/core/Button';\nimport { Privilege } from '../../enums/privilegeTypes';\nimport SaveIcon from '@material-ui/icons/Save';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Modal from '@material-ui/core/Modal';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport Fade from '@material-ui/core/Fade';\nimport { withStyles } from '@material-ui/core/styles';\n\nconst useStyles = theme => ({\n  root: {\n    flexGrow: 1,\n  },\n  modal: {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      width: \"100%\",\n      margin:\"0 auto\",\n      overflow: \"scroll\"\n    },\n    grid: {\n        backgroundColor: theme.palette.background.paper,\n        boxShadow: theme.shadows[5],\n        padding: theme.spacing(2, 4, 3),\n        width: \"50%\"\n    },\n    progress: {\n      display: 'flex',\n      '& > * + *': {\n        marginLeft: theme.spacing(2),\n      },\n    },\n});\n\nclass UsersTable extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n        canEdit: false,\n        showDeleteModal: false,\n        username: '',\n    };\n  }\n\n  showDetailedView(index) {\n    this.props.showDetailedView(index);\n  }\n\n  beginEditing = () => {\n    this.setState({ canEdit: true });\n  }\n\n  endEditing = () => {\n    this.setState({ canEdit: false });\n  }\n\n  showDeleteModal = (row) => {\n    this.setState({ showDeleteModal: true, username: row[\"Username\"] });\n  }\n\n  closeDeleteModal = () => {\n    this.setState({ showDeleteModal: false, username: \"\" });\n  }\n\n  delete = () => {\n    this.props.delete(this.state.username);\n    this.closeDeleteModal();\n  }\n\n  render() {\n    const { classes } = this.props;\n\n    return (\n      <div>\n        <TableContainer component={Paper}>\n          <Table style={{minWidth: 1000}} aria-label=\"simple table\">\n            <TableHead>\n              <TableRow >\n                {this.props.columns.map(col => (<TableCell align=\"center\"><span id={col} style={{fontWeight: \"bold\"}}>{col}</span></TableCell>))}\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {this.props.vals.map((row, index)=> (\n              <TableRow id={index}>\n                  { this.props.privilege === Privilege.ADMIN ? <TableCell scope=\"row\" align=\"center\">\n                    {row[\"Username\"] !== \"admin\" ? <div><Button>\n                        { this.state.canEdit ? <SaveIcon onClick={this.endEditing} /> : <EditIcon onClick={this.beginEditing} /> }\n                      </Button>\n                      <Button>\n                        <DeleteIcon onClick={() => this.showDeleteModal(row)} />\n                      </Button></div> : null}\n                  </TableCell> : null }\n                {this.props.keys.map(key => {\n                    if (key === \"Privilege\") {\n                    return (this.state.canEdit && row[\"Username\"] !== \"admin\" ? <TableCell scope=\"row\" align=\"center\">\n                        <Select\n                            id=\"privilege-select\"\n                            defaultValue={row[key]}\n                        >\n                            <MenuItem value=\"admin\">Administrator</MenuItem>\n                            <MenuItem value=\"user\">User</MenuItem>\n                        </Select>\n                    </TableCell> : <TableCell scope=\"row\" align=\"center\">{row[key] === 'admin' ? 'Administrator' : 'User'}</TableCell>);\n                    }\n\n                  return (<TableCell scope=\"row\" align=\"center\">{row[key]}</TableCell>)\n                })}\n              </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </TableContainer>\n\n        <Modal\n                aria-labelledby=\"transition-modal-title\"\n                aria-describedby=\"transition-modal-description\"\n                className={classes.modal}\n                open={this.state.showDeleteModal}\n                onClose={this.closeDeleteModal}\n                closeAfterTransition\n            >\n                <Fade in={this.state.showDeleteModal}>\n                    <Backdrop\n                        open={this.state.showDeleteModal}\n                    >\n                        <div className={classes.grid}>\n                        <Grid\n                            container\n                            spacing={1}\n                            direction=\"row\"\n                            justify=\"flex-start\"\n                            alignItems=\"center\"\n                        >\n                            <Grid item xs={12}>\n                                <Typography variant=\"h5\">Are you sure?</Typography>\n                            </Grid>\n                            <Grid item xs={12} sm={12} md={6} lg={6}>\n                                <Typography variant=\"body1\">\n                                    Doing this will remove the model permanently.\n                                </Typography>\n                            </Grid>\n\n                            <Grid item xs={3}>\n                                <Button\n                                    variant=\"contained\"\n                                    color=\"secondary\"\n                                    onClick={this.delete}\n                                    style={{width: \"100%\"}}\n                                >\n                                    Yes\n                                </Button>\n                            </Grid>\n                            <Grid item xs={3}>\n                                <Button\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    onClick={this.closeDeleteModal}\n                                    style={{width: \"100%\"}}\n                                >\n                                    No\n                                </Button>\n                            </Grid>\n                        </Grid>\n                </div>\n                </Backdrop>\n\n                </Fade>\n            </Modal>\n\n      </div>\n    );\n  }\n}\n\nexport default withStyles(useStyles)(UsersTable);\n","\r\n\r\nexport const GENERAL_USER_ERROR =  \"There was an error in the backend. Could not perform the given user operation at this time.\";\r\n","import React from 'react';\r\nimport axios from 'axios';\r\n\r\nimport { UserCommand } from '../enums/UserCommands.ts'\r\nimport { UserInput } from '../enums/UserInputs.ts'\r\n\r\nimport FilterUser from '../helpers/FilterUser';\r\nimport DetailUser from '../helpers/DetailUser';\r\nimport CreateUser from '../helpers/CreateUser';\r\n\r\nimport getURL from '../../helpers/functions/GetURL';\r\nimport UsersTable from '../helpers/UsersTable';\r\nimport StatusDisplay from '../../helpers/StatusDisplay';\r\n\r\nimport { Privilege } from '../../enums/privilegeTypes.ts'\r\n\r\nimport { Typography } from '@material-ui/core';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport * as UserConstants from \"../UserConstants\";\r\n\r\nconst inputs = [\r\n    'username',\r\n    'email',\r\n    'display_name',\r\n    'privilege',\r\n    'password',\r\n]\r\n\r\nconst columns = [\r\n    'Username',\r\n    'Email',\r\n    'Display Name',\r\n    'Privilege',\r\n]\r\n\r\nconst adminColumns = [\r\n    'Actions',\r\n    'Username',\r\n    'Email',\r\n    'Display Name',\r\n    'Privilege'\r\n]\r\n\r\nconst columnLookup = {\r\n    \"username\": \"Username\",\r\n    \"email\": \"Email\",\r\n    \"display_name\": \"Display Name\",\r\n    'privilege': 'Privilege'\r\n}\r\n\r\nconst usersMainPath = 'users/';\r\n\r\nexport default class UsersView extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n\r\n            // modals\r\n            showCreateModal:false,\r\n            showImportModal:false,\r\n\r\n            // table items\r\n            items:[], //Constants.testUserArray,\r\n\r\n            // vals for creating a new user\r\n            createdUser : {\r\n                'username':'',\r\n                'password':'',\r\n                'display_name':'',\r\n                'email':'',\r\n                'privilege':'',\r\n            },\r\n\r\n            statusOpen:false,\r\n            statusSeverity:'',\r\n            statusMessage:'',\r\n            detailStatusOpen:false,\r\n            detailStatusSeverity:'',\r\n            detailStatusMessage:'',\r\n            createStatusOpen:false,\r\n            createStatusSeverity:'',\r\n            createStatusMessage:'',\r\n\r\n            searchUsernm:'',\r\n            searchEml:'',\r\n            searchDspNm:'',\r\n            searchPriv:'',\r\n\r\n            // vals for deleting a user\r\n            deleteUsername:'',\r\n\r\n            // vals for viewing a user\r\n            viewUser:'',\r\n\r\n            // csv data\r\n            csvData:[],\r\n\r\n            // detailed view\r\n            showDetailedView: false,\r\n            detailViewLoading:false,\r\n            detailedValues : {\r\n                'username':'',\r\n                'display_name':'',\r\n                'email':'',\r\n                'privilege':'',\r\n            },\r\n            originalUsername:'',\r\n\r\n            initialized:false,\r\n        };\r\n\r\n        axios.defaults.headers.common['token'] = this.props.token;\r\n        axios.defaults.headers.common['privilege'] = this.props.privilege;\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.searchUsers();\r\n    }\r\n\r\n    createUser = (username, password, display_name, email, privilege, completion) => {\r\n        axios.post(\r\n            getURL(usersMainPath, UserCommand.create),\r\n            {\r\n                'username': username,\r\n                'password': password,\r\n                'display_name': display_name,\r\n                'email': email,\r\n                'privilege': privilege,\r\n            }\r\n            ).then(response => {\r\n                console.log(response.data.message);\r\n                if (response.data.message === 'success') {\r\n                    completion(true);\r\n                    this.setState({\r\n                        statusOpen: true,\r\n                        statusMessage: \"Successfully created user\",\r\n                        statusSeverity:\"success\",\r\n                        createdUser : {\r\n                            'username':'',\r\n                            'password':'',\r\n                            'display_name':'',\r\n                            'email':'',\r\n                            'privilege':'',\r\n                        },\r\n                        showCreateModal:false,\r\n                    });\r\n                    this.searchUsers();\r\n                } else {\r\n                    completion(false);\r\n                    this.setState({ statusOpen: true, statusMessage: response.data.message, statusSeverity:\"error\" })\r\n                }\r\n            });\r\n    }\r\n\r\n    editUser = () => {\r\n        axios.post(\r\n            getURL(usersMainPath, UserCommand.edit),\r\n            {\r\n                'username_original':this.state.originalUsername,\r\n                'username':this.state.detailedValues[UserInput.Username],\r\n                'display_name':this.state.detailedValues[UserInput.display_name],\r\n                'email':this.state.detailedValues[UserInput.Email],\r\n                'privilege':this.state.detailedValues[UserInput.Privilege],\r\n            }\r\n            ).then(response => {\r\n                if (response.data.message === 'success') {\r\n                    this.setState({\r\n                        detailStatusOpen: true,\r\n                        detailStatusMessage: \"Successfully edited user\",\r\n                        detailStatusSeverity:\"success\",\r\n                        originalUsername:'',\r\n                        detailedValues : {\r\n                            'username':'',\r\n                            'display_name':'',\r\n                            'email':'',\r\n                            'privilege':'',\r\n                        },\r\n                        showDetailedView:false,\r\n                    });\r\n                    this.searchUsers();\r\n                } else {\r\n                    this.setState({ detailStatusOpen: true, detailStatusMessage: response.data.message, detailStatusSeverity:\"error\" })\r\n                }\r\n            }).catch(\r\n                this.setState({ detailStatusOpen: true, detailStatusMessage: UserConstants.GENERAL_USER_ERROR, detailStatusSeverity:\"error\" })\r\n            );\r\n    }\r\n\r\n\r\n    deleteUser = (username) => {\r\n        console.log(username);\r\n        axios.post(\r\n            getURL(usersMainPath, UserCommand.delete),\r\n            {\r\n                'username': username,\r\n            }\r\n            ).then(response => {\r\n                console.log(response.data.message);\r\n                if (response.data.message === 'Success') {\r\n                    this.setState({\r\n                        statusOpen: true,\r\n                        statusMessage: \"Successfully deleted user\",\r\n                        statusSeverity: \"success\",\r\n                        deleteUsername: '',\r\n                        showDetailedView: false,\r\n                    });\r\n                    this.searchUsers();\r\n                } else {\r\n                    this.setState({ showStatus: true, statusMessage: response.data.message, statusSeverity:\"error\" })\r\n                }\r\n            }).catch(\r\n                this.setState({ showStatus: true, statusMessage: UserConstants.GENERAL_USER_ERROR, statusSeverity:\"error\" })\r\n            );\r\n    }\r\n\r\n    detailViewUser = (username) => {\r\n        axios.post(\r\n            getURL(usersMainPath, UserCommand.detailView),\r\n            {\r\n                'username':username,\r\n            }\r\n            ).then(response => this.setState({ detailedValues: response.data['user'], detailViewLoading:false})\r\n            ).catch(\r\n                this.setState({ showStatus: true, statusMessage: UserConstants.GENERAL_USER_ERROR, statusSeverity:\"error\" })\r\n            );\r\n\r\n        this.setState({\r\n            viewUser:'',\r\n        });\r\n    }\r\n\r\n    searchUsers = () => {\r\n        axios.post(\r\n            getURL(usersMainPath, UserCommand.search),\r\n            {\r\n                'filter':{\r\n                    'username': this.state.searchUsernm,\r\n                    'email': this.state.searchEml,\r\n                    'display_name': this.state.searchDspNm,\r\n                    'privilege': this.state.searchPriv,\r\n                }\r\n            }\r\n            ).then(response => {\r\n                const models = response.data['users'] === undefined ? [] : response.data['users'];\r\n                var rows = [];\r\n                Object.values(models).forEach(model => {\r\n                    var row = {};\r\n                    Object.keys(model).forEach(key => {\r\n                        if (key in columnLookup) {\r\n                            row[columnLookup[key]] = model[key];\r\n                        } else {\r\n                            row[key] = model[key];\r\n                        }\r\n                    });\r\n                    rows.push(row);\r\n                });\r\n\r\n                this.setState({ items: rows });\r\n            });\r\n\r\n        this.setState({ initialized: true})\r\n    }\r\n\r\n    search = (filters) => {\r\n        this.setState({\r\n            searchUsernm:filters['username'],\r\n            searchEml:filters['email'],\r\n            searchDspNm: filters['display_name'],\r\n            searchPriv:filters['privilege'],\r\n        }, this.searchUsers);\r\n    }\r\n\r\n    downloadTable = () => {\r\n        this.csvLink.link.click();\r\n    }\r\n\r\n    openCreateModal = () => {\r\n        this.setState({showCreateModal: true});\r\n    }\r\n\r\n    openImportModal = () => {\r\n        this.setState({showImportModal: true});\r\n    }\r\n\r\n    showDetailedView = (id) => {\r\n        this.setState({\r\n            showDetailedView: true,\r\n            detailViewLoading:true,\r\n            originalUsername:this.state.items[id]['username'],\r\n         });\r\n\r\n        var username = this.state.items[id]['username'];\r\n\r\n        this.detailViewUser(username);\r\n        //this.setState({ detailedValues: Constants.testUserArray[id], detailViewLoading:false})\r\n    }\r\n\r\n    closeCreateModal = () => {\r\n        this.setState({showCreateModal: false});\r\n    }\r\n\r\n    closeImportModal = () => {\r\n        this.setState({showImportModal: false});\r\n    }\r\n\r\n    closeDetailedView = () => {\r\n        this.setState({ showDetailedView: false })\r\n    }\r\n\r\n    updateUserCreator = (event) => {\r\n        const newUser = this.state.createdUser;\r\n        newUser[event.target.name] = event.target.value;\r\n        this.setState({ createdUser: newUser });\r\n        this.forceUpdate();\r\n    }\r\n\r\n    updateUserEdited = (event) => {\r\n        const newDetails = this.state.detailedValues;\r\n        newDetails[event.target.name] = event.target.value;\r\n        this.setState({ detailedValues: newDetails });\r\n        this.forceUpdate()\r\n    }\r\n\r\n    closeShowStatus = () => {\r\n        this.setState({ statusOpen: false })\r\n    }\r\n\r\n    createStatusClose = () => {\r\n        this.setState({ createStatusOpen: false })\r\n    }\r\n\r\n    detailStatusClose = () => {\r\n        this.setState({ detailStatusOpen: false })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <StatusDisplay\r\n                    open={this.state.statusOpen}\r\n                    severity={this.state.statusSeverity}\r\n                    closeStatus={this.closeShowStatus}\r\n                    message={this.state.statusMessage}\r\n                />\r\n                <Grid\r\n                    container\r\n                    spacing={5}\r\n                    direction=\"row\"\r\n                    justify=\"flex-start\"\r\n                    alignItems=\"center\"\r\n                    style={{margin: \"0px\", maxWidth: \"95vw\"}}\r\n                >\r\n                    <Grid item xs={12}>\r\n                        <Typography variant=\"h4\">\r\n                            Users\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6} md={4} lg={3}>\r\n                        {(this.props.privilege === Privilege.ADMIN) ?\r\n                        (<div>\r\n                            <CreateUser\r\n                                showCreateModal={this.state.showCreateModal}\r\n                                closeCreateModal={this.closeCreateModal}\r\n                                createModel={this.createUser}\r\n                                updateModelCreator={this.updateUserCreator}\r\n                                inputs={inputs}\r\n                                options={[]}\r\n                                useAutocomplete={false}\r\n                            />\r\n                        </div>) : null}\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6} md={4} lg={3}>\r\n                        <FilterUser\r\n                            updateSearchText={this.updateSearchText}\r\n                            search={this.search}\r\n                            filters={columns}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <UsersTable\r\n                            columns={this.props.privilege == Privilege.ADMIN ? adminColumns : columns}\r\n                            vals={this.state.items}\r\n                            keys={columns}\r\n                            privilege={this.props.privilege}\r\n                            showDetailedView={this.showDetailedView}\r\n                            filters={this.props.privilege == Privilege.ADMIN ? adminColumns : columns}\r\n                            delete={this.deleteUser}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <DetailUser\r\n                            showDetailedView={this.state.showDetailedView}\r\n                            closeDetailedView={this.closeDetailedView}\r\n                            inputs={columns}\r\n                            updateModelEdited={this.updateUserEdited}\r\n                            defaultValues={this.state.detailedValues}\r\n                            loading={this.state.detailViewLoading}\r\n                            edit={this.editUser}\r\n                            delete={this.deleteUser}\r\n                            disabled={this.props.privilege === Privilege.USER}\r\n                        />\r\n                    </Grid>\r\n                </Grid>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","\r\n\r\n\r\nexport const GENERAL_ASSET_ERROR =  \"There was an error in the backend. Could not perform the given asset operation at this time.\";\r\n\r\n\r\nexport const ASSETS_MAIN_PATH = 'instances/';\r\nexport const ASSET_DOWNLOAD_FILE_NAME = 'assets.csv';\r\nexport const SUCCESS_TOKEN = \"success\";\r\nexport const ERROR_TOKEN = \"error\";\r\n","import React from \"react\";\r\nimport Graph from \"react-graph-vis\";\r\nimport axios from \"axios\";\r\n\r\nimport { Typography } from '@material-ui/core';\r\n\r\nimport { AssetCommand } from \"../enums/AssetCommands.ts\";\r\nimport getURL from \"../../helpers/functions/GetURL\"\r\nimport * as Constants from \"../../Constants\";\r\n\r\n// nodes: [\r\n//     { id: 1, label: \"Node 1\", title: \"node 1 tootip text\" },\r\n//     { id: 2, label: \"Node 2\", title: \"node 2 tootip text\" },\r\n//     { id: 3, label: \"Node 3\", title: \"node 3 tootip text\" },\r\n//     { id: 4, label: \"Node 4\", title: \"node 4 tootip text\" },\r\n//     { id: 5, label: \"Node 5\", title: \"node 5 tootip text\" }\r\n//   ],\r\n//   edges: [\r\n//     { from: 1, to: 2 },\r\n//     { from: 1, to: 3 },\r\n//     { from: 2, to: 4 },\r\n//     { from: 2, to: 5 },\r\n//     { from: 5, to: 2 }\r\n//   ]\r\n//\r\n// vals: {\r\n//      \"host1\": [ \"host2\", \"host4\" ],\r\n//      \"host3\": [\"host5\", \"host7\", \"host9\", \"host11\"]\r\n// }\r\n\r\nfunction getGraph(primaryHosts, host) {\r\n    if (host===\"\") {\r\n        return {};\r\n    }\r\n\r\n    var hostnameMapping = {};\r\n    const hostID = 0;\r\n\r\n    var nodes = [];\r\n    nodes.push({\r\n        id:hostID,\r\n        label:\"\" + host,\r\n        color:\"#F5F5DC\"\r\n    });\r\n\r\n    hostnameMapping[host] = hostID;\r\n\r\n    var edges = [];\r\n    var primaryHostID = 1;\r\n\r\n    try {\r\n        console.log(\"nodes and edges\");\r\n        Object.entries(primaryHosts).map(([primaryHost, secondaryHosts]) => {\r\n            if (primaryHost !== \"message\" && primaryHost !==\"\") {\r\n                if (hostnameMapping[primaryHost] !== undefined) {\r\n                    edges.push({ from: hostID, to:hostnameMapping[primaryHost] });\r\n                    edges.push({ from: hostnameMapping[primaryHost], to:hostID });\r\n                } else {\r\n                    nodes.push({\r\n                        id:primaryHostID,\r\n                        label:\"\" + primaryHost,\r\n                        color:\"#F0FFFF\"\r\n                    });\r\n                    edges.push({ from: hostID, to: primaryHostID });\r\n                    edges.push({ from: primaryHostID, to:hostID });\r\n                    hostnameMapping[primaryHost] = primaryHostID;\r\n                }\r\n                console.log(\"nodes and edges\");\r\n                var secondaryHostID = primaryHostID + 1;\r\n                try {\r\n                    secondaryHosts.map(secondaryHost => {\r\n                        if (secondaryHost !== \"\") {\r\n                            if (hostnameMapping[secondaryHost] !== undefined) {\r\n                                edges.push({ from: primaryHostID, to: hostnameMapping[secondaryHost] });\r\n                                edges.push({ to: primaryHostID, from: hostnameMapping[secondaryHost] });\r\n                            } else {\r\n                                nodes.push({\r\n                                    id:secondaryHostID,\r\n                                    label:\"\" + secondaryHost,\r\n                                    color:\"#7FFFD4\"\r\n                                });\r\n                                edges.push({ from: primaryHostID, to: secondaryHostID });\r\n                                edges.push({ to: primaryHostID, from: secondaryHostID });\r\n                                hostnameMapping[secondaryHost] = secondaryHostID;\r\n                                secondaryHostID++;\r\n                            }\r\n                        }\r\n                    });\r\n                } catch {\r\n\r\n                }\r\n\r\n                console.log(\"nodes and edges\");\r\n                primaryHostID = secondaryHostID + 1;\r\n            }\r\n        });\r\n\r\n        console.log(\"nodes and edges\");\r\n        console.log(nodes);\r\n        console.log(edges);\r\n        return { nodes:nodes, edges:edges };\r\n\r\n    } catch (Exception) {\r\n        console.log(\"in here\")\r\n        console.log(Exception);\r\n        return { nodes:[], edges:[] }\r\n    }\r\n}\r\n\r\nclass NetworkGraph extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            graph:{\r\n                nodes:[],\r\n                edges:[],\r\n            },\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        axios.post(\r\n            getURL(Constants.ASSETS_MAIN_PATH, AssetCommand.GET_NETWORK_NEIGHBORHOOD), {\r\n                \"asset_number\":this.props.assetNum,\r\n            }).then(response => {\r\n                console.log(response);\r\n                this.setState({ graph:getGraph(response.data, this.props.host) });\r\n        });\r\n    }\r\n\r\n    render() {\r\n          const options = {\r\n            layout: {\r\n              hierarchical: false\r\n            },\r\n            edges: {\r\n              color: \"#000000\"\r\n            },\r\n            height: \"500px\",\r\n            interaction:{\r\n                dragNodes:false,\r\n                dragView: false,\r\n            }\r\n          };\r\n\r\n          const events = {\r\n            select: function(event) {\r\n              var { nodes, edges } = event;\r\n            }\r\n          };\r\n\r\n        return (\r\n            <span>\r\n                {this.state.graph.edges.length===0 ? <Typography>This asset is not currently connected to any other assets</Typography>:\r\n                <Graph\r\n                    graph={this.state.graph}\r\n                    options={options}\r\n                    events={events}\r\n                    getNetwork={network => {\r\n                        //  if you want access to vis.js network api you can set the state in a parent component using this property\r\n                    }}\r\n                />}\r\n            </span>\r\n        );\r\n    }\r\n}\r\n\r\nconst rootElement = document.getElementById(\"root\");\r\n\r\n\r\nexport default NetworkGraph;\r\n","/**\r\n * For MAC addresses, the system should accept a six-byte hexadecimal value\r\n * with any byte seperator punctuation (including colon, dash, underscore, and\r\n * no seperator at all). Upon accepting the value, it should be formatted into a\r\n * lower-case colon-delimited canonical form.\r\n *\r\n * @param {string} val\r\n */\r\n\r\nexport default function stringToMac(val) {\r\n    // A  A  :  A  A  :  A  A  :  A  A  :  A  A  :  A  A\r\n    // 0  1  2  3  4  5  6  7  8  9  10 11 12 13 14 15 16\r\n\r\n    var returnVal = \"\";\r\n\r\n    returnVal = val.replace(/[^0-9A-Fa-f]*/g, \"\").toLowerCase();\r\n\r\n    if (returnVal.length > 12) {\r\n        returnVal = returnVal.substring(0, 12);\r\n    }\r\n\r\n    if (returnVal.length === 1 || returnVal.length === 2) {\r\n        return returnVal;\r\n    }\r\n\r\n    if (returnVal.length === 3 || returnVal.length === 4) {\r\n        return returnVal.substring(0, 2) + \":\" + returnVal.substring(2);\r\n    }\r\n\r\n    if (returnVal.length === 5 || returnVal.length === 6) {\r\n        return returnVal.substring(0, 2) + \":\" + returnVal.substring(2, 4) + \":\" + returnVal.substring(4);\r\n    }\r\n\r\n    if (returnVal.length === 7 || returnVal.length === 8) {\r\n        return returnVal.substring(0, 2)\r\n        + \":\" + returnVal.substring(2, 4)\r\n        + \":\" + returnVal.substring(4, 6)\r\n        + \":\" + returnVal.substring(6);\r\n    }\r\n\r\n    if (returnVal.length === 9 || returnVal.length === 10) {\r\n        return returnVal.substring(0, 2)\r\n        + \":\" + returnVal.substring(2, 4)\r\n        + \":\" + returnVal.substring(4, 6)\r\n        + \":\" + returnVal.substring(6, 8)\r\n        + \":\" + returnVal.substring(8);\r\n    }\r\n\r\n    if (returnVal.length === 11 || returnVal.length === 12) {\r\n        return returnVal.substring(0, 2)\r\n        + \":\" + returnVal.substring(2, 4)\r\n        + \":\" + returnVal.substring(4, 6)\r\n        + \":\" + returnVal.substring(6, 8)\r\n        + \":\" + returnVal.substring(8, 10)\r\n        + \":\" + returnVal.substring(10,12);\r\n    }\r\n\r\n    return returnVal;\r\n}\r\n","import React from 'react';\r\n\r\nimport axios from 'axios';\r\n\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from '@material-ui/core/Button';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Slide from '@material-ui/core/Slide';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\n\r\nimport StatusDisplay from '../../helpers/StatusDisplay';\r\nimport { AssetInput } from '../enums/AssetInputs.ts';\r\nimport { AssetCommand } from '../enums/AssetCommands.ts'\r\nimport getURL from '../../helpers/functions/GetURL';\r\nimport * as AssetConstants from \"../AssetConstants\";\r\nimport * as Constants from \"../../Constants\";\r\nimport { Typography } from '@material-ui/core';\r\nimport stringToMac from \"./functions/StringToMacAddress\"\r\nimport stringToRack from \"./functions/StringToRack\";\r\n\r\nfunction createInputs(name, label, showTooltip, description) {\r\n    return {label, name, showTooltip, description};\r\n}\r\n\r\nconst emptySearch = {\r\n    \"filter\": {\r\n            \"vendor\":null,\r\n            \"model_number\":null,\r\n            \"height\":null,\r\n            \"model\":null,\r\n            \"hostname\":null,\r\n            \"rack\":null,\r\n            \"rack_position\":null,\r\n            \"username\":null,\r\n            \"display_name\":null,\r\n            \"email\":null,\r\n            \"privilege\":null,\r\n            \"model\":null,\r\n            \"hostname\":null,\r\n            \"starting_rack_letter\":null,\r\n            \"ending_rack_letter\":null,\r\n            \"starting_rack_number\":null,\r\n            \"ending_rack_number\":null,\r\n            \"rack\":null,\r\n            \"rack_position\":null\r\n        },\r\n    \"datacenter_name\":\"\",\r\n}\r\n\r\nconst searchPath = \"search/\";\r\nconst left = \"left\";\r\nconst right = \"right\";\r\nconst off = \"off\";\r\n\r\nconst useStyles = theme => ({\r\n    root: {\r\n      flexGrow: 1,\r\n    },\r\n    dialogDiv: {\r\n        padding: theme.spacing(2, 4, 3),\r\n    },\r\n    modal: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n      paper: {\r\n        backgroundColor: theme.palette.background.paper,\r\n        border: '2px solid #000',\r\n        boxShadow: theme.shadows[5],\r\n        padding: theme.spacing(2, 4, 3),\r\n      },\r\n      progress: {\r\n        display: 'flex',\r\n        '& > * + *': {\r\n          marginLeft: theme.spacing(2),\r\n        },\r\n      },\r\n      appBar: {\r\n        position: 'relative',\r\n      },\r\n      title: {\r\n        marginLeft: theme.spacing(2),\r\n        flex: 1,\r\n      },\r\n});\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n    return <Slide direction=\"up\" ref={ref} {...props} />;\r\n  });\r\n\r\nclass EditAsset extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            // next available asset number\r\n            loadingAssetNumber:true,\r\n\r\n            // model information\r\n            loadingModels:true,\r\n            modelList:[],\r\n            networkList:null,\r\n            powerPortList:null,\r\n\r\n            // owner information\r\n            loadingOwners:true,\r\n            ownerList:[],\r\n\r\n            // datacenter information\r\n            loadingDatacenters:true,\r\n            datacenterList:[],\r\n\r\n            // hostname information\r\n            loadingHostnames:true,\r\n            assetNumList:[],\r\n            assetNumToModelList:null,\r\n\r\n            model:\"\",\r\n            hostname:\"\",\r\n            rack:\"\",\r\n            rackU:-1,\r\n            owner:\"\",\r\n            comment:\"\",\r\n            datacenter_name:\"\",\r\n            tags:[],\r\n            network_connections:null,\r\n            power_connections:null,\r\n            asset_number:-1,\r\n\r\n            selectedConnection:null,\r\n\r\n            statusOpen: false,\r\n            statusMessage: \"\",\r\n            statusSeverity:\"\",\r\n\r\n            showModal:false,\r\n\r\n            powerPortState:null,\r\n            leftRight:null,\r\n            availableConnections:false,\r\n            portOptions:[],\r\n\r\n            canSubmit:false,\r\n            updated:false,\r\n            showConfirmationBox:false,\r\n\r\n            inputs: {\r\n                \"model\":createInputs(AssetInput.MODEL, \"Model\", false, \"A reference to an existing model\"),\r\n                \"hostname\":createInputs(AssetInput.HOSTNAME, \"Hostname\", false, \"A short string compliant with RFC 1034’s definition of 'label'\"),\r\n                \"rack\":createInputs(AssetInput.RACK, \"Rack\", false, \"The rack the equipment is installed in, written as a row letter and rack number, e.g. 'B12'\"),\r\n                \"rackU\":createInputs(AssetInput.RACK_U, \"Rack U\", false, \"An integer indicating the vertical location of the bottom of the equipment (e.g. '5')\"),\r\n                \"owner\":createInputs(AssetInput.OWNER, \"Owner\", false, \"A reference to an existing user on the system who owns this equipment\"),\r\n                \"comment\":createInputs(AssetInput.COMMENT, \"Comment\", false, \"Any additional information associated with this asset\"),\r\n                \"datacenter\":createInputs(AssetInput.DATACENTER, \"Datacenter\", false, \"A reference to an existing datacenter\"),\r\n                \"macAddress\":createInputs(AssetInput.MAC_ADDRESS, \"Mac Address\", false, \"A 6-byte hexadecimal string per network port shown canonically in lower case with colon delimiters (e.g., '00:1e:c9:ac:78:aa').\\nA hostname is required to enter in this value\"),\r\n                \"networkConnections\":createInputs(AssetInput.NETWORK_CONNECTIONS, \"Port Name\", false, \"For each network port, a reference to another network port on another piece of gear\"),\r\n                \"powerConnections\":createInputs(AssetInput.POWER_CONNECTIONS, \"Power Connections\", false, \"Choice of PDU port number (0 means not plugged in)\"),\r\n                \"assetNum\":createInputs(AssetInput.ASSET_NUMBER, \"Asset Number\", false, \"A six-digit serial number unique associated with an asset.\"),\r\n            },\r\n        };\r\n    }\r\n\r\n    componentWillMount() {\r\n        console.log(\"comp did update\");\r\n        if ((this.props.defaultValues.model !== this.state.model\r\n            || this.props.defaultValues.hostname !== this.state.hostname\r\n            || this.props.defaultValues.rack !== this.state.rack\r\n            || this.props.defaultValues.rack_position !== this.state.rackU\r\n            || this.props.defaultValues.owner !== this.state.owner\r\n            || this.props.defaultValues.comment !== this.state.comment\r\n            || this.props.defaultValues.datacenter_name !== this.state.datacenter_name\r\n            || this.props.defaultValues.tags !== this.state.tags\r\n            || this.props.defaultValues.network_connections !== this.state.network_connections\r\n            || this.props.defaultValues.power_connections !== this.state.power_connections\r\n            || this.props.defaultValues.asset_number !== this.state.asset_number)\r\n            && !this.state.updated\r\n            ) {\r\n            this.setState({\r\n                model:this.props.defaultValues.model,\r\n                hostname:this.props.defaultValues.hostname,\r\n                rack:this.props.defaultValues.rack,\r\n                rackU:this.props.defaultValues.rack_position,\r\n                owner:this.props.defaultValues.owner,\r\n                comment:this.props.defaultValues.comment,\r\n                datacenter_name:this.props.defaultValues.datacenter_name,\r\n                tags:this.props.defaultValues.tags,\r\n                network_connections:this.props.defaultValues.network_connections,\r\n                power_connections:this.getPowerPortFromProps(this.props.defaultValues.power_connections),\r\n                asset_number:this.props.defaultValues.asset_number,\r\n\r\n                leftRight:this.getPowerFromProps(this.props.defaultValues.power_connections),\r\n             });\r\n        } else {\r\n            //this.setState({ updated: true, });\r\n        }\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getLists();\r\n    }\r\n\r\n    getPowerFromProps = (pwrCons) => {\r\n        var pwr = [];\r\n\r\n        pwrCons.map(pwrCon => {\r\n            if (pwrCon.includes(\"L\")) {\r\n                pwr.push(\"left\");\r\n            } else if (pwrCon.includes(\"R\")) {\r\n                pwr.push(\"right\");\r\n            } else {\r\n                pwr.push(\"off\");\r\n            }\r\n        })\r\n\r\n        return pwr;\r\n    }\r\n\r\n    getPowerPortFromProps = (pwrCons) => {\r\n        var pwrPorts = [];\r\n\r\n        try {\r\n            pwrCons.map(pwrCon => {\r\n                pwrPorts.push(parseInt(pwrCon.substring(1)));\r\n            });\r\n        } catch {\r\n\r\n        }\r\n\r\n        return pwrPorts;\r\n    }\r\n\r\n    getLists = () => {\r\n        this.getModelList();\r\n        this.getOwnerList();\r\n        this.getDatacenterList();\r\n        this.getAssetList();\r\n    }\r\n\r\n    getModelList = () => {\r\n        axios.post(\r\n            getURL(Constants.MODELS_MAIN_PATH, searchPath), emptySearch).then(\r\n            response => {\r\n                var models = response.data.models;\r\n\r\n                var modelNames = [];\r\n                var networkNames = {};\r\n                var powerPortNames = {};\r\n\r\n                models.map(model => {\r\n                    var modelKey = model.vendor + \" \" + model.model_number;\r\n                    modelNames.push(modelKey);\r\n                    networkNames[modelKey] = model.ethernet_ports;\r\n                    powerPortNames[modelKey] = parseInt(model.power_ports);\r\n                });\r\n\r\n                this.setState({ loadingModels: false, modelList: modelNames, networkList: networkNames, powerPortList: powerPortNames });\r\n            });\r\n    }\r\n\r\n    getOwnerList = () => {\r\n        axios.post(\r\n            getURL(Constants.USERS_MAIN_PATH, searchPath), emptySearch).then(\r\n            response => {\r\n                var users = [];\r\n                response.data.users.map(user => users.push(user.username + \"/\" + user.display_name));\r\n                this.setState({ loadingOwners: false, ownerList: users });\r\n            });\r\n    }\r\n\r\n    getDatacenterList = () => {\r\n        axios.get(\r\n            getURL(Constants.DATACENTERS_MAIN_PATH, \"all/\")).then(\r\n            response => {\r\n                var datacenters = [];\r\n                response.data.datacenters.map(datacenter => datacenters.push(datacenter.name));\r\n                this.setState({ loadingDatacenters: false, datacenterList: datacenters })\r\n            });\r\n    }\r\n\r\n    getAssetList = () => {\r\n        axios.post(\r\n            getURL(Constants.ASSETS_MAIN_PATH, searchPath),emptySearch).then(\r\n            response => {\r\n                var instances = response.data.instances;\r\n\r\n                var hostnames = [];\r\n                var hostToModel = {};\r\n                instances.map(instance => {\r\n                    hostnames.push(instance.hostname);\r\n                    hostToModel[instance.hostname] = instance.model;\r\n                })\r\n\r\n                this.setState({ loadingHostnames: false, assetNumList: hostnames, assetNumToModelList: hostToModel }, this.availableNetworkConnections());\r\n            });\r\n    }\r\n\r\n    editAsset = (event) => {\r\n        event.preventDefault();\r\n        var json = this.createJSON();\r\n        console.log(json);\r\n        axios.post(\r\n            getURL(AssetConstants.ASSETS_MAIN_PATH, AssetCommand.edit),\r\n            json).then(\r\n                response => {\r\n                if (response.data.message === AssetConstants.SUCCESS_TOKEN) {\r\n                    this.setState({ statusOpen: true, statusMessage: \"Successfully saved edits\", statusSeverity:AssetConstants.SUCCESS_TOKEN });\r\n                } else {\r\n                    this.setState({ statusOpen: true, statusMessage: response.data.message, statusSeverity:AssetConstants.ERROR_TOKEN });\r\n                }\r\n            });\r\n\r\n    }\r\n\r\n    updateModel = (event) => {\r\n        var model = event.target.value;\r\n\r\n        if (model !== \"\") {\r\n            var ports = this.state.networkList[model];\r\n            var networkConns = {};\r\n            ports.map(port => {\r\n                var defaultNetworkPort = {\r\n                    \"mac_address\":\"\",\r\n                    \"connection_hostname\":\"\",\r\n                    \"connection_port\":\"\",\r\n                }\r\n                networkConns[port] = defaultNetworkPort;\r\n            });\r\n        } else {\r\n            var networkConns = {};\r\n        }\r\n\r\n\r\n        this.setState({ model: model, network_connections:networkConns }, () => {  });\r\n    }\r\n\r\n    updateHostname = (event) => {\r\n        this.setState({ hostname: event.target.value });\r\n    }\r\n\r\n    updateRack = (event) => {\r\n        var rackVal = stringToRack(event.target.value);\r\n        this.setState({ rack: rackVal }, () => {  });\r\n    }\r\n\r\n    updateRackU = (event) => {\r\n        this.setState({ rackU: event.target.value }, () => {  });\r\n    }\r\n\r\n    updateOwner = (event) => {\r\n        this.setState({ owner: event.target.value }, () => {  });\r\n    }\r\n\r\n    updateComment = (event) => {\r\n        this.setState({ comment: event.target.value }, () => {  });\r\n    }\r\n\r\n    updateDatacenter = (event) => {\r\n        this.setState({ datacenter_name: event.target.value }, () => {  });\r\n    }\r\n\r\n    updateTags = (event) => {\r\n        this.setState({ tags: event.target.value }, () => {  });\r\n    }\r\n\r\n    changeNetworkMacAddress = (event, port) => {\r\n        var val = stringToMac(event.target.value);\r\n        this.setState(prevState => {\r\n            let network_connections = Object.assign({}, prevState.network_connections);\r\n            network_connections[port].mac_address = val;\r\n            return { network_connections };\r\n        }, () => {  });\r\n    }\r\n\r\n    changeNetworkHostname = (value, port) => {\r\n        var val = value===undefined ? \"\" : value;\r\n        this.setState(prevState => {\r\n            let network_connections = Object.assign({}, prevState.network_connections);\r\n            network_connections[port].connection_hostname = val;\r\n            return { network_connections };\r\n        }, () => { this.getPortOptions(val);  });\r\n    }\r\n\r\n    changeNetworkPort = (value, port) => {\r\n        var val = value===undefined ? \"\" : value;\r\n\r\n        this.setState(prevState => {\r\n            let network_connections = Object.assign({}, prevState.network_connections);\r\n            network_connections[port] = (network_connections[port] === null) ? {} : network_connections[port];\r\n            network_connections[port].connection_port = val;\r\n            return { network_connections };\r\n        }, () => {   });\r\n    }\r\n\r\n    updatePowerPort = (event, port) => {\r\n        var val = event.target.value;\r\n\r\n        this.setState(prevState => {\r\n            let power_connections = Object.assign({}, prevState.power_connections);\r\n            power_connections[port] = val;\r\n            return { power_connections };\r\n        }, () => {  });\r\n    }\r\n\r\n    changePowerPortState = (event, portNum) => {\r\n        var val = event.target.value;\r\n\r\n        this.setState(prevState => {\r\n            let leftRight = Object.assign({}, prevState.leftRight);\r\n            leftRight[portNum] = val;\r\n            return { leftRight };\r\n        }, () => {  });\r\n    }\r\n\r\n    updateAssetNumber = (event) => {\r\n        this.setState({ asset_number: event.target.value }, () => {  });\r\n    }\r\n\r\n    getPowerConnections = () => {\r\n        if (this.state.leftRight===null) {\r\n            return [];\r\n        }\r\n\r\n        var pwrConns = [];\r\n        var defaultValue = 1;\r\n        Object.entries(this.state.leftRight).map(([key, value]) => {\r\n            var num = this.state.power_connections===null ? defaultValue : this.state.power_connections[key];\r\n            switch(value) {\r\n                case left:\r\n                    pwrConns.push(\"L\" + num);\r\n                    break;\r\n                case right:\r\n                    pwrConns.push(\"R\" + num);\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n        });\r\n\r\n        return pwrConns;\r\n    }\r\n\r\n    createJSON = () => {\r\n        return {\r\n            \"asset_numberOriginal\":this.props.defaultValues.asset_number,\r\n            \"model\":this.state.model,\r\n            \"hostname\":this.state.hostname,\r\n            \"rack\":this.state.rack,\r\n            \"rack_position\":this.state.rackU,\r\n            \"owner\":this.state.owner.split(\"/\")[0],\r\n            \"comment\":this.state.comment,\r\n            \"datacenter_name\":this.state.datacenter_name,\r\n            \"tags\":this.state.tags,\r\n            \"network_connections\":((this.state.network_connections===null) ? {}:this.state.network_connections),\r\n            \"power_connections\":this.getPowerConnections(),\r\n            'asset_number':this.state.asset_number,\r\n        }\r\n    }\r\n\r\n    availableNetworkConnections = () => {\r\n        var availableNetworks = false;\r\n\r\n        var assets = this.state.assetNumList;\r\n        assets.map(asset => {\r\n            if (Object.keys(this.state.networList[this.state.assetNumToModelList[asset]].length).length > 0) {\r\n                availableNetworks = true;\r\n            }\r\n        });\r\n        this.setState({ availableConnections: availableNetworks });\r\n    }\r\n\r\n    showModal = () => {\r\n        this.setState({ showModal: true });\r\n    }\r\n\r\n    closeModal = () => {\r\n        this.setState({\r\n            loadingAssetNumber:true,\r\n            loadingModels:true,\r\n            modelList:[],\r\n            networkList:null,\r\n            powerPortList:null,\r\n            loadingOwners:true,\r\n            ownerList:[],\r\n            loadingDatacenters:true,\r\n            datacenterList:[],\r\n            loadingHostnames:true,\r\n            assetNumList:[],\r\n            assetNumToModelList:null,\r\n            model:\"\",\r\n            hostname:\"\",\r\n            rack:\"\",\r\n            rackU:-1,\r\n            owner:\"\",\r\n            comment:\"\",\r\n            datacenter_name:\"\",\r\n            tags:[],\r\n            network_connections:null,\r\n            power_connections:null,\r\n            asset_number:100000,\r\n            selectedConnection:null,\r\n            statusOpen: false,\r\n            statusMessage: \"\",\r\n            statusSeverity:\"\",\r\n            showModal:false,\r\n            powerPortState:null,\r\n            leftRight:null,\r\n            availableConnections:false,\r\n            portOptions:[],\r\n            canSubmit:false,\r\n        }, () => {this.getLists(); this.props.getAssetList(); this.props.close(); });\r\n    }\r\n\r\n    statusClose = () => {\r\n        this.setState({ statusOpen: false, statusMessage: \"\", statusSeverity:\"\" });\r\n    }\r\n\r\n    getPortOptions = (hostname) => {\r\n        try {\r\n            this.setState({ portOptions:this.state.networkList[this.state.assetNumToModelList[hostname]] });\r\n        } catch {\r\n\r\n        }\r\n    }\r\n\r\n    getModel = () => {\r\n        return this.state.model;\r\n    }\r\n\r\n    displayNetworks =  () => {\r\n        var model = this.getModel();\r\n        return (this.state.networkList && this.state.networkList[model]);\r\n    }\r\n\r\n    getNetworkConnections = () => {\r\n        return this.state.network_connections;\r\n    }\r\n\r\n    getMacValue = (port) => {\r\n        var netCons = this.getNetworkConnections();\r\n        if (netCons === null) {\r\n            return \"\";\r\n        }\r\n        return netCons[port] ? netCons[port].mac_address : \"\"\r\n    }\r\n\r\n    getConnectingHostname = (port) => {\r\n        var netCons = this.getNetworkConnections();\r\n        if (netCons === null) {\r\n            return \"\";\r\n        }\r\n        return netCons[port] ? netCons[port].connection_hostname : \"\"\r\n    }\r\n\r\n    getConnectionPort = (port) => {\r\n        var netCons = this.getNetworkConnections();\r\n        if (netCons === null) {\r\n            return \"\";\r\n        }\r\n        return netCons[port] ? netCons[port].connection_port : \"\"\r\n    }\r\n\r\n    connectionsDisabled = () => {\r\n        return this.state.hostname===\"\";\r\n    }\r\n\r\n    deleteAsset = () => {\r\n        this.setState({ showConfirmationBox:false })\r\n        axios.post(getURL(Constants.ASSETS_MAIN_PATH, AssetCommand.delete),\r\n         { \"asset_number\":this.props.defaultValues.asset_number }).then(\r\n            response => {\r\n                if (response.data.message === \"success\") {\r\n                    this.props.close();\r\n                } else {\r\n                    this.setState({ statusOpen: true, statusMessage: response.data.message, statusSeverity:AssetConstants.ERROR_TOKEN });\r\n                }\r\n            }\r\n        )\r\n    }\r\n\r\n    openConfirmationBox = () => {\r\n        this.setState({ showConfirmationBox: true });\r\n    }\r\n\r\n    closeConfirmationBox = () => {\r\n        this.setState({ showConfirmationBox: false })\r\n    }\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n\r\n        return (\r\n        <span>\r\n            {(\r\n            (this.state.loadingDatacenters\r\n            || this.state.loadingModels\r\n            || this.state.loadingHostnames\r\n            || this.state.loadingOwners)\r\n            //&& false\r\n            ) ? <div className={classes.progress}><CircularProgress /></div> :\r\n                <form\r\n                    onSubmit={(event) => { this.editAsset(event) }}\r\n                >\r\n                <div className={classes.dialogDiv}>\r\n                <Grid container spacing={3}>\r\n                    <Grid item xs={3}>\r\n                        <Tooltip placement=\"top\" open={this.state.inputs.model.Tooltip} title={this.state.inputs.model.description}>\r\n                            <Autocomplete\r\n                                id=\"select-model\"\r\n                                options={this.state.modelList}\r\n                                includeInputInList\r\n                                value={this.state.model}\r\n                                renderInput={params => (\r\n                                <TextField\r\n                                    {...params}\r\n                                    label={this.state.inputs.model.label}\r\n                                    name={this.state.inputs.model.name}\r\n                                    onChange={this.updateModel}\r\n                                    onBlur={this.updateModel}\r\n                                    variant=\"outlined\"\r\n                                    fullWidth\r\n                                    required\r\n                                />\r\n                                )}\r\n                            />\r\n                        </Tooltip>\r\n                    </Grid>\r\n                    <Grid item xs={3}>\r\n                        <Tooltip placement=\"top\" open={this.state.inputs.owner.Tooltip} title={this.state.inputs.owner.description}>\r\n                            <Autocomplete\r\n                                id=\"select-owner\"\r\n                                options={this.state.ownerList}\r\n                                includeInputInList\r\n                                value={this.state.owner}\r\n                                renderInput={params => (\r\n                                <TextField\r\n                                    {...params}\r\n                                    label={this.state.inputs.owner.label}\r\n                                    name={this.state.inputs.owner.name}\r\n                                    onChange={this.updateOwner}\r\n                                    onBlur={this.updateOwner}\r\n                                    variant=\"outlined\"\r\n                                    fullWidth\r\n                                    required\r\n                                    disabled={this.props.disabled}\r\n                                />\r\n                                )}\r\n                            />\r\n                        </Tooltip>\r\n                    </Grid>\r\n                    <Grid item xs={3}>\r\n                        <Tooltip placement=\"top\" open={this.state.inputs.datacenter.Tooltip} title={this.state.inputs.datacenter.description}>\r\n                            <Autocomplete\r\n                                id=\"input-datacenter\"\r\n                                options={this.state.datacenterList}\r\n                                includeInputInList\r\n                                value={this.state.datacenter_name}\r\n                                renderInput={params => (\r\n                                <TextField\r\n                                    {...params}\r\n                                    label={this.state.inputs.datacenter.label}\r\n                                    name={this.state.inputs.datacenter.name}\r\n                                    onChange={this.updateDatacenter}\r\n                                    onBlur={this.updateDatacenter}\r\n                                    variant=\"outlined\"\r\n                                    fullWidth\r\n                                    required\r\n                                    disabled={this.props.disabled}\r\n\r\n                                />\r\n                                )}\r\n                            />\r\n                        </Tooltip>\r\n                    </Grid>\r\n                    <Grid item xs={3}>\r\n                        <Tooltip placement=\"top\" open={this.state.inputs.rack.Tooltip} title={this.state.inputs.rack.description}>\r\n                            <TextField\r\n                                id=\"input-rack\"\r\n                                variant=\"outlined\"\r\n                                label={this.state.inputs.rack.label}\r\n                                name={this.state.inputs.rack.name}\r\n                                onChange={this.updateRack}\r\n                                value={this.state.rack}\r\n                                required\r\n                                fullWidth\r\n                                disabled={this.props.disabled}\r\n                                defaultValue={this.props.defaultValues.rack}\r\n                            />\r\n                        </Tooltip>\r\n                    </Grid>\r\n                    <Grid item xs={3}>\r\n                        <Tooltip placement=\"top\" open={this.state.inputs.rackU.Tooltip} title={this.state.inputs.rackU.description}>\r\n                            <TextField\r\n                                id=\"input-rackU\"\r\n                                variant=\"outlined\"\r\n                                type=\"number\"\r\n                                InputProps={{ inputProps: { min: 1, max:42} }}\r\n                                label={this.state.inputs.rackU.label}\r\n                                name={this.state.inputs.rackU.name}\r\n                                onChange={this.updateRackU}\r\n                                required\r\n                                fullWidth\r\n                                disabled={this.props.disabled}\r\n                                value={this.state.rackU}\r\n                            />\r\n                        </Tooltip>\r\n                    </Grid>\r\n                    <Grid item xs={3}>\r\n                        <Tooltip placement=\"top\" open={this.state.inputs.assetNum.Tooltip} title={this.state.inputs.assetNum.description}>\r\n                            <TextField\r\n                                id=\"input-asset-number\"\r\n                                variant=\"outlined\"\r\n                                type=\"number\"\r\n                                InputProps={{ inputProps: { min: 100000, max:999999} }}\r\n                                label={this.state.inputs.assetNum.label}\r\n                                name={this.state.inputs.assetNum.name}\r\n                                onChange={this.updateAssetNumber}\r\n                                value={this.state.asset_number}\r\n                                required\r\n                                fullWidth\r\n                                disabled={this.props.disabled}\r\n                            />\r\n                        </Tooltip>\r\n                    </Grid>\r\n                    <Grid item xs={3}>\r\n                        <Tooltip placement=\"top\" open={this.state.inputs.hostname.Tooltip} title={this.state.inputs.hostname.description}>\r\n                            <TextField\r\n                                id=\"input-hostname\"\r\n                                variant=\"outlined\"\r\n                                label={this.state.inputs.hostname.label}\r\n                                name={this.state.inputs.hostname.name}\r\n                                onChange={this.updateHostname}\r\n                                fullWidth\r\n                                disabled={this.props.disabled}\r\n                                value={this.state.hostname}\r\n                            />\r\n                        </Tooltip>\r\n                    </Grid>\r\n\r\n                    {this.displayNetworks() ?\r\n                    <Grid item xs={12}>\r\n                        {this.state.networkList[this.getModel()].map(networkPort => (\r\n                        <Grid container spacing={3}>\r\n                            <Grid item xs={2}>\r\n                                <Typography>{networkPort + \": \"}</Typography>\r\n                            </Grid>\r\n                            <Grid item xs={3}>\r\n                                <Tooltip placement=\"top\" open={this.state.inputs.macAddress.Tooltip} title={this.state.inputs.macAddress.description}>\r\n                                    <TextField\r\n                                        id=\"input-mac-address\"\r\n                                        variant=\"outlined\"\r\n                                        label={this.state.inputs.macAddress.label}\r\n                                        name={this.state.inputs.macAddress.name}\r\n                                        onChange={(event) => {this.changeNetworkMacAddress(event, networkPort)}}\r\n                                        fullWidth\r\n                                        disabled={this.state.hostname===\"\" || this.props.defaultValues.hostname}\r\n                                        value={this.getMacValue(networkPort)}\r\n                                    />\r\n                                </Tooltip>\r\n                            </Grid>\r\n                            <Grid item xs={3}>\r\n                                <Tooltip placement=\"top\" open={this.state.inputs.networkConnections.Tooltip} title={this.state.inputs.networkConnections.description}>\r\n                                    <Autocomplete\r\n                                        id=\"input-network-ports-hostname\"\r\n                                        options={this.state.assetNumList}\r\n                                        includeInputInList\r\n                                        onChange={(event, value) => {this.changeNetworkHostname(value, networkPort)}}\r\n                                        required={this.getNetworkConnections()[networkPort].connection_port!==\"\"}\r\n                                        value={this.getConnectingHostname(networkPort)}\r\n                                        disabled={this.connectionsDisabled()}\r\n                                        renderInput={params => (\r\n                                            <TextField\r\n                                                {...params}\r\n                                                label={\"Connection Hostname\"}\r\n                                                name={\"Connection Hostname\"}\r\n                                                variant=\"outlined\"\r\n                                                fullWidth\r\n                                            />\r\n                                        )}\r\n                                    />\r\n                                </Tooltip>\r\n                            </Grid>\r\n                            <Grid item xs={3}>\r\n                                <Tooltip placement=\"top\" open={this.state.inputs.networkConnections.Tooltip} title={this.state.inputs.networkConnections.description}>\r\n                                    <Autocomplete\r\n                                        id=\"input-network-ports-connection-port\"\r\n                                        options={this.state.portOptions}\r\n                                        includeInputInList\r\n                                        onChange={(event, value) => {this.changeNetworkPort(value, networkPort)}}\r\n                                        required={this.getNetworkConnections()[networkPort].connection_hostname!==\"\"}\r\n                                        value={this.getConnectionPort(networkPort)}\r\n                                        disabled={this.connectionsDisabled()}\r\n                                        renderInput={params => (\r\n                                            <TextField\r\n                                                {...params}\r\n                                                label={\"Connection Port\"}\r\n                                                name={\"Connection Port\"}\r\n                                                variant=\"outlined\"\r\n                                                fullWidth\r\n                                            />\r\n                                        )}\r\n                                    />\r\n                                </Tooltip>\r\n                            </Grid>\r\n                        </Grid>\r\n                        ))}\r\n                    </Grid>:null}\r\n\r\n                    {(\r\n                        !(this.state.powerPortList\r\n                        && this.state.powerPortList[this.state.model])\r\n                        ) ? null :\r\n                    Array.from( { length: this.state.powerPortList[this.state.model] }, (_, k) => (\r\n                    <Grid item xs={12}>\r\n                        <Grid container spacing={3}>\r\n                            <Grid item xs={12}>\r\n                                <Typography>{\"Power Port: \" + k}</Typography>\r\n                            </Grid>\r\n                            <Grid item xs={3}>\r\n                                <FormControl component=\"fieldset\">\r\n                                    <RadioGroup\r\n                                        id={\"power-port-\"+k}\r\n                                        aria-label=\"position\"\r\n                                        name={\"position\"+k}\r\n                                        value={(this.state.leftRight===null) ? off:(this.state.leftRight[k]===undefined ? off:this.state.leftRight[k])}\r\n                                        onChange={(event) => {this.changePowerPortState(event, k)} }\r\n                                        row\r\n                                    >\r\n                                        <FormControlLabel\r\n                                            value={left}\r\n                                            control={<Radio color=\"primary\" />}\r\n                                            label=\"Left\"\r\n                                            labelPlacement=\"bottom\"\r\n                                        />\r\n                                        <FormControlLabel\r\n                                            value={right}\r\n                                            control={<Radio color=\"primary\" />}\r\n                                            label=\"Right\"\r\n                                            labelPlacement=\"bottom\"\r\n                                        />\r\n                                        <FormControlLabel\r\n                                            value={off}\r\n                                            control={<Radio color=\"primary\" />}\r\n                                            label=\"No Connection\"\r\n                                            labelPlacement=\"bottom\"\r\n                                        />\r\n                                    </RadioGroup>\r\n                                </FormControl>\r\n                            </Grid>\r\n                            {(this.state.leftRight===null) ? null:(this.state.leftRight[k]===undefined||this.state.leftRight[k]===off ? null:\r\n                                <Grid item xs={2}>\r\n                                    <TextField\r\n                                        type=\"number\"\r\n                                        value={(this.state.power_connections===null) ? 1 : (this.state.power_connections[k]===undefined?1:this.state.power_connections[k])}\r\n                                        InputProps={{ inputProps: { min: 1, max: 24} }}\r\n                                        onChange={(event) => {this.updatePowerPort(event, k)} }\r\n                                    />\r\n                                    <FormHelperText>Power Port Number</FormHelperText>\r\n                                </Grid>\r\n                                )}\r\n                        </Grid>\r\n                    </Grid>\r\n                    ))\r\n                            }\r\n                    <Grid item xs={6}>\r\n                            <TextField\r\n                                id=\"input-comment\"\r\n                                variant=\"outlined\"\r\n                                label={this.state.inputs.comment.label}\r\n                                name={this.state.inputs.comment.name}\r\n                                onChange={this.updateComment}\r\n                                multiline={true}\r\n                                fullWidth\r\n                                defaultValue={this.props.defaultValues.comment}\r\n                            />\r\n                    </Grid>\r\n                    <Grid item xs={6} />\r\n                    <Grid item xs={1}>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            type=\"submit\"\r\n                        >\r\n                            Save\r\n                        </Button>\r\n                    </Grid>\r\n                    <Grid item xs={9}>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"secondary\"\r\n                            onClick={() => this.openConfirmationBox()}\r\n                        >\r\n                            Delete\r\n                        </Button>\r\n                    </Grid>\r\n                </Grid></div></form>}\r\n                {this.state.statusOpen ?\r\n                <Alert\r\n                        severity={this.state.statusSeverity}\r\n                        action={\r\n                            <IconButton\r\n                                aria-label=\"close\"\r\n                                color=\"inherit\"\r\n                                size=\"small\"\r\n                                onClick={() => {\r\n                                this.statusClose()\r\n                                }}\r\n                            >\r\n                                <CloseIcon fontSize=\"inherit\" />\r\n                            </IconButton>\r\n                            }\r\n                    >\r\n                        {this.state.statusMessage}\r\n                    </Alert>:null}\r\n\r\n                    <Modal\r\n                        aria-labelledby=\"transition-modal-title\"\r\n                        aria-describedby=\"transition-modal-description\"\r\n                        className={classes.modal}\r\n                        open={this.state.showConfirmationBox}\r\n                        onClose={this.closeConfirmationBox}\r\n                        closeAfterTransition\r\n                        BackdropComponent={Backdrop}\r\n                        BackdropProps={{\r\n                        timeout: 500,\r\n                        }}\r\n                    >\r\n                            <div className={classes.paper}>\r\n                                <Grid container spacing={5}>\r\n                                    <Grid item xs={12}>\r\n                                        Are you sure you wish to delete?\r\n                                    </Grid>\r\n                                    <Grid item xs={2}>\r\n                                        <Button\r\n                                            variant=\"contained\"\r\n                                            color=\"primary\"\r\n                                            onClick={() => this.deleteAsset()}\r\n                                        >\r\n                                            Yes\r\n                                        </Button>\r\n                                    </Grid>\r\n                                    <Grid item xs={1}>\r\n                                        <Button\r\n                                            variant=\"contained\"\r\n                                            color=\"primary\"\r\n                                            onClick={() => this.closeConfirmationBox()}\r\n                                        >\r\n                                            No\r\n                                        </Button>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </div>\r\n                    </Modal>\r\n        </span>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default withStyles(useStyles)(EditAsset);\r\n","import React from 'react';\r\n\r\nimport axios from 'axios';\r\n\r\nimport {\r\n    Button,\r\n    ExpansionPanel,\r\n    ExpansionPanelSummary,\r\n    ExpansionPanelDetails,\r\n    Dialog,\r\n    AppBar,\r\n    Toolbar,\r\n    Slide,\r\n    IconButton,\r\n    Grid\r\n} from \"@material-ui/core/\"\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\n import CloseIcon from '@material-ui/icons/Close';\r\n\r\nimport { Typography } from '@material-ui/core';\r\nimport NetworkGraph from \"./NetworkGraph\";\r\nimport EditAsset from \"./EditAsset\";\r\n\r\nfunction createInputs(name, label, showTooltip, description) {\r\n    return {label, name, showTooltip, description};\r\n}\r\n\r\nconst useStyles = theme => ({\r\n      appBar: {\r\n        position: 'relative',\r\n      },\r\n      title: {\r\n        marginLeft: theme.spacing(2),\r\n        flex: 1,\r\n      },\r\n      button: {\r\n          marginLeft:theme.spacing(3),\r\n      }\r\n});\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n    return <Slide direction=\"up\" ref={ref} {...props} />;\r\n  });\r\n\r\nclass DetailAsset extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            networkNodes:null,\r\n        };\r\n    }\r\n\r\n    closeDetailView = () => {\r\n        this.props.search();\r\n    }\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n\r\n        return (\r\n        <span>\r\n            <Dialog fullScreen open={this.props.open} onClose={this.props.close} TransitionComponent={Transition} padding={3}>\r\n                <AppBar className={classes.appBar}>\r\n                    <Toolbar>\r\n                        <IconButton edge=\"start\" color=\"inherit\" onClick={this.props.close} aria-label=\"close\">\r\n                            <CloseIcon />\r\n                        </IconButton>\r\n                        <Typography variant=\"h6\" className={classes.title}>\r\n                            Asset Details\r\n                        </Typography>\r\n                    </Toolbar>\r\n                </AppBar>\r\n\r\n                <ExpansionPanel>\r\n                    <ExpansionPanelSummary\r\n                        expandIcon={<ExpandMoreIcon />}\r\n                        aria-controls=\"panel1a-content\"\r\n                        id=\"fields-header\"\r\n                    >\r\n                    <Typography>Asset General Details</Typography>\r\n                    </ExpansionPanelSummary>\r\n                    <ExpansionPanelDetails>\r\n                        <EditAsset\r\n                            defaultValues={this.props.asset}\r\n                            disabled={this.props.disabled}\r\n                            close={this.props.close}\r\n\t\t\t\t\t\t    getAssetList={this.props.getAssetList}\r\n                        />\r\n                    </ExpansionPanelDetails>\r\n                </ExpansionPanel>\r\n                {this.props.asset.hostname !== undefined && this.props.asset.hostname !== \"\" ?\r\n                <ExpansionPanel>\r\n                    <ExpansionPanelSummary\r\n                        expandIcon={<ExpandMoreIcon />}\r\n                        aria-controls=\"panel1a-content\"\r\n                        id=\"networks-header\"\r\n                    >\r\n                        <Typography>Asset Network Management</Typography>\r\n                    </ExpansionPanelSummary>\r\n                    <ExpansionPanelDetails>\r\n                                <NetworkGraph\r\n                                    vals={this.state.networkNodes}\r\n                                    host={this.props.asset.hostname}\r\n                                    assetNum={this.props.asset.asset_number}\r\n                                />\r\n                    </ExpansionPanelDetails>\r\n                </ExpansionPanel>:null}\r\n                {/*<ExpansionPanel>\r\n                    <ExpansionPanelSummary\r\n                        expandIcon={<ExpandMoreIcon />}\r\n                        aria-controls=\"panel1a-content\"\r\n                        id=\"power-header\"\r\n                    >\r\n                        <Typography>Asset Power Management</Typography>\r\n                    </ExpansionPanelSummary>\r\n                    <ExpansionPanelDetails>\r\n                    </ExpansionPanelDetails>\r\n                </ExpansionPanel>*/}\r\n            </Dialog>\r\n        </span>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default withStyles(useStyles)(DetailAsset);\r\n","import React from 'react';\r\n\r\nimport axios from 'axios';\r\n\r\nimport {\r\n    Grid,\r\n    FormHelperText,\r\n    FormControl,\r\n    Select,\r\n    MenuItem,\r\n    TextField,\r\n    Paper,\r\n    Typography,\r\n    Button,\r\n} from '@material-ui/core/';\r\n\r\n\r\nimport * as Constants from '../../Constants';\r\n\r\nclass FilterAsset extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            datacenter:\"\",\r\n            model:\"\",\r\n            hostname:\"\",\r\n            startingLetter:\"A\",\r\n            endingLetter:\"Z\",\r\n            startingNum:1,\r\n            endingNum:1000,\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.search();\r\n    }\r\n\r\n    updateDatacenter = (event) => {\r\n        this.setState({ datacenter: event.target.value }, () => { this.search() });\r\n    }\r\n\r\n    updateModel = (event) => {\r\n        this.setState({ model: event.target.value }, () => { this.search() });\r\n    }\r\n\r\n    updateHostname = (event) => {\r\n        this.setState({ hostname: event.target.value }, () => { this.search() });\r\n    }\r\n\r\n    updateStartingLetter = (event) => {\r\n        this.setState({ startingLetter: event.target.value }, () => { this.search() });\r\n    }\r\n\r\n    updateEndingLetter = (event) => {\r\n        this.setState({ endingLetter: event.target.value }, () => { this.search() });\r\n    }\r\n\r\n    updateStartingNum = (event) => {\r\n        this.setState({ startingNum: event.target.value }, () => { this.search() });\r\n    }\r\n\r\n    updateEndingNum = (event) => {\r\n        this.setState({ endingNum: event.target.value }, () => { this.search() });\r\n    }\r\n\r\n    componentDidUpdate() {\r\n\r\n    }\r\n\r\n    search = () => {\r\n         var items = [];\r\n         try {\r\n            this.props.allAssets.map(asset => {\r\n                if (\r\n                    (asset.datacenter_name.includes(this.state.datacenter) || asset.abbreviation.includes(this.state.datacenter))\r\n                    && asset.model.includes(this.state.model)\r\n                    && asset.hostname.includes(this.state.hostname)\r\n                    && asset.rack >= this.state.startingLetter + \"\" + this.state.startingNum\r\n                    && asset.rack <= this.state.endingLetter + \"\" + this.state.endingNum\r\n                ) {\r\n                    items.push(asset);\r\n                }\r\n            });\r\n            this.props.updateItems(items);\r\n        } catch {\r\n            this.props.updateItems([]);\r\n        }\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <Paper elevation={3}>\r\n                <Grid\r\n                    container\r\n                    spacing={2}\r\n                    direction=\"row\"\r\n                    justify=\"flex-start\"\r\n                    alignItems=\"center\"\r\n                    style={{\"padding\": \"10px\"}}\r\n                >\r\n                    <Grid item xs={12}>\r\n                        <Typography variant=\"h5\">Filter</Typography>\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6} md={4} lg={3}>\r\n                        <TextField\r\n                            id=\"datacenter\"\r\n                            label=\"Datacenter\"\r\n                            name=\"datacenter\"\r\n                            onChange={(event) => { this.updateDatacenter(event) } }\r\n                            style={{width: \"100%\"}}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6} md={4} lg={3}>\r\n                        <TextField\r\n                            id=\"model\"\r\n                            label=\"Model\"\r\n                            name=\"model\"\r\n                            onChange={(event) => { this.updateModel(event)} }\r\n                            style={{width: \"100%\"}}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6} md={4} lg={3}>\r\n                        <TextField\r\n                            id=\"hostname\"\r\n                            label=\"Hostname\"\r\n                            name=\"hostname\"\r\n                            onChange={(event) => this.updateHostname(event)}\r\n                            style={{width: \"100%\"}}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item item xs={12} sm={6} md={4} lg={3}></Grid>\r\n                    <Grid item xs={12} sm={6} md={4} lg={2}>\r\n                        <FormControl>\r\n                            <Select\r\n                                id=\"starting-letter-selector\"\r\n                                value={this.state.startingLetter}\r\n                                onChange={this.updateStartingLetter}\r\n                            >\r\n                                {Constants.RackX.map(val => (<MenuItem value={val}>{val}</MenuItem>))}\r\n                            </Select>\r\n                            <FormHelperText>Starting Letter</FormHelperText>\r\n                        </FormControl>\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6} md={4} lg={2}>\r\n                        <FormControl>\r\n                            <Select\r\n                                id=\"ending-letter-selector\"\r\n                                value={this.state.endingLetter}\r\n                                onChange={this.updateEndingLetter}\r\n                            >\r\n                                {Constants.RackX.map(val => (<MenuItem value={val}>{val}</MenuItem>))}\r\n                            </Select>\r\n                            <FormHelperText>Ending Letter</FormHelperText>\r\n                        </FormControl>\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6} md={4} lg={3}>\r\n                        <FormControl>\r\n                            <TextField\r\n                                id=\"starting-num-selector\"\r\n                                type=\"number\"\r\n                                value={this.state.startingNum}\r\n                                onChange={this.updateStartingNum}\r\n                                InputProps={{ inputProps: { min: 1} }}\r\n                            />\r\n                            <FormHelperText>Starting Number</FormHelperText>\r\n                        </FormControl>\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6} md={4} lg={3}>\r\n                        <FormControl>\r\n                            <TextField\r\n                                id=\"ending-num-selector\"\r\n                                type=\"number\"\r\n                                value={this.state.endingNum}\r\n                                onChange={this.updateEndingNum}\r\n                                InputProps={{ inputProps: { min: 1} }}\r\n                            />\r\n                            <FormHelperText>Ending Number</FormHelperText>\r\n                        </FormControl>\r\n                    </Grid>\r\n                </Grid>\r\n            </Paper>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default FilterAsset;\r\n","export default function descendingComparator(a, b, orderBy) {\r\n    if (b[orderBy] < a[orderBy]) {\r\n      return -1;\r\n    }\r\n    if (b[orderBy] > a[orderBy]) {\r\n      return 1;\r\n    }\r\n    return 0;\r\n  }\r\n","import React from 'react';\r\n\r\nimport axios from 'axios';\r\n\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from '@material-ui/core/Button';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Slide from '@material-ui/core/Slide';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport Collapse from '@material-ui/core/Collapse';\r\n\r\nimport StatusDisplay from '../../helpers/StatusDisplay';\r\nimport { AssetInput } from '../enums/AssetInputs.ts';\r\nimport { AssetCommand } from '../enums/AssetCommands.ts'\r\nimport getURL from '../../helpers/functions/GetURL';\r\nimport * as AssetConstants from \"../AssetConstants\";\r\nimport * as Constants from \"../../Constants\";\r\nimport { Typography } from '@material-ui/core';\r\nimport stringToMac from \"./functions/StringToMacAddress\"\r\nimport stringToRack from \"./functions/StringToRack\";\r\n\r\nfunction createInputs(name, label, showTooltip, description) {\r\n    return {label, name, showTooltip, description};\r\n}\r\n\r\nconst emptySearch = {\r\n    \"filter\": {\r\n            \"vendor\":null,\r\n            \"model_number\":null,\r\n            \"height\":null,\r\n            \"model\":null,\r\n            \"hostname\":null,\r\n            \"rack\":null,\r\n            \"rack_position\":null,\r\n            \"username\":null,\r\n            \"display_name\":null,\r\n            \"email\":null,\r\n            \"privilege\":null,\r\n            \"model\":null,\r\n            \"hostname\":null,\r\n            \"starting_rack_letter\":null,\r\n            \"ending_rack_letter\":null,\r\n            \"starting_rack_number\":null,\r\n            \"ending_rack_number\":null,\r\n            \"rack\":null,\r\n            \"rack_position\":null\r\n        },\r\n    \"datacenter_name\":\"\",\r\n}\r\n\r\nconst searchPath = \"search/\";\r\nconst left = \"left\";\r\nconst right = \"right\";\r\nconst off = \"off\";\r\n\r\nconst useStyles = theme => ({\r\n    root: {\r\n      flexGrow: 1,\r\n    },\r\n    dialogDiv: {\r\n        padding: theme.spacing(2, 4, 3),\r\n    },\r\n    modal: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        maxWidth: \"80%\",\r\n        margin:\"0 auto\",\r\n        minWidth:\"70%\",\r\n        maxHeight:\"600px\",\r\n        overflow:\"scroll\",\r\n      },\r\n      paper: {\r\n        backgroundColor: theme.palette.background.paper,\r\n        border: '2px solid #000',\r\n        boxShadow: theme.shadows[5],\r\n        padding: theme.spacing(2, 4, 3),\r\n      },\r\n      progress: {\r\n        display: 'flex',\r\n        '& > * + *': {\r\n          marginLeft: theme.spacing(2),\r\n        },\r\n      },\r\n      appBar: {\r\n        position: 'relative',\r\n      },\r\n      title: {\r\n        marginLeft: theme.spacing(2),\r\n        flex: 1,\r\n      },\r\n});\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n    return <Slide direction=\"up\" ref={ref} {...props} />;\r\n  });\r\n\r\nclass CreateAsset extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            // next available asset number\r\n            loadingAssetNumber:true,\r\n\r\n            // model information\r\n            loadingModels:true,\r\n            modelList:[],\r\n            networkList:null,\r\n            powerPortList:null,\r\n\r\n            // owner information\r\n            loadingOwners:true,\r\n            ownerList:[],\r\n\r\n            // datacenter information\r\n            loadingDatacenters:true,\r\n            datacenterList:[],\r\n\r\n            // hostname information\r\n            loadingHostnames:true,\r\n            assetNumList:[],\r\n            assetNumToModelList:null,\r\n\r\n            model:\"\",\r\n            hostname:\"\",\r\n            rack:\"\",\r\n            rackU:-1,\r\n            owner:\"\",\r\n            comment:\"\",\r\n            datacenter_name:\"\",\r\n            tags:[],\r\n            network_connections:null,\r\n            power_connections:null,\r\n            asset_number:100000,\r\n\r\n            selectedConnection:null,\r\n\r\n            statusOpen: false,\r\n            statusMessage: \"\",\r\n            statusSeverity:\"\",\r\n\r\n            showModal:false,\r\n\r\n            powerPortState:null,\r\n            leftRight:null,\r\n            availableConnections:false,\r\n            portOptions:[],\r\n\r\n            canSubmit:false,\r\n\r\n            next_pair:-1,\r\n            free_left:-1,\r\n            free_right:-1,\r\n\r\n            inputs: {\r\n                \"model\":createInputs(AssetInput.MODEL, \"Model\", false, \"A reference to an existing model\"),\r\n                \"hostname\":createInputs(AssetInput.HOSTNAME, \"Hostname\", false, \"A short string compliant with RFC 1034’s definition of 'label'\"),\r\n                \"rack\":createInputs(AssetInput.RACK, \"Rack\", false, \"The rack the equipment is installed in, written as a row letter and rack number, e.g. 'B12'\"),\r\n                \"rackU\":createInputs(AssetInput.RACK_U, \"Rack U\", false, \"An integer indicating the vertical location of the bottom of the equipment (e.g. '5')\"),\r\n                \"owner\":createInputs(AssetInput.OWNER, \"Owner\", false, \"A reference to an existing user on the system who owns this equipment\"),\r\n                \"comment\":createInputs(AssetInput.COMMENT, \"Comment\", false, \"Any additional information associated with this asset\"),\r\n                \"datacenter\":createInputs(AssetInput.DATACENTER, \"Datacenter\", false, \"A reference to an existing datacenter\"),\r\n                \"macAddress\":createInputs(AssetInput.MAC_ADDRESS, \"Mac Address\", false, \"A 6-byte hexadecimal string per network port shown canonically in lower case with colon delimiters (e.g., '00:1e:c9:ac:78:aa').\\nA hostname is required to enter in this value\"),\r\n                \"networkConnections\":createInputs(AssetInput.NETWORK_CONNECTIONS, \"Port Name\", false, \"For each network port, a reference to another network port on another piece of gear\"),\r\n                \"powerConnections\":createInputs(AssetInput.POWER_CONNECTIONS, \"Power Connections\", false, \"Choice of PDU port number (0 means not plugged in)\"),\r\n                \"assetNum\":createInputs(AssetInput.ASSET_NUMBER, \"Asset Number\", false, \"A six-digit serial number unique associated with an asset.\"),\r\n            },\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getLists();\r\n    }\r\n\r\n    getLists = () => {\r\n        this.getModelList();\r\n        this.getOwnerList();\r\n        this.getDatacenterList();\r\n        this.getNextAssetNum();\r\n        this.getAssetList();\r\n    }\r\n\r\n    getModelList = () => {\r\n        axios.post(\r\n            getURL(Constants.MODELS_MAIN_PATH, searchPath), emptySearch).then(\r\n            response => {\r\n                var models = response.data.models;\r\n\r\n                var modelNames = [];\r\n                var networkNames = {};\r\n                var powerPortNames = {};\r\n\r\n                models.map(model => {\r\n                    var modelKey = model.vendor + \" \" + model.model_number;\r\n                    modelNames.push(modelKey);\r\n                    networkNames[modelKey] = model.ethernet_ports;\r\n                    powerPortNames[modelKey] = parseInt(model.power_ports);\r\n                });\r\n\r\n                this.setState({ loadingModels: false, modelList: modelNames, networkList: networkNames, powerPortList: powerPortNames });\r\n            });\r\n    }\r\n\r\n    getOwnerList = () => {\r\n        axios.post(\r\n            getURL(Constants.USERS_MAIN_PATH, searchPath), emptySearch).then(\r\n            response => {\r\n                var users = [];\r\n                response.data.users.map(user => users.push(user.username + \"/\" + user.display_name));\r\n                this.setState({ loadingOwners: false, ownerList: users });\r\n            });\r\n    }\r\n\r\n    getDatacenterList = () => {\r\n        axios.get(\r\n            getURL(Constants.DATACENTERS_MAIN_PATH, \"all/\")).then(\r\n            response => {\r\n                var datacenters = [];\r\n                response.data.datacenters.map(datacenter => datacenters.push(datacenter.name));\r\n                this.setState({ loadingDatacenters: false, datacenterList: datacenters })\r\n            });\r\n    }\r\n\r\n    getNextAssetNum = () => {\r\n        axios.get(\r\n            getURL(Constants.ASSETS_MAIN_PATH, AssetCommand.GET_NEXT_ASSET_NUM)).then(\r\n            response => this.setState({ loadingAssetNumber: false, asset_number: response.data.asset_number }));\r\n    }\r\n\r\n    getAssetList = () => {\r\n        axios.post(\r\n            getURL(Constants.ASSETS_MAIN_PATH, searchPath),emptySearch).then(\r\n            response => {\r\n                var instances = response.data.instances;\r\n\r\n                var hostnames = [];\r\n                var hostToModel = {};\r\n                instances.map(instance => {\r\n                    hostnames.push(instance.hostname);\r\n                    hostToModel[instance.hostname] = instance.model;\r\n                })\r\n\r\n                this.setState({ loadingHostnames: false, assetNumList: hostnames, assetNumToModelList: hostToModel }, this.availableNetworkConnections());\r\n            });\r\n    }\r\n\r\n    validJSON = (json) => {\r\n        var valid = (json.model !== \"\"\r\n        && json.owner !== \"\"\r\n        && json.datacenter_name !== \"\"\r\n        && json.rack !== \"\"\r\n        && json.rack_position !== -1\r\n        && json.asset_number >= 100000 && json.asset_number <= 999999)\r\n\r\n        // Object.entries(json.network_connections).map(([port, vals]) => {\r\n        //     var validConnection = (vals.connection_hostname !== undefined && vals.connection_port === undefined) || (vals.connection_hostname === undefined && vals.connection_port !== undefined);\r\n        //     valid = valid && validConnection;\r\n        // });\r\n\r\n        return valid;\r\n    }\r\n\r\n    createAsset = (event) => {\r\n        event.preventDefault();\r\n        var json = this.createJSON();\r\n        if (this.validJSON(json)) {\r\n            axios.post(\r\n                getURL(AssetConstants.ASSETS_MAIN_PATH, AssetCommand.create),\r\n                json).then(\r\n                    response => {\r\n                    console.log(response);\r\n                    if (response.data.message === AssetConstants.SUCCESS_TOKEN) {\r\n                        this.props.showStatus(true, \"success\", \"Successfully created asset\");\r\n                        this.closeModal();\r\n                    } else {\r\n                        this.setState({ statusOpen: true, statusMessage: response.data.message, statusSeverity:AssetConstants.ERROR_TOKEN });\r\n                    }\r\n                });\r\n        }\r\n\r\n    }\r\n\r\n    updateModel = (event) => {\r\n        var model = event.target.value;\r\n\r\n        if (model !== \"\") {\r\n            var ports = this.state.networkList[model];\r\n            var networkConns = {};\r\n            ports.map(port => {\r\n                var defaultNetworkPort = {\r\n                    \"mac_address\":\"\",\r\n                    \"connection_hostname\":\"\",\r\n                    \"connection_port\":\"\",\r\n                }\r\n                networkConns[port] = defaultNetworkPort;\r\n            });\r\n        } else {\r\n            var networkConns = {};\r\n        }\r\n\r\n\r\n        this.setState({ model: model, network_connections:networkConns }, () => { this.validateForm() });\r\n    }\r\n\r\n    updateHostname = (event) => {\r\n        this.setState({ hostname: event.target.value }, () => { this.validateForm() });\r\n    }\r\n\r\n    updateRack = (event) => {\r\n        var rackVal = stringToRack(event.target.value);\r\n        this.setState({ rack: rackVal }, () => { this.validateForm() });\r\n        if (rackVal.length === 2 && this.state.datacenter_name !== \"\") {\r\n            axios.post(getURL(Constants.RACKS_MAIN_PATH, \"nextPDU/\"), {\r\n                \"rack\":rackVal,\r\n                \"datacenter_name\":this.state.datacenter_name,\r\n            }).then(response => {\r\n                console.log(this.state.power_connections);\r\n                try {\r\n                    var firstFree = response.data.free_left;\r\n                    var pwrLst = [];\r\n                    console.log(\"updating power ports\");\r\n                    this.state.power_connections.map((powerPort, index) => {\r\n                        if (index%2===0 && index<this.state.power_connections.length-1) {\r\n                            console.log(index);\r\n                            pwrLst[index] = firstFree[index];\r\n                            pwrLst[index+1] = firstFree[index+1];\r\n                        } else {\r\n                            console.log(\"passing\");\r\n                        }\r\n\r\n                    });\r\n                } catch (exception) {\r\n                    console.log(exception);\r\n                }\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    updateRackU = (event) => {\r\n        this.setState({ rackU: event.target.value }, () => { this.validateForm() });\r\n    }\r\n\r\n    updateOwner = (event) => {\r\n        this.setState({ owner: event.target.value }, () => { this.validateForm() });\r\n    }\r\n\r\n    updateComment = (event) => {\r\n        this.setState({ comment: event.target.value }, () => { this.validateForm() });\r\n    }\r\n\r\n    updateDatacenter = (event) => {\r\n        this.setState({ datacenter_name: event.target.value }, () => { this.validateForm() });\r\n    }\r\n\r\n    updateTags = (event) => {\r\n        this.setState({ tags: event.target.value }, () => { this.validateForm() });\r\n    }\r\n\r\n    changeNetworkMacAddress = (event, port) => {\r\n        var val = stringToMac(event.target.value);\r\n        this.setState(prevState => {\r\n            let network_connections = Object.assign({}, prevState.network_connections);\r\n            network_connections[port].mac_address = val;\r\n            return { network_connections };\r\n        }, () => { this.validateForm() });\r\n    }\r\n\r\n    changeNetworkHostname = (value, port) => {\r\n        var val = value===undefined ? \"\" : value;\r\n        this.setState(prevState => {\r\n            let network_connections = Object.assign({}, prevState.network_connections);\r\n            network_connections[port].connection_hostname = val;\r\n            return { network_connections };\r\n        }, () => { this.getPortOptions(val); this.validateForm() });\r\n    }\r\n\r\n    changeNetworkPort = (value, port) => {\r\n        var val = value===undefined ? \"\" : value;\r\n\r\n        this.setState(prevState => {\r\n            let network_connections = Object.assign({}, prevState.network_connections);\r\n            network_connections[port] = (network_connections[port] === null) ? {} : network_connections[port];\r\n            network_connections[port].connection_port = val;\r\n            return { network_connections };\r\n        }, () => {  this.validateForm() });\r\n    }\r\n\r\n    updatePowerPort = (event, port) => {\r\n        var val = event.target.value;\r\n\r\n        this.setState(prevState => {\r\n            let power_connections = Object.assign({}, prevState.power_connections);\r\n            power_connections[port] = val;\r\n            return { power_connections };\r\n        }, () => { this.validateForm() });\r\n    }\r\n\r\n    changePowerPortState = (event, portNum) => {\r\n        var val = event.target.value;\r\n\r\n        this.setState(prevState => {\r\n            let leftRight = Object.assign({}, prevState.leftRight);\r\n            leftRight[portNum] = val;\r\n            return { leftRight };\r\n        }, () => { this.validateForm() });\r\n    }\r\n\r\n    updateAssetNumber = (event) => {\r\n        this.setState({ asset_number: event.target.value }, () => { this.validateForm() });\r\n    }\r\n\r\n    getPowerConnections = () => {\r\n        if (this.state.leftRight===null) {\r\n            return [];\r\n        }\r\n\r\n        var pwrConns = [];\r\n        var defaultValue = 1;\r\n        Object.entries(this.state.leftRight).map(([key, value]) => {\r\n            var num = this.state.power_connections===null ? defaultValue : this.state.power_connections[key];\r\n            switch(value) {\r\n                case left:\r\n                    pwrConns.push(\"L\" + num);\r\n                    break;\r\n                case right:\r\n                    pwrConns.push(\"R\" + num);\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n        });\r\n\r\n        return pwrConns;\r\n    }\r\n\r\n    createJSON = () => {\r\n        return {\r\n            \"model\":this.state.model,\r\n            \"hostname\":this.state.hostname,\r\n            \"rack\":this.state.rack,\r\n            \"rack_position\":this.state.rackU,\r\n            \"owner\":this.state.owner.split(\"/\")[0],\r\n            \"comment\":this.state.comment,\r\n            \"datacenter_name\":this.state.datacenter_name,\r\n            \"tags\":this.state.tags,\r\n            \"network_connections\":(this.state.network_connections===null) ? {}:this.state.network_connections,\r\n            \"power_connections\":this.getPowerConnections(),\r\n            'asset_number':this.state.asset_number,\r\n        }\r\n    }\r\n\r\n    availableNetworkConnections = () => {\r\n        var availableNetworks = false;\r\n\r\n        var assets = this.state.assetNumList;\r\n        assets.map(asset => {\r\n            if (Object.keys(this.state.networList[this.state.assetNumToModelList[asset]].length).length > 0) {\r\n                availableNetworks = true;\r\n            }\r\n        });\r\n        this.setState({ availableConnections: availableNetworks });\r\n    }\r\n\r\n    showModal = () => {\r\n        this.setState({ showModal: true });\r\n    }\r\n\r\n    closeModal = () => {\r\n        this.getLists();\r\n        this.props.getAssetList();\r\n        this.setState({\r\n            loadingAssetNumber:true,\r\n            loadingModels:true,\r\n            modelList:[],\r\n            networkList:null,\r\n            powerPortList:null,\r\n            loadingOwners:true,\r\n            ownerList:[],\r\n            loadingDatacenters:true,\r\n            datacenterList:[],\r\n            loadingHostnames:true,\r\n            assetNumList:[],\r\n            assetNumToModelList:null,\r\n            model:\"\",\r\n            hostname:\"\",\r\n            rack:\"\",\r\n            rackU:-1,\r\n            owner:\"\",\r\n            comment:\"\",\r\n            datacenter_name:\"\",\r\n            tags:[],\r\n            network_connections:null,\r\n            power_connections:null,\r\n            asset_number:100000,\r\n            selectedConnection:null,\r\n            statusOpen: false,\r\n            statusMessage: \"\",\r\n            statusSeverity:\"\",\r\n            showModal:false,\r\n            powerPortState:null,\r\n            leftRight:null,\r\n            availableConnections:false,\r\n            portOptions:[],\r\n            canSubmit:false,\r\n        }, () => { this.props.close(); });\r\n    }\r\n\r\n    statusClose = () => {\r\n        this.setState({ statusOpen: false, statusMessage: \"\", statusSeverity:\"\" });\r\n    }\r\n\r\n    validateForm = () => {\r\n        this.setState({ canSubmit:this.validJSON(this.createJSON()) });\r\n    }\r\n\r\n    getPortOptions = (hostname) => {\r\n        try {\r\n            this.setState({ portOptions:this.state.networkList[this.state.assetNumToModelList[hostname]] });\r\n        } catch {\r\n\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n\r\n        return (\r\n        <span>\r\n            {(\r\n            (this.state.loadingAssetNumber\r\n            || this.state.loadingDatacenters\r\n            || this.state.loadingModels\r\n            || this.state.loadingHostnames\r\n            || this.state.loadingOwners)\r\n            //&& false\r\n            ) ? <div className={classes.progress}><CircularProgress /></div> :\r\n                <form\r\n                    onSubmit={(event) => {this.createAsset(event)}}\r\n                >\r\n                <div className={classes.dialogDiv}>\r\n                <Grid container spacing={3}>\r\n                    <Grid item xs={3}>\r\n                        <Tooltip placement=\"top\" open={this.state.inputs.model.Tooltip} title={this.state.inputs.model.description}>\r\n                            <Autocomplete\r\n                                id=\"select-model\"\r\n                                options={this.state.modelList}\r\n                                includeInputInList\r\n\r\n                                renderInput={params => (\r\n                                <TextField\r\n                                    {...params}\r\n                                    label={this.state.inputs.model.label}\r\n                                    name={this.state.inputs.model.name}\r\n                                    onChange={this.updateModel}\r\n                                    onBlur={this.updateModel}\r\n                                    variant=\"outlined\"\r\n                                    fullWidth\r\n                                    required\r\n                                />\r\n                                )}\r\n                            />\r\n                        </Tooltip>\r\n                    </Grid>\r\n                    <Grid item xs={3}>\r\n                        <Tooltip placement=\"top\" open={this.state.inputs.owner.Tooltip} title={this.state.inputs.owner.description}>\r\n                            <Autocomplete\r\n                                id=\"select-owner\"\r\n                                options={this.state.ownerList}\r\n                                includeInputInList\r\n                                renderInput={params => (\r\n                                <TextField\r\n                                    {...params}\r\n                                    label={this.state.inputs.owner.label}\r\n                                    name={this.state.inputs.owner.name}\r\n                                    onChange={this.updateOwner}\r\n                                    onBlur={this.updateOwner}\r\n                                    variant=\"outlined\"\r\n                                    fullWidth\r\n                                    required\r\n                                />\r\n                                )}\r\n                            />\r\n                        </Tooltip>\r\n                    </Grid>\r\n                    <Grid item xs={3}>\r\n                        <Tooltip placement=\"top\" open={this.state.inputs.datacenter.Tooltip} title={this.state.inputs.datacenter.description}>\r\n                            <Autocomplete\r\n                                id=\"input-datacenter\"\r\n                                options={this.state.datacenterList}\r\n                                includeInputInList\r\n\r\n                                renderInput={params => (\r\n                                <TextField\r\n                                    {...params}\r\n                                    label={this.state.inputs.datacenter.label}\r\n                                    name={this.state.inputs.datacenter.name}\r\n                                    onChange={this.updateDatacenter}\r\n                                    onBlur={this.updateDatacenter}\r\n                                    variant=\"outlined\"\r\n                                    fullWidth\r\n                                    required\r\n                                />\r\n                                )}\r\n                            />\r\n                        </Tooltip>\r\n                    </Grid>\r\n                    <Grid item xs={3}>\r\n                        <Tooltip placement=\"top\" open={this.state.inputs.rack.Tooltip} title={this.state.inputs.rack.description}>\r\n                            <TextField\r\n                                id=\"input-rack\"\r\n                                variant=\"outlined\"\r\n                                label={this.state.inputs.rack.label}\r\n                                name={this.state.inputs.rack.name}\r\n                                onChange={this.updateRack}\r\n                                value={this.state.rack}\r\n                                required\r\n                                fullWidth\r\n                            />\r\n                        </Tooltip>\r\n                    </Grid>\r\n                    <Grid item xs={3}>\r\n                        <Tooltip placement=\"top\" open={this.state.inputs.rackU.Tooltip} title={this.state.inputs.rackU.description}>\r\n                            <TextField\r\n                                id=\"input-rackU\"\r\n                                variant=\"outlined\"\r\n                                type=\"number\"\r\n                                InputProps={{ inputProps: { min: 1, max:42} }}\r\n                                label={this.state.inputs.rackU.label}\r\n                                name={this.state.inputs.rackU.name}\r\n                                onChange={this.updateRackU}\r\n                                required\r\n                                fullWidth\r\n                            />\r\n                        </Tooltip>\r\n                    </Grid>\r\n                    <Grid item xs={3}>\r\n                        <Tooltip placement=\"top\" open={this.state.inputs.assetNum.Tooltip} title={this.state.inputs.assetNum.description}>\r\n                            <TextField\r\n                                id=\"input-asset-number\"\r\n                                variant=\"outlined\"\r\n                                type=\"number\"\r\n                                InputProps={{ inputProps: { min: 100000, max:999999} }}\r\n                                label={this.state.inputs.assetNum.label}\r\n                                name={this.state.inputs.assetNum.name}\r\n                                onChange={this.updateAssetNumber}\r\n                                value={this.state.asset_number}\r\n                                required\r\n                                fullWidth\r\n                            />\r\n                        </Tooltip>\r\n                    </Grid>\r\n                    <Grid item xs={3}>\r\n                        <Tooltip placement=\"top\" open={this.state.inputs.hostname.Tooltip} title={this.state.inputs.hostname.description}>\r\n                            <TextField\r\n                                id=\"input-hostname\"\r\n                                variant=\"outlined\"\r\n                                label={this.state.inputs.hostname.label}\r\n                                name={this.state.inputs.hostname.name}\r\n                                onChange={this.updateHostname}\r\n                                fullWidth\r\n                            />\r\n                        </Tooltip>\r\n                    </Grid>\r\n\r\n                    {!(this.state.networkList && this.state.networkList[this.state.model]) ? null :\r\n                    <Grid item xs={12}>\r\n                        {this.state.networkList[this.state.model].map(networkPort => (\r\n                        <Grid container spacing={3}>\r\n                            <Grid item xs={2}>\r\n                                <Typography>{networkPort + \": \"}</Typography>\r\n                            </Grid>\r\n                            <Grid item xs={3}>\r\n                                <Tooltip placement=\"top\" open={this.state.inputs.macAddress.Tooltip} title={this.state.inputs.macAddress.description}>\r\n                                    <TextField\r\n                                        id=\"input-mac-address\"\r\n                                        variant=\"outlined\"\r\n                                        label={this.state.inputs.macAddress.label}\r\n                                        name={this.state.inputs.macAddress.name}\r\n                                        onChange={(event) => {this.changeNetworkMacAddress(event, networkPort)}}\r\n                                        fullWidth\r\n                                        disabled={this.state.hostname===\"\"}\r\n                                        value={ (this.state.network_connections !== null && this.state.network_connections[networkPort]!==undefined) ? this.state.network_connections[networkPort].mac_address : \"\" }\r\n                                    />\r\n                                </Tooltip>\r\n                            </Grid>\r\n                            <Grid item xs={3}>\r\n                                <Tooltip placement=\"top\" open={this.state.inputs.networkConnections.Tooltip} title={this.state.inputs.networkConnections.description}>\r\n                                    <Autocomplete\r\n                                        id=\"input-network-ports\"\r\n                                        options={this.state.assetNumList}\r\n                                        includeInputInList\r\n                                        onChange={(event, value) => {this.changeNetworkHostname(value, networkPort)}}\r\n                                        required={this.state.network_connections[networkPort].connection_port!==\"\"}\r\n                                        renderInput={params => (\r\n                                            <TextField\r\n                                                {...params}\r\n                                                label={\"Connection Hostname\"}\r\n                                                name={\"Connection Hostname\"}\r\n                                                variant=\"outlined\"\r\n                                                fullWidth\r\n                                                disabled={this.state.hostname===\"\"}\r\n                                            />\r\n                                        )}\r\n                                    />\r\n                                </Tooltip>\r\n                            </Grid>\r\n                            <Grid item xs={3}>\r\n                                <Tooltip placement=\"top\" open={this.state.inputs.networkConnections.Tooltip} title={this.state.inputs.networkConnections.description}>\r\n                                    <Autocomplete\r\n                                        id=\"input-network-ports\"\r\n                                        options={this.state.portOptions}\r\n                                        includeInputInList\r\n                                        onChange={(event, value) => {this.changeNetworkPort(value, networkPort)}}\r\n                                        renderInput={params => (\r\n                                            <TextField\r\n                                                {...params}\r\n                                                label={\"Connection Port\"}\r\n                                                name={\"Connection Port\"}\r\n                                                variant=\"outlined\"\r\n                                                fullWidth\r\n                                                required={this.state.network_connections[networkPort].connection_hostname!==\"\"}\r\n                                                disabled={this.state.hostname===\"\"}\r\n                                            />\r\n                                        )}\r\n                                    />\r\n                                </Tooltip>\r\n                            </Grid>\r\n                        </Grid>\r\n                        ))}\r\n                    </Grid>}\r\n\r\n                    {(\r\n                        !(this.state.powerPortList\r\n                        && this.state.powerPortList[this.state.model])\r\n                        ) ? null :\r\n                    Array.from( { length: this.state.powerPortList[this.state.model] }, (_, k) => (\r\n                    <Grid item xs={12}>\r\n                        <Grid container spacing={3}>\r\n                            <Grid item xs={12}>\r\n                                <Typography>{\"Power Port: \" + k}</Typography>\r\n                            </Grid>\r\n                            <Grid item xs={3}>\r\n                                <FormControl component=\"fieldset\">\r\n                                    <RadioGroup\r\n                                        id={\"power-port-\"+k}\r\n                                        aria-label=\"position\"\r\n                                        name={\"position\"+k}\r\n                                        value={(this.state.leftRight===null) ? off:(this.state.leftRight[k]===undefined ? off:this.state.leftRight[k])}\r\n                                        onChange={(event) => {this.changePowerPortState(event, k)} }\r\n                                        row\r\n                                    >\r\n                                        <FormControlLabel\r\n                                            value={left}\r\n                                            control={<Radio color=\"primary\" />}\r\n                                            label=\"Left\"\r\n                                            labelPlacement=\"bottom\"\r\n                                        />\r\n                                        <FormControlLabel\r\n                                            value={right}\r\n                                            control={<Radio color=\"primary\" />}\r\n                                            label=\"Right\"\r\n                                            labelPlacement=\"bottom\"\r\n                                        />\r\n                                        <FormControlLabel\r\n                                            value={off}\r\n                                            control={<Radio color=\"primary\" />}\r\n                                            label=\"No Connection\"\r\n                                            labelPlacement=\"bottom\"\r\n                                        />\r\n                                    </RadioGroup>\r\n                                </FormControl>\r\n                            </Grid>\r\n                            {(this.state.leftRight===null) ? null:(this.state.leftRight[k]===undefined||this.state.leftRight[k]===off ? null:\r\n                                <Grid item xs={2}>\r\n                                    <TextField\r\n                                        type=\"number\"\r\n                                        value={(this.state.power_connections===null) ? 1 : (this.state.power_connections[k]===undefined?1:this.state.power_connections[k])}\r\n                                        InputProps={{ inputProps: { min: 1, max: 24} }}\r\n                                        onChange={(event) => {this.updatePowerPort(event, k)} }\r\n                                    />\r\n                                    <FormHelperText>Power Port Number</FormHelperText>\r\n                                </Grid>\r\n                                )}\r\n                        </Grid>\r\n                    </Grid>\r\n                    ))\r\n                            }\r\n                    <Grid item xs={6}>\r\n                            <TextField\r\n                                id=\"input-comment\"\r\n                                variant=\"outlined\"\r\n                                label={this.state.inputs.comment.label}\r\n                                name={this.state.inputs.comment.name}\r\n                                onChange={this.updateComment}\r\n                                multiline={true}\r\n                                fullWidth\r\n                            />\r\n                    </Grid>\r\n                    <Grid item xs={6} />\r\n                    <Grid item xs={1}>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            type=\"submit\"\r\n                            disabled={!this.state.canSubmit}\r\n                        >\r\n                            Create\r\n                        </Button>\r\n                    </Grid>\r\n                    <Grid item xs={9}>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            onClick={this.closeModal}\r\n                        >\r\n                            Cancel\r\n                        </Button>\r\n                    </Grid>\r\n                </Grid></div></form>}\r\n                {this.state.statusOpen ?\r\n                <Alert\r\n                        severity={this.state.statusSeverity}\r\n                        action={\r\n                            <IconButton\r\n                                aria-label=\"close\"\r\n                                color=\"inherit\"\r\n                                size=\"small\"\r\n                                onClick={() => {\r\n                                this.statusClose()\r\n                                }}\r\n                            >\r\n                                <CloseIcon fontSize=\"inherit\" />\r\n                            </IconButton>\r\n                            }\r\n                    >\r\n                        {this.state.statusMessage}\r\n                    </Alert>:null}\r\n        </span>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default withStyles(useStyles)(CreateAsset);\r\n","import React from \"react\";\r\n\r\nimport axios from 'axios';\r\nimport Dropzone from 'react-dropzone'\r\n\r\nimport {\r\n\tModal,\r\n\tTypography,\r\n\tFade,\r\n\tBackdrop,\r\n\tGrid,\r\n\tButton,\r\n\tPaper,\r\n\twithStyles,\r\n} from \"@material-ui/core/\";\r\n\r\nimport getURL from \"../../helpers/functions/GetURL\";\r\nimport { AssetCommand } from \"../enums/AssetCommands.ts\";\r\nimport * as AssetConstants from \"../AssetConstants\";\r\n\r\nconst useStyles = theme => ({\r\n\tgrid: {\r\n\t\tbackgroundColor: theme.palette.background.paper,\r\n\t\tboxShadow: theme.shadows[5],\r\n\t\tpadding: theme.spacing(2, 4, 3),\r\n\t\twidth: \"50%\"\r\n\t},\r\n})\r\n\r\nclass ImportAsset extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\r\n\t\tthis.state = {\r\n\t\t\timportedFile:null,\r\n\t\t};\r\n\t}\r\n\r\n\tsetFile = (file) => {\r\n\t\tthis.setState({ importedFile: file });\r\n\t}\r\n\r\n\tchooseFile = (event) => {\r\n        this.setState({ importedFile: event.target.files[0] })\r\n    }\r\n\r\n\tuploadFile = () => {\r\n        const data = new FormData();\r\n        data.append('file', this.state.importedFile);\r\n        this.sendUploadedFile(data);\r\n    }\r\n\r\n\tcloseImport = () => {\r\n\t\tthis.setState({ importedFile: null }, () => { this.props.close() });\r\n\t}\r\n\r\n\tsendUploadedFile = (data) => {\r\n        axios.post(\r\n            getURL(AssetConstants.ASSETS_MAIN_PATH, AssetCommand.UPLOAD_FILE), data\r\n            ).then(response => {\r\n                if (response.data.message === AssetConstants.SUCCESS_TOKEN) {\r\n\t\t\t\t\tthis.setState({ showStatus: true, statusMessage: response.data.summary, statusSeverity:AssetConstants.SUCCESS_TOKEN, showImport: false,})\r\n\t\t\t\t\tthis.props.close();\r\n                } else {\r\n                    this.setState({ showStatus: true, statusMessage: response.data.message, statusSeverity:AssetConstants.ERROR_TOKEN })\r\n                }\r\n            });\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst { classes } = this.props;\r\n\t\treturn (\r\n\t\t\t<Modal\r\n                aria-labelledby=\"transition-modal-title\"\r\n                aria-describedby=\"transition-modal-description\"\r\n                className={classes.modal}\r\n                open={this.props.open}\r\n                onClose={this.closeImport}\r\n                closeAfterTransition\r\n            >\r\n                <Fade in={this.props.open}>\r\n                    <Backdrop\r\n                        open={this.props.open}\r\n                    >\r\n                        <div className={classes.grid}>\r\n                        <Grid\r\n                            container\r\n                            spacing={1}\r\n                            direction=\"row\"\r\n                            justify=\"flex-start\"\r\n                            alignItems=\"center\"\r\n                        >\r\n                            <Grid item xs={9}>\r\n                                <Typography variant=\"h5\">Import Models</Typography>\r\n                            </Grid>\r\n                            <Grid item xs={3}>\r\n                                <Button\r\n                                    onClick={this.closeImport}\r\n                                    style={{ width: \"100%\" }}\r\n                                >\r\n                                    Close\r\n                                </Button>\r\n                            </Grid>\r\n                            <Grid container item direction=\"row\" justify=\"center\" alignItems=\"center\" xs={12}>\r\n\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\ttype='file'\r\n\t\t\t\t\t\t\t\t\taccept=\".csv\"\r\n\t\t\t\t\t\t\t\t\tonChange={this.chooseFile}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t<Grid container item direciton=\"row\" justify=\"center\" alignItems=\"center\" xs={12}>\r\n                                <Button\r\n                                    variant=\"contained\"\r\n                                    color=\"primary\"\r\n\t\t\t\t\t\t\t\t\tstyle={{width: \"40%\"}}\r\n\t\t\t\t\t\t\t\t\tonClick={() => {this.uploadFile()}}\r\n                                >\r\n                                    Upload File\r\n                                </Button>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </div>\r\n                </Backdrop>\r\n                </Fade>\r\n            </Modal>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default withStyles(useStyles)(ImportAsset);\r\n","import React from \"react\";\r\n\r\nimport {\r\n\tGrid,\r\n\tTypography,\r\n\tButton,\r\n\tPaper,\r\n\tDialog,\r\n\twithStyles,\r\n\tAppBar,\r\n\tToolbar,\r\n\tIconButton,\r\n\tSlide\r\n} from \"@material-ui/core/\";\r\nimport CloudUploadIcon from \"@material-ui/icons/CloudUpload\";\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\nimport CreateAsset from \"./CreateAsset\";\r\nimport ImportAsset from \"./ImportAsset\";\r\n\r\nconst useStyles = theme => ({\r\n\tappBar: {\r\n\t  position: 'relative',\r\n\t},\r\n\ttitle: {\r\n\t  marginLeft: theme.spacing(2),\r\n\t  flex: 1,\r\n\t},\r\n});\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n    return <Slide direction=\"up\" ref={ref} {...props} />;\r\n  });\r\n\r\nclass AddAsset extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\r\n\t\tthis.state = {\r\n\t\t\tshowCreate:false,\r\n\t\t\tshowImport:false,\r\n\t\t};\r\n\t}\r\n\r\n\topenImport = () => {\r\n\t\tthis.setState({ showImport: true });\r\n\t}\r\n\r\n\tcloseImport = () => {\r\n\t\tthis.setState({ showImport: false });\r\n\t}\r\n\r\n\topenCreate = () => {\r\n\t\tthis.setState({ showCreate: true });\r\n\t}\r\n\r\n\tcloseCreate = () => {\r\n\t\tthis.setState({ showCreate: false });\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst { classes } = this.props;\r\n\t\treturn (\r\n\t\t\t<React.Fragment>\r\n\t\t\t\t<Paper elevation={3}>\r\n\t\t\t\t\t<Grid\r\n\t\t\t\t\t\tcontainer\r\n\t\t\t\t\t\tspacing={2}\r\n\t\t\t\t\t\tdirection=\"row\"\r\n\t\t\t\t\t\tjustify=\"flex-start\"\r\n\t\t\t\t\t\talignItems=\"center\"\r\n\t\t\t\t\t\tstyle={{\"padding\": \"10px\"}}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t\t<Typography\r\n\t\t\t\t\t\t\t\tvariant=\"h5\"\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\tAdd\r\n\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\tvariant=\"contained\"\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\twidth: \"100%\",\r\n\t\t\t\t\t\t\t\t\tbackground: \"green\",\r\n\t\t\t\t\t\t\t\t\tcolor: \"white\"\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\tonClick={this.openCreate}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\tCreate\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Grid container item direciton=\"row\" justify=\"center\" alignItems=\"center\" xs={12}>\r\n\t\t\t\t\t\t\t<hr style={{width: \"5vw\"}} />\r\n\t\t\t\t\t\t\t<Typography color=\"textSecondary\">\r\n\t\t\t\t\t\t\t\tOr\r\n\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t<hr style={{width: \"5vw\"}} />\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\tvariant=\"contained\"\r\n\t\t\t\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t\t\t\t\tstyle={{width: \"100%\"}}\r\n\t\t\t\t\t\t\t\tstartIcon={<CloudUploadIcon />}\r\n\t\t\t\t\t\t\t\tonClick={() => {this.openImport()} }\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\tImport\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</Paper>\r\n\r\n\t\t\t\t<Dialog fullScreen open={this.state.showCreate} onClose={this.closeCreate} TransitionComponent={Transition} padding={3}>\r\n\t\t\t\t\t<AppBar className={classes.appBar}>\r\n\t\t\t\t\t\t<Toolbar>\r\n\t\t\t\t\t\t\t<IconButton edge=\"start\" color=\"inherit\" onClick={this.closeCreate} aria-label=\"close\">\r\n\t\t\t\t\t\t\t\t<CloseIcon />\r\n\t\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t\t\t<Typography variant=\"h6\" className={classes.title}>\r\n\t\t\t\t\t\t\t\tCreate Asset\r\n\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t</Toolbar>\r\n\t\t\t\t\t</AppBar>\r\n\t\t\t\t\t<CreateAsset\r\n\t\t\t\t\t\tclose={this.closeCreate}\r\n\t\t\t\t\t\tgetAssetList={this.props.getAssetList}\r\n\t\t\t\t\t\tshowStatus={this.props.showStatus}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</Dialog>\r\n\r\n\t\t\t\t<ImportAsset\r\n\t\t\t\t\topen={this.state.showImport}\r\n\t\t\t\t\tclose={this.closeImport}\r\n\t\t\t\t/>\r\n\t\t\t</React.Fragment>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default withStyles(useStyles)(AddAsset);\r\n","import React from 'react';\r\n\r\nimport axios from \"axios\";\r\nimport { CSVLink } from \"react-csv\";\r\n\r\nimport {\r\n\tButton,\r\n\tPaper,\r\n\tGrid,\r\n\tTypography,\r\n\r\n} from '@material-ui/core/';\r\nimport CloudDownloadIcon from '@material-ui/icons/CloudDownload';\r\n\r\nimport { AssetCommand } from '../enums/AssetCommands.ts'\r\nimport getURL from '../../helpers/functions/GetURL';\r\nimport * as AssetConstants from \"../AssetConstants\";\r\n\r\nexport default class ExportAsset extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n\t\t\tcsvData:\"\",\r\n\t\t};\r\n\t}\r\n\r\n\tdownloadTable = () => {\r\n        axios.post(\r\n            getURL(AssetConstants.ASSETS_MAIN_PATH, AssetCommand.EXPORT_FILE),\r\n            {\r\n                'filter':{},\r\n                \"datacenter_name\":\"\",\r\n            }\r\n            ).then(response => {\r\n                console.log(response);\r\n                this.setState({ csvData: response.data.csvData });\r\n                this.csvLink.link.click();\r\n            });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Paper elevation={3}>\r\n                <Grid\r\n                    container\r\n                    spacing={2}\r\n                    direction=\"row\"\r\n                    justify=\"flex-start\"\r\n                    alignItems=\"center\"\r\n                    style={{\"padding\": \"10px\"}}\r\n                >\r\n                    <Grid item xs={12}>\r\n                        <Typography variant=\"h6\">Export</Typography>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <Typography>Download what is currently shown in the table.</Typography>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <Button\r\n                            onClick={() => {this.downloadTable()}}\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            startIcon={<CloudDownloadIcon />}\r\n                            style={{\r\n                                width: \"100%\"\r\n                            }}\r\n                        >\r\n                            Export All Data\r\n                        </Button>\r\n                    </Grid>\r\n                </Grid>\r\n            </Paper>\r\n\r\n\t\t\t<CSVLink\r\n                data={this.state.csvData}\r\n\t\t\t\tfilename={AssetConstants.ASSET_DOWNLOAD_FILE_NAME}\r\n\t\t\t\tclassName=\"hidden\"\r\n\t\t\t\tref={(r) => this.csvLink = r}\r\n\t\t\t\ttarget=\"_blank\"\r\n\t\t\t/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\n\r\nimport axios from 'axios';\r\n\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport { Button } from '@material-ui/core';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\r\n\r\nimport { AssetInput } from '../enums/AssetInputs.ts';\r\nimport { AssetCommand } from '../enums/AssetCommands.ts';\r\nimport getURL from '../../helpers/functions/GetURL';\r\nimport * as AssetConstants from \"../AssetConstants\";\r\nimport DetailAsset from \"./DetailsAsset\";\r\nimport FilterAsset from './FilterAsset';\r\nimport stableSort from \"../../helpers/functions/StableSort\";\r\nimport getComparator from \"../../helpers/functions/GetComparator\";\r\nimport { Privilege } from \"../../enums/privilegeTypes.ts\";\r\nimport AddAsset from \"./AddAsset\";\r\nimport ExportAsset from \"./ExportAsset\";\r\nimport * as Constants from '../../Constants';\r\nimport StatusDisplay from \"../../helpers/StatusDisplay\";\r\n\r\n\r\nconst useStyles = theme => ({\r\n\tstyledTableRow: {\r\n\t},\r\n\ttableCellHead: {\r\n\t},\r\n\tstyledTableCell:{\r\n\t\tfontSize: 14,\r\n\t},\r\n\ttable: {\r\n\t\tminWidth: 700,\r\n\t},\r\n  \tpaper: {\r\n\t\twidth: '100%',\r\n\t\tmarginBottom: theme.spacing(2),\r\n\t},\r\n\tvisuallyHidden: {\r\n\t\tborder: 0,\r\n\t\tclip: 'rect(0 0 0 0)',\r\n\t\theight: 1,\r\n\t\tmargin: -1,\r\n\t\toverflow: 'hidden',\r\n\t\tpadding: 0,\r\n\t\tposition: 'absolute',\r\n\t\ttop: 20,\r\n\t\twidth: 1,\r\n\t  },\r\n});\r\n\r\nconst emptySearch = {\r\n    \"filter\": {\r\n            \"vendor\":null,\r\n            \"model_number\":null,\r\n            \"height\":null,\r\n            \"model\":null,\r\n            \"hostname\":null,\r\n            \"rack\":null,\r\n            \"rack_position\":null,\r\n            \"username\":null,\r\n            \"display_name\":null,\r\n            \"email\":null,\r\n            \"privilege\":null,\r\n            \"model\":null,\r\n            \"hostname\":null,\r\n            \"starting_rack_letter\":null,\r\n            \"ending_rack_letter\":null,\r\n            \"starting_rack_number\":null,\r\n            \"ending_rack_number\":null,\r\n            \"rack\":null,\r\n            \"rack_position\":null\r\n        },\r\n    \"datacenter_name\":\"\",\r\n}\r\n\r\nfunction createData(model, hostname, datacenter_name, rack, owner, asset_number) {\r\n  return { model, hostname, datacenter_name, rack, owner, asset_number };\r\n}\r\n\r\nconst headCells = [\r\n\t{ id: 'datacenter_name', numeric: false, label:\"Datacenter\", align:\"left\" },\r\n\t{ id: 'hostname', numeric: false, label:\"Hostname\", align:\"left\" },\r\n\t{ id: 'model', numeric: false, label:\"Model\", align:\"left\" },\r\n\t{ id: 'rack', numeric: false, label:\"Rack\", align:\"left\" },\r\n\t{ id: 'owner', numeric: false, label:\"Owner\", align:\"left\" },\r\n\t{ id: 'asset_number', numeric: false, label:\"Asset Number\", align:\"right\" },\r\n];\r\n\r\n\r\nclass TableAsset extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n\t\tallAssets:[],\r\n\t\ttableItems:[],\r\n\r\n\t\tdetailStatusOpen:false,\r\n\t\tdetailStatusSeverity:'',\r\n\t\tdetailStatusMessage:'',\r\n\r\n\t\tdeleteAssetRack:'',\r\n\t\tdeleteAssetrack_position:'',\r\n\r\n\t\tshowDetailedView: false,\r\n\t\tdetailViewLoading:false,\r\n\t\tdetailAsset:-1,\r\n\t\tdetailHostname:\"\",\r\n\t\toriginalRack:'',\r\n\t\toriginalrack_position:'',\r\n\r\n\t\torder:\"asc\",\r\n\t\torderBy:\"datacenter\",\r\n\r\n\t\tshowStatus:false,\r\n\t\tstatusSeverity:\"\",\r\n\t\tstatusMessage:\"\",\r\n    };\r\n  }\r\n\r\n  \tcomponentDidMount() {\r\n\t\taxios.post(\r\n            getURL(Constants.ASSETS_MAIN_PATH, AssetCommand.search),emptySearch).then(\r\n            response => {\r\n\t\t\t\tconsole.log(response);\r\n\t\t\t\tvar items = [];\r\n\r\n\t\t\t\tresponse.data.instances.map(asset => {\r\n\t\t\t\t\titems.push(createData(asset.model, asset.hostname, asset.datacenter_name, asset.rack+\" U\"+asset.rack_position, asset.owner, asset.asset_number));\r\n\t\t\t\t});\r\n\t\t\t\tthis.setState({ allAssets: response.data.instances, tableItems:items });\r\n\t\t\t});\r\n\t}\r\n\r\n\tdeleteAsset = () => {\r\n\t\tvar body = {};\r\n\t\tbody[AssetInput.RACK] = this.state.originalRack;\r\n\t\tbody[AssetInput.RACK_U] = this.state.originalrack_position;\r\n\r\n\t\taxios.post(\r\n\t\t\tgetURL(AssetConstants.ASSETS_MAIN_PATH, AssetCommand.delete), body\r\n\t\t\t).then(response => {\r\n\t\t\t\tif (response.data.message === AssetConstants.SUCCESS_TOKEN) {\r\n\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\tshowStatus: true,\r\n\t\t\t\t\t\tstatusMessage: \"Successfully deleted asset\",\r\n\t\t\t\t\t\tstatusSeverity:AssetConstants.SUCCESS_TOKEN,\r\n\t\t\t\t\t\toriginalRack:'',\r\n\t\t\t\t\t\toriginalrack_position:'',\r\n\t\t\t\t\t\tshowDetailedView:false\r\n\t\t\t\t\t});\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.setState({ showStatus: true, statusMessage: response.data.message, statusSeverity:AssetConstants.ERROR_TOKEN })\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t}\r\n\r\n\tcloseDetailedView = () => {\r\n\t\tthis.setState({ showDetailedView: false })\r\n\t}\r\n\r\n\tcloseShowStatus = () => {\r\n\t\tthis.setState({ showStatus: false })\r\n\t}\r\n\r\n\tcreateSortHandler = (event, property) => {\r\n\t\tconst isAsc = this.state.orderBy === property && this.state.order === 'asc';\r\n\t\tthis.setState({ order: isAsc ? 'desc' : 'asc', orderBy:property });\r\n\t}\r\n\r\n\topenDetailedView = (event, asset) => {\r\n\t\tvar dAsset = {};\r\n\t\tthis.state.allAssets.map(currAsset => {\r\n\t\t\tif (currAsset.asset_number === asset.asset_number ) {\r\n\t\t\t\tObject.assign(dAsset, currAsset);\r\n\t\t\t}\r\n\t\t})\r\n\t\tthis.setState({ detailAsset: dAsset, showDetailedView: true });\r\n\t}\r\n\r\n\tupdateItems = (assets) => {\r\n\t\tvar items = [];\r\n\t\tassets.map(asset => {\r\n\t\t\titems.push(createData(asset.model, asset.hostname, asset.datacenter_name, asset.rack+\" U\"+asset.rack_position, asset.owner, asset.asset_number));\r\n\t\t});\r\n\r\n\t\tthis.setState({ tableItems : items });\r\n\t}\r\n\r\n\tgetAssetList = () => {\r\n        axios.post(\r\n            getURL(Constants.ASSETS_MAIN_PATH, AssetCommand.search),emptySearch).then(\r\n            response => { console.log(\"got list\"); console.log(response); this.setState({ allAssets: response.data.instances }); });\r\n\t}\r\n\r\n\tshowStatusBar = (status, severity, message) => {\r\n\t\tthis.setState({ showStatus:status, statusSeverity:severity, statusMessage:message });\r\n\t}\r\n\r\n\tcloseShowStatus = () => {\r\n\t\tthis.setState({ showStatus:false, statusSeverity:\"\", statusMessage:\"\" });\r\n\t}\r\n\r\n\trender() {\r\n\tconst { classes } = this.props;\r\n\r\n\treturn (\r\n\t\t<React.Fragment>\r\n\t\t\t<Grid container spacing={3}>\r\n\t\t\t\t<Grid item xs={12} sm={6} md={4} lg={3}>\r\n\t\t\t\t\t{(this.props.privilege === Privilege.ADMIN) ? <AddAsset showStatus={this.showStatusBar} getAssetList={this.getAssetList} /> : null}\r\n\t\t\t\t</Grid>\r\n\t\t\t\t<Grid item xs={12} sm={6} md={4} lg={6}>\r\n\t\t\t\t\t<FilterAsset\r\n\t\t\t\t\t\tupdateItems={this.updateItems}\r\n\t\t\t\t\t\tgetAssetList={this.getAssetList}\r\n\t\t\t\t\t\tallAssets={this.state.allAssets}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</Grid>\r\n\t\t\t\t<Grid item xs={12} sm={6} md={4} lg={3}>\r\n\t\t\t\t\t{(this.props.privilege === Privilege.ADMIN) ? <ExportAsset items={this.state.tableItems} />:null}\r\n\t\t\t\t</Grid>\r\n\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t<TableContainer component={Paper}>\r\n\t\t\t\t\t\t<Table className={classes.table} aria-label=\"customized table\">\r\n\t\t\t\t\t\t\t<TableHead>\r\n\t\t\t\t\t\t\t<TableRow className={classes.styledTableRow}>\r\n\t\t\t\t\t\t\t{headCells.map(headCell => (\r\n\t\t\t\t\t\t\t\t<TableCell\r\n\t\t\t\t\t\t\t\t\tclassName={classes.tableCellHead}\r\n\t\t\t\t\t\t\t\t\tkey={headCell.id}\r\n\t\t\t\t\t\t\t\t\talign={headCell.align}\r\n\t\t\t\t\t\t\t\t\tsortDirection={this.state.orderBy === headCell.id ? this.state.order : false}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t<TableSortLabel\r\n\t\t\t\t\t\t\t\t\t\tactive={this.state.orderBy === headCell.id}\r\n\t\t\t\t\t\t\t\t\t\tdirection={this.state.orderBy === headCell.id ? this.state.order : 'asc'}\r\n\t\t\t\t\t\t\t\t\t\tonClick={(event) => {this.createSortHandler(event, headCell.id)} }\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t<span style={{fontWeight: \"bold\"}}>{headCell.label}</span>\r\n\t\t\t\t\t\t\t\t\t{this.state.orderBy === headCell.id ? (\r\n\t\t\t\t\t\t\t\t\t\t<span className={classes.visuallyHidden}>\r\n\t\t\t\t\t\t\t\t\t\t\t{this.state.order === 'desc' ? 'sorted descending' : 'sorted ascending'}\r\n\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t) : null}\r\n\t\t\t\t\t\t\t\t\t</TableSortLabel>\r\n\t\t\t\t\t\t\t\t</TableCell>\r\n\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t\t<TableCell align=\"left\" className={classes.tableCellHead}>{\"\"}</TableCell>\r\n\t\t\t\t\t\t\t</TableRow>\r\n\t\t\t\t\t\t\t</TableHead>\r\n\t\t\t\t\t\t\t<TableBody>\r\n\t\t\t\t\t\t\t\t{stableSort(this.state.tableItems, getComparator(this.state.order, this.state.orderBy))\r\n\t\t\t\t\t\t\t\t\t//.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n\t\t\t\t\t\t\t\t\t.map((row, index) => {\r\n\t\t\t\t\t\t\t\t\t\tconst labelId = `enhanced-table-checkbox-${index}`;\r\n\r\n\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t<TableRow\r\n\t\t\t\t\t\t\t\t\t\t\t\thover\r\n\t\t\t\t\t\t\t\t\t\t\t\ttabIndex={-1}\r\n\t\t\t\t\t\t\t\t\t\t\t\tkey={row.assetNum}\r\n\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<TableCell component=\"th\" id={labelId} scope=\"row\">{row.datacenter_name}</TableCell>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<TableCell align=\"left\">{row.hostname}</TableCell>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<TableCell align=\"left\">{row.model}</TableCell>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<TableCell align=\"left\">{row.rack}</TableCell>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<TableCell align=\"left\">{row.owner}</TableCell>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<TableCell align=\"right\">{row.asset_number}</TableCell>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<TableCell align=\"center\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tvariant=\"contained\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={(event) => {this.openDetailedView(event, row)}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tMore Details\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</TableCell>\r\n\t\t\t\t\t\t\t\t\t\t\t</TableRow>\r\n\t\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t</TableBody>\r\n\t\t\t\t\t\t</Table>\r\n\t\t\t\t\t</TableContainer>\r\n\t\t\t\t</Grid>\r\n\t\t\t</Grid>\r\n\t\t\t{this.state.showDetailedView ?\r\n\t\t<DetailAsset\r\n\t\t\topen={this.state.showDetailedView}\r\n\t\t\tclose={this.closeDetailedView}\r\n\t\t\tsearch={this.search}\r\n\t\t\tdisabled={this.props.privilege===Privilege.USER /* && username !== row.owner*/}\r\n\t\t\tasset={this.state.detailAsset}\r\n\t\t\tsearch={this.getAssetList}\r\n\t\t/>:null}\r\n\t\t<StatusDisplay\r\n\t\t\topen={this.state.showStatus}\r\n\t\t\tseverity={this.state.statusSeverity}\r\n\t\t\tcloseStatus={this.closeShowStatus}\r\n\t\t\tmessage={this.state.statusMessage}\r\n\t\t/>\r\n\t\t</React.Fragment>\r\n\t);\r\n  }\r\n}\r\n\r\nexport default withStyles(useStyles)(TableAsset);\r\n","export enum DatacenterCommand {\r\n    GET_ALL_DATACENTERS = \"all/\",\r\n    CREATE = \"create/\",\r\n    EDIT = \"edit/\",\r\n    DELETE = \"delete/\",\r\n}\r\n","import descendingComparator from \"./DescendingComparator\";\r\n\r\nexport default function getComparator(order, orderBy) {\r\n    return order === 'desc'\r\n      ? (a, b) => descendingComparator(a, b, orderBy)\r\n      : (a, b) => -descendingComparator(a, b, orderBy);\r\n  }\r\n","export default function stableSort(array, comparator) {\r\n    const stabilizedThis = array.map((el, index) => [el, index]);\r\n    stabilizedThis.sort((a, b) => {\r\n      const order = comparator(a[0], b[0]);\r\n      if (order !== 0) return order;\r\n      return a[1] - b[1];\r\n    });\r\n    return stabilizedThis.map(el => el[0]);\r\n  }\r\n","import React from 'react';\r\n\r\nexport default class ErrorBoundary extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = { hasError: false };\r\n    }\r\n\r\n    static getDerivedStateFromError(error) {\r\n      // Update state so the next render will show the fallback UI.\r\n      return \"An unforseen error occurred. Please refresh the page and try again later.\";\r\n    }\r\n\r\n    componentDidCatch(error, errorInfo) {\r\n      // You can also log the error to an error reporting service\r\n      //logErrorToMyService(error, errorInfo);\r\n    }\r\n\r\n    render() {\r\n      if (this.state.hasError) {\r\n        // You can render any custom fallback UI\r\n        return <h1>Something went wrong.</h1>;\r\n      }\r\n\r\n      return this.props.children;\r\n    }\r\n}\r\n","import React from 'react';\r\n\r\nimport {\r\n    Grid,\r\n    Typography,\r\n } from '@material-ui/core/';\r\n\r\nimport { Privilege } from '../../enums/privilegeTypes.ts'\r\nimport TableAsset from '../helpers/TableAssets';\r\nimport ErrorBoundary from '../../errors/ErrorBoundry';\r\n\r\nexport default class AssetsView extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            statusSeverity:'',\r\n            statusMessage:'',\r\n            showStatus:false,\r\n        };\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <ErrorBoundary>\r\n                    <Grid\r\n                        container\r\n                        spacing={5}\r\n                        direction=\"row\"\r\n                        justify=\"flex-start\"\r\n                        alignItems=\"center\"\r\n                        style={{margin: \"0px\", maxWidth: \"95vw\"}}\r\n                    >\r\n                        <Grid item xs={12}>\r\n                            <Typography variant=\"h4\">\r\n                                Assets\r\n                            </Typography>\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <TableAsset\r\n                                privilege={this.props.privilege}\r\n                            />\r\n                        </Grid>\r\n                    </Grid>\r\n                </ErrorBoundary>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React from \"react\";\r\n\r\nimport axios from \"axios\";\r\n\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { Button, InputLabel, Select, MenuItem } from '@material-ui/core';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Alert from '@material-ui/lab/Alert';\r\n\r\n\r\nimport * as Constants from \"../../Constants\";\r\nimport { DatacenterCommand } from \"../enums/DatacenterCommands\";\r\nimport getURL from \"../../helpers/functions/GetURL\";\r\n\r\nconst useStyles = theme => ({\r\n    root: {\r\n      width: '100%',\r\n    },\r\n    modal: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    paper: {\r\n        backgroundColor: theme.palette.background.paper,\r\n        border: '2px solid #000',\r\n        boxShadow: theme.shadows[5],\r\n        padding: theme.spacing(2, 4, 3),\r\n    },\r\n  });\r\n\r\nclass CreateDatacenter extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            showCreate:false,\r\n            datacenterName:\"\",\r\n            datacenterAbbreviation:\"\",\r\n            showStatus:false,\r\n            statusSeverity:\"\",\r\n            statusMessage:\"\",\r\n        };\r\n    }\r\n\r\n    generateCreateJSON = () => {\r\n        return {\r\n            \"abbreviation\" : this.state.datacenterAbbreviation,\r\n            \"datacenter_name\": this.state.datacenterName\r\n        }\r\n    }\r\n\r\n    createDatacenter = () => {\r\n        axios.post(\r\n            getURL(Constants.DATACENTERS_MAIN_PATH, DatacenterCommand.CREATE), this.generateCreateJSON()).then(\r\n            response => {\r\n                console.log(response);\r\n                if (response.data.message === \"success\") {\r\n                    this.setState({\r\n                        showCreate: false,\r\n                        datacenterName:\"\",\r\n                        datacenterAbbreviation:\"\",\r\n                    }, () => this.props.search());\r\n                } else {\r\n                    this.setState({\r\n                        showStatus:true,\r\n                        statusSeverity:\"error\",\r\n                        statusMessage:response.data.message,\r\n                    })\r\n                }\r\n            });\r\n    }\r\n\r\n    updateDatacenterName = (event) => {\r\n        this.setState({ datacenterName: event.target.value });\r\n    }\r\n\r\n    updateDatacenterAbbrevation = (event) => {\r\n        this.setState({ datacenterAbbreviation: this.getAbbreviation(event.target.value) });\r\n    }\r\n\r\n    getAbbreviation = (val) => {\r\n        if (val.length > 6) {\r\n            return val.substring(0,7);\r\n        }\r\n\r\n        return val;\r\n    }\r\n\r\n    showCreate = () => {\r\n        this.setState({ showCreate: true });\r\n    }\r\n\r\n    closeCreate = () => {\r\n        this.setState({\r\n            showCreate: false,\r\n            datacenterName:\"\",\r\n            datacenterAbbreviation:\"\",\r\n         });\r\n    }\r\n\r\n    closeStatus = () => {\r\n        this.setState({ showStatus: false, statusSeverity:\"\", statusMessage:\"\", });\r\n    }\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <Grid item xs={3}>\r\n                <InputLabel id=\"datacenter-select-label\">Select Datacenter</InputLabel>\r\n            <Select\r\n                name='datacenter_name'\r\n                id=\"datacenter-select\"\r\n                value={this.props.selectedDatacenter}\r\n                onChange={this.props.selectDatacenter}\r\n                style={{ width: \"100%\" }}\r\n            >\r\n                {this.props.datacenterList.map(value => {\r\n                    return (<MenuItem value={value}>{value[\"name\"]}</MenuItem>);\r\n                })}\r\n            </Select>\r\n                </Grid>\r\n\r\n                <Grid item xs={3}>\r\n                <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                onClick={() => {this.showCreate()} }\r\n            >\r\n                Create New Datacenter\r\n            </Button>\r\n                </Grid>\r\n\r\n\r\n            <Modal\r\n                aria-labelledby=\"transition-modal-title\"\r\n                aria-describedby=\"transition-modal-description\"\r\n                className={classes.modal}\r\n                open={this.state.showCreate}\r\n                onClose={this.closeCreate}\r\n                closeAfterTransition\r\n                BackdropComponent={Backdrop}\r\n                scroll=\"body\"\r\n                BackdropProps={{\r\n                    timeout: 500,\r\n                }}\r\n            >\r\n                <Fade in={this.state.showCreate}>\r\n                    <div className={classes.paper}>\r\n                        <Grid container spacing={3}>\r\n                            <Grid item xs={2}>\r\n                                <Typography>Datcenter Name:</Typography>\r\n                            </Grid>\r\n                            <Grid item xs={9}>\r\n                                <TextField\r\n                                    id=\"input-rack\"\r\n                                    variant=\"outlined\"\r\n                                    label={\"datacenter-name\"}\r\n                                    name={\"datacenter-name\"}\r\n                                    onChange={this.updateDatacenterName}\r\n                                    required\r\n                                    fullWidth\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={2}>\r\n                                <Typography>Datcenter Abbreviation:</Typography>\r\n                            </Grid>\r\n                            <Grid item xs={9}>\r\n                                <Tooltip placement=\"top\" title={\"Max 6 characters\"}>\r\n                                    <TextField\r\n                                        id=\"input-rack\"\r\n                                        variant=\"outlined\"\r\n                                        label={\"datacenter-abbreviation\"}\r\n                                        name={\"datacenter-abbreviation\"}\r\n                                        onChange={this.updateDatacenterAbbrevation}\r\n                                        value={this.state.datacenterAbbreviation}\r\n                                        required\r\n                                        fullWidth\r\n                                    />\r\n                                </Tooltip>\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                            <Button\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                type=\"submit\"\r\n                                disabled={!(this.state.datacenterAbbreviation && this.state.datacenterName)}\r\n                                onClick={() => { this.createDatacenter() }}\r\n                            >\r\n                                Create Datacenter\r\n                            </Button>\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                                {this.state.showStatus ? <Alert severity=\"error\" onClose={() => { this.closeStatus() }}>{this.state.statusMessage}</Alert> : null}\r\n                            </Grid>\r\n                        </Grid>\r\n                    </div>\r\n                </Fade>\r\n            </Modal>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withStyles(useStyles)(CreateDatacenter);\r\n","import React from \"react\";\r\n\r\nimport axios from \"axios\";\r\n\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from '@material-ui/core/Button';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport * as Constants from \"../../Constants\";\r\nimport { DatacenterCommand } from \"../enums/DatacenterCommands\";\r\nimport getURL from \"../../helpers/functions/GetURL\";\r\n\r\nconst useStyles = theme => ({\r\n    root: {\r\n      width: '100%',\r\n    },\r\n    modal: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    paper: {\r\n        backgroundColor: theme.palette.background.paper,\r\n        border: '2px solid #000',\r\n        boxShadow: theme.shadows[5],\r\n        padding: theme.spacing(2, 4, 3),\r\n    },\r\n  });\r\n\r\nclass EditDatacenter extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            datacenterName:props.dcName,\r\n            datacenterAbbreviation:props.dcAbbrev,\r\n\t\t};\r\n\r\n\t}\r\n\r\n    generateEditJSON = () => {\r\n\t\tconsole.log(\"generating edit\")\r\n\t\tconsole.log(this.props.dcName);\r\n        return {\r\n\t\t\t\"nameOriginal\": this.props.dcName,\r\n            \"abbreviation\" : this.state.datacenterAbbreviation||this.props.dcAbbrev,\r\n            \"datacenter_name\": this.state.datacenterName||this.props.dcName,\r\n        }\r\n    }\r\n\r\n    editDatacenter = () => {\r\n\t\tconsole.log(\"sending\");\r\n\t\tconsole.log(this.state.datacenterName);\r\n        axios.post(\r\n            getURL(Constants.DATACENTERS_MAIN_PATH, DatacenterCommand.EDIT), this.generateEditJSON()).then(\r\n            response => {\r\n                console.log(response);\r\n                if (response.status === Constants.HTTPS_STATUS_OK) {\r\n                    this.setState({\r\n                        datacenterName:\"\",\r\n                        datacenterAbbreviation:\"\",\r\n                    }, () => {this.props.search(); this.props.close() } );\r\n                } else {\r\n                    this.setState({\r\n                    })\r\n                }\r\n            });\r\n    }\r\n\r\n    updateDatacenterName = (event) => {\r\n        this.setState({ datacenterName: event.target.value });\r\n    }\r\n\r\n    updateDatacenterAbbrevation = (event) => {\r\n        this.setState({ datacenterAbbreviation: this.getAbbreviation(event.target.value) });\r\n    }\r\n\r\n    getAbbreviation = (val) => {\r\n        if (val.length > 6) {\r\n            return val.substring(0,7);\r\n        }\r\n\r\n        return val;\r\n\t}\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n\r\n        return (\r\n            <React.Fragment>\r\n            <Modal\r\n                aria-labelledby=\"transition-modal-title\"\r\n                aria-describedby=\"transition-modal-description\"\r\n                className={classes.modal}\r\n                open={this.props.show}\r\n                onClose={this.props.close}\r\n                closeAfterTransition\r\n                BackdropComponent={Backdrop}\r\n                scroll=\"body\"\r\n                BackdropProps={{\r\n                    timeout: 500,\r\n                }}\r\n            >\r\n                <Fade in={this.props.show}>\r\n                    <div className={classes.paper}>\r\n                        <Grid container spacing={3}>\r\n                            <Grid item xs={2}>\r\n                                <Typography>Datcenter Name:</Typography>\r\n                            </Grid>\r\n                            <Grid item xs={9}>\r\n                                <TextField\r\n                                    id=\"input-rack\"\r\n                                    variant=\"outlined\"\r\n                                    label={\"datacenter-name\"}\r\n                                    name={\"datacenter-name\"}\r\n\t\t\t\t\t\t\t\t\tonChange={this.updateDatacenterName}\r\n\t\t\t\t\t\t\t\t\tvalue={this.state.datacenterName||this.props.dcName}\r\n                                    required\r\n\t\t\t\t\t\t\t\t\tfullWidth\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={2}>\r\n                                <Typography>Datcenter Abbreviation:</Typography>\r\n                            </Grid>\r\n                            <Grid item xs={9}>\r\n                                <Tooltip placement=\"top\" title={\"Max 6 characters\"}>\r\n                                    <TextField\r\n                                        id=\"input-rack\"\r\n                                        variant=\"outlined\"\r\n                                        label={\"datacenter-abbreviation\"}\r\n                                        name={\"datacenter-abbreviation\"}\r\n                                        onChange={this.updateDatacenterAbbrevation}\r\n\t\t\t\t\t\t\t\t\t\tvalue={this.state.datacenterAbbreviation||this.props.dcAbbrev}\r\n                                        required\r\n\t\t\t\t\t\t\t\t\t\tfullWidth\r\n                                    />\r\n                                </Tooltip>\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\tvariant=\"contained\"\r\n\t\t\t\t\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t\t\t\t\t\ttype=\"submit\"\r\n\t\t\t\t\t\t\t\t\tonClick={() => { this.editDatacenter() }}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\tSave Edits\r\n\t\t\t\t\t\t\t\t</Button>\r\n                            </Grid>\r\n\t\t\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\tvariant=\"contained\"\r\n\t\t\t\t\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t\t\t\t\t\tonClick={this.props.close}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\tCancel\r\n\t\t\t\t\t\t\t\t</Button>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </div>\r\n                </Fade>\r\n            </Modal>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withStyles(useStyles)(EditDatacenter);\r\n","import React from 'react';\r\n\r\nimport { fade, withStyles, SvgIcon, Collapse, Grid, Typography } from '@material-ui/core';\r\nimport { TreeView, TreeItem } from '@material-ui/lab';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport \"../stylesheets/RackStyles.css\";\r\n\r\nimport ErrorBoundray from '../../errors/ErrorBoundry';\r\nimport { useSpring, animated } from 'react-spring/web.cjs';\r\n\r\nfunction MinusSquare(props) {\r\n    return (\r\n      <SvgIcon fontSize=\"inherit\" {...props}>\r\n        {/* tslint:disable-next-line: max-line-length */}\r\n        <path d=\"M22.047 22.074v0 0-20.147 0h-20.12v0 20.147 0h20.12zM22.047 24h-20.12q-.803 0-1.365-.562t-.562-1.365v-20.147q0-.776.562-1.351t1.365-.575h20.147q.776 0 1.351.575t.575 1.351v20.147q0 .803-.575 1.365t-1.378.562v0zM17.873 11.023h-11.826q-.375 0-.669.281t-.294.682v0q0 .401.294 .682t.669.281h11.826q.375 0 .669-.281t.294-.682v0q0-.401-.294-.682t-.669-.281z\" />\r\n      </SvgIcon>\r\n    );\r\n  }\r\n\r\n  function PlusSquare(props) {\r\n    return (\r\n      <SvgIcon fontSize=\"inherit\" {...props}>\r\n        {/* tslint:disable-next-line: max-line-length */}\r\n        <path d=\"M22.047 22.074v0 0-20.147 0h-20.12v0 20.147 0h20.12zM22.047 24h-20.12q-.803 0-1.365-.562t-.562-1.365v-20.147q0-.776.562-1.351t1.365-.575h20.147q.776 0 1.351.575t.575 1.351v20.147q0 .803-.575 1.365t-1.378.562v0zM17.873 12.977h-4.923v4.896q0 .401-.281.682t-.682.281v0q-.375 0-.669-.281t-.294-.682v-4.896h-4.923q-.401 0-.682-.294t-.281-.669v0q0-.401.281-.682t.682-.281h4.923v-4.896q0-.401.294-.682t.669-.281v0q.401 0 .682.281t.281.682v4.896h4.923q.401 0 .682.281t.281.682v0q0 .375-.281.669t-.682.294z\" />\r\n      </SvgIcon>\r\n    );\r\n  }\r\n\r\n  function CloseSquare(props) {\r\n    return (\r\n      <SvgIcon className=\"close\" fontSize=\"inherit\" {...props}>\r\n        {/* tslint:disable-next-line: max-line-length */}\r\n        <path d=\"M17.485 17.512q-.281.281-.682.281t-.696-.268l-4.12-4.147-4.12 4.147q-.294.268-.696.268t-.682-.281-.281-.682.294-.669l4.12-4.147-4.12-4.147q-.294-.268-.294-.669t.281-.682.682-.281.696 .268l4.12 4.147 4.12-4.147q.294-.268.696-.268t.682.281 .281.669-.294.682l-4.12 4.147 4.12 4.147q.294.268 .294.669t-.281.682zM22.047 22.074v0 0-20.147 0h-20.12v0 20.147 0h20.12zM22.047 24h-20.12q-.803 0-1.365-.562t-.562-1.365v-20.147q0-.776.562-1.351t1.365-.575h20.147q.776 0 1.351.575t.575 1.351v20.147q0 .803-.575 1.365t-1.378.562v0z\" />\r\n      </SvgIcon>\r\n    );\r\n  }\r\n\r\nfunction TransitionComponent(props) {\r\n    const style = useSpring({\r\n      from: { opacity: 0, transform: 'translate3d(20px,0,0)' },\r\n      to: { opacity: props.in ? 1 : 0, transform: `translate3d(${props.in ? 0 : 20}px,0,0)` },\r\n    });\r\n\r\n    return (\r\n      <animated.div style={style}>\r\n        <Collapse {...props} />\r\n      </animated.div>\r\n    );\r\n  }\r\n\r\n  TransitionComponent.propTypes = {\r\n    /**\r\n     * Show the component; triggers the enter or exit states\r\n     */\r\n    in: PropTypes.bool,\r\n  };\r\n\r\nconst StyledTreeItem = withStyles(theme => ({\r\n    iconContainer: {\r\n      '& .close': {\r\n        opacity: 0.3,\r\n      },\r\n    },\r\n    group: {\r\n      marginLeft: 12,\r\n      paddingLeft: 12,\r\n      borderLeft: `1px dashed ${fade(theme.palette.text.primary, 0.4)}`,\r\n    },\r\n  }))(props => <TreeItem {...props} TransitionComponent={TransitionComponent} />);\r\n\r\n\r\nconst useStyles = theme => ({\r\n    root: {\r\n      width: '100%',\r\n    },\r\n    heading: {\r\n      fontSize: theme.typography.pxToRem(15),\r\n      fontWeight: theme.typography.fontWeightRegular,\r\n    },\r\n    modal: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n      },\r\n      paper: {\r\n        backgroundColor: theme.palette.background.paper,\r\n        border: '2px solid #000',\r\n        boxShadow: theme.shadows[5],\r\n        padding: theme.spacing(2, 4, 3),\r\n      },\r\n  });\r\n\r\nclass RacksView extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            items: [],\r\n            firstRack: 'A1',\r\n            secondRack: 'A1',\r\n\r\n            showStatus: false,\r\n            statusMessage: '',\r\n            statusSeverity: 'info',\r\n\r\n            showConfirmationBox: false,\r\n\r\n            racksList: [],\r\n            racks: {}\r\n        };\r\n    }\r\n\r\n    handleFormat = (event, newFormats) => {\r\n        if (newFormats.length) {\r\n            this.setState({formats: newFormats});\r\n        }\r\n    };\r\n\r\n    closeShowStatus = () => {\r\n        this.setState({ showStatus: false })\r\n    }\r\n\r\n    closeConfirmationBox = () => {\r\n        this.setState({ showConfirmationBox: false });\r\n    }\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n        return (\r\n            <ErrorBoundray>\r\n                <Grid\r\n                    container\r\n                    spacing={5}\r\n                    direction=\"row\"\r\n                    justify=\"center\"\r\n                    alignItems=\"center\"f\r\n                    style={{margin: \"0px\", maxWidth: \"95vw\"}}\r\n                >\r\n\r\n                    <Grid item xs={12}>\r\n                        <Typography variant=\"h5\">Racks</Typography>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <TreeView\r\n                            className={classes.root}\r\n                            defaultExpanded={['1']}\r\n                            defaultCollapseIcon={<MinusSquare />}\r\n                            defaultExpandIcon={<PlusSquare />}\r\n                            defaultEndIcon={<CloseSquare />}\r\n                        >\r\n                            {Object.keys(this.props.racks).sort().map(key => {\r\n                                return (<StyledTreeItem nodeId={key} label={key}>\r\n                                        {this.props.racks[key].map(value => {\r\n                                            return (<StyledTreeItem nodeId={value} label={value} />);\r\n                                        })}\r\n                                    </StyledTreeItem>);\r\n                            })}\r\n                        </TreeView>\r\n                    </Grid>\r\n\r\n\r\n\r\n                </Grid>\r\n\r\n            </ErrorBoundray>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withStyles(useStyles)(RacksView);\r\n","export enum RackCommand {\r\n    GET_ALL_RACKS = \"all\",\r\n    CREATE_RACKS = \"create\",\r\n    DELETE_RACKS = \"delete\",\r\n    GET_RACK_DETAILS = \"details\"\r\n}\r\n","import React from \"react\";\r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { Grid, Paper, TextField, Modal, Backdrop, Fade } from '@material-ui/core';\r\nimport { ToggleButton, ToggleButtonGroup } from '@material-ui/lab';\r\n\r\nimport { RackCommand } from \"../../enums/RackCommands.ts\";\r\n\r\n\r\n\r\nexport default function ShowDatacenters(props) {\r\n    const [rackType, setRackType] = React.useState('single');\r\n    const [rack1, setRack1] = React.useState('A1');\r\n    const [rack2, setRack2] = React.useState('A1');\r\n\r\n    const handleRackType = (event, newType) => {\r\n        setRackType(newType);\r\n      };\r\n\r\n      const updateRack = (event) => {\r\n        setRack1(event.target.value);\r\n        setRack2(event.target.value);\r\n      }\r\n\r\n      const updateStart = (event) => {\r\n        setRack1(event.target.value);\r\n      }\r\n\r\n      const updateEnd = (event) => {\r\n        setRack2(event.target.value);\r\n      }\r\n\r\n    const createRacks = () => {\r\n        props.updateRacks(RackCommand.CREATE_RACKS, rack1, rack2);\r\n    }\r\n\r\n    const deleteRacks = () => {\r\n        props.updateRacks(RackCommand.DELETE_RACKS, rack1, rack2);\r\n    }\r\n\r\n    const viewRacks = () => {\r\n        props.updateRacks(RackCommand.GET_RACK_DETAILS, rack1, rack2);\r\n    }\r\n\r\n    try {\r\n        if (props.datacentersList.length == 0) {\r\n            return <Typography>There are currently no datacenters being managed.</Typography>\r\n        } else {\r\n            return (<div>{\r\n                <Grid container spacing={3}>\r\n                                <Grid item xs={3}>\r\n                                    <Paper elevation={3}>\r\n                                    <Grid\r\n                                        container\r\n                                        spacing={2}\r\n                                        direction=\"row\"\r\n                                        justify=\"flex-start\"\r\n                                        alignItems=\"center\"\r\n                                        style={{\"padding\": \"10px\"}}\r\n                                    >\r\n                                        <Grid item xs={12}>\r\n                                            <Typography variant=\"h6\">\r\n                                                Manage\r\n                                            </Typography>\r\n                                        </Grid>\r\n                                        <Grid item xs={12}>\r\n                                            <Button\r\n                                                variant=\"contained\"\r\n                                                color=\"primary\"\r\n                                                style={{ width: \"100%\" }}\r\n                                                onClick={(event) => {props.editDatacenter(event, props.selectedDatacenter.name, props.selectedDatacenter.abbreviation)} }\r\n                                            >\r\n                                                Edit\r\n                                            </Button>\r\n                                        </Grid>\r\n                                        <Grid container item direciton=\"row\" justify=\"center\" alignItems=\"center\" xs={12}>\r\n                                            <hr style={{width: \"5vw\"}} />\r\n                                            <Typography color=\"textSecondary\">\r\n                                                Or\r\n                                            </Typography>\r\n                                            <hr style={{width: \"5vw\"}} />\r\n                                        </Grid>\r\n                                        <Grid item xs={12}>\r\n                                            <Button\r\n                                                variant=\"contained\"\r\n                                                color=\"secondary\"\r\n                                                style={{ width: \"100%\" }}\r\n                                                onClick={(event) => {props.openConfirmationBox(event, props.selectedDatacenter.name)} }\r\n                                            >\r\n                                                Delete\r\n                                            </Button>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                    </Paper>\r\n                                </Grid>\r\n\r\n                                <Grid item xs={3}>\r\n                                <Paper elevation={3}>\r\n                                    <Grid\r\n                                        container\r\n                                        spacing={2}\r\n                                        direction=\"row\"\r\n                                        justify=\"flex-start\"\r\n                                        alignItems=\"center\"\r\n                                        style={{\"padding\": \"10px\"}}\r\n                                    >\r\n                                        <Grid item xs={12}>\r\n                                            <Typography variant=\"h6\">\r\n                                                Racks\r\n                                            </Typography>\r\n                                        </Grid>\r\n                                        <Grid container item direction=\"row\" justify=\"center\" xs={12}>\r\n                                            <ToggleButtonGroup\r\n                                                value={rackType}\r\n                                                exclusive\r\n                                                onChange={handleRackType}\r\n                                                aria-label=\"rack type\"\r\n                                            >\r\n                                                <ToggleButton value=\"single\" aria-label=\"single-rack\">\r\n                                                    Single\r\n                                                </ToggleButton>\r\n                                                <ToggleButton value=\"range\" aria-label=\"range-rack\">\r\n                                                    Range\r\n                                                </ToggleButton>\r\n                                            </ToggleButtonGroup>\r\n                                        </Grid>\r\n\r\n                                        {rackType === \"single\" ? <Grid item xs={12}>\r\n                                            <TextField id=\"standard-basic\" variant=\"outlined\" label=\"Rack\" name=\"rack1\" onChange={updateRack}/>\r\n                                        </Grid> : <Grid container item spacing={3} direciton=\"row\" justify=\"center\"><Grid item xs={6}>\r\n                                            <TextField id=\"standard-basic\" variant=\"outlined\" label=\"Start Rack\" name=\"rack1\" onChange={updateStart}/>\r\n                                        </Grid>\r\n                                        <Grid item xs={6}>\r\n                                            <TextField id=\"standard-basic\" variant=\"outlined\" label=\"End Rack\" name=\"rack2\" onChange={updateEnd}/>\r\n                                        </Grid></Grid> }\r\n\r\n                                        <Grid item xs={4}>\r\n                                            <Button\r\n                                                variant=\"contained\"\r\n                                                style={{ width: \"100%\", backgroundColor: \"green\", color: \"white\" }}\r\n                                                onClick={createRacks}\r\n                                            >\r\n                                                Create\r\n                                            </Button>\r\n                                        </Grid>\r\n                                        <Grid item xs={4}>\r\n                                            <Button\r\n                                                variant=\"contained\"\r\n                                                color=\"primary\"\r\n                                                style={{ width: \"100%\" }}\r\n                                                onClick={viewRacks}\r\n                                            >\r\n                                                View\r\n                                            </Button>\r\n                                        </Grid>\r\n                                        <Grid item xs={4}>\r\n                                            <Button\r\n                                                variant=\"contained\"\r\n                                                color=\"secondary\"\r\n                                                style={{ width: \"100%\" }}\r\n                                                onClick={deleteRacks}\r\n                                            >\r\n                                                Delete\r\n                                            </Button>\r\n                                        </Grid>\r\n                                    </Grid>\r\n\r\n                                    </Paper>\r\n                                </Grid>\r\n                            </Grid>\r\n            }\r\n            </div>\r\n            );\r\n        }\r\n    } catch (exception) {\r\n        return <Typography>Could not load any datacenters at this time</Typography>\r\n    }\r\n}\r\n","import React from 'react';\r\n\r\nimport axios from 'axios';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\r\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\r\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport Fade from '@material-ui/core/Fade';\r\n\r\nimport getURL from \"../../helpers/functions/GetURL\";\r\nimport * as Constants from \"../../Constants\";\r\nimport { DatacenterCommand } from \"../enums/DatacenterCommands.ts\";\r\nimport RacksView from \"../pages/RacksView\";\r\nimport ErrorBoundary from \"../../errors/ErrorBoundry\";\r\nimport CreateDatacenter from \"./CreateDatacenter\";\r\nimport { Privilege } from '../../enums/privilegeTypes.ts';\r\nimport EditDatacenter from \"./EditDatacenter\";\r\nimport ShowDatacenters from \"./functions/ShowDatacenters\";\r\n\r\nconst useStyles = theme => ({\r\n    root: {\r\n      width: '100%',\r\n    },\r\n    heading: {\r\n      fontSize: theme.typography.pxToRem(15),\r\n      fontWeight: theme.typography.fontWeightRegular,\r\n    },\r\n    progress: {\r\n        display: 'flex',\r\n        '& > * + *': {\r\n          marginLeft: theme.spacing(2),\r\n        },\r\n        justify:\"center\",\r\n        alignItems:\"center\",\r\n      },\r\n    modal: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    paper: {\r\n        backgroundColor: theme.palette.background.paper,\r\n        border: '2px solid #000',\r\n        boxShadow: theme.shadows[5],\r\n        padding: theme.spacing(2, 4, 3),\r\n    },\r\n  });\r\n\r\nclass ConfirmDeteleDC extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\r\n\t\tthis.state = {\r\n\r\n\t\t};\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst { classes } = this.props;\r\n\r\n\t\treturn (\r\n\t\t\t<Modal\r\n                    aria-labelledby=\"transition-modal-title\"\r\n                    aria-describedby=\"transition-modal-description\"\r\n                    className={classes.modal}\r\n                    open={this.props.showConfirmationBox}\r\n                    onClose={this.props.closeConfirmationBox}\r\n                    closeAfterTransition\r\n                    BackdropComponent={Backdrop}\r\n                    BackdropProps={{\r\n                    timeout: 500,\r\n                    }}\r\n                >\r\n                    <Fade in={this.props.showConfirmationBox}>\r\n                        <div className={classes.paper}>\r\n                            <Grid container spacing={5}>\r\n                                <Grid item xs={12}>\r\n                                    Are you sure you wish to delete?\r\n                                </Grid>\r\n                                <Grid item xs={2}>\r\n                                    <Button\r\n                                        variant=\"contained\"\r\n                                        color=\"primary\"\r\n                                        onClick={this.props.deleteDatacenter}\r\n                                    >\r\n                                        Yes\r\n                                    </Button>\r\n                                </Grid>\r\n                                <Grid item xs={1}>\r\n                                    <Button\r\n                                        variant=\"contained\"\r\n                                        color=\"primary\"\r\n                                        onClick={() => this.props.closeConfirmationBox()}\r\n                                    >\r\n                                        No\r\n                                    </Button>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </div>\r\n                    </Fade>\r\n                </Modal>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default withStyles(useStyles)(ConfirmDeteleDC);\r\n","export enum StatsCommand {\r\n    GENERATE_REPORT = \"generate-report\",\r\n    TEST = \"test\",\r\n}\r\n","import React from 'react';\r\n\r\nimport axios from 'axios';\r\n\r\nimport { Grid, CircularProgress, Typography, withStyles } from '@material-ui/core/';\r\nimport getURL from \"../../helpers/functions/GetURL\";\r\nimport * as Constants from \"../../Constants\";\r\nimport { DatacenterCommand } from \"../enums/DatacenterCommands.ts\";\r\nimport ErrorBoundary from \"../../errors/ErrorBoundry\";\r\nimport CreateDatacenter from \"../helpers/CreateDatacenter\";\r\nimport { Privilege } from '../../enums/privilegeTypes.ts';\r\nimport EditDatacenter from \"../helpers/EditDatacenter\";\r\nimport ConfirmDeteleDC from \"../helpers/ConfirmDeleteDC\";\r\nimport ShowDatacenters from \"../helpers/functions/ShowDatacenters\";\r\nimport RacksView from './RacksView';\r\nimport { RackCommand } from \"../enums/RackCommands.ts\";\r\nimport StatusDisplay from '../../helpers/StatusDisplay';\r\n\r\n\r\nconst racksMainPath = 'racks/';\r\n\r\n\r\nconst useStyles = theme => ({\r\n    root: {\r\n      width: '100%',\r\n    },\r\n    heading: {\r\n      fontSize: theme.typography.pxToRem(15),\r\n      fontWeight: theme.typography.fontWeightRegular,\r\n    },\r\n    progress: {\r\n        display: 'flex',\r\n        '& > * + *': {\r\n          marginLeft: theme.spacing(2),\r\n        },\r\n        justify:\"center\",\r\n        alignItems:\"center\",\r\n      },\r\n    modal: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    paper: {\r\n        backgroundColor: theme.palette.background.paper,\r\n        border: '2px solid #000',\r\n        boxShadow: theme.shadows[5],\r\n        padding: theme.spacing(2, 4, 3),\r\n    },\r\n  });\r\n\r\n\r\nclass DatacenterView extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            datacentersList:[],\r\n            loadingDCList:true,\r\n            showConfirmationBox:false,\r\n            currentDatacenter:\"\",\r\n            showEditDC:false,\r\n            editDCName:\"\",\r\n            editDCAbbr:\"\",\r\n            selectedDatacenter: \"\",\r\n            racks: {},\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getDatacenters();\r\n    }\r\n\r\n    getDatacenters = () => {\r\n        this.setState({ loadingDCList:true });\r\n        axios.get(getURL(Constants.DATACENTERS_MAIN_PATH, DatacenterCommand.GET_ALL_DATACENTERS)).then(\r\n            response => {\r\n                this.setState({ datacentersList: response.data.datacenters, loadingDCList:false, selectedDatacenter: response.data.datacenters[0] });\r\n                this.getAllRacks(response.data.datacenters[0], true);\r\n            }\r\n        );\r\n    }\r\n\r\n    deleteDatacenter = () => {\r\n        console.log(this.state.currentDatacenter);\r\n        axios.post(getURL(Constants.DATACENTERS_MAIN_PATH, DatacenterCommand.DELETE),\r\n        {\r\n            \"datacenter_name\": this.state.currentDatacenter\r\n        }\r\n        ).then(\r\n            response => {\r\n                console.log(\"Deleteting\");\r\n                console.log(response);\r\n                if (response.data.message === \"success\") {\r\n                    this.setState({\r\n                        showConfirmationBox: false,\r\n                        showStatus:true,\r\n                        statusMessage:\"Successfully deleted datacenter\",\r\n                        statusSeverity:\"success\",\r\n                     });\r\n                    this.getDatacenters();\r\n                } else {\r\n                    this.setState({\r\n                        showConfirmationBox: false,\r\n                        showStatus:true,\r\n                        statusMessage:response.data.message,\r\n                        statusSeverity:\"error\",\r\n                     });\r\n                }\r\n\r\n            }\r\n        );\r\n    }\r\n\r\n    openConfirmationBox = (event, datacenter) => {\r\n        this.setState({ showConfirmationBox: true, currentDatacenter:datacenter });\r\n    }\r\n\r\n    closeConfirmationBox = () => {\r\n        this.setState({ showConfirmationBox: false });\r\n    }\r\n\r\n    openEditDatacenter= (event, datacenterName, datacenterAbbrev) => {\r\n        this.setState({ editDCName: datacenterName, editDCAbbr: datacenterAbbrev }, () => this.setState({ showEditDC: true, }));\r\n    }\r\n\r\n    closeEditDatacenter = () => {\r\n        this.setState({\r\n            showEditDC: false,\r\n            editDCName:\"\",\r\n            editDCAbbr:\"\",\r\n            showStatus: false,\r\n            statusMessage: '',\r\n            statusSeverity: 'info',\r\n         });\r\n    }\r\n\r\n    closeShowStatus = () => {\r\n        this.setState({ showStatus: false });\r\n    }\r\n\r\n    updateRacks = (command, rack1, rack2) => {\r\n        axios.post(\r\n            getURL(racksMainPath, command),\r\n            {\r\n                'start_letter': rack1[0],\r\n                'stop_letter': rack2[0],\r\n                'start_number': rack1.substring(1),\r\n                'stop_number': rack2.substring(1),\r\n                \"datacenter_name\": this.state.selectedDatacenter.name,\r\n            }\r\n            ).then(response => {\r\n                if (response.data.message === 'success') {\r\n                    this.setState({ showStatus: true, statusMessage: \"Success\", statusSeverity:\"success\", showConfirmationBox:false });\r\n                    if (command === RackCommand.GET_RACK_DETAILS) {\r\n                        const win = window.open(response.data.link, '_blank');\r\n                        if (win != null) {\r\n                            win.focus();\r\n                        }\r\n                    }\r\n                } else {\r\n                    this.setState({ showStatus: true, statusMessage: response.data.message, statusSeverity:\"error\" })\r\n                }\r\n                this.getAllRacks(this.state.selectedDatacenter.name, false);\r\n            });\r\n    }\r\n\r\n    getAllRacks = (datacenter, showSnack) => {\r\n        axios.post(getURL(racksMainPath, RackCommand.GET_ALL_RACKS), {\r\n            \"datacenter_name\": datacenter.name\r\n        }).then(response => {\r\n            console.log(response.data.racks);\r\n            var racks = {};\r\n            for (var i = 0; i < response.data.racks.length; ++i) {\r\n                var letter = response.data.racks[i].label[0];\r\n                if (letter in racks) {\r\n                    racks[letter].push(response.data.racks[i].label);\r\n                } else {\r\n                    racks[letter] = [response.data.racks[i].label];\r\n                }\r\n\r\n                racks[letter].sort();\r\n            }\r\n\r\n            this.setState({ racks: racks });\r\n\r\n            if (response.data.message === 'success') {\r\n                if (showSnack) {\r\n                    this.setState({ showStatus: true, statusMessage: \"Racks loaded\", statusSeverity:\"success\", racksList:response.data.racks })\r\n                }\r\n            } else {\r\n                this.setState({ showStatus: true, statusMessage: response.data.message, statusSeverity:\"error\" })\r\n            }\r\n        });\r\n    }\r\n\r\n    updateDatacenter = (event) => {\r\n        this.setState({ selectedDatacenter: event.target.value }, this.getAllRacks(event.target.value, true));\r\n    }\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <ErrorBoundary>\r\n                    <Grid\r\n                        container\r\n                        spacing={5}\r\n                        direction=\"row\"\r\n                        justify=\"center\"\r\n                        alignItems=\"center\"\r\n                        style={{margin: \"0px\", maxWidth: \"95vw\"}}\r\n                    >\r\n                        <Grid item xs={12}>\r\n                            <Typography variant=\"h4\">\r\n                                Datacenters\r\n                            </Typography>\r\n                        </Grid>\r\n                        {this.props.privilege === Privilege.ADMIN ? <CreateDatacenter search={this.getDatacenters} selectedDatacenter={this.state.selectedDatacenter} selectDatacenter={this.updateDatacenter} datacenterList={this.state.datacentersList} /> : null }\r\n                        {this.state.loadingDCList ?\r\n                        <div className={classes.progress}><CircularProgress /></div> :\r\n\r\n                        <Grid item xs={12}>\r\n                        <ShowDatacenters\r\n                            classes={classes}\r\n                            datacentersList={this.state.datacentersList}\r\n                            privilege={this.props.privilege}\r\n                            openConfirmationBox={this.openConfirmationBox}\r\n                            editDatacenter={this.openEditDatacenter}\r\n                            selectedDatacenter={this.state.selectedDatacenter}\r\n                            updateRacks={this.updateRacks}\r\n                        /></Grid>}\r\n                        <Grid item xs={6}>\r\n                        <EditDatacenter\r\n                            show={this.state.showEditDC}\r\n                            close={this.closeEditDatacenter}\r\n                            dcName={this.state.editDCName}\r\n                            dcAbbrev={this.state.editDCAbbr}\r\n                            search={this.getDatacenters}\r\n                        />\r\n                        </Grid>\r\n                        <Grid item xs={6}>\r\n                        <ConfirmDeteleDC\r\n                            showConfirmationBox={this.state.showConfirmationBox}\r\n                            closeConfirmationBox={this.closeConfirmationBox}\r\n                            deleteDatacenter={this.deleteDatacenter}\r\n                            close={this.closeEditDatacneter}\r\n                        />\r\n                        </Grid>\r\n                    </Grid>\r\n\r\n                    <Grid\r\n                        container\r\n                        spacing={5}\r\n                        direction=\"row\"\r\n                        justify=\"center\"\r\n                        alignItems=\"center\"\r\n                        style={{margin: \"0px\", maxWidth: \"95vw\"}}\r\n                    >\r\n                    <Grid item xs={12}>\r\n                        <RacksView\r\n                            privilege={this.props.privilege}\r\n                            datacenter={this.state.selectedDatacenter.name}\r\n                            racks={this.state.racks}\r\n                        />\r\n                    </Grid>\r\n                    </Grid>\r\n                    <StatusDisplay\r\n                        open={this.state.showStatus}\r\n                        severity={this.state.statusSeverity}\r\n                        closeStatus={this.closeShowStatus}\r\n                        message={this.state.statusMessage}\r\n                    />\r\n                    <StatusDisplay\r\n                        open={this.state.showStatus}\r\n                        severity={this.state.statusSeverity}\r\n                        closeStatus={this.closeShowStatus}\r\n                        message={this.state.statusMessage}\r\n                    />\r\n                </ErrorBoundary>\r\n            </React.Fragment>\r\n        );\r\n}\r\n  }\r\n\r\n\r\n  export default withStyles(useStyles)(DatacenterView);\r\n","import React from 'react';\r\n\r\nimport axios from 'axios';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nimport ErrorBoundary from \"../../errors/ErrorBoundry\";\r\nimport DatacenterView from \"./DatacentersView\";\r\n\r\nconst useStyles = theme => ({\r\n\r\n  });\r\n\r\nclass DatacenterManagerView extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n        };\r\n    }\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <ErrorBoundary>\r\n                    <DatacenterView privilege={this.props.privilege} />\r\n                </ErrorBoundary>\r\n            </React.Fragment>\r\n        );\r\n}\r\n  }\r\n\r\n\r\n  export default withStyles(useStyles)(DatacenterManagerView);\r\n","export default function jsonToArr(incomingJSON) {\r\n    var json = {};\r\n    try {\r\n        json = JSON.parse(incomingJSON);\r\n    } catch (e) {\r\n        json = incomingJSON;\r\n    }\r\n\r\n    if (Object.entries(json).length === 0 && json.constructor === Object) {\r\n        return [];\r\n    }\r\n\r\n    const items = [];\r\n\r\n    Object.keys(json).map((key) => {\r\n        const row = [];\r\n        row.push(key);\r\n        row.push(json[key]);\r\n        items.push(row);\r\n\r\n        return key;\r\n    });\r\n    return items;\r\n}\r\n","import React from 'react';\r\nimport axios from 'axios';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport getURL from '../../helpers/functions/GetURL';\r\nimport * as Constants from \"../../Constants\";\r\nimport { DatacenterCommand } from \"../../racks/enums/DatacenterCommands.ts\";\r\nimport { StatsCommand } from \"../enums/StatsCommands.ts\";\r\nimport JSONtoArr from \"../../helpers/functions/JSONtoArr\";\r\nimport StatusDisplay from '../../helpers/StatusDisplay';\r\nimport ErrorBoundray from '../../errors/ErrorBoundry';\r\nimport { Select, MenuItem, InputLabel, Grid, Paper, Typography, Button } from '@material-ui/core';\r\nimport { Table, TableBody, TableCell, TableContainer, TableHead, TableRow} from '@material-ui/core';\r\nimport { ExpansionPanel, ExpansionPanelSummary, ExpansionPanelDetails } from '@material-ui/core';\r\n\r\nconst statsMainPath = 'stats/';\r\nconst tables = {\r\n    \"totalUsage\":\"Total Usage\",\r\n    \"spaceUsage\": \"Space Usage\",\r\n    \"vendorUsage\": \"Vendor Usage\",\r\n    \"modelUsage\": \"Model Usage\",\r\n    \"ownerUsage\": \"Owner Usage\",\r\n}\r\n\r\nconst tableCols = {\r\n    \"totalUsage\":[\"Total\", \"Usage\"],\r\n    \"spaceUsage\": [\"Rack\", \"Usage\"],\r\n    \"vendorUsage\": [\"Vendor\", \"Usage\"],\r\n    \"modelUsage\": [\"Model\", \"Usage\"],\r\n    \"ownerUsage\": [\"Ownder\", \"Usage\"],\r\n}\r\n\r\nexport default class StatisticsView extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            loadingDatacenters: true,\r\n            datacenterList: [],\r\n            selectedDatacenter: 'All Datacenters',\r\n            tableValues: {\r\n                \"totalUsage\":[],\r\n                \"spaceUsage\": [],\r\n                \"vendorUsage\": [],\r\n                \"modelUsage\": [],\r\n                \"ownerUsage\": [],\r\n            },\r\n            totalUsage:[],\r\n            spaceUsage:[],\r\n            vendorUsage:[],\r\n            modelUsage:[],\r\n            ownerUsage:[],\r\n\r\n            showStatus:false,\r\n            statusMessage:'',\r\n            statusSeverity:'',\r\n        };\r\n\r\n        this.closeShowStatus = this.closeShowStatus.bind(this);\r\n        this.generateReport = this.generateReport.bind(this);\r\n\r\n        axios.defaults.headers.common['token'] = this.props.token;\r\n        axios.defaults.headers.common['privilege'] = this.props.privilege;\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getDatacenters();\r\n    }\r\n\r\n    getDatacenters = () => {\r\n        axios.get(getURL(Constants.DATACENTERS_MAIN_PATH, DatacenterCommand.GET_ALL_DATACENTERS)).then(\r\n            response => {\r\n                console.log(response);\r\n                this.setState({ datacenterList: response.data.datacenters, loadingDatacenters: false });\r\n            }\r\n        );\r\n    }\r\n\r\n    generateReport() {\r\n        axios.post(getURL(statsMainPath, StatsCommand.GENERATE_REPORT), {\r\n            'datacenter_name': this.state.selectedDatacenter.name === \"All Datacenters\" ? \"\" : this.state.selectedDatacenter.name,\r\n        }).then(response => {\r\n                try {\r\n                    var data = response.data;\r\n                    var totalUsage = [];\r\n                    var totalUsageRow = [\"Total Usage\"];\r\n                    totalUsageRow.push(data[\"totalUsage\"]);\r\n                    totalUsage.push(totalUsageRow);\r\n\r\n                    var spaceUsage = JSONtoArr(data[\"spaceUsage\"]);\r\n                    if (spaceUsage.length === 0) {\r\n                        spaceUsage.push([\"No space is currently being used\", []])\r\n                    }\r\n                    var vendorUsage = JSONtoArr(data[\"vendorUsage\"]);\r\n                    if (vendorUsage.length === 0) {\r\n                        vendorUsage.push([\"No vendors currently using space\", []])\r\n                    }\r\n                    var modelUsage = JSONtoArr(data[\"modelUsage\"]);\r\n                    if (modelUsage.length === 0) {\r\n                        modelUsage.push([\"No models currently using space\", []])\r\n                    }\r\n                    var ownerUsage = JSONtoArr(data[\"ownerUsage\"]);\r\n                    if (ownerUsage.length === 0) {\r\n                        ownerUsage.push([\"No owners currently using space\", []])\r\n                    }\r\n\r\n                    this.setState({\r\n                        showStatus: true,\r\n                        statusSeverity:\"success\",\r\n                        statusMessage: \"Success\",\r\n                        tableValues: {\r\n                            \"totalUsage\":totalUsage,\r\n                            \"spaceUsage\": spaceUsage,\r\n                            \"vendorUsage\": vendorUsage,\r\n                            \"modelUsage\": modelUsage,\r\n                            \"ownerUsage\": ownerUsage,\r\n                        },\r\n                     })\r\n                } catch {\r\n                    this.setState({ showStatus: true, statusMessage: response.data.message, statusSeverity:\"error\" })\r\n                }\r\n            });\r\n    }\r\n\r\n    closeShowStatus() {\r\n        this.setState({ showStatus: false })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <ErrorBoundray >\r\n                <StatusDisplay\r\n                    open={this.state.showStatus}\r\n                    severity={this.state.statusSeverity}\r\n                    closeStatus={this.closeShowStatus}\r\n                    message={this.state.statusMessage}\r\n                />\r\n                <Grid\r\n                    container\r\n                    spacing={5}\r\n                    direction=\"row\"\r\n                    justify=\"center\"\r\n                    alignItems=\"center\"\r\n                    style={{margin: \"0px\", maxWidth: \"95vw\"}}\r\n                >\r\n                    <Grid item xs={12}>\r\n                        <Typography variant=\"h4\">\r\n                            Reports\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Grid item xs={3}>\r\n                        <InputLabel id=\"datacenter-select-label\">Select Datacenter</InputLabel>\r\n                        <Select\r\n                            name='datacenter_name'\r\n                            id=\"datacenter-select\"\r\n                            value={this.state.selectedDatacenter}\r\n                            onChange={(e) => this.setState({ selectedDatacenter: e.target.value })}\r\n                            style={{ width: \"100%\" }}\r\n                        >\r\n                            <MenuItem value=\"All Datacenters\">All Datacenters</MenuItem>\r\n                            {this.state.datacenterList.map(value => {\r\n                                return (<MenuItem value={value}>{value[\"name\"]}</MenuItem>);\r\n                            })}\r\n                        </Select>\r\n                    </Grid>\r\n                    <Grid item xs={3}>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            onClick={this.generateReport}\r\n                            disabled={this.state.loadingDatacenters}\r\n                        >\r\n                            Generate Report\r\n                        </Button>\r\n                    </Grid>\r\n                </Grid>\r\n                <div>\r\n\r\n                </div>\r\n                {Object.keys(tables).map(key => (\r\n                <ExpansionPanel>\r\n                    <ExpansionPanelSummary\r\n                        expandIcon={<ExpandMoreIcon />}\r\n                    >\r\n                        <Typography>{tables[key]}</Typography>\r\n                    </ExpansionPanelSummary>\r\n                    <ExpansionPanelDetails>\r\n                        <TableContainer component={Paper}>\r\n                            <Table>\r\n                                <TableHead>\r\n                                    <TableRow >\r\n                                        {tableCols[key].map(column => (<TableCell><span id={column}>{column}</span></TableCell>))}\r\n                                    </TableRow>\r\n                                </TableHead>\r\n                                <TableBody>\r\n                                {this.state.tableValues[key].map(row => (\r\n                                    <TableRow>\r\n                                        {row.map(column => (<TableCell><span id={column}>{column + (isNaN(column) ? \"\" : \"%\")}</span></TableCell>))}\r\n                                    </TableRow>\r\n                                ))}\r\n                                </TableBody>\r\n                            </Table>\r\n                        </TableContainer>\r\n                    </ExpansionPanelDetails>\r\n                </ExpansionPanel>\r\n                ))}\r\n                </ErrorBoundray>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","export enum LogCommand {\r\n    TEST = \"test/\",\r\n    GET_LOGS = \"getlogs/\",\r\n}\r\n","import React from \"react\"\r\n\r\nimport axios from 'axios';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport {\r\n    Grid,\r\n    Typography\r\n} from \"@material-ui/core/\";\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Button from '@material-ui/core/Button';\r\nimport { TextField } from '@material-ui/core';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\n\r\nimport { LogCommand } from \"../enums/LogCommands.ts\";\r\nimport getURL from \"../../helpers/functions/GetURL\";\r\nimport * as Constants from \"../../Constants\";\r\nimport ErrorBoundary from \"../../errors/ErrorBoundry\";\r\n\r\nconst useStyles = {\r\n    table: {\r\n      minWidth: 650,\r\n    },\r\n    searchbar: {\r\n        minWidth: \"200px\",\r\n        flexGrow: 1,\r\n    },\r\n  };\r\n\r\nfunction makeTableData(index, timestamp, type, message) {\r\n    return { index, timestamp, type, message };\r\n}\r\n\r\nconst typeKey = \"type\";\r\nconst timestampKey = \"timestamp\";\r\nconst USER_KEY = \"user\";\r\nconst ASSET_KEY = \"assets\";\r\n\r\nclass LogsView extends React.Component  {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            logItems:[],\r\n            filteredLogs:[],\r\n            allLogs:null,\r\n            filterUser:\"\",\r\n            filterAsset:\"\",\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getLogs();\r\n    }\r\n\r\n    getLogs = () => {\r\n        axios.get(getURL(Constants.LOGS_MAIN_PATH, LogCommand.GET_LOGS)).then(response => {\r\n            this.parseLog(response.data.log);\r\n            this.filter();\r\n        });\r\n    }\r\n\r\n    parseLog = (logs) => {\r\n        var items = [];\r\n        logs.map((log, index) => {\r\n            var message = \"\";\r\n            Object.entries(log).map(([key, value]) => {\r\n                if (key === typeKey || key === timestampKey) {\r\n                    return;\r\n                }\r\n                message += value + \"\\n\";\r\n            });\r\n            items.push(makeTableData(index, log[timestampKey], log[typeKey], message));\r\n        });\r\n\r\n        this.setState({ logItems: items, filteredLogs:items, allLogs:logs });\r\n    }\r\n\r\n    filter = () => {\r\n        var user = this.state.filterUser;\r\n        var asset = this.state.filterAsset;\r\n        var filteredItems = [];\r\n\r\n        this.state.allLogs.map(entry => {\r\n            console.log(entry);\r\n            var hasAsset = false;\r\n            var hasUser = false;\r\n\r\n            try {\r\n                if (entry.message.match(/\\[.+\\]/)[0].includes(user)) {\r\n                    hasUser = true;\r\n                }\r\n            } catch {\r\n                hasUser = false;\r\n            }\r\n\r\n\r\n            try {\r\n                if (asset !== \"\") {\r\n                    var assetNum = \"\" + entry.request.asset_number\r\n                    if (assetNum.includes(asset)) {\r\n                        hasAsset = true;\r\n                    }\r\n                } else {\r\n                    hasAsset = true;\r\n                }\r\n            } catch {\r\n                hasAsset = false;\r\n            }\r\n\r\n            if (hasAsset && hasUser) {\r\n                filteredItems.push(entry);\r\n            }\r\n        });\r\n\r\n        filteredItems.sort(function(a, b) {\r\n            if (a.timestamp > b.timestamp) return -1;\r\n            if (a.timestamp < b.timestamp) return 1;\r\n            return 0;\r\n        })\r\n\r\n        this.setState({ filteredLogs:filteredItems });\r\n    }\r\n\r\n    updateFilterUser = (event) => {\r\n        this.setState({ filterUser: event.target.value }, () => { this.filter() });\r\n    }\r\n\r\n    updateFilterAsset = (event) => {\r\n        this.setState({ filterAsset: event.target.value }, () => { this.filter() });\r\n    }\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <ErrorBoundary>\r\n                    <Grid\r\n                        container\r\n                        spacing={5}\r\n                        direction=\"row\"\r\n                        justify=\"flex-start\"\r\n                        alignItems=\"center\"\r\n                        style={{margin: \"0px\", maxWidth: \"95vw\"}}\r\n                    >\r\n                        <Grid item xs={12}>\r\n                            <Typography variant=\"h4\">\r\n                                Logs\r\n                            </Typography>\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <Button\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                onClick={this.getLogs}\r\n                            >\r\n                                Refresh Logs\r\n                            </Button>\r\n                        </Grid>\r\n                        <Grid item xs={6}>\r\n                            <TextField\r\n                                className={classes.searchbar}\r\n                                name={\"filter-users\"}\r\n                                placeholder=\"Search users\"\r\n                                fullWidth\r\n                                onChange={this.updateFilterUser}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={6}>\r\n                            <TextField\r\n                                className={classes.searchbar}\r\n                                name={\"filter-assets\"}\r\n                                placeholder=\"Search assets\"\r\n                                fullWidth\r\n                                onChange={this.updateFilterAsset}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <TableContainer component={Paper}>\r\n                                <Table className={classes.table} aria-label=\"simple table\">\r\n                                    <TableHead>\r\n                                    <TableRow>\r\n                                        <TableCell align=\"left\"><span id={\"timestamp\"} style={{fontWeight: \"bold\"}}>Timestamp</span></TableCell>\r\n                                        <TableCell align=\"left\"><span id={\"type\"} style={{fontWeight: \"bold\"}}>type</span></TableCell>\r\n                                        <TableCell align=\"left\"><span id={\"message\"} style={{fontWeight: \"bold\"}}>Message</span></TableCell>\r\n                                    </TableRow>\r\n                                    </TableHead>\r\n                                    <TableBody>\r\n                                    {this.state.filteredLogs.map(logItem => (\r\n                                        <TableRow key={logItem.timestamp}>\r\n                                            <TableCell aligh=\"left\">{logItem.timestamp}</TableCell>\r\n                                            <TableCell align=\"left\">{logItem.type}</TableCell>\r\n                                            <TableCell align=\"left\">{logItem.message}</TableCell>\r\n                                        </TableRow>\r\n                                    ))}\r\n                                    </TableBody>\r\n                                </Table>\r\n                            </TableContainer>\r\n                        </Grid>\r\n                    </Grid>\r\n                </ErrorBoundary>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withStyles(useStyles)(LogsView);\r\n","import React from 'react';\r\n\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport AccountCircle from '@material-ui/icons/AccountCircle';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\n\r\nimport ModelsView from './models/pages/ModelsView';\r\nimport UsersView from './users/pages/UsersView';\r\nimport AssetsView from './assets/pages/AssetsView';\r\nimport DatacenterManagerView from './racks/pages/DatacenterManagerView';\r\nimport StatisticsView from './statistics/pages/StatisticsView';\r\nimport LogsView from \"./logs/pages/LogsView\";\r\n\r\nimport { Privilege } from './enums/privilegeTypes.ts'\r\n\r\nimport ErrorBoundry from './errors/ErrorBoundry';\r\n\r\nimport '../stylesheets/TabStyles.css';\r\n\r\nconst useStyles = theme => ({\r\n    root: {\r\n      flexGrow: 1,\r\n    },\r\n    menuButton: {\r\n      marginRight: theme.spacing(2),\r\n    },\r\n    title: {\r\n      flexGrow: 1,\r\n    },\r\n    tab:{\r\n        flexGrow:'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        maxWidth: \"100%\",\r\n        width:\"100%\",\r\n        margin:\"0 auto\",\r\n    }\r\n  });\r\n\r\nclass TabViewer extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            currentTabID:0,\r\n            anchorEl: null,\r\n            isMenuOpen:false,\r\n        };\r\n        this.handleChange = this.handleChange.bind(this);\r\n    }\r\n\r\n    handleChange(event, newValue) {\r\n        this.setState({ currentTabID: newValue })\r\n    }\r\n\r\n    handleProfileMenuOpen = (event) => {\r\n        this.setState({ anchorEl: event.currentTarget, isMenuOpen:true });\r\n    }\r\n\r\n    handleMenuClose = () => {\r\n        this.setState({ anchorEl: null, isMenuOpen:false });\r\n    };\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n\r\n        return (\r\n        <div className={classes.root}>\r\n            <ErrorBoundry>\r\n            <AppBar position=\"static\">\r\n                <Toolbar>\r\n                    <Typography variant=\"h6\" className={classes.title}>\r\n                        Hyposoft Server Management\r\n                    </Typography>\r\n                    <div>\r\n                        <IconButton\r\n                            aria-label=\"account of current user\"\r\n                            aria-controls=\"menu-appbar\"\r\n                            aria-haspopup=\"true\"\r\n                            color=\"inherit\"\r\n                            onClick={this.handleProfileMenuOpen}\r\n                        >\r\n                            <AccountCircle />\r\n                        </IconButton>\r\n                        <Menu\r\n                            anchorEl={this.state.anchorEl}\r\n                            anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n                            id='primary-search-account-menu'\r\n                            keepMounted\r\n                            transformOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n                            open={this.state.isMenuOpen}\r\n                            onClose={this.handleMenuClose}\r\n                        >\r\n                            <MenuItem>{\"Username: \" + this.props.username}</MenuItem>\r\n                            <MenuItem>{\"Privilege: \" + this.props.privilege}</MenuItem>\r\n                            <MenuItem onClick={this.props.logout} >LOGOUT</MenuItem>\r\n                        </Menu>\r\n                    </div>\r\n                </Toolbar>\r\n            </AppBar>\r\n\r\n            <Tabs value={this.state.currentTabID} onChange={this.handleChange}\r\n                indicatorColor=\"primary\"\r\n                textColor=\"primary\"\r\n                centered\r\n            >\r\n                    <Tab value={0} style={{flexGrow: 1,}} label=\"Models\"> </Tab>\r\n                    <Tab value={1} style={{flexGrow: 1,}} label=\"Assets\" ></Tab>\r\n                    {(this.props.privilege === Privilege.ADMIN) ? <Tab value={2} style={{flexGrow: 1,}} label=\"Users\"></Tab> : null}\r\n                    <Tab value={3} style={{flexGrow: 1,}} label=\"Datacenters\" />\r\n                    <Tab value={4} style={{flexGrow: 1,}} label=\"Statistics\" />\r\n                    <Tab value={5} style={{flexGrow: 1,}} label=\"Logs\" />\r\n            </Tabs>\r\n            {this.state.currentTabID !== 0 ? null :\r\n            <Typography\r\n                component=\"div\"\r\n                role=\"tabpanel\"\r\n                id={`simple-tabpanel-0`}\r\n                aria-labelledby={`simple-tab-0`}\r\n            >\r\n                <Container className={classes.tab} ><ModelsView token={this.props.token} privilege={this.props.privilege} /></Container>\r\n            </Typography>}\r\n            {this.state.currentTabID !== 1 ? null :\r\n            <Typography\r\n                component=\"div\"\r\n                role=\"tabpanel\"\r\n                id={`simple-tabpanel-0`}\r\n                aria-labelledby={`simple-tab-0`}\r\n            >\r\n                <Container className={classes.tab} ><AssetsView token={this.props.token} privilege={this.props.privilege} /></Container>\r\n            </Typography>}\r\n            {this.state.currentTabID !== 2 ? null :\r\n            <Typography\r\n                component=\"div\"\r\n                role=\"tabpanel\"\r\n                id={`simple-tabpanel-0`}\r\n                aria-labelledby={`simple-tab-0`}\r\n            >\r\n                <Container className={classes.tab} ><UsersView token={this.props.token} privilege={this.props.privilege} /></Container>\r\n            </Typography>}\r\n            {this.state.currentTabID !== 3 ? null :\r\n            <Typography\r\n                component=\"div\"\r\n                role=\"tabpanel\"\r\n                id={`simple-tabpanel-0`}\r\n                aria-labelledby={`simple-tab-0`}\r\n            >\r\n                <Container className={classes.tab} ><DatacenterManagerView token={this.props.token} privilege={this.props.privilege} /></Container>\r\n            </Typography>}\r\n            {this.state.currentTabID !== 4 ? null :\r\n            <Typography\r\n                component=\"div\"\r\n                role=\"tabpanel\"\r\n                hidden={this.state.currentTabID !== 4}\r\n                id={`simple-tabpanel-0`}\r\n                aria-labelledby={`simple-tab-0`}\r\n            >\r\n                <Container className={classes.tab} ><StatisticsView token={this.props.token} privilege={this.props.privilege} /></Container>\r\n            </Typography>}\r\n            {this.state.currentTabID !== 5 ? null :\r\n            <Typography\r\n                component=\"div\"\r\n                role=\"tabpanel\"\r\n                hidden={this.state.currentTabID !== 5}\r\n                id={`tab-panel-logs`}\r\n                aria-labelledby={`tab-panel-logs`}\r\n            >\r\n                <Container className={classes.tab} ><LogsView /></Container>\r\n            </Typography>}\r\n            </ErrorBoundry>\r\n        </div>);\r\n    }\r\n}\r\n\r\n\r\nexport default withStyles(useStyles)(TabViewer);\r\n","import React from \"react\";\r\n\r\nimport axios from 'axios';\r\n\r\nimport Login from \"./Login\";\r\nimport TabViewer from \"./Tabs\";\r\nimport getURL from './helpers/functions/GetURL';\r\nimport * as Constants from \"./Constants\";\r\n\r\nconst storedToken = 'token';\r\nconst storedPrivilege = 'privilege';\r\nconst storedLoggedIn = 'loggedIn';\r\nconst storedUsername = 'username';\r\n\r\nexport default class PageSelector extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      token:sessionStorage.getItem(storedToken) || '',\r\n      privilege:sessionStorage.getItem(storedPrivilege) || '',\r\n      loggedIn:sessionStorage.getItem(storedLoggedIn) || '',\r\n      username:sessionStorage.getItem(storedUsername) || '',\r\n    };\r\n\r\n  }\r\n\r\n  componentDidMount() {\r\n\taxios.defaults.headers.common['token'] = this.state.token;\r\n    axios.defaults.headers.common['privilege'] = this.state.privilege;\r\n  }\r\n\r\n  login = (token, username, privilege) => {\r\n    sessionStorage.setItem(storedToken, token);\r\n    sessionStorage.setItem(storedPrivilege, privilege);\r\n    sessionStorage.setItem(storedLoggedIn, true);\r\n    sessionStorage.setItem(storedUsername, username);\r\n\r\n    axios.defaults.headers.common['token'] = token;\r\n    axios.defaults.headers.common['privilege'] = privilege;\r\n\r\n    this.setState({\r\n      token:token,\r\n      privilege:privilege,\r\n      loggedIn:true,\r\n      username: username,\r\n\t});\r\n\r\n\twindow.history.replaceState({}, \"Hyposoft Asset Management\", \"/\")\r\n  }\r\n\r\n  loginWithOAuth = (token, username, privilege) => {\r\n\tsessionStorage.setItem(storedToken, token);\r\n\tsessionStorage.setItem(storedPrivilege, privilege);\r\n\tsessionStorage.setItem(storedLoggedIn, true);\r\n\tsessionStorage.setItem(storedUsername, username);\r\n\r\n\taxios.defaults.headers.common['token'] = token;\r\n\taxios.defaults.headers.common['privilege'] = privilege;\r\n\r\n\tthis.setState({\r\n\ttoken:token,\r\n\tprivilege:privilege,\r\n\tloggedIn:true,\r\n\tusername: username,\r\n\t}, () => { window.history.replaceState({}, \"Hyposoft Asset Management\", \"/\") });\r\n\t//window.location.href = Constants.SHIB_REDIRECT_URI;\r\n  }\r\n\r\n  logout = () => {\r\n    axios.get(getURL('users/', 'logout'));\r\n\r\n    this.setState({\r\n      token:'',\r\n      privilege:'',\r\n      loggedIn:false,\r\n      username:'',\r\n    });\r\n\r\n    sessionStorage.removeItem(storedToken);\r\n    sessionStorage.removeItem(storedPrivilege);\r\n    sessionStorage.removeItem(storedLoggedIn);\r\n    sessionStorage.removeItem(storedUsername);\r\n\r\n\twindow.history.replaceState({}, \"Hyposoft Asset Management\", \"/\")\r\n\tconsole.log(window.location.href);\r\n\tconsole.log(Constants.SHIB_REDIRECT_URI);\r\n\t//window.location = Constants.SHIB_REDIRECT_URI;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        {this.state.loggedIn ?\r\n          \t<TabViewer\r\n\t\t\t\ttoken={this.state.token}\r\n\t\t\t\tusername={this.state.username}\r\n\t\t\t\tprivilege={this.state.privilege}\r\n\t\t\t\tlogout={this.logout}\r\n          \t/> :\r\n\t\t  \t<Login\r\n\t\t\t\tloginFunc={this.login}\r\n\t\t\t\tshib={this.props.redirected}\r\n\t\t\t\tloginFuncOAuth={this.loginWithOAuth}\r\n\t\t\t/>}\r\n      </div>\r\n    );\r\n  }\r\n\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './stylesheets/index.css';\nimport PageSelector from './javascript/PageSelector';\n\nReactDOM.render(<PageSelector redirected={document.referrer}/>, document.getElementById('root'));\n"],"sourceRoot":""}
