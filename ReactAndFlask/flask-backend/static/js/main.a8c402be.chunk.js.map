{"version":3,"sources":["images/logo.png","javascript/Constants.jsx","javascript/enums/privilegeTypes.ts","javascript/helpers/functions/GetURL.jsx","javascript/models/enums/ModelCommands.ts","javascript/models/enums/ModelInputs.ts","javascript/helpers/StatusDisplay.jsx","javascript/ShibLogin.jsx","javascript/Login.jsx","javascript/models/helpers/ExportModel.jsx","javascript/models/helpers/FilterModel.jsx","javascript/models/helpers/CreateModel.jsx","javascript/models/ModelConstants.jsx","javascript/models/helpers/ModelsTable.jsx","javascript/users/enums/UserCommands.ts","javascript/models/pages/ModelsView.jsx","javascript/users/helpers/functions/PrivilegePicker.jsx","javascript/users/enums/PrivilegeCommands.ts","javascript/users/helpers/FilterUser.jsx","javascript/users/helpers/CreateUser.jsx","javascript/users/helpers/UsersTable.jsx","javascript/users/UserConstants.jsx","javascript/users/helpers/functions/MakeCreateJSON.jsx","javascript/users/pages/UsersView.jsx","javascript/assets/enums/AssetInputs.ts","javascript/assets/enums/AssetCommands.ts","javascript/users/helpers/functions/MakeEditJSON.jsx","javascript/users/helpers/functions/MakeDeleteJSON.jsx","javascript/users/helpers/functions/MakeDetailViewJSON.jsx","javascript/assets/AssetConstants.jsx","javascript/assets/helpers/NetworkGraph.jsx","javascript/assets/helpers/functions/StringToMacAddress.jsx","javascript/assets/helpers/EditAsset.jsx","javascript/assets/helpers/DetailsAsset.jsx","javascript/assets/helpers/FilterAsset.jsx","javascript/helpers/functions/DescendingComparator.jsx","javascript/assets/helpers/CreateAsset.jsx","javascript/assets/helpers/ImportAsset.jsx","javascript/assets/helpers/AddAsset.jsx","javascript/assets/helpers/ExportAsset.jsx","javascript/assets/helpers/TableAssets.jsx","javascript/racks/enums/DatacenterCommands.ts","javascript/helpers/functions/GetComparator.jsx","javascript/helpers/functions/StableSort.jsx","javascript/errors/ErrorBoundry.jsx","javascript/assets/pages/AssetsView.jsx","javascript/racks/helpers/CreateDatacenter.jsx","javascript/racks/helpers/EditDatacenter.jsx","javascript/racks/pages/RacksView.jsx","javascript/racks/enums/RackCommands.ts","javascript/racks/helpers/functions/ShowDatacenters.jsx","javascript/racks/helpers/ConfirmDeleteDC.jsx","javascript/statistics/enums/StatsCommands.ts","javascript/racks/pages/DatacentersView.jsx","javascript/racks/pages/DatacenterManagerView.jsx","javascript/helpers/functions/JSONtoArr.jsx","javascript/statistics/pages/StatisticsView.jsx","javascript/logs/enums/LogCommands.ts","javascript/logs/pages/LogsView.jsx","javascript/changeplans/pages/ChangePlans.jsx","javascript/Tabs.jsx","javascript/PageSelector.jsx","index.jsx"],"names":["module","exports","serverEndpoint","RackX","ASSETS_MAIN_PATH","MODELS_MAIN_PATH","USERS_MAIN_PATH","RACKS_MAIN_PATH","DATACENTERS_MAIN_PATH","LOGS_MAIN_PATH","PERMISSIONS_MAIN_PATH","DECOMMISSIONS_MAIN_PATH","CLIENT_ID","SHIB_REDIRECT_URI","window","location","href","Privilege","SHIBBOLETH_LOGIN","encodeURIComponent","HTTPS_STATUS_OK","getURL","path","endpoint","Constants","ModelCommand","ModelInput","StatusDisplay","props","state","Snackbar","open","this","autoHideDuration","onClose","closeStatus","elevation","variant","severity","message","IconButton","aria-label","color","size","onClick","fontSize","React","Component","ShibLogin","username","password","statusMessage","showStatus","statusSeverity","Grid","container","spacing","direction","justify","alignItems","onKeyDown","e","onKeyPressed","style","item","xs","src","logo","alt","height","Card","minWidth","CardContent","Typography","fontWeight","gutterBottom","closeShowStatus","loginMainPath","queryString","require","Login","getDukeCredentials","token","axios","get","headers","then","response","post","data","netid","mail","displayName","status","setState","initialized","oauth","loginFuncOAuth","loginWithOAuth","bind","submitCredentials","params","parse","hash","substring","access_token","console","log","loginFunc","event","target","value","key","preventDefault","stopPropagation","TextField","id","label","required","ref","onChange","updateUsername","type","updatePassword","Button","direciton","width","ExportModel","Paper","downloadTable","startIcon","showAll","createInputs","name","inputs","FilterModel","filters","hasOwnProperty","newFilters","forceUpdate","search","sm","md","lg","Autocomplete","options","includeInputInList","freeSolo","renderInput","vendor","updateSearchText","onBlur","fullWidth","InputProps","inputProps","min","max","CreateModel","updateColor","updateModelColor","hex","showModal","showImportModal","closeModal","networkPorts","numPorts","closeImportModal","create","createModel","uploadFile","FormData","append","importedFile","sendUploadedFile","chooseFile","files","updateNetworkPorts","ports","i","push","toString","updateModelCreator","updatePort","port","classes","background","Modal","aria-labelledby","aria-describedby","className","modal","closeAfterTransition","Fade","in","Backdrop","grid","onSubmit","modelNumber","ethernetPorts","powerPorts","cpu","memory","storage","comment","List","root","subheader","ListSubheader","component","maxHeight","overflow","Array","from","length","x","map","_","index","labelId","ListItem","role","undefined","dense","button","ListItemText","primary","defaultValue","accept","withStyles","theme","flexGrow","display","justifyContent","backgroundColor","palette","paper","boxShadow","shadows","padding","progress","marginLeft","GENERAL_MODEL_ERROR","modelsMainPath","UserCommand","ModelsTable","oldDetails","detailedValues","display_color","showDetailedView","row","detailViewLoading","detailViewModel","modelNum","detailView","model","originalVendor","originalModelNumber","originalHeight","catch","error","ModelConstants","closeDetailedView","showDeleteModal","closeDeleteModal","delete","deleteModel","clickInfo","popoverAnchor","clickComment","commentPopover","handlePopoverClose","handleCommentPopoverClose","updateModelEdited","save","editModel","defaults","common","privilege","TableContainer","Table","TableHead","TableRow","columns","col","TableCell","align","TableBody","vals","hover","admin","scope","keys","margin","Popover","Boolean","anchorEl","anchorOrigin","vertical","horizontal","transformOrigin","CircularProgress","model_number","ethernet_ports","power_ports","adminColumns","columnLookup","ModelsView","createdModel","Vendor","Height","CPU","Memory","Storage","Comment","showCreateModal","getVendorList","searchModels","createshowStatus","originalModelNum","edit","detailshowStatus","detailStatusMessage","detailStatusSeverity","viewVendor","viewModel","filter","searchVendor","searchModelNum","searchMinHeight","searchMaxHeight","searchMinNetworkPorts","searchMaxNetworkPorts","searchMinPower","searchMaxPower","searchCPU","searchMinMem","searchMaxMem","searchStore","searchComment","models","rows","Object","values","forEach","includes","parseInt","items","searchText","VENDOR_VALUES","vendorsList","results","madeVendorQuery","UPLOAD_FILE","summary","EXPORT_FILE","searchHeight","csvData","csvLink","link","click","searchAll","openCreateModal","openImportModal","closeCreateModal","updateModelColorDetails","reason","createStatusClose","detailStatusClose","createdVendor","createdModelNum","createdHeight","createdDispClr","createdEthPorts","createdPwrPorts","createdCPU","createdMem","createdStorage","createdComments","deleteVendor","maxWidth","statusClose","useAutocomplete","filename","r","PrivilegePicker","generalPrivileges","title","defaultPrivs","defaultDCs","defaultPrivileges","Model","Asset","Audit","Power","datacenters","multiple","getOptionLabel","option","updatePrivilege","loading","dcPrivileges","updateDCPrivilege","PrivilegeCommand","Filters","resetCreate","success","display_name","email","searchUsers","updateprivilege","privs","priv","privileges","CreateModal","selectedPrivileges","updateSelectedPrivileges","UsersTable","beginEditing","canEdit","originalUsername","Username","Email","endEditing","USER_SUCCESS_TOKEN","USER_FAILURE_TOKEN","USER_CREATION_SUCCESS_MESSAGE","USER_EDIT_SUCCESS_MESSAGE","USER_EDIT_FAILURE_MESSAGE","USER_DELETE_SUCCESS_MESSAGE","USER_DELETE_FAILURE_MESSAGE","makeCreateJSON","AssetInput","AssetCommand","blankSearch","UsersView","createUser","completion","UserConstants","setDisplayStatus","editUser","makeEditJSON","processResponse","deleteUser","makeDeleteJSON","detailViewUser","makeDetailViewJSON","getPrivileges","GET_PRIVILEGES","allDCPrivileges","loadingPrivileges","statusOpen","updateUserEdited","newDetails","successMessage","failureMessage","searchUsernm","searchEml","searchDspNm","searchPriv","deleteUsername","viewUser","updateUserCreator","updateEditUser","CHANGE_PLAN_PATH","SUCCESS_TOKEN","ERROR_TOKEN","getGraph","primaryHosts","host","hostnameMapping","nodes","edges","primaryHostID","entries","primaryHost","secondaryHosts","to","secondaryHostID","secondaryHost","Exception","NetworkGraph","graph","GET_NETWORK_NEIGHBORHOOD","assetNum","layout","hierarchical","interaction","dragNodes","dragView","events","select","getNetwork","network","document","getElementById","stringToMac","val","returnVal","replace","toLowerCase","showTooltip","description","emptySearch","searchPath","left","right","EditAsset","forwardRef","Slide","getPowerFromProps","pwrCons","pwr","pwrCon","getPowerPortFromProps","pwrPorts","getLists","getModelList","getOwnerList","getDatacenterList","getAssetList","modelNames","networkNames","powerPortNames","modelKey","loadingModels","modelList","networkList","powerPortList","users","user","loadingOwners","ownerList","datacenter","abbreviation","asset","loadingDatacenters","datacenterList","instances","hostnames","hostToModel","instance","hostname","loadingHostnames","assetNumList","assetNumToModelList","availableNetworkConnections","editAsset","json","createJSON","changePlanJSON","changePlanID","defaultValues","asset_number","url","changePlanActive","AssetConstants","CHANGE_PLAN_CREATE_ACTION","updateModel","networkConns","network_connections","updateHostname","updateRack","rackVal","rack","updateRackU","rackU","updateOwner","owner","updateComment","updateDatacenter","datacenter_name","updateTags","tags","changeNetworkMacAddress","prevState","assign","mac_address","changeNetworkHostname","connection_hostname","getPortOptions","changeNetworkPort","connection_port","updatePowerPort","power_connections","changePowerPortState","portNum","leftRight","updateAssetNumber","getPowerConnections","pwrConns","num","split","availableNetworks","networList","availableConnections","reload","portOptions","getModel","displayNetworks","getNetworkConnections","getMacValue","netCons","getConnectingHostname","getConnectionPort","connectionsDisabled","deleteAsset","showConfirmationBox","close","decommissionAsset","DECOMMISSION","openConfirmationBox","closeConfirmationBox","loadingAssetNumber","selectedConnection","powerPortState","canSubmit","updated","MODEL","HOSTNAME","RACK","RACK_U","OWNER","COMMENT","DATACENTER","MAC_ADDRESS","NETWORK_CONNECTIONS","POWER_CONNECTIONS","ASSET_NUMBER","rack_position","dialogDiv","Tooltip","placement","disabled","networkPort","macAddress","networkConnections","k","FormControl","RadioGroup","FormControlLabel","control","Radio","labelPlacement","FormHelperText","multiline","Alert","action","BackdropComponent","BackdropProps","timeout","border","appBar","position","flex","Transition","DetailAsset","closeDetailView","toggleDetails","detailsExpanded","networkNodes","Dialog","fullScreen","TransitionComponent","AppBar","Toolbar","edge","AlertTitle","ExpansionPanel","expanded","ExpansionPanelSummary","expandIcon","aria-controls","ExpansionPanelDetails","FilterAsset","updateStartingLetter","startingLetter","updateEndingLetter","endingLetter","updateStartingNum","startingNum","updateEndingNum","endingNum","updateStartDate","startDate","updateEndDate","endDate","updateUser","showDecommissioned","decAssets","timestamp","Date","decDate","allAssets","updateItems","switchToDecommissioned","checked","switchToDec","Fragment","Select","MenuItem","Switch","InputLabelProps","shrink","descendingComparator","a","b","orderBy","CreateAsset","getNextAssetNum","GET_NEXT_ASSET_NUM","validJSON","createAsset","validateForm","firstFree","free_left","pwrLst","powerPort","exception","next_pair","free_right","ImportAsset","setFile","file","closeImport","showImport","AddAsset","openImport","openCreate","showCreate","closeCreate","ExportAsset","componentDidMount","canCreateChangePlans","openChangePlanModal","changePlanModal","closeChangePlanModal","updatePlanName","changePlanName","beginChangePlan","changeDescriptionModal","CHANGE_PLAN_CREATE","updateChangePlan","change_plan","closeDescriptionModal","createData","DatacenterCommand","headCells","numeric","decommissionHeadCells","TableAsset","body","originalRack","originalrack_position","generateLabels","selectedItems","GENERATE_LABELS","responseType","blob","Blob","createElement","URL","createObjectURL","download","createSortHandler","property","isAsc","order","openDetailedView","dAsset","displayDec","currAsset","detailAsset","assets","decommission_user","tableItems","getDecommissionedAssets","decommissions","showStatusBar","onSelectAllClick","newSelected","n","indexOf","concat","deselectAllClick","selectedIndex","slice","addCheckedItem","getAttribute","openSpeedDial","speedDialOpen","closeSpeedDial","exitChangePlan","switchBool","allSelected","detailStatusOpen","deleteAssetRack","deleteAssetrack_position","detailHostname","elem","table","styledTableRow","headCell","tableCellHead","sortDirection","TableSortLabel","active","visuallyHidden","array","comparator","stabilizedThis","el","sort","stableSort","aria-checked","selected","tabIndex","Checkbox","USER","SpeedDial","ariaLabel","bottom","hidden","icon","onOpen","SpeedDialAction","tooltipTitle","paddingLeft","paddingRight","styledTableCell","marginBottom","clip","top","ErrorBoundary","hasError","errorInfo","children","AssetsView","CreateDatacenter","generateCreateJSON","datacenterAbbreviation","datacenterName","createDatacenter","CREATE","updateDatacenterName","updateDatacenterAbbrevation","getAbbreviation","InputLabel","dc","selectDatacenter","scroll","EditDatacenter","generateEditJSON","dcName","dcAbbrev","editDatacenter","EDIT","show","MinusSquare","SvgIcon","d","PlusSquare","CloseSquare","useSpring","opacity","transform","div","Collapse","RackCommand","StyledTreeItem","iconContainer","group","borderLeft","fade","text","TreeItem","RacksView","handleFormat","newFormats","formats","firstRack","secondRack","racksList","racks","f","TreeView","defaultExpanded","defaultCollapseIcon","defaultExpandIcon","defaultEndIcon","nodeId","heading","typography","pxToRem","fontWeightRegular","ShowDatacenters","useState","rackType","setRackType","rack1","setRack1","rack2","setRack2","datacentersList","selectedDatacenter","ToggleButtonGroup","exclusive","newType","ToggleButton","updateRacks","CREATE_RACKS","DELETE_RACKS","StatsCommand","ConfirmDeteleDC","deleteDatacenter","racksMainPath","DatacenterView","getDatacenters","loadingDCList","GET_ALL_DATACENTERS","fullDatacenter","getAllRacks","currentDatacenter","DELETE","openEditDatacenter","datacenterAbbrev","editDCName","editDCAbbr","showEditDC","closeEditDatacenter","command","GET_RACK_DETAILS","win","focus","showSnack","GET_ALL_RACKS","letter","closeEditDatacneter","DatacenterManagerView","jsonToArr","incomingJSON","JSON","constructor","LogCommand","tables","tableCols","StatisticsView","tableValues","totalUsage","spaceUsage","vendorUsage","modelUsage","ownerUsage","generateReport","GENERATE_REPORT","totalUsageRow","JSONtoArr","column","isNaN","typeKey","timestampKey","LogsView","getLogs","GET_LOGS","parseLog","logs","makeTableData","logItems","filteredLogs","allLogs","filterUser","filterAsset","filteredItems","entry","hasAsset","hasUser","match","request","updateFilterUser","updateFilterAsset","searchbar","placeholder","logItem","aligh","changePlanPath","ChangePlansView","fetchAllChangePlans","CHANGE_PLAN_GET_PLANS","change_plans","changePlans","plan","CHANGE_PLAN_GET_ACTIONS","identifier","details","changePlanDetails","change_plan_actions","startEditing","planName","renameChangePlan","closeRenameDialog","CHANGE_PLAN_EDIT","planId","openRenameDialog","renameDialog","openExecuteDialog","executeDialog","executeId","closeExecuteDialog","executeChangePlan","CHANGE_PLAN_EXECUTE","openDeleteDialog","deleteDialog","deleteId","closeDeleteDialog","deleteChangePlan","CHANGE_PLAN_DELETE","lookup","detail","diff","isCreate","new_record","charAt","toUpperCase","asset_numberOriginal","currentTab","TabViewer","handleProfileMenuOpen","currentTarget","isMenuOpen","handleMenuClose","currentTabID","handleChange","sessionStorage","getItem","tab","removeItem","newValue","setItem","aria-haspopup","Menu","keepMounted","logout","Tabs","indicatorColor","textColor","centered","Tab","audit","Container","ChangePlans","menuButton","marginRight","storedToken","storedPrivilege","storedLoggedIn","storedUsername","PageSelector","login","stringify","loggedIn","history","replaceState","shib","redirected","ReactDOM","render","referrer"],"mappings":"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","file":"static/js/main.a8c402be.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.df79d0ea.png\";","/**\r\n * Constants file\r\n */\r\n\r\nexport const localServerEndpoint = 'http://localhost:4010/';\r\nexport const testServerEndpoint = 'https://parseltongue-finishinge-lfw68m.herokuapp.com/';\r\nexport const devServerEndpoint = 'https://parseltongue-dev.herokuapp.com/';\r\nexport const prodServerEndpoint = 'https://parseltongue-prod.herokuapp.com/';\r\n\r\nexport const serverEndpoint = localServerEndpoint;\r\n\r\n\r\nexport const RackX = [\r\n    'A', 'B', 'C', 'D', 'E',\r\n    'F', 'G', 'H', 'I', 'J',\r\n    'K', 'L', 'M', 'N', 'O',\r\n    'P', 'Q', 'R', 'S', 'T',\r\n    'W', 'X', 'Y', 'Z',\r\n]\r\n\r\nexport const ASSETS_MAIN_PATH = 'instances/';\r\nexport const MODELS_MAIN_PATH = \"models/\";\r\nexport const USERS_MAIN_PATH = \"users/\";\r\nexport const RACKS_MAIN_PATH = \"racks/\";\r\nexport const DATACENTERS_MAIN_PATH = \"datacenters/\";\r\nexport const LOGS_MAIN_PATH = \"logs/\"\r\nexport const PERMISSIONS_MAIN_PATH = \"permissions/\";\r\nexport const DECOMMISSIONS_MAIN_PATH = \"decommissions/\";\r\n\r\nexport const CLIENT_ID = \"ParselTonguesUserAuth\";\r\nexport const CLIENT_SECRET = \"LpUwB*eiK4Iw#1gaCu5jYp1u5uRF3ERsdmuNUGoKYNzn7rHm7b\";\r\nexport const SCOPE = \"basic\";\r\n\r\nexport var SHIB_REDIRECT_URI = \"\";\r\n\r\nif (window.location.href === \"http://localhost:3000\" || window.location.href === \"http://localhost:3000/\") {\r\n    SHIB_REDIRECT_URI = window.location.href;\r\n} else {\r\n    SHIB_REDIRECT_URI = serverEndpoint;\r\n}\r\n\r\nexport const SHIBBOLETH_LOGIN =\r\n    \"https://oauth.oit.duke.edu/oauth/authorize.php?\"\r\n     + \"client_id=\" + encodeURIComponent(CLIENT_ID)\r\n     + \"&client_secret=\" + encodeURIComponent(CLIENT_SECRET)\r\n     + \"&redirect_uri=\" + encodeURIComponent(SHIB_REDIRECT_URI)\r\n     + \"&response_type=token\"\r\n     + \"&state=1129\"\r\n     + \"&scope=\" + encodeURIComponent(SCOPE);\r\n\r\nexport const HTTPS_STATUS_OK = 200;\r\n","export enum Privilege  {\r\n    ADMIN = \"admin\",\r\n    USER = \"user\",\r\n};\r\n","import * as Constants from '../../Constants';\r\n\r\nexport default function getURL(path, endpoint) {\r\n    return Constants.serverEndpoint + path + endpoint;\r\n}\r\n","export enum ModelCommand {\r\n    create = 'create/',\r\n    delete = 'delete/',\r\n    edit = 'edit/',\r\n    view = 'view/',\r\n    detailView = 'detailView/',\r\n    search = 'search/',\r\n    VENDOR_VALUES = 'assistedvendor/',\r\n    UPLOAD_FILE = 'import/',\r\n    EXPORT_FILE = 'export/'\r\n}\r\n","export enum ModelInput {\r\n    Vendor = 'vendor',\r\n    model_number = 'model_number',\r\n    Height = 'height',\r\n    display_color = 'display_color',\r\n    ethernet_ports = 'ethernet_ports',\r\n    power_ports = 'power_ports',\r\n    CPU = 'cpu',\r\n    Memory = 'memory',\r\n    Storage = 'storage',\r\n    Comment = 'comment'\r\n}\r\n","import React from 'react';\r\n\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\n\r\n\r\nexport default class StatusDisplay extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n\r\n        };\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Snackbar open={this.props.open} autoHideDuration={4000} onClose={this.props.closeStatus}>\r\n                    <MuiAlert elevation={6} variant=\"filled\"\r\n                        severity={this.props.severity}\r\n                    >\r\n                        <div>\r\n                        {this.props.message}\r\n                        <IconButton\r\n                            aria-label=\"close\"\r\n                            color=\"inherit\"\r\n                            size=\"small\"\r\n                            onClick={this.props.closeStatus}\r\n                        >\r\n                            <CloseIcon fontSize=\"inherit\" />\r\n                        </IconButton>\r\n                        </div>\r\n                    </MuiAlert >\r\n                </Snackbar>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport StatusDisplay from './helpers/StatusDisplay';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport logo from '../images/logo.png';\r\n\r\n\r\n\r\nexport default class ShibLogin extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            username:'',\r\n            password:'',\r\n            statusMessage:'',\r\n            showStatus:false,\r\n            statusSeverity:'info',\r\n        };\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Grid\r\n                container\r\n                spacing={5}\r\n                direction=\"column\"\r\n                justify=\"flex-start\"\r\n                alignItems=\"center\"\r\n                onKeyDown={(e) => this.onKeyPressed(e)}\r\n                style={{\r\n                    \"minHeight\": \"102vh\",\r\n                    \"background\": \"linear-gradient(to top, #a8e063, #56ab2f)\",\r\n                }}\r\n            >\r\n                <Grid item xs={12}>\r\n                    <img src={logo} alt=\"\" style={{height: \"200px\", \"marginTop\": \"50px\"}} />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <Card\r\n                        style={\r\n                            {\r\n                                minWidth: '20vw',\r\n                            }\r\n                        }\r\n                    >\r\n                        <CardContent>\r\n                            <Grid\r\n                                container\r\n                                spacing={1}\r\n                                direction=\"column\"\r\n                                justify=\"center\"\r\n                                alignItems=\"center\"\r\n                            >\r\n                                <Grid container item alignItems=\"flex-start\" xs={12}>\r\n                                    <Typography\r\n                                        variant=\"h6\"\r\n                                        color=\"textPrimary\"\r\n                                        fontWeight=\"fontWeightBold\"\r\n                                        gutterBottom\r\n                                    >\r\n                                        Please wait while we log you in...\r\n                                    </Typography>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </CardContent>\r\n                    </Card>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <StatusDisplay\r\n                        open={this.state.showStatus}\r\n                        severity={this.state.statusSeverity}\r\n                        closeStatus={this.closeShowStatus}\r\n                        message={this.state.statusMessage}\r\n                    />\r\n                </Grid>\r\n            </Grid>\r\n\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\nimport { Grid, Button, TextField, Card, CardContent, Typography } from '@material-ui/core';\r\nimport axios from 'axios';\r\nimport getURL from './helpers/functions/GetURL';\r\nimport { Privilege } from './enums/privilegeTypes.ts'\r\nimport StatusDisplay from './helpers/StatusDisplay';\r\nimport logo from '../images/logo.png';\r\nimport ShibLogin from './ShibLogin';\r\nimport * as Constants from \"./Constants\";\r\n\r\nconst loginMainPath = 'users/';\r\nconst queryString = require('query-string');\r\n\r\nexport default class Login extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            // Login info\r\n            username:'',\r\n            password:'',\r\n\r\n            // Snackbar\r\n            statusMessage: '',\r\n            showStatus: false,\r\n            statusSeverity: 'info',\r\n\r\n            // If view has been initialized\r\n            initialized: false,\r\n\r\n            // OAuth NetID login\r\n            oauth: false,\r\n        };\r\n\r\n        this.closeShowStatus = this.closeShowStatus.bind(this);\r\n        this.submitCredentials = this.submitCredentials.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        try {\r\n            var params = queryString.parse(window.location.hash.substring(1));\r\n            if (params.access_token != null) {\r\n                this.getDukeCredentials(params.access_token);\r\n                this.setState({ oauth: true });\r\n            }\r\n        } catch(e) {\r\n            console.log(\"tried:\")\r\n        }\r\n\r\n        this.setState({ initialized: true });\r\n    }\r\n\r\n    // Login and send credentials to backend\r\n    submitCredentials() {\r\n        axios.post(\r\n            getURL(loginMainPath, 'authenticate'), {\r\n                username: this.state.username,\r\n                password: this.state.password,\r\n            }).then(response => {\r\n                const message = response.data['message'];\r\n                if (message === 'success') {\r\n                    this.setState({ message: '' });\r\n                    console.log(response);\r\n                    this.props.loginFunc(response.data['token'], this.state.username, response.data['privilege']);\r\n                } else {\r\n                    this.setState({ showStatus: true, statusMessage: message });\r\n                }\r\n            });\r\n        //this.props.loginFunc('token', \"Administrator\", Privilege.ADMIN);\r\n    }\r\n\r\n    // Set the username\r\n    updateUsername(event) {\r\n        this.setState({ username: event.target.value })\r\n    }\r\n\r\n    // Set the password\r\n    updatePassword(event) {\r\n        this.setState({ password: event.target.value })\r\n    }\r\n\r\n    // Close snackbar\r\n    closeShowStatus() {\r\n        this.setState({ showStatus: false })\r\n    }\r\n\r\n    // Fired when key is pressed, login on enter\r\n    onKeyPressed(event) {\r\n        if (event.key === 'Enter') {\r\n            // Intercept key event\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n\r\n            // Login\r\n            this.submitCredentials();\r\n        }\r\n    }\r\n\r\n    // Get Duke info from colab API\r\n    getDukeCredentials = (token) => {\r\n        axios.get('https://api.colab.duke.edu/identity/v1/', {\r\n            headers: {\r\n                'x-api-key': Constants.CLIENT_ID,\r\n                'Authorization': `Bearer ${token}`\r\n            }\r\n        }).then(response => {\r\n            axios.post(\r\n                getURL(loginMainPath, 'oauth'), {\r\n                    \"username\": response.data.netid,\r\n                    \"email\": response.data.mail,\r\n                    \"display_name\": response.data.displayName,\r\n                    \"client_id\": Constants.CLIENT_ID,\r\n                    \"token\": token,\r\n                }).then(response => {\r\n                    const message = response.data['message'];\r\n                    if (response.status === Constants.HTTPS_STATUS_OK) {\r\n                        this.setState({\r\n                            username: '',\r\n                            password: '',\r\n\r\n                            statusMessage: '',\r\n                            showStatus: false,\r\n                            statusSeverity:' info',\r\n\r\n                            initialized: false,\r\n\r\n                            oauth:false,\r\n                         });\r\n\r\n                        this.props.loginFuncOAuth(response.data['token'], response.data.username, response.data['privilege']);\r\n                    } else {\r\n                        this.setState({ showStatus: true, statusMessage: message });\r\n                    }\r\n            });\r\n        });\r\n    }\r\n\r\n    // Redirect to shibboleth login\r\n    loginWithOAuth = () => {\r\n        window.location = Constants.SHIBBOLETH_LOGIN;\r\n    }\r\n\r\n    // Render view\r\n    render() {\r\n        return (\r\n            <div>\r\n                { (this.state.oauth) ? <ShibLogin /> :\r\n                <Grid\r\n                    container\r\n                    spacing={5}\r\n                    direction=\"column\"\r\n                    justify=\"flex-start\"\r\n                    alignItems=\"center\"\r\n                    onKeyDown={(e) => this.onKeyPressed(e)}\r\n                    style={{\r\n                        \"minHeight\": \"102vh\",\r\n                        \"background\": \"#56ab2f\",\r\n                        \"background\": \"-webkit-linear-gradient(to top, #a8e063, #56ab2f)\",\r\n                        \"background\": \"linear-gradient(to top, #a8e063, #56ab2f)\",\r\n                    }}\r\n                >\r\n                    <Grid item xs={12}>\r\n                        <img src={logo} style={{ height: \"200px\", \"marginTop\": \"50px\" }} alt=\"Hyposoft\" />\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <Card style={{ minWidth: '20vw' }}>\r\n                            <CardContent>\r\n                                <Grid\r\n                                    container\r\n                                    spacing={1}\r\n                                    direction=\"column\"\r\n                                    justify=\"center\"\r\n                                    alignItems=\"center\"\r\n                                >\r\n                                    <Grid container item alignItems=\"flex-start\" xs={12}>\r\n                                        <Typography\r\n                                            variant=\"h4\"\r\n                                            color=\"textPrimary\"\r\n                                            fontWeight=\"fontWeightBold\"\r\n                                            gutterBottom\r\n                                        >\r\n                                            Login\r\n                                        </Typography>\r\n                                    </Grid>\r\n                                    <Grid item xs={12}>\r\n                                        <TextField\r\n                                            id=\"username-input\"\r\n                                            label=\"Username\"\r\n                                            variant=\"outlined\"\r\n                                            required={true}\r\n                                            ref='username'\r\n                                            onChange={this.updateUsername.bind(this)}\r\n                                            style={{minWidth: \"15vw\"}}\r\n                                        />\r\n                                    </Grid>\r\n                                    <Grid item xs={12}>\r\n                                        <TextField\r\n                                            id=\"password-input\"\r\n                                            label=\"Password\"\r\n                                            variant=\"outlined\"\r\n                                            required={true}\r\n                                            ref='password'\r\n                                            type=\"password\"\r\n                                            onChange={this.updatePassword.bind(this)}\r\n                                            style={{minWidth: \"15vw\"}}\r\n                                        />\r\n                                    </Grid>\r\n                                    <Grid item xs={12}>\r\n                                        <Button\r\n                                            onClick={this.submitCredentials}\r\n                                            variant=\"contained\"\r\n                                            color=\"primary\"\r\n                                            style={{minWidth: \"15vw\"}}\r\n                                        >\r\n                                            Sign In\r\n                                        </Button>\r\n                                    </Grid>\r\n                                    <Grid container item direciton=\"row\" justify=\"center\" alignItems=\"center\" xs={12}>\r\n                                            <hr style={{width: \"5vw\"}} />\r\n                                            <Typography color=\"textSecondary\">\r\n                                                Or\r\n                                            </Typography>\r\n                                            <hr style={{width: \"5vw\"}} />\r\n                                    </Grid>\r\n                                    <Grid item xs={12}>\r\n                                        <Button\r\n                                            onClick={this.loginWithOAuth}\r\n                                            variant=\"contained\"\r\n                                            color=\"primary\"\r\n                                        >\r\n                                            Sign In with NetID\r\n                                        </Button>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </CardContent>\r\n                        </Card>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <StatusDisplay\r\n                            open={this.state.showStatus}\r\n                            severity={this.state.statusSeverity}\r\n                            closeStatus={this.closeShowStatus}\r\n                            message={this.state.statusMessage}\r\n                        />\r\n                    </Grid>\r\n                </Grid>}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport CloudDownloadIcon from '@material-ui/icons/CloudDownload';\n\nexport default class ExportModel extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {};\n    }\n\n    render() {\n        return (\n            <div>\n                <Paper elevation={3}>\n                <Grid\n                    container\n                    spacing={2}\n                    direction=\"row\"\n                    justify=\"flex-start\"\n                    alignItems=\"center\"\n                    style={{\"padding\": \"10px\"}}\n                >\n                    <Grid item xs={12}>\n                        <Typography variant=\"h6\">Export</Typography>\n                    </Grid>\n                    <Grid item xs={12}>\n                        <Typography>Download what is currently shown in the table.</Typography>\n                    </Grid>\n                    <Grid item xs={12}>\n                        <Button\n                            onClick={this.props.downloadTable}\n                            variant=\"contained\"\n                            color=\"primary\"\n                            startIcon={<CloudDownloadIcon />}\n                            style={{\n                                width: \"100%\"\n                            }}\n                        >\n                            Export\n                        </Button>\n                    </Grid>\n                    <Grid container item direciton=\"row\" justify=\"center\" alignItems=\"center\" xs={12}>\n                        <hr style={{width: \"5vw\"}} />\n                        <Typography color=\"textSecondary\">\n                            Or\n                        </Typography>\n                        <hr style={{width: \"5vw\"}} />\n                    </Grid>\n                    <Grid item xs={12}>\n                        <Button\n                            onClick={this.props.showAll}\n                            variant=\"contained\"\n                            color=\"default\"\n                            style={{\n                                width: \"100%\"\n                            }}\n                        >\n                            Show all models\n                        </Button>\n                    </Grid>\n                </Grid>\n            </Paper>\n            </div>\n        );\n    }\n}\n","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\n\r\nfunction createInputs(name, label) {\r\n    return {label, name};\r\n}\r\n\r\nconst inputs = {\r\n    \"vendor\": createInputs('vendor', \"Vendor\"),\r\n    \"modelNumber\": createInputs('model_number', \"Model Number\"),\r\n    \"height\": createInputs('height', \"Height\"),\r\n    \"displayColor\": createInputs('display_color', \"Display Color\"),\r\n    \"ethernetPorts\": createInputs('ethernet_ports', \"Network Ports\"),\r\n    \"powerPorts\": createInputs('power_ports', \"Power Ports\"),\r\n    \"cpu\": createInputs('cpu', \"CPU\"),\r\n    \"memory\": createInputs('memory', \"Memory\"),\r\n    \"storage\": createInputs('storage', \"Storage\"),\r\n    \"comments\": createInputs('comments', \"Comments\"),\r\n}\r\n\r\nexport default class FilterModel extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            filters: {},\r\n        };\r\n    }\r\n\r\n    updateSearchText(event) {\r\n        if (this.state.filters.hasOwnProperty(event.target.id)) {\r\n            const newFilters = this.state.filters;\r\n            newFilters[event.target.id] = event.target.value;\r\n            this.setState({ filters: newFilters });\r\n            this.forceUpdate();\r\n        } else {\r\n            const newFilters = this.state.filters;\r\n            newFilters[event.target.id] = event.target.value;\r\n            this.setState({ filters: newFilters });\r\n            this.forceUpdate();\r\n        }\r\n    }\r\n\r\n    search() {\r\n        this.props.search(this.state.filters);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Paper elevation={3}>\r\n                <Grid\r\n                    container\r\n                    spacing={2}\r\n                    direction=\"row\"\r\n                    justify=\"flex-start\"\r\n                    alignItems=\"center\"\r\n                    style={{\"padding\": \"10px\"}}\r\n                >\r\n                    <Grid item xs={12}>\r\n                        <Typography variant=\"h5\">Search</Typography>\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6} md={4} lg={3}>\r\n                        <Autocomplete\r\n                            id=\"vendor\"\r\n                            options={this.props.options}\r\n                            includeInputInList\r\n                            freeSolo\r\n                            renderInput={params => (\r\n                            <TextField {...params} label={inputs.vendor.label} name={inputs.vendor.name} onChange={this.updateSearchText.bind(this)} onBlur={this.updateSearchText.bind(this)} variant=\"outlined\" fullWidth />\r\n                            )}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6} md={4} lg={3}>\r\n                        <TextField id=\"model_number\" variant=\"outlined\" label=\"Model Number\" name=\"model_number\" onChange={this.updateSearchText.bind(this)} style={{width: \"100%\"}} />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6} md={4} lg={3}>\r\n                        <TextField id=\"min_height\" type=\"number\" variant=\"outlined\" label=\"Min Height\" name=\"min_height\" onChange={this.updateSearchText.bind(this)} style={{width: \"100%\"}} InputProps={{ inputProps: { min: 1, max: 42} }}/>\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6} md={4} lg={3}>\r\n                        <TextField id=\"max_height\" type=\"number\" variant=\"outlined\" label=\"Max Height\" name=\"max_height\" onChange={this.updateSearchText.bind(this)} style={{width: \"100%\"}} InputProps={{ inputProps: { min: 1, max: 42} }}/>\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6} md={4} lg={3}>\r\n                        <TextField id=\"min_ethernet_ports\" type=\"number\" variant=\"outlined\" label=\"Min Network Ports\" name=\"min_ethernet_ports\" onChange={this.updateSearchText.bind(this)} style={{width: \"100%\"}} InputProps={{ inputProps: { min: 0} }}/>\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6} md={4} lg={3}>\r\n                        <TextField id=\"max_ethernet_ports\" type=\"number\" variant=\"outlined\" label=\"Max Network Ports\" name=\"max_ethernet_ports\" onChange={this.updateSearchText.bind(this)} style={{width: \"100%\"}} InputProps={{ inputProps: { min: 0} }}/>\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6} md={4} lg={3}>\r\n                        <TextField id=\"min_power_ports\" type=\"number\" variant=\"outlined\" label=\"Min Power Ports\" name=\"min_power_ports\" onChange={this.updateSearchText.bind(this)} style={{width: \"100%\"}} InputProps={{ inputProps: { min: 0} }}/>\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6} md={4} lg={3}>\r\n                        <TextField id=\"max_power_ports\" type=\"number\" variant=\"outlined\" label=\"Max Power Ports\" name=\"max_power_ports\" onChange={this.updateSearchText.bind(this)} style={{width: \"100%\"}} InputProps={{ inputProps: { min: 0} }}/>\r\n                    </Grid>\r\n\r\n                    <Grid item xs={12} sm={6} md={4} lg={3}>\r\n                        <TextField id=\"cpu\" variant=\"outlined\" label=\"CPU\" name=\"cpu\" onChange={this.updateSearchText.bind(this)} style={{width: \"100%\"}}/>\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6} md={4} lg={3}>\r\n                        <TextField id=\"min_memory\" type=\"number\" variant=\"outlined\" label=\"Min Memory\" name=\"min_memory\" onChange={this.updateSearchText.bind(this)} style={{width: \"100%\"}} InputProps={{ inputProps: { min: 0} }}/>\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6} md={4} lg={3}>\r\n                        <TextField id=\"max_memory\" type=\"number\" variant=\"outlined\" label=\"Max Memory\" name=\"max_memory\" onChange={this.updateSearchText.bind(this)} style={{width: \"100%\"}} InputProps={{ inputProps: { min: 0} }}/>\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6} md={4} lg={3}>\r\n                        <TextField id=\"storage\" variant=\"outlined\" label=\"Storage\" name=\"storage\" onChange={this.updateSearchText.bind(this)} style={{width: \"100%\"}}/>\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6} md={4} lg={3}>\r\n                        <TextField id=\"comment\" variant=\"outlined\" label=\"Comment\" name=\"comment\" onChange={this.updateSearchText.bind(this)} style={{width: \"100%\"}}/>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <Button\r\n                            onClick={this.search.bind(this)}\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            style={{\r\n                                width: \"100%\"\r\n                            }}\r\n                        >\r\n                            Search\r\n                        </Button>\r\n                    </Grid>\r\n                </Grid>\r\n            </Paper>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\n\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from '@material-ui/core/Button';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { CompactPicker } from 'react-color';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport '../stylesheets/ModelStyles.css';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListSubheader from '@material-ui/core/ListSubheader';\r\n\r\nfunction createInputs(name, label) {\r\n    return {label, name};\r\n}\r\n\r\nconst inputs = {\r\n    \"vendor\": createInputs('vendor', \"Vendor\"),\r\n    \"modelNumber\": createInputs('model_number', \"Model Number\"),\r\n    \"height\": createInputs('height', \"Height\"),\r\n    \"displayColor\": createInputs('display_color', \"Display Color\"),\r\n    \"ethernetPorts\": createInputs('ethernet_ports', \"Network Ports\"),\r\n    \"powerPorts\": createInputs('power_ports', \"Power Ports\"),\r\n    \"cpu\": createInputs('cpu', \"CPU\"),\r\n    \"memory\": createInputs('memory', \"Memory\"),\r\n    \"storage\": createInputs('storage', \"Storage\"),\r\n    \"comment\": createInputs('comment', \"Comment\"),\r\n}\r\n\r\nconst useStyles = theme => ({\r\n    root: {\r\n      flexGrow: 1,\r\n    },\r\n    modal: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        width: \"100%\",\r\n      },\r\n      grid: {\r\n          backgroundColor: theme.palette.background.paper,\r\n          boxShadow: theme.shadows[5],\r\n          padding: theme.spacing(2, 4, 3),\r\n          width: \"50%\"\r\n      },\r\n      progress: {\r\n        display: 'flex',\r\n        '& > * + *': {\r\n          marginLeft: theme.spacing(2),\r\n        },\r\n      },\r\n});\r\n\r\nclass CreateModel extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            color: '#000',\r\n            showModal: false,\r\n            showImportModal: false,\r\n            importedFile: null,\r\n            networkPorts: [],\r\n            numPorts: 0,\r\n        };\r\n    }\r\n\r\n    updateColor = (color) => {\r\n        this.setState({ color: color });\r\n        this.props.updateModelColor(color.hex);\r\n    }\r\n\r\n    showModal = () => {\r\n        this.setState({ showModal: true });\r\n    }\r\n\r\n    showImportModal = () => {\r\n        this.setState({ showImportModal: true });\r\n    }\r\n\r\n    closeModal = () => {\r\n        this.setState({ showModal: false, networkPorts: [], numPorts: 0 });\r\n    }\r\n\r\n    closeImportModal = () => {\r\n        this.setState({ showImportModal: false });\r\n    }\r\n\r\n    create = (event) => {\r\n        event.preventDefault();\r\n        this.props.createModel(this.state.networkPorts);\r\n        this.closeModal();\r\n    }\r\n\r\n    uploadFile = () => {\r\n        const data = new FormData();\r\n        data.append('file', this.state.importedFile);\r\n        this.props.sendUploadedFile(data);\r\n    }\r\n\r\n    chooseFile = (event) => {\r\n        console.log(event);\r\n        this.setState({ importedFile: event.target.files[0] })\r\n    }\r\n\r\n    updateNetworkPorts = (event) => {\r\n        const numPorts = event.target.value === '' ? 0 : event.target.value;\r\n\r\n        var ports = [];\r\n        for (var i = 1; i <= numPorts; i++) {\r\n            ports.push(i.toString());\r\n        }\r\n\r\n        this.setState({ networkPorts: ports, numPorts: numPorts });\r\n        this.props.updateModelCreator(event);\r\n    }\r\n\r\n    updatePort = (port, event) => {\r\n        const ports = this.state.networkPorts;\r\n        ports[port] = event.target.value;\r\n\r\n        this.setState({ networkPorts: ports });\r\n    }\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n\r\n        return (\r\n        <div>\r\n            <Paper elevation={3}>\r\n                <Grid\r\n                    container\r\n                    spacing={2}\r\n                    direction=\"row\"\r\n                    justify=\"flex-start\"\r\n                    alignItems=\"center\"\r\n                    style={{\"padding\": \"10px\"}}\r\n                >\r\n                    <Grid item xs={12}>\r\n                        <Typography\r\n                            variant=\"h5\"\r\n                        >\r\n                            Add\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            style={{\r\n                                width: \"100%\",\r\n                                background: \"green\",\r\n                                color: \"white\"\r\n                            }}\r\n                            onClick={this.showModal}\r\n                        >\r\n                            Create\r\n                        </Button>\r\n                    </Grid>\r\n                    <Grid container item direciton=\"row\" justify=\"center\" alignItems=\"center\" xs={12}>\r\n                        <hr style={{width: \"5vw\"}} />\r\n                        <Typography color=\"textSecondary\">\r\n                            Or\r\n                        </Typography>\r\n                        <hr style={{width: \"5vw\"}} />\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            style={{width: \"100%\"}}\r\n                            startIcon={<CloudUploadIcon />}\r\n                            onClick={() => {this.showImportModal()} }\r\n                        >\r\n                            Import\r\n                        </Button>\r\n                    </Grid>\r\n                </Grid>\r\n            </Paper>\r\n            <Modal\r\n                aria-labelledby=\"transition-modal-title\"\r\n                aria-describedby=\"transition-modal-description\"\r\n                className={classes.modal}\r\n                open={this.state.showModal}\r\n                onClose={this.closeModal}\r\n                closeAfterTransition\r\n            >\r\n                <Fade in={this.state.showModal}>\r\n                    <Backdrop\r\n                        open={this.state.showModal}\r\n                    >\r\n                        <div className={classes.grid}>\r\n                            <form\r\n                                onSubmit={(event) => this.create(event)}\r\n                            >\r\n                        <Grid\r\n                            container\r\n                            spacing={1}\r\n                            direction=\"row\"\r\n                            justify=\"flex-start\"\r\n                            alignItems=\"center\"\r\n                        >\r\n                            <Grid item xs={12}>\r\n                                <Typography variant=\"h5\">New Model</Typography>\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={12} md={6} lg={6}>\r\n                                <Autocomplete\r\n                                    id=\"select-vendor\"\r\n                                    options={this.props.options}\r\n                                    includeInputInList\r\n                                    freeSolo\r\n                                    renderInput={params => (\r\n                                        <TextField {...params} required={true} label={inputs.vendor.label} name={inputs.vendor.name} onChange={this.props.updateModelCreator} onBlur={this.props.updateModelCreator} variant=\"outlined\" fullWidth />\r\n                                    )}\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={6} md={4} lg={3}>\r\n                                <TextField id=\"standard-basic\" required={true} variant=\"outlined\" label={inputs.modelNumber.label} name={inputs.modelNumber.name} onChange={this.props.updateModelCreator}/>\r\n                            </Grid>\r\n                            <Grid item xs={3}>\r\n                                <TextField type=\"number\" id=\"standard-basic\" required={true} variant=\"outlined\" label={inputs.height.label} name={inputs.height.name} onChange={this.props.updateModelCreator} InputProps={{ inputProps: { min: 1, max: 42} }} style={{ width: \"100%\" }} />\r\n                            </Grid>\r\n                            <Grid item xs={3}>\r\n                                <TextField type=\"number\" id=\"standard-basic\" variant=\"outlined\" label={inputs.ethernetPorts.label} name={inputs.ethernetPorts.name} onChange={this.updateNetworkPorts} InputProps={{ inputProps: { min: 0} }} />\r\n                            </Grid>\r\n                            <Grid item xs={3}>\r\n                                <TextField type=\"number\" id=\"standard-basic\" variant=\"outlined\" label={inputs.powerPorts.label} name={inputs.powerPorts.name} onChange={this.props.updateModelCreator} InputProps={{ inputProps: { min: 0} }}/>\r\n                            </Grid>\r\n                            <Grid item xs={3}>\r\n                                <TextField id=\"standard-basic\" variant=\"outlined\" label={inputs.cpu.label} name={inputs.cpu.name} onChange={this.props.updateModelCreator}/>\r\n                            </Grid>\r\n                            <Grid item xs={3}>\r\n                                <TextField type=\"number\" id=\"standard-basic\" variant=\"outlined\" label={inputs.memory.label} name={inputs.memory.name} onChange={this.props.updateModelCreator} InputProps={{ inputProps: { min: 0} }} style={{ width: \"100%\" }}/>\r\n                            </Grid>\r\n                            <Grid item xs={3}>\r\n                                <TextField id=\"standard-basic\" variant=\"outlined\" label={inputs.storage.label} name={inputs.storage.name} onChange={this.props.updateModelCreator}/>\r\n                            </Grid>\r\n                            <Grid item xs={3}>\r\n                                <TextField id=\"standard-basic\" variant=\"outlined\" label={inputs.comment.label} name={inputs.comment.name} onChange={this.props.updateModelCreator}/>\r\n                            </Grid>\r\n                            <Grid item xs={6}>\r\n                                <Typography>Display Color</Typography>\r\n                                <CompactPicker\r\n                                    color={this.state.color}\r\n                                    onChange={this.updateColor}\r\n\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                            <List\r\n                                className={classes.root}\r\n                                subheader={\r\n                                    <ListSubheader component=\"div\" id=\"nested-list-subheader\">\r\n                                      Network Ports\r\n                                    </ListSubheader>\r\n                                  }\r\n                                style={{\r\n                                    maxHeight: \"30vh\",\r\n                                    overflow: \"auto\"\r\n                                }}\r\n                            >\r\n                                {Array.from({length: this.state.numPorts}, (x,i) => i).map((_, index) => {\r\n                                    const labelId = `list-label-${this.state.networkPorts[index]}`;\r\n\r\n                                    return (\r\n                                    <ListItem key={index} role={undefined} dense button>\r\n                                        <ListItemText id={labelId} primary={\"Port \" + (index+1).toString()} />\r\n                                        <TextField defaultValue={this.state.networkPorts[index]} onChange={(e) => this.updatePort(index, e)} />\r\n                                    </ListItem>\r\n                                    );\r\n                                })}\r\n                                {this.state.numPorts === 0 ? <ListItem key=\"add-items\" role={undefined} dense>\r\n                                <ListItemText id=\"add-items-label\" primary=\"Enter the number of network ports above\" />\r\n                                </ListItem> : null}\r\n                                </List>\r\n                            </Grid>\r\n                            <Grid item xs={3}>\r\n                                <Button\r\n                                    variant=\"contained\"\r\n                                    color=\"primary\"\r\n                                    type=\"submit\"\r\n                                    style={{width: \"100%\"}}\r\n                                >\r\n                                    Create\r\n                                </Button>\r\n                            </Grid>\r\n                            <Grid item xs={3}>\r\n                                <Button\r\n                                    variant=\"contained\"\r\n                                    color=\"secondary\"\r\n                                    onClick={this.closeModal}\r\n                                    style={{width: \"100%\"}}\r\n                                >\r\n                                    Cancel\r\n                                </Button>\r\n                            </Grid>\r\n                        </Grid>\r\n                        </form>\r\n                </div>\r\n                </Backdrop>\r\n\r\n                </Fade>\r\n            </Modal>\r\n\r\n            <Modal\r\n                aria-labelledby=\"transition-modal-title\"\r\n                aria-describedby=\"transition-modal-description\"\r\n                className={classes.modal}\r\n                open={this.state.showImportModal}\r\n                onClose={this.closeImportModal}\r\n                closeAfterTransition\r\n            >\r\n                <Fade in={this.state.showImportModal}>\r\n                    <Backdrop\r\n                        open={this.state.showImportModal}\r\n                    >\r\n                        <div className={classes.grid}>\r\n                        <Grid\r\n                            container\r\n                            spacing={1}\r\n                            direction=\"row\"\r\n                            justify=\"flex-start\"\r\n                            alignItems=\"center\"\r\n                        >\r\n                            <Grid item xs={9}>\r\n                                <Typography variant=\"h5\">Import Models</Typography>\r\n                            </Grid>\r\n                            <Grid item xs={3}>\r\n                                <Button\r\n                                    onClick={this.closeImportModal}\r\n                                    style={{ width: \"100%\" }}\r\n                                >\r\n                                    Close\r\n                                </Button>\r\n                            </Grid>\r\n                            <Grid container item direction=\"row\" justify=\"center\" alignItems=\"center\" xs={12}>\r\n\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\ttype='file'\r\n                                    accept=\".csv\"\r\n                                    name=\"models_upload\"\r\n\t\t\t\t\t\t\t\t\tonChange={(event) => this.chooseFile(event)}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t<Grid container item direciton=\"row\" justify=\"center\" alignItems=\"center\" xs={12}>\r\n                                <Button\r\n                                    variant=\"contained\"\r\n                                    color=\"primary\"\r\n\t\t\t\t\t\t\t\t\tstyle={{width: \"40%\"}}\r\n\t\t\t\t\t\t\t\t\tonClick={() => {this.uploadFile()}}\r\n                                >\r\n                                    Upload File\r\n                                </Button>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </div>\r\n                </Backdrop>\r\n                </Fade>\r\n            </Modal>\r\n        </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withStyles(useStyles)(CreateModel);\r\n","\r\n\r\n\r\nexport const GENERAL_MODEL_ERROR =  \"There was an error in the backend. Could not perform the given model operation at this time.\";\r\n","import React from 'react';\nimport { Table, TableBody, TableCell, TableContainer, TableHead, TableRow } from '@material-ui/core';\nimport { Paper, Popover, Typography, Modal, Backdrop, Fade } from '@material-ui/core';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport CommentIcon from '@material-ui/icons/Comment';\nimport ViewListIcon from '@material-ui/icons/ViewList';\nimport EditIcon from '@material-ui/icons/Edit';\nimport { withStyles } from '@material-ui/core/styles';\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { CompactPicker } from 'react-color';\nimport { List, ListItem, ListItemText, ListSubheader } from '@material-ui/core';\nimport { Privilege } from '../../enums/privilegeTypes.ts'\nimport axios from 'axios';\nimport { CircularProgress } from '@material-ui/core';\nimport { ModelCommand } from '../enums/ModelCommands.ts'\nimport getURL from '../../helpers/functions/GetURL';\nimport * as ModelConstants from \"../ModelConstants\";\n\nconst useStyles = theme => ({\n    root: {\n        flexGrow: 1,\n    },\n    modal: {\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'center',\n            width: \"100%\",\n            margin:\"0 auto\",\n            overflow: \"scroll\"\n        },\n        grid: {\n                backgroundColor: theme.palette.background.paper,\n                boxShadow: theme.shadows[5],\n                padding: theme.spacing(2, 4, 3),\n                width: \"50%\"\n        },\n        progress: {\n            display: 'flex',\n            '& > * + *': {\n                marginLeft: theme.spacing(2),\n            },\n        },\n});\n\nconst modelsMainPath = 'models/';\n\nfunction createInputs(name, label) {\n        return {label, name};\n}\n\nconst inputs = {\n    \"vendor\": createInputs('vendor', \"Vendor\", ),\n    \"modelNumber\": createInputs('model_number', \"Model Number\"),\n    \"height\": createInputs('height', \"Height\"),\n    \"displayColor\": createInputs('display_color', \"Display Color\"),\n    \"ethernetPorts\": createInputs('ethernet_ports', \"Network Ports\"),\n    \"powerPorts\": createInputs('power_ports', \"Power Ports\"),\n    \"cpu\": createInputs('cpu', \"CPU\"),\n    \"memory\": createInputs('memory', \"Memory\"),\n    \"storage\": createInputs('storage', \"Storage\"),\n    \"comment\": createInputs('comment', \"Comment\"),\n}\n\nclass ModelsTable extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n                popoverAnchor: null,\n                commentPopover: null,\n\n                networkPorts: [],\n                numPorts: 0,\n\n                showDetailedView: false,\n                showDeleteModal: false,\n\n                row: null,\n                comment: \"\",\n                color: '#000',\n\n                detailViewLoading: false,\n\n                detailedValues : {\n                        'vendor':'',\n                        'model_number':'',\n                        'height':'',\n                        'display_color':'',\n                        'ethernet_ports':[],\n                        'power_ports':'',\n                        'cpu':'',\n                        'memory':'',\n                        'storage':'',\n                        'comment':'',\n                },\n\n                originalVendor: '',\n                originalModelNumber: '',\n                originalHeight: '',\n        };\n\n        axios.defaults.headers.common['token'] = this.props.token;\n        axios.defaults.headers.common['privilege'] = this.props.privilege;\n    }\n\n    updateColor = (color) => {\n        var oldDetails = this.state.detailedValues;\n        oldDetails.display_color = color.hex;\n        this.setState({ color: color, detailedValues: oldDetails });\n        this.props.updateModelColor(color.hex);\n    }\n\n    // Show the detail view of a model to edit\n    showDetailedView = (row) => {\n        this.setState({\n            row: row,\n            showDetailedView: true,\n            detailViewLoading: true,\n            color: row[\"Display Color\"] === null ? \"#000000\" : row[\"Display Color\"],\n            networkPorts: row[\"Network Ports\"] === null ? [] : row[\"Network Ports\"],\n            numPorts: row[\"Network Ports\"] === null ? 0 : row[\"Network Ports\"].length\n        });\n\n        this.detailViewModel(row[\"Vendor\"], row[\"Model Number\"]);\n    }\n\n    // Get the details of a model\n    detailViewModel = (vendor, modelNum) => {\n        axios.post(\n            getURL(modelsMainPath, ModelCommand.detailView), {\n                'vendor': vendor,\n                'model_number': modelNum,\n            }).then(response => {\n                    const model = response.data['models'][0];\n                    this.setState({\n                        detailedValues: model,\n                        detailViewLoading: false,\n                        originalVendor: model[\"vendor\"],\n                        originalModelNumber: model[\"model_number\"],\n                        originalHeight: model[\"height\"]\n                    });\n            }).catch(function(error) {\n                this.setState({\n                    showStatus: true,\n                    statusMessage: ModelConstants.GENERAL_MODEL_ERROR,\n                    statusSeverity: \"error\"\n                });\n            });\n    }\n\n    // Close the detail view of a model\n    closeDetailedView = () => {\n            this.setState({ showDetailedView: false, row: null, color: \"#000000\", originalVendor: \"\", originalModelNumber: \"\", originalHeight: \"\" });\n    }\n\n    // Show delete model confirmation\n    showDeleteModal = (row) => {\n            this.setState({ showDeleteModal: true, originalVendor: row[\"Vendor\"], originalModelNumber: row[\"Model Number\"] });\n    }\n\n    // Close delete model confirmation\n    closeDeleteModal = () => {\n                this.setState({ showDeleteModal: false, originalVendor: \"\", originalModelNumber: \"\", originalHeight: \"\" });\n    }\n\n    // Delete a model\n    delete = () => {\n        this.props.deleteModel(this.state.originalVendor, this.state.originalModelNumber);\n        this.closeDeleteModal();\n    }\n\n    clickInfo = (event, ports) => {\n            this.setState({ popoverAnchor: event.target, networkPorts: ports });\n    }\n\n    clickComment = (event, comment) => {\n            this.setState({ commentPopover: event.target, comment: comment });\n    }\n\n    handlePopoverClose = () => {\n            this.setState({ popoverAnchor: null });\n    }\n\n    handleCommentPopoverClose = () => {\n            this.setState({ commentPopover: null });\n    }\n\n    updateNetworkPorts = (event) => {\n        const numPorts = event.target.value === '' ? 0 : event.target.value;\n\n        var ports = [];\n        for (var i = 1; i <= numPorts; i++) {\n                ports.push(i.toString());\n        }\n\n        this.setState({ networkPorts: ports, numPorts: numPorts });\n        this.updateModelEdited(event);\n    }\n\n        updatePort = (port, event) => {\n                const ports = this.state.networkPorts;\n                ports[port] = event.target.value;\n\n                this.setState({ networkPorts: ports });\n        }\n\n        save = () => {\n                this.props.editModel(this.state.originalVendor, this.state.originalModelNumber, this.state.originalHeight, this.state.detailedValues, this.state.networkPorts);\n                this.closeDetailedView();\n        }\n\n        updateModelEdited = (event) => {\n                this.state.detailedValues[event.target.name] = event.target.value;\n                this.forceUpdate()\n        }\n\n\n\n    render() {\n        const { classes } = this.props;\n\n        return (\n            <div>\n                <TableContainer component={Paper}>\n                    <Table style={{ minWidth: 1000 }} aria-label=\"simple table\">\n                        <TableHead>\n                            <TableRow>\n                                {this.props.columns.map(col => (\n                                    <TableCell align=\"center\">\n                                        <span id={col} style={{ fontWeight: \"bold\" }}>\n                                            {col}\n                                        </span>\n                                    </TableCell>\n                                ))}\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            {this.props.vals.map((row, index) => (\n                                <TableRow id={index} hover={true}>\n                                    {this.props.privilege.admin || this.props.privilege.model ? (\n                                        <TableCell scope=\"row\" align=\"center\">\n                                            <Button\n                                                startIcon={<EditIcon />}\n                                                onClick={() => this.showDetailedView(row)}\n                                            />\n                                            <Button\n                                                startIcon={<DeleteIcon />}\n                                                onClick={() => this.showDeleteModal(row)}\n                                            />\n                                        </TableCell>\n                                    ) : null}\n                                    {this.props.keys.map(key => {\n                                        if (key === \"Display Color\") {\n                                            return (\n                                                <TableCell\n                                                    scope=\"row\"\n                                                    align=\"center\"\n                                                    style={{\n                                                        backgroundColor: row[key]\n                                                    }}\n                                                ></TableCell>\n                                            );\n                                        }\n\n                                        if (key === \"Network Ports\") {\n                                            return (\n                                                <TableCell scope=\"row\" align=\"center\">\n                                                    {row[key] === null ? \"\" : row[key].length}\n                                                    {row[key] == null ? null : (\n                                                        <Button style={{ margin: \"5px\" }}>\n                                                            <ViewListIcon\n                                                                onClick={e => {\n                                                                    this.clickInfo(e, row[key]);\n                                                                }}\n                                                            />\n                                                        </Button>\n                                                    )}\n                                                </TableCell>\n                                            );\n                                        }\n\n                                        if (key == \"Comment\") {\n                                            return row[\"Comment\"] !== null && row[\"Comment\"].length > 0 ? (\n                                                <TableCell scope=\"row\" align=\"center\">\n                                                    <Button\n                                                        startIcon={<CommentIcon />}\n                                                        onClick={e => this.clickComment(e, row[\"Comment\"])}\n                                                    />\n                                                </TableCell>\n                                            ) : (\n                                                <TableCell scope=\"row\" align=\"center\"></TableCell>\n                                            );\n                                        }\n\n                                        return (\n                                            <TableCell scope=\"row\" align=\"center\">\n                                                {row[key]}\n                                            </TableCell>\n                                        );\n                                    })}\n                                </TableRow>\n                            ))}\n                        </TableBody>\n                    </Table>\n                </TableContainer>\n                <Popover\n                    id={Boolean(this.state.popoverAnchor) ? \"simple-popover\" : undefined}\n                    open={Boolean(this.state.popoverAnchor)}\n                    anchorEl={this.state.popoverAnchor}\n                    onClose={this.handlePopoverClose}\n                    anchorOrigin={{\n                        vertical: \"bottom\",\n                        horizontal: \"center\"\n                    }}\n                    transformOrigin={{\n                        vertical: \"top\",\n                        horizontal: \"center\"\n                    }}\n                >\n                    <List\n                        className={classes.root}\n                        subheader={\n                            <ListSubheader component=\"div\" id=\"nested-list-subheader\">\n                                Network Ports\n                            </ListSubheader>\n                        }\n                    >\n                        {this.state.networkPorts.map(value => {\n                            const labelId = `checkbox-list-label-${value}`;\n\n                            return (\n                                <ListItem key={value} role={undefined} dense button>\n                                    <ListItemText id={labelId} primary={value} />\n                                </ListItem>\n                            );\n                        })}\n                    </List>\n                </Popover>\n                <Popover\n                    id={Boolean(this.state.commentPopover) ? \"simple-popover\" : undefined}\n                    open={Boolean(this.state.commentPopover)}\n                    anchorEl={this.state.commentPopover}\n                    onClose={this.handleCommentPopoverClose}\n                    anchorOrigin={{\n                        vertical: \"bottom\",\n                        horizontal: \"center\"\n                    }}\n                    transformOrigin={{\n                        vertical: \"top\",\n                        horizontal: \"center\"\n                    }}\n                >\n                    <Typography\n                        variant=\"body1\"\n                        style={{\n                            padding: \"30px\"\n                        }}\n                    >\n                        {this.state.comment}\n                    </Typography>\n                </Popover>\n                <Modal\n                    aria-labelledby=\"transition-modal-title\"\n                    aria-describedby=\"transition-modal-description\"\n                    className={classes.modal}\n                    open={this.state.showDetailedView}\n                    onClose={this.closeDetailedView}\n                    closeAfterTransition\n                >\n                    <Fade in={this.state.showDetailedView}>\n                        <Backdrop open={this.state.showDetailedView}>\n                            <div className={classes.grid}>\n                                {this.state.detailViewLoading ? (\n                                    <CircularProgress />\n                                ) : (\n                                    <Grid\n                                        container\n                                        spacing={1}\n                                        direction=\"row\"\n                                        justify=\"flex-start\"\n                                        alignItems=\"center\"\n                                    >\n                                        <Grid item xs={12}>\n                                            <Typography variant=\"h5\">Model Details</Typography>\n                                        </Grid>\n                                        <Grid item xs={12} sm={12} md={6} lg={6}>\n                                            <Autocomplete\n                                                id=\"select-vendor\"\n                                                options={this.props.options}\n                                                defaultValue={\n                                                    this.state.detailedValues == null\n                                                        ? \"\"\n                                                        : this.state.detailedValues.vendor\n                                                }\n                                                includeInputInList\n                                                freeSolo\n                                                renderInput={params => (\n                                                    <TextField\n                                                        {...params}\n                                                        label={inputs.vendor.label}\n                                                        name={inputs.vendor.name}\n                                                        onChange={this.updateModelEdited}\n                                                        onBlur={this.updateModelEdited}\n                                                        variant=\"outlined\"\n                                                        fullWidth\n                                                    />\n                                                )}\n                                            />\n                                        </Grid>\n                                        <Grid item xs={12} sm={6} md={4} lg={3}>\n                                            <TextField\n                                                id=\"standard-basic\"\n                                                variant=\"outlined\"\n                                                label={inputs.modelNumber.label}\n                                                name={inputs.modelNumber.name}\n                                                defaultValue={\n                                                    this.state.detailedValues == null\n                                                        ? \"\"\n                                                        : this.state.detailedValues.model_number\n                                                }\n                                                onChange={this.updateModelEdited}\n                                            />\n                                        </Grid>\n                                        <Grid item xs={3}>\n                                            <TextField\n                                                type=\"number\"\n                                                id=\"standard-basic\"\n                                                variant=\"outlined\"\n                                                label={inputs.height.label}\n                                                name={inputs.height.name}\n                                                defaultValue={\n                                                    this.state.detailedValues == null\n                                                        ? \"\"\n                                                        : this.state.detailedValues.height\n                                                }\n                                                onChange={this.updateModelEdited}\n                                                InputProps={{ inputProps: { min: 1, max: 42 } }}\n                                                style={{ width: \"100%\" }}\n                                            />\n                                        </Grid>\n                                        <Grid item xs={3}>\n                                            <TextField\n                                                type=\"number\"\n                                                id=\"standard-basic\"\n                                                variant=\"outlined\"\n                                                label={inputs.ethernetPorts.label}\n                                                name={inputs.ethernetPorts.name}\n                                                defaultValue={\n                                                    this.state.detailedValues == null\n                                                        ? \"\"\n                                                        : this.state.detailedValues.ethernet_ports == null\n                                                        ? \"\"\n                                                        : this.state.detailedValues.ethernet_ports.length\n                                                }\n                                                onChange={this.updateNetworkPorts}\n                                                InputProps={{ inputProps: { min: 0 } }}\n                                            />\n                                        </Grid>\n                                        <Grid item xs={3}>\n                                            <TextField\n                                                type=\"number\"\n                                                id=\"standard-basic\"\n                                                variant=\"outlined\"\n                                                label={inputs.powerPorts.label}\n                                                name={inputs.powerPorts.name}\n                                                defaultValue={\n                                                    this.state.detailedValues == null\n                                                        ? \"\"\n                                                        : this.state.detailedValues.power_ports\n                                                }\n                                                onChange={this.updateModelEdited}\n                                                InputProps={{ inputProps: { min: 0 } }}\n                                            />\n                                        </Grid>\n                                        <Grid item xs={3}>\n                                            <TextField\n                                                id=\"standard-basic\"\n                                                variant=\"outlined\"\n                                                label={inputs.cpu.label}\n                                                name={inputs.cpu.name}\n                                                defaultValue={\n                                                    this.state.detailedValues == null\n                                                        ? \"\"\n                                                        : this.state.detailedValues.cpu\n                                                }\n                                                onChange={this.updateModelEdited}\n                                            />\n                                        </Grid>\n                                        <Grid item xs={3}>\n                                            <TextField\n                                                type=\"number\"\n                                                id=\"standard-basic\"\n                                                variant=\"outlined\"\n                                                label={inputs.memory.label}\n                                                name={inputs.memory.name}\n                                                defaultValue={\n                                                    this.state.detailedValues == null\n                                                        ? \"\"\n                                                        : this.state.detailedValues.memory\n                                                }\n                                                onChange={this.updateModelEdited}\n                                                InputProps={{ inputProps: { min: 0 } }}\n                                                style={{ width: \"100%\" }}\n                                            />\n                                        </Grid>\n                                        <Grid item xs={3}>\n                                            <TextField\n                                                id=\"standard-basic\"\n                                                variant=\"outlined\"\n                                                label={inputs.storage.label}\n                                                name={inputs.storage.name}\n                                                defaultValue={\n                                                    this.state.detailedValues == null\n                                                        ? \"\"\n                                                        : this.state.detailedValues.storage\n                                                }\n                                                onChange={this.updateModelEdited}\n                                            />\n                                        </Grid>\n                                        <Grid item xs={3}>\n                                            <TextField\n                                                id=\"standard-basic\"\n                                                variant=\"outlined\"\n                                                label={inputs.comment.label}\n                                                name={inputs.comment.name}\n                                                defaultValue={\n                                                    this.state.detailedValues == null\n                                                        ? \"\"\n                                                        : this.state.detailedValues.comment\n                                                }\n                                                onChange={this.updateModelEdited}\n                                            />\n                                        </Grid>\n                                        <Grid item xs={6}>\n                                            <Typography>Display Color</Typography>\n                                            <CompactPicker\n                                                color={this.state.color}\n                                                onChange={this.updateColor}\n                                            />\n                                        </Grid>\n                                        <Grid item xs={12}>\n                                            <List\n                                                className={classes.root}\n                                                subheader={\n                                                    <ListSubheader component=\"div\" id=\"nested-list-subheader\">\n                                                        Network Ports\n                                                    </ListSubheader>\n                                                }\n                                                style={{\n                                                    maxHeight: \"30vh\",\n                                                    overflow: \"auto\"\n                                                }}\n                                            >\n                                                {Array.from({ length: this.state.numPorts }, (x, i) => i).map(\n                                                    (_, index) => {\n                                                        const labelId = `list-label-${this.state.networkPorts[index]}`;\n\n                                                        return (\n                                                            <ListItem key={index} role={undefined} dense button>\n                                                                <ListItemText\n                                                                    id={labelId}\n                                                                    primary={\"Port \" + (index + 1).toString()}\n                                                                />\n                                                                <TextField\n                                                                    defaultValue={this.state.networkPorts[index]}\n                                                                    onChange={e => this.updatePort(index, e)}\n                                                                />\n                                                            </ListItem>\n                                                        );\n                                                    }\n                                                )}\n                                                {this.state.numPorts === 0 ? (\n                                                    <ListItem key=\"add-items\" role={undefined} dense>\n                                                        <ListItemText\n                                                            id=\"add-items-label\"\n                                                            primary=\"Enter the number of network ports above\"\n                                                        />\n                                                    </ListItem>\n                                                ) : null}\n                                            </List>\n                                        </Grid>\n                                        <Grid item xs={3}>\n                                            <Button\n                                                variant=\"contained\"\n                                                color=\"primary\"\n                                                onClick={this.save}\n                                                style={{ width: \"100%\" }}\n                                            >\n                                                Save\n                                            </Button>\n                                        </Grid>\n                                        <Grid item xs={3}>\n                                            <Button\n                                                variant=\"contained\"\n                                                color=\"secondary\"\n                                                onClick={this.closeDetailedView}\n                                                style={{ width: \"100%\" }}\n                                            >\n                                                Cancel\n                                            </Button>\n                                        </Grid>\n                                    </Grid>\n                                )}\n                            </div>\n                        </Backdrop>\n                    </Fade>\n                </Modal>\n\n                <Modal\n                    aria-labelledby=\"transition-modal-title\"\n                    aria-describedby=\"transition-modal-description\"\n                    className={classes.modal}\n                    open={this.state.showDeleteModal}\n                    onClose={this.closeDeleteModal}\n                    closeAfterTransition\n                >\n                    <Fade in={this.state.showDeleteModal}>\n                        <Backdrop open={this.state.showDeleteModal}>\n                            <div className={classes.grid}>\n                                <Grid\n                                    container\n                                    spacing={1}\n                                    direction=\"row\"\n                                    justify=\"flex-start\"\n                                    alignItems=\"center\"\n                                >\n                                    <Grid item xs={12}>\n                                        <Typography variant=\"h5\">Are you sure?</Typography>\n                                    </Grid>\n                                    <Grid item xs={12} sm={12} md={6} lg={6}>\n                                        <Typography variant=\"body1\">\n                                            Doing this will remove the model permanently.\n                                        </Typography>\n                                    </Grid>\n\n                                    <Grid item xs={3}>\n                                        <Button\n                                            variant=\"contained\"\n                                            color=\"secondary\"\n                                            onClick={this.delete}\n                                            style={{ width: \"100%\" }}\n                                        >\n                                            Yes\n                                        </Button>\n                                    </Grid>\n                                    <Grid item xs={3}>\n                                        <Button\n                                            variant=\"contained\"\n                                            color=\"primary\"\n                                            onClick={this.closeDeleteModal}\n                                            style={{ width: \"100%\" }}\n                                        >\n                                            No\n                                        </Button>\n                                    </Grid>\n                                </Grid>\n                            </div>\n                        </Backdrop>\n                    </Fade>\n                </Modal>\n            </div>\n        );\n    }\n}\n\nexport default withStyles(useStyles)(ModelsTable);\n","export enum UserCommand {\r\n    create = 'create/',\r\n    delete = 'delete/',\r\n    edit = 'edit/',\r\n    view = 'view/',\r\n    detailView = 'detailView/',\r\n    search='search/',\r\n}\r\n","import React from 'react';\r\nimport axios from 'axios';\r\nimport { CSVLink } from \"react-csv\";\r\n\r\nimport { ModelCommand } from '../enums/ModelCommands.ts'\r\nimport { ModelInput } from '../enums/ModelInputs.ts'\r\n\r\nimport ExportModel from '../helpers/ExportModel';\r\nimport FilterModel from '../helpers/FilterModel';\r\nimport CreateModel from '../helpers/CreateModel';\r\n\r\nimport { Privilege } from '../../enums/privilegeTypes.ts'\r\n\r\nimport getURL from '../../helpers/functions/GetURL';\r\nimport ModelsTable from '../helpers/ModelsTable';\r\nimport { Typography } from '@material-ui/core';\r\n\r\nimport * as ModelConstants from \"../ModelConstants\";\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nimport StatusDisplay from \"../../helpers/StatusDisplay\";\r\n\r\nconst columns = [\r\n    'Vendor',\r\n    'Model Number',\r\n    'Height',\r\n    'Display Color',\r\n    'Network Ports',\r\n    'Power Ports',\r\n    'CPU',\r\n    'Memory',\r\n    'Storage',\r\n    'Comment',\r\n]\r\n\r\nconst adminColumns = [\r\n    'Actions',\r\n    'Vendor',\r\n    'Model Number',\r\n    'Height',\r\n    'Display Color',\r\n    'Network Ports',\r\n    'Power Ports',\r\n    'CPU',\r\n    'Memory',\r\n    'Storage',\r\n    'Comment',\r\n]\r\n\r\nconst columnLookup = {\r\n    \"vendor\": \"Vendor\",\r\n    \"model_number\": \"Model Number\",\r\n    \"height\": \"Height\",\r\n    'display_color': 'Display Color',\r\n    'ethernet_ports': 'Network Ports',\r\n    'power_ports': 'Power Ports',\r\n    'cpu': 'CPU',\r\n    'memory': 'Memory',\r\n    'storage': 'Storage',\r\n    'comment': \"Comment\"\r\n}\r\n\r\nconst modelsMainPath = 'models/';\r\nconst modelDownloadFileName = 'models.csv';\r\n\r\nexport default class ModelsView extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            // modals\r\n            showCreateModal: false,\r\n            showImportModal: false,\r\n\r\n            // table items\r\n            items: [],\r\n            rows: [],\r\n\r\n            // vals for creating a new model\r\n            createdModel : {\r\n                'vendor':'',\r\n                'model_number':'',\r\n                'height':'',\r\n                'display_color':'',\r\n                'ethernet_ports':'',\r\n                'power_ports':'',\r\n                'cpu':'',\r\n                'memory':'',\r\n                'storage':'',\r\n                'comment':'',\r\n            },\r\n            createdVendor:'',\r\n            createdModelNum:'',\r\n            createdHeight:'',\r\n            createdDispClr:'',\r\n            createdEthPorts:'',\r\n            createdPwrPorts:'',\r\n            createdCPU:'',\r\n            createdMem:'',\r\n            createdStorage:'',\r\n            createdComments:'',\r\n\r\n            detailedValues : {\r\n                'vendor':'',\r\n                'model_number':'',\r\n                'height':'',\r\n                'display_color':'',\r\n                'ethernet_ports':'',\r\n                'power_ports':'',\r\n                'cpu':'',\r\n                'memory':'',\r\n                'storage':'',\r\n                'comment':'',\r\n            },\r\n\r\n            // vals for deleting a model\r\n            deleteVendor:'',\r\n            deleteModel:'',\r\n\r\n            // vals for viewing a model\r\n            viewVendor:'',\r\n            viewModel:'',\r\n\r\n            // searching a model\r\n            searchText:\"\",\r\n            searchVendor:'',\r\n            searchModelNum:'',\r\n            searchMinHeight:'',\r\n            searchMaxHeight:'',\r\n            searchMinNetworkPorts: '',\r\n            searchMaxNetworkPorts: '',\r\n            searchMinPower: '',\r\n            searchMaxPower: '',\r\n            searchCPU: '',\r\n            searchMinMem: '',\r\n            searchMaxMem: '',\r\n            searchStore: '',\r\n            searchComment: '',\r\n\r\n            // csv data\r\n            csvData:'',\r\n\r\n            showStatus:false,\r\n            statusSeverity:'',\r\n            statusMessage:'',\r\n            detailshowStatus:false,\r\n            detailStatusSeverity:'',\r\n            detailStatusMessage:'',\r\n            createshowStatus:false,\r\n            statusSeverity:'',\r\n            statusMessage:'',\r\n\r\n            vendorsList:[],\r\n            madeVendorQuery:false,\r\n\r\n        };\r\n\r\n        axios.defaults.headers.common['token'] = this.props.token;\r\n        axios.defaults.headers.common['privilege'] = this.props.privilege;\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.searchModels();\r\n        this.getVendorList();\r\n    }\r\n\r\n    createModel = (networkPorts) => {\r\n        axios.post(\r\n            getURL(modelsMainPath, ModelCommand.create),\r\n            {\r\n                'vendor':this.state.createdModel[ModelInput.Vendor],\r\n                'model_number':this.state.createdModel[ModelInput.model_number],\r\n                'height':this.state.createdModel[ModelInput.Height],\r\n                'display_color':this.state.createdModel[ModelInput.display_color],\r\n                'ethernet_ports':this.state.createdModel[ModelInput.ethernet_ports],\r\n                'power_ports':this.state.createdModel[ModelInput.power_ports],\r\n                'cpu':this.state.createdModel[ModelInput.CPU],\r\n                'memory':this.state.createdModel[ModelInput.Memory],\r\n                'storage':this.state.createdModel[ModelInput.Storage],\r\n                'comment':this.state.createdModel[ModelInput.Comment],\r\n                'ethernet_ports': networkPorts,\r\n            }\r\n            ).then(\r\n                response => {\r\n                    console.log(response);\r\n                    if (response.data.message === 'success') {\r\n                        this.setState({\r\n                            showStatus: true,\r\n                            statusMessage: \"Successfully created model\",\r\n                            statusSeverity:\"success\",\r\n                            createdModel : {\r\n                                'vendor':'',\r\n                                'model_number':'',\r\n                                'height':'',\r\n                                'display_color':'',\r\n                                'ethernet_ports':'',\r\n                                'power_ports':'',\r\n                                'cpu':'',\r\n                                'memory':'',\r\n                                'storage':'',\r\n                                'comment':'',\r\n                            },\r\n                            showCreateModal:false,\r\n                        });\r\n                        this.getVendorList();\r\n                        this.searchModels();\r\n                    } else {\r\n                        this.setState({ createshowStatus: true, showStatus:true, statusMessage: response.data.message, statusSeverity:\"error\" })\r\n                    }\r\n                }).catch(\r\n                    this.setState({ createshowStatus: true, statusMessage: ModelConstants.GENERAL_MODEL_ERROR, statusSeverity:\"error\" })\r\n                );\r\n    }\r\n\r\n    editModel = (originalVendor, originalModelNum, originalHeight, detailedValues, networkPorts) => {\r\n        axios.post(\r\n            getURL(modelsMainPath, ModelCommand.edit),\r\n            {\r\n                'vendorOriginal': originalVendor,\r\n                'model_numberOriginal': originalModelNum,\r\n                'heightOriginal': originalHeight,\r\n                'vendor': detailedValues[ModelInput.Vendor],\r\n                'model_number': detailedValues[ModelInput.model_number],\r\n                'height': detailedValues[ModelInput.Height],\r\n                'display_color': detailedValues[ModelInput.display_color],\r\n                'ethernet_ports': networkPorts,\r\n                'power_ports': detailedValues[ModelInput.power_ports],\r\n                'cpu': detailedValues[ModelInput.CPU],\r\n                'memory': detailedValues[ModelInput.Memory],\r\n                'storage': detailedValues[ModelInput.Storage],\r\n                'comment': detailedValues[ModelInput.Comment],\r\n            }\r\n            ).then(\r\n                response => {\r\n                    console.log(response);\r\n                    if (response.data.message === 'success') {\r\n                        this.setState({\r\n                            showStatus: true,\r\n                            statusSeverity:'success',\r\n                            statusMessage: \"Successfully edited model\",\r\n                            showDetailedView:false\r\n                        });\r\n                        this.getVendorList();\r\n                        this.searchModels();\r\n                    } else {\r\n                        this.setState({ detailshowStatus: true, detailStatusMessage: response.data.message, detailStatusSeverity:\"error\" })\r\n                    }\r\n                }).catch(\r\n                    this.setState({ detailshowStatus: true, detailStatusMessage: ModelConstants.GENERAL_MODEL_ERROR, detailStatusSeverity:\"error\" })\r\n                );\r\n    }\r\n\r\n    deleteModel = (originalVendor, originalModelNumber) => {\r\n        console.log(originalVendor);\r\n        axios.post(\r\n            getURL(modelsMainPath, ModelCommand.delete),\r\n            {\r\n                'vendor': originalVendor,\r\n                'model_number': originalModelNumber,\r\n            }\r\n            ).then(\r\n                response => {\r\n                    if (response.data.message === 'success') {\r\n                        this.setState({\r\n                            showStatus: true,\r\n                            statusSeverity:'success',\r\n                            statusMessage: \"Successfully deleted model\",\r\n                        });\r\n                        this.getVendorList();\r\n                        this.searchModels();\r\n                    } else {\r\n                        this.setState({ showStatus: true, statusMessage: response.data.message, statusSeverity:\"error\" })\r\n                    }\r\n                });\r\n    }\r\n\r\n    detailViewModel = (vendor, modelNum) => {\r\n        axios.post(\r\n            getURL(modelsMainPath, ModelCommand.detailView),\r\n            {\r\n                'vendor': vendor,\r\n                'model_number': modelNum,\r\n            }\r\n            ).then(response => {\r\n                this.setState({ detailedValues: response.data['models'][0], detailViewLoading: false});\r\n            }\r\n            ).catch(function(error) {\r\n                this.setState({ showStatus: true, statusMessage: ModelConstants.GENERAL_MODEL_ERROR, statusSeverity:\"error\" });\r\n            });\r\n\r\n        this.setState({\r\n            viewVendor: '',\r\n            viewModel: '',\r\n        });\r\n    }\r\n\r\n    searchModels = () => {\r\n        const filter = {\r\n            \"vendor\": this.state.searchVendor,\r\n            \"model_number\": this.state.searchModelNum,\r\n            \"min_height\": this.state.searchMinHeight,\r\n            \"max_height\": this.state.searchMaxHeight,\r\n            \"min_ethernet_ports\": this.state.searchMinNetworkPorts,\r\n            \"max_ethernet_ports\": this.state.searchMaxNetworkPorts,\r\n            \"min_power_ports\": this.state.searchMinPower,\r\n            \"max_power_ports\": this.state.searchMaxPower,\r\n            'cpu': this.state.searchCPU,\r\n            'min_memory': this.state.searchMinMem,\r\n            'max_memory': this.state.searchMaxMem,\r\n            'storage': this.state.searchStore,\r\n            'comment': this.state.searchComment,\r\n        };\r\n        console.log(filter);\r\n\r\n        axios.post(\r\n            getURL(modelsMainPath, ModelCommand.search),\r\n            {\r\n                'filter': {\r\n                    'vendor': \"\",\r\n                    'model_number': \"\",\r\n                    'height': \"\"\r\n                }\r\n            }\r\n            ).then(response => {\r\n                const models = response.data['models'] === undefined ? [] : response.data['models'];\r\n                var rows = [];\r\n                Object.values(models).forEach(model => {\r\n                    var row = {};\r\n                    Object.keys(model).forEach(key => {\r\n                        if (key in columnLookup) {\r\n                            row[columnLookup[key]] = model[key];\r\n                        } else {\r\n                            row[key] = model[key];\r\n                        }\r\n                    });\r\n\r\n\r\n                    if (\r\n                        (filter[\"vendor\"] == undefined || filter[\"vendor\"] === \"\" || row[\"Vendor\"] === undefined || row[\"Vendor\"].includes(filter[\"vendor\"])) &&\r\n                        (filter[\"model_number\"] === undefined || filter[\"model_number\"] === \"\" || row[\"Model Number\"].includes(filter[\"model_number\"])) &&\r\n                        (filter[\"min_height\"] === undefined || filter[\"min_height\"] === \"\" ||  row[\"Height\"] >= parseInt(filter[\"min_height\"])) &&\r\n                        (filter[\"max_height\"] === undefined || filter[\"max_height\"] === \"\" ||  row[\"Height\"] <= parseInt(filter[\"max_height\"])) &&\r\n\r\n                        (filter[\"min_ethernet_ports\"] === undefined || filter[\"min_ethernet_ports\"] === \"\" ||  row[\"Network Ports\"].length >= parseInt(filter[\"min_ethernet_ports\"])) &&\r\n                        (filter[\"max_ethernet_ports\"] === undefined || filter[\"max_ethernet_ports\"] === \"\" ||  row[\"Network Ports\"].length <= parseInt(filter[\"max_ethernet_ports\"])) &&\r\n\r\n\r\n                        (filter[\"min_power_ports\"] === undefined || filter[\"min_power_ports\"] === \"\" ||  row[\"Power Ports\"] >= parseInt(filter[\"min_power_ports\"])) &&\r\n                        (filter[\"max_power_ports\"] === undefined || filter[\"max_power_ports\"] === \"\" ||  row[\"Power Ports\"] <= parseInt(filter[\"max_power_ports\"])) &&\r\n\r\n\r\n                        (filter[\"cpu\"] === undefined || filter[\"cpu\"] === \"\" || row[\"CPU\"] === null || row[\"CPU\"].includes(filter[\"cpu\"])) &&\r\n                        (filter[\"min_memory\"] === undefined || filter[\"min_memory\"] === \"\" ||  row[\"Memory\"] >= parseInt(filter[\"min_memory\"])) &&\r\n                        (filter[\"max_memory\"] === undefined || filter[\"max_memory\"] === \"\" ||  row[\"Memory\"] <= parseInt(filter[\"max_memory\"])) &&\r\n\r\n                        (filter[\"storage\"] === undefined || filter[\"storage\"] === \"\" || row[\"Storage\"] === null || row[\"Storage\"].includes(filter[\"storage\"])) &&\r\n                        (filter[\"comment\"] === undefined || filter[\"comment\"] === \"\" || row[\"Comment\"] === null || row[\"Comment\"].includes(filter[\"comment\"]))\r\n                    ) {\r\n                        rows.push(row);\r\n                    }\r\n\r\n                });\r\n\r\n                this.setState({ rows: rows, items: models })\r\n            });\r\n\r\n        this.setState({\r\n            searchText: '',\r\n        });\r\n    }\r\n\r\n    getVendorList = () => {\r\n        axios.get(\r\n            getURL(modelsMainPath, ModelCommand.VENDOR_VALUES), {}\r\n            ).then(response => this.setState({ vendorsList: response.data.results }));\r\n\r\n        this.setState({ madeVendorQuery: true });\r\n    }\r\n\r\n    sendUploadedFile = (data) => {\r\n        console.log(\"sending\");\r\n        console.log(data);\r\n        axios.post(\r\n            getURL(\"models/\", ModelCommand.UPLOAD_FILE), data\r\n            ).then(response => {\r\n                console.log(\"import response\");\r\n                console.log(response);\r\n                if (response.data.message === 'success') {\r\n                    this.setState({ showStatus: true, statusMessage: response.data.summary, statusSeverity:'success', showImportModal: false,})\r\n                    this.searchModels();\r\n                } else {\r\n                    this.setState({ showStatus: true, statusMessage: response.data.message, statusSeverity:\"error\" })\r\n                }\r\n            });\r\n    }\r\n\r\n    downloadTable = () => {\r\n        axios.post(\r\n            getURL(modelsMainPath, ModelCommand.EXPORT_FILE),\r\n            {\r\n                'filter': {\r\n                    'vendor':this.state.searchVendor,\r\n                    'model_number':this.state.searchModelNum,\r\n                    'height':this.state.searchHeight,\r\n                }\r\n            }\r\n            ).then(response => {\r\n                this.setState({ csvData: response.data.csvData });\r\n                this.csvLink.link.click();\r\n            });\r\n    }\r\n\r\n    search = (filters) => {\r\n        this.setState({\r\n            searchVendor: filters['vendor'],\r\n            searchModelNum: filters['model_number'],\r\n            searchMinHeight: filters['min_height'],\r\n            searchMaxHeight: filters['max_height'],\r\n            searchMinNetworkPorts: filters[\"min_ethernet_ports\"],\r\n            searchMaxNetworkPorts: filters[\"max_ethernet_ports\"],\r\n            searchMinPower: filters[\"min_power_ports\"],\r\n            searchMaxPower: filters[\"max_power_ports\"],\r\n            searchCPU: filters[\"cpu\"],\r\n            searchMinMem: filters[\"min_memory\"],\r\n            searchMaxMem: filters[\"max_memory\"],\r\n            searchStore: filters[\"storage\"],\r\n            searchComment: filters[\"comment\"],\r\n        }, this.searchModels);\r\n    }\r\n\r\n    searchAll = () => {\r\n        var filters = {\r\n            'vendor': '',\r\n            'model_number': '',\r\n            'height': ''\r\n        };\r\n\r\n        this.search(filters);\r\n    }\r\n\r\n    openCreateModal = () => {\r\n        this.setState({showCreateModal: true});\r\n    }\r\n\r\n    openImportModal = () => {\r\n        this.setState({showImportModal: true});\r\n    }\r\n\r\n    showDetailedView = (row) => {\r\n        this.setState({\r\n            detailViewLoading: true,\r\n         });\r\n\r\n        var vendor = row['Vendor'];\r\n        var modelNum = row['Model Number'];\r\n\r\n        this.detailViewModel(vendor, modelNum);\r\n    }\r\n\r\n    closeCreateModal = () => {\r\n        this.setState({showCreateModal: false});\r\n    }\r\n\r\n    closeImportModal = () => {\r\n        this.setState({showImportModal: false});\r\n    }\r\n\r\n    closeDetailedView = () => {\r\n        this.setState({ showDetailedView: false })\r\n    }\r\n\r\n    updateModelCreator = (event) => {\r\n        this.state.createdModel[event.target.name] = event.target.value;\r\n        this.forceUpdate();\r\n    }\r\n\r\n    updateModelColor = (color) => {\r\n        this.state.createdModel['display_color'] = color;\r\n        this.forceUpdate();\r\n    }\r\n\r\n    updateModelColorDetails = (color) => {\r\n        this.state.detailedValues['display_color'] = color;\r\n        this.forceUpdate();\r\n    }\r\n\r\n    updateSearchText = (event) => {\r\n        this.setState({ searchText: event.target.value})\r\n    }\r\n\r\n    closeShowStatus = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n        this.setState({ showStatus: false })\r\n    }\r\n\r\n    createStatusClose = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n        this.setState({ createshowStatus: false })\r\n    }\r\n\r\n    detailStatusClose = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n        this.setState({ detailshowStatus: false })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Grid\r\n                    container\r\n                    spacing={5}\r\n                    direction=\"row\"\r\n                    justify=\"flex-start\"\r\n                    alignItems=\"center\"\r\n                    style={{margin: \"0px\", maxWidth: \"95vw\"}}\r\n                >\r\n                    <Grid item xs={12}>\r\n                        <Typography variant=\"h4\">\r\n                            Models\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6} md={4} lg={3}>\r\n                        {(this.props.privilege.admin || this.props.privilege.model) ?\r\n                        (<div>\r\n                            <CreateModel\r\n                                showStatus={this.state.createshowStatus}\r\n                                statusSeverity={this.state.statusSeverity}\r\n                                statusClose={this.createStatusClose}\r\n                                statusMessage={this.state.statusMessage}\r\n                                showCreateModal={this.state.showCreateModal}\r\n                                closeCreateModal={this.closeCreateModal}\r\n                                createModel={this.createModel}\r\n                                updateModelCreator={this.updateModelCreator}\r\n                                options={this.state.vendorsList}\r\n                                useAutocomplete={true}\r\n                                updateModelColor={this.updateModelColor}\r\n                                sendUploadedFile={this.sendUploadedFile}\r\n                            />\r\n                        </div>) : null}\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6} md={6} lg={6}>\r\n                        <FilterModel\r\n                            updateSearchText={this.updateSearchText}\r\n                            search={this.search}\r\n                            filters={columns}\r\n                            options={this.state.vendorsList}\r\n                            useAutocomplete={true}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6} md={4} lg={3}>\r\n                        {(this.props.privilege.admin || this.props.privilege.model) ?\r\n                        (<div>\r\n\r\n                        <ExportModel\r\n                            downloadTable={this.downloadTable}\r\n                            showAll={this.searchAll}\r\n                        />\r\n\r\n                        <CSVLink\r\n                            data={this.state.csvData}\r\n                            filename={modelDownloadFileName}\r\n                            className=\"hidden\"\r\n                            ref={(r) => this.csvLink = r}\r\n                            target=\"_blank\"\r\n                        />\r\n                        </div>):null\r\n                        }\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <ModelsTable\r\n                            columns={this.props.privilege.admin || this.props.privilege.model ? adminColumns : columns}\r\n                            vals={this.state.rows}\r\n                            privilege={this.props.privilege}\r\n                            token={this.props.token}\r\n                            keys={columns}\r\n                            filters={this.props.privilege.admin || this.props.privilege.model ? adminColumns : columns}\r\n                            updateModelColor={this.updateModelColorDetails}\r\n                            deleteModel={this.deleteModel}\r\n                            editModel={this.editModel}\r\n                        />\r\n                    </Grid>\r\n                </Grid>\r\n                <StatusDisplay\r\n                    open={this.state.showStatus}\r\n                    severity={this.state.statusSeverity}\r\n                    closeStatus={this.closeShowStatus}\r\n                    message={this.state.statusMessage}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React from \"react\";\r\n\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListSubheader from '@material-ui/core/ListSubheader';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { Typography } from \"@material-ui/core\";\r\n\r\nexport default function PrivilegePicker(props) {\r\n\tconst generalPrivileges=[\r\n\t\t{title:\"Model Management\", value:\"model\"},\r\n\t\t{title:\"Global Asset Management\", value:\"asset\"},\r\n\t\t{title:\"Auditing\", value:\"audit\"},\r\n\t\t{title:\"Power Management\", value:\"power\"},\r\n\t\t{title:\"Administrator\", value:\"admin\"},\r\n\t]\r\n\r\n\tvar defaultPrivs = [];\r\n\tvar defaultDCs = [];\r\n\r\n\tif(props.defaultPrivileges !== undefined) {\r\n\t\tif (props.defaultPrivileges.Model) {\r\n\t\t\tdefaultPrivs.push(generalPrivileges[0]);\r\n\t\t}\r\n\t\tif (props.defaultPrivileges.Asset) {\r\n\t\t\tdefaultPrivs.push(generalPrivileges[1]);\r\n\t\t}\r\n\t\tif (props.defaultPrivileges.Audit) {\r\n\t\t\tdefaultPrivs.push(generalPrivileges[2]);\r\n\t\t}\r\n\t\tif (props.defaultPrivileges.Power) {\r\n\t\t\tdefaultPrivs.push(generalPrivileges[3]);\r\n\t\t}\r\n\t\tif (props.defaultPrivileges.admin) {\r\n\t\t\tdefaultPrivs.push(generalPrivileges[4]);\r\n\t\t}\r\n\r\n\t\tdefaultDCs = props.defaultPrivileges.datacenters\r\n\t}\r\n\r\n\treturn (\r\n\t\t<span>\r\n\t\t\t<Typography>Privileges</Typography>\r\n\t\t\t<Autocomplete\r\n\t\t\t\tmultiple\r\n\t\t\t\tid=\"tags-standard\"\r\n\t\t\t\tgetOptionLabel={option => option.title}\r\n\t\t\t\toptions={generalPrivileges}\r\n\t\t\t\tonChange={props.updatePrivilege}\r\n\t\t\t\tdefaultValue={defaultPrivs}\r\n\t\t\t\trenderInput={params => (\r\n\t\t\t\t<TextField\r\n\t\t\t\t\t{...params}\r\n\t\t\t\t\tvariant=\"standard\"\r\n\t\t\t\t\tlabel=\"General Privileges\"\r\n\t\t\t\t\tfullWidth\r\n\t\t\t\t/>\r\n\t\t\t\t)}\r\n\t\t\t/>\r\n\t\t\t{props.loading ? <CircularProgress /> :\r\n\t\t\t<Autocomplete\r\n\t\t\t\tmultiple\r\n\t\t\t\tid=\"tags-standard\"\r\n\t\t\t\toptions={props.dcPrivileges}\r\n\t\t\t\tonChange={props.updateDCPrivilege}\r\n\t\t\t\tdefaultValue={defaultDCs}\r\n\t\t\t\trenderInput={params => (\r\n\t\t\t\t<TextField\r\n\t\t\t\t\t{...params}\r\n\t\t\t\t\tvariant=\"standard\"\r\n\t\t\t\t\tlabel=\"Datacenter Asset Privileges\"\r\n\t\t\t\t\tfullWidth\r\n\t\t\t\t/>\r\n\t\t\t\t)}\r\n\t\t\t/>}\r\n\t\t</span>\r\n\t)\r\n\r\n}\r\n","export enum PrivilegeCommand {\r\n    GET_PRIVILEGES = \"getPermissions/\",\r\n}\r\n","import React from 'react';\r\n\r\nimport axios from \"axios\";\r\n\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from '@material-ui/core/Button';\r\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\r\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\r\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Card from '@material-ui/core/Card';\r\n\r\nimport '../../../stylesheets/Models.css';\r\nimport PrivilegePicker from \"./functions/PrivilegePicker\";\r\n\r\nimport getURL from \"../../helpers/functions/GetURL\";\r\n\r\nexport default class Filters extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            username: \"\",\r\n            display_name: \"\",\r\n            password: \"\",\r\n            email: \"\",\r\n            privilege:{\r\n                \"model\":false,\r\n                \"asset\":false,\r\n                \"datacenters\":[],\r\n                \"power\":false,\r\n                \"audit\":false,\r\n                \"admin\":false,\r\n            },\r\n        };\r\n    }\r\n\r\n    resetCreate = (success) => {\r\n        if (success) {\r\n            this.setState({username: \"\", display_name: \"\", password: \"\", email: \"\", privilege:{\r\n                \"model\":false,\r\n                \"asset\":false,\r\n                \"datacenters\":[],\r\n                \"power\":false,\r\n                \"audit\":false,\r\n                \"admin\":false,\r\n            },});\r\n        }\r\n    }\r\n\r\n    searchUsers = () => {\r\n        this.props.search( { \"filter\":this.state } );\r\n    }\r\n\r\n    updateprivilege = (event, values) => {\r\n        var privs = {\r\n            \"model\":false,\r\n            \"asset\":false,\r\n            \"datacenters\":this.state.privilege[\"datacenters\"],\r\n            \"power\":false,\r\n            \"audit\":false,\r\n            \"admin\":false,\r\n        };\r\n        values.map(priv => { privs[priv.value] = true; });\r\n        this.setState({ privilege: privs });\r\n    }\r\n\r\n    updateDCPrivilege = (event, values) => {\r\n        var privs = this.state.privilege;\r\n        privs[\"datacenters\"] = values;\r\n        this.setState({ privilege: privs });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n        <Card elevation={3} padding>\r\n            <Typography variant=\"h6\">Create</Typography>\r\n            <Grid\r\n                container\r\n                spacing={1}\r\n                direction=\"row\"\r\n                justify=\"flex-start\"\r\n                alignItems=\"center\"\r\n            >\r\n                <Grid item xs={6}>\r\n                    <TextField id=\"standard-basic\" variant=\"outlined\" label=\"Username\" name=\"username\" value={this.state.username} onChange={(e) => this.setState({ username: e.target.value })}/>\r\n                </Grid>\r\n                <Grid item xs={6}>\r\n                    <TextField id=\"standard-basic\" variant=\"outlined\" label=\"Display Name\" name=\"display_name\" value={this.state.display_name} onChange={(e) => this.setState({ display_name: e.target.value })}/>\r\n                </Grid>\r\n                <Grid item xs={6}>\r\n                    <TextField id=\"standard-basic\" variant=\"outlined\" label=\"Password\" name=\"password\" type=\"password\" value={this.state.password} onChange={(e) => this.setState({ password: e.target.value })}/>\r\n                </Grid>\r\n                <Grid item xs={6}>\r\n                    <TextField id=\"standard-basic\" variant=\"outlined\" label=\"Email\" name=\"email\" type=\"email\" value={this.state.email} onChange={(e) => this.setState({ email: e.target.value })}/>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <PrivilegePicker\r\n                        dcPrivileges={this.props.privileges}\r\n                        loading={this.props.loading}\r\n                        updatePrivilege={this.updateprivilege}\r\n                        updateDCPrivilege={this.updateDCPrivilege}\r\n                    />\r\n                </Grid>\r\n                <Grid\r\n                    container\r\n                    item\r\n                    direction=\"column\"\r\n                    justify=\"center\"\r\n                    alignItems=\"center\"\r\n                    xs={12}\r\n                >\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        onClick={this.searchUsers}\r\n                        style={{\r\n                            \"width\": \"100%\",\r\n                            \"marginTop\": \"20px\",\r\n                            \"backgroundColor\": \"blue\",\r\n                            \"color\": \"white\"\r\n                        }}\r\n                    >\r\n                        Search\r\n                    </Button>\r\n                </Grid>\r\n            </Grid>\r\n        </Card>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\n\r\nimport axios from \"axios\";\r\n\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from '@material-ui/core/Button';\r\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\r\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\r\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Card from '@material-ui/core/Card';\r\n\r\nimport '../../../stylesheets/Models.css';\r\nimport PrivilegePicker from \"./functions/PrivilegePicker\";\r\n\r\nimport getURL from \"../../helpers/functions/GetURL\";\r\n\r\nexport default class CreateModal extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            username: \"\",\r\n            display_name: \"\",\r\n            password: \"\",\r\n            email: \"\",\r\n            selectedPrivileges:{\r\n                \"model\":false,\r\n                \"asset\":false,\r\n                \"datacenters\":[],\r\n                \"power\":false,\r\n                \"audit\":false,\r\n                \"admin\":false,\r\n            },\r\n        };\r\n    }\r\n\r\n    resetCreate = (success) => {\r\n        if (success) {\r\n            this.setState({username: \"\", display_name: \"\", password: \"\", email: \"\", selectedPrivileges:{\r\n                \"model\":false,\r\n                \"asset\":false,\r\n                \"datacenters\":[],\r\n                \"power\":false,\r\n                \"audit\":false,\r\n                \"admin\":false,\r\n            },});\r\n        }\r\n    }\r\n\r\n    createModel = () => {\r\n        this.props.createModel(this.state.username, this.state.password, this.state.display_name, this.state.email, this.state.selectedPrivileges, this.resetCreate);\r\n    }\r\n\r\n    updateSelectedPrivileges = (event, values) => {\r\n        var privs = {\r\n            \"model\":false,\r\n            \"asset\":false,\r\n            \"datacenters\":this.state.selectedPrivileges[\"datacenters\"],\r\n            \"power\":false,\r\n            \"audit\":false,\r\n            \"admin\":false,\r\n        };\r\n        values.map(priv => { privs[priv.value] = true; });\r\n        this.setState({ selectedPrivileges: privs });\r\n    }\r\n\r\n    updateDCPrivilege = (event, values) => {\r\n        var privs = this.state.selectedPrivileges;\r\n        privs[\"datacenters\"] = values;\r\n        this.setState({ selectedPrivileges: privs });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n        <Card elevation={3} padding>\r\n            <Typography variant=\"h6\">Create</Typography>\r\n            <Grid\r\n                container\r\n                spacing={1}\r\n                direction=\"row\"\r\n                justify=\"flex-start\"\r\n                alignItems=\"center\"\r\n            >\r\n                <Grid item xs={6}>\r\n                    <TextField id=\"standard-basic\" variant=\"outlined\" label=\"Username\" name=\"username\" value={this.state.username} onChange={(e) => this.setState({ username: e.target.value })}/>\r\n                </Grid>\r\n                <Grid item xs={6}>\r\n                    <TextField id=\"standard-basic\" variant=\"outlined\" label=\"Display Name\" name=\"display_name\" value={this.state.display_name} onChange={(e) => this.setState({ display_name: e.target.value })}/>\r\n                </Grid>\r\n                <Grid item xs={6}>\r\n                    <TextField id=\"standard-basic\" variant=\"outlined\" label=\"Password\" name=\"password\" type=\"password\" value={this.state.password} onChange={(e) => this.setState({ password: e.target.value })}/>\r\n                </Grid>\r\n                <Grid item xs={6}>\r\n                    <TextField id=\"standard-basic\" variant=\"outlined\" label=\"Email\" name=\"email\" type=\"email\" value={this.state.email} onChange={(e) => this.setState({ email: e.target.value })}/>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <PrivilegePicker\r\n                        dcPrivileges={this.props.privileges}\r\n                        loading={this.props.loading}\r\n                        updatePrivilege={this.updateSelectedPrivileges}\r\n                        updateDCPrivilege={this.updateDCPrivilege}\r\n                    />\r\n                </Grid>\r\n                <Grid\r\n                    container\r\n                    item\r\n                    direction=\"column\"\r\n                    justify=\"center\"\r\n                    alignItems=\"center\"\r\n                    xs={12}\r\n                >\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        onClick={this.createModel}\r\n                        style={{\r\n                            \"width\": \"100%\",\r\n                            \"marginTop\": \"20px\",\r\n                            \"backgroundColor\": \"green\",\r\n                            \"color\": \"white\"\r\n                        }}\r\n                    >\r\n                        Create\r\n                    </Button>\r\n                </Grid>\r\n            </Grid>\r\n        </Card>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport Button from '@material-ui/core/Button';\nimport { Privilege } from '../../enums/privilegeTypes';\nimport SaveIcon from '@material-ui/icons/Save';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Modal from '@material-ui/core/Modal';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport Fade from '@material-ui/core/Fade';\nimport { withStyles } from '@material-ui/core/styles';\n\nimport PrivilegePicker from \"./functions/PrivilegePicker\";\n\nconst useStyles = theme => ({\n\troot: {\n\t\tflexGrow: 1,\n\t},\n\tmodal: {\n\t\tdisplay: 'flex',\n\t\talignItems: 'center',\n\t\tjustifyContent: 'center',\n\t\twidth: \"100%\",\n\t\tmargin: \"0 auto\",\n\t\toverflow: \"scroll\"\n\t},\n\tgrid: {\n\t\tbackgroundColor: theme.palette.background.paper,\n\t\tboxShadow: theme.shadows[5],\n\t\tpadding: theme.spacing(2, 4, 3),\n\t\twidth: \"50%\"\n\t},\n\tprogress: {\n\t\tdisplay: 'flex',\n\t\t'& > * + *': {\n\t\t\tmarginLeft: theme.spacing(2),\n\t\t},\n\t},\n});\n\nclass UsersTable extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tcanEdit: false,\n\t\t\tshowDeleteModal: false,\n\t\t\tusername: '',\n\n\t\t\toriginalUsername:\"\",\n\t\t\tusername: \"\",\n\t\t\tdisplay_name: \"\",\n\t\t\tpassword: \"\",\n\t\t\temail: \"\",\n\t\t\tselectedPrivileges:{\n\t\t\t\t\"model\":false,\n\t\t\t\t\"asset\":false,\n\t\t\t\t\"datacenters\":[],\n\t\t\t\t\"power\":false,\n\t\t\t\t\"audit\":false,\n\t\t\t\t\"admin\":false,\n\t\t\t},\n\t\t\tpassword:\"\",\n\t\t};\n\t}\n\n\tshowDetailedView(index) {\n\t\tthis.props.showDetailedView(index);\n\t}\n\n\tbeginEditing = (event, row) => {\n\t\tthis.setState({ canEdit: true });\n\t\tconsole.log(row);\n\t\tthis.setState({\n\t\t\toriginalUsername:row.Username,\n\t\t\tusername:row.Username,\n\t\t\tdisplay_name:row[\"Display Name\"],\n\t\t\temail:row.Email,\n\t\t\tselectedPrivileges:row.Privilege,\n\t\t\tpassword:row.password,\n\t\t});\n\t}\n\n\tendEditing = () => {\n\t\tthis.setState({ canEdit: false });\n\t\tthis.props.save(\n\t\t\tthis.state.originalUsername,\n\t\t\tthis.state.username,\n\t\t\tthis.state.password,\n\t\t\tthis.state.display_name,\n\t\t\tthis.state.email,\n\t\t\tthis.state.selectedPrivileges\n\t\t);\n\t}\n\n\tshowDeleteModal = (row) => {\n\t\tthis.setState({ showDeleteModal: true, username: row[\"Username\"] });\n\t}\n\n\tcloseDeleteModal = () => {\n\t\tthis.setState({ showDeleteModal: false, username: \"\" });\n\t}\n\n\tdelete = () => {\n\t\tthis.props.delete(this.state.username);\n\t\tthis.closeDeleteModal();\n\t}\n\n\tupdateSelectedPrivileges = (event, values) => {\n        var privs = {\n            \"model\":false,\n            \"asset\":false,\n            \"datacenters\":this.state.selectedPrivileges[\"datacenters\"],\n            \"power\":false,\n            \"audit\":false,\n            \"admin\":false,\n        };\n        values.map(priv => { privs[priv.value] = true; });\n        this.setState({ selectedPrivileges: privs });\n    }\n\n    updateDCPrivilege = (event, values) => {\n        var privs = this.state.selectedPrivileges;\n        privs[\"datacenters\"] = values;\n        this.setState({ selectedPrivileges: privs });\n    }\n\n\trender() {\n\t\tconst { classes } = this.props;\n\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<TableContainer component={Paper}>\n\t\t\t\t\t<Table style={{ minWidth: 1000 }} aria-label=\"simple table\">\n\t\t\t\t\t\t<TableHead>\n\t\t\t\t\t\t\t<TableRow >\n\t\t\t\t\t\t\t\t{this.props.columns.map(col => {\n\t\t\t\t\t\t\t\t\tif (col === \"Privilege\") {\n\t\t\t\t\t\t\t\t\t\treturn (this.state.canEdit ? <TableCell align=\"center\"><span id={col} style={{ fontWeight: \"bold\" }}>{col}</span></TableCell>:null)\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\treturn <TableCell align=\"center\"><span id={col} style={{ fontWeight: \"bold\" }}>{col}</span></TableCell>\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t</TableRow>\n\t\t\t\t\t\t</TableHead>\n\t\t\t\t\t\t<TableBody>\n\t\t\t\t\t\t\t{this.props.vals.map((row, index) => (\n\t\t\t\t\t\t\t\t<TableRow id={index}>\n\t\t\t\t\t\t\t\t\t{this.props.privilege.admin ? <TableCell scope=\"row\" align=\"center\">\n\t\t\t\t\t\t\t\t\t\t{row[\"Username\"] !== \"admin\" ? <div><Button>\n\t\t\t\t\t\t\t\t\t\t\t{this.state.canEdit ? <SaveIcon onClick={this.endEditing} /> : <EditIcon onClick={(e) => { this.beginEditing(e, row) }} />}\n\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t\t\t<Button>\n\t\t\t\t\t\t\t\t\t\t\t\t<DeleteIcon onClick={() => this.showDeleteModal(row)} />\n\t\t\t\t\t\t\t\t\t\t\t</Button></div> : null}\n\t\t\t\t\t\t\t\t\t</TableCell> : null}\n\t\t\t\t\t\t\t\t\t{this.props.keys.map(key => {\n\t\t\t\t\t\t\t\t\t\tif (key === \"Privilege\") {\n\t\t\t\t\t\t\t\t\t\t\treturn (this.state.canEdit && row[\"Username\"] !== \"admin\" ? <TableCell scope=\"row\" align=\"center\">\n\t\t\t\t\t\t\t\t\t\t\t\t<PrivilegePicker\n\t\t\t\t\t\t\t\t\t\t\t\t\tdcPrivileges={this.props.privileges}\n\t\t\t\t\t\t\t\t\t\t\t\t\tloading={this.props.loading}\n\t\t\t\t\t\t\t\t\t\t\t\t\tupdatePrivilege={this.updateSelectedPrivileges}\n\t\t\t\t\t\t\t\t\t\t\t\t\tupdateDCPrivilege={this.updateDCPrivilege}\n\t\t\t\t\t\t\t\t\t\t\t\t\tdefaultPrivileges={row.Privilege}\n\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t</TableCell> : null);\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\treturn (<TableCell scope=\"row\" align=\"center\">{row[key]}</TableCell>)\n\t\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\t</TableRow>\n\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t</TableBody>\n\t\t\t\t\t</Table>\n\t\t\t\t</TableContainer>\n\n\t\t\t\t<Modal\n\t\t\t\t\taria-labelledby=\"transition-modal-title\"\n\t\t\t\t\taria-describedby=\"transition-modal-description\"\n\t\t\t\t\tclassName={classes.modal}\n\t\t\t\t\topen={this.state.showDeleteModal}\n\t\t\t\t\tonClose={this.closeDeleteModal}\n\t\t\t\t\tcloseAfterTransition\n\t\t\t\t>\n\t\t\t\t\t<Fade in={this.state.showDeleteModal}>\n\t\t\t\t\t\t<Backdrop\n\t\t\t\t\t\t\topen={this.state.showDeleteModal}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<div className={classes.grid}>\n\t\t\t\t\t\t\t\t<Grid\n\t\t\t\t\t\t\t\t\tcontainer\n\t\t\t\t\t\t\t\t\tspacing={1}\n\t\t\t\t\t\t\t\t\tdirection=\"row\"\n\t\t\t\t\t\t\t\t\tjustify=\"flex-start\"\n\t\t\t\t\t\t\t\t\talignItems=\"center\"\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t\t\t\t\t\t<Typography variant=\"h5\">Are you sure?</Typography>\n\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t\t<Grid item xs={12} sm={12} md={6} lg={6}>\n\t\t\t\t\t\t\t\t\t\t<Typography variant=\"body1\">\n\t\t\t\t\t\t\t\t\t\t\tDoing this will remove the user permanently.\n                                </Typography>\n\t\t\t\t\t\t\t\t\t</Grid>\n\n\t\t\t\t\t\t\t\t\t<Grid item xs={3}>\n\t\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\t\t\t\t\t\tcolor=\"secondary\"\n\t\t\t\t\t\t\t\t\t\t\tonClick={this.delete}\n\t\t\t\t\t\t\t\t\t\t\tstyle={{ width: \"100%\" }}\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\tYes\n                                </Button>\n\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t\t<Grid item xs={3}>\n\t\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\t\t\t\t\t\tonClick={this.closeDeleteModal}\n\t\t\t\t\t\t\t\t\t\t\tstyle={{ width: \"100%\" }}\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\tNo\n                                </Button>\n\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</Backdrop>\n\n\t\t\t\t\t</Fade>\n\t\t\t\t</Modal>\n\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default withStyles(useStyles)(UsersTable);\n","\r\n\r\nexport const GENERAL_USER_ERROR =  \"There was an error in the backend. Could not perform the given user operation at this time.\";\r\n\r\nexport const USER_SUCCESS_TOKEN = \"success\";\r\nexport const USER_FAILURE_TOKEN = \"error\";\r\n\r\nexport const USER_CREATION_SUCCESS_MESSAGE = \"Successfully created user\";\r\nexport const USER_CREATION_FAILURE_MESSAGE = \"Failed to create user\";\r\n\r\nexport const USER_EDIT_SUCCESS_MESSAGE = \"Successfully updated user\";\r\nexport const USER_EDIT_FAILURE_MESSAGE = \"Failed to update user\";\r\n\r\nexport const USER_DELETE_SUCCESS_MESSAGE = \"Successfully deleted user\";\r\nexport const USER_DELETE_FAILURE_MESSAGE = \"Failed to delete user\";\r\n","import React from \"react\";\r\n\r\nexport default function makeCreateJSON(username, password, display_name, email, privileges) {\r\n\treturn {\r\n\t\t'username': username,\r\n\t\t'password': password,\r\n\t\t'display_name': display_name,\r\n\t\t'email': email,\r\n\t\t'privilege': privileges,\r\n\t}\r\n}\r\n","import React from 'react';\r\nimport axios from 'axios';\r\n\r\nimport {\r\n    Typography,\r\n    Grid,\r\n} from '@material-ui/core';\r\n\r\nimport { UserCommand } from '../enums/UserCommands.ts'\r\nimport FilterUser from '../helpers/FilterUser';\r\nimport CreateUser from '../helpers/CreateUser';\r\nimport getURL from '../../helpers/functions/GetURL';\r\nimport UsersTable from '../helpers/UsersTable';\r\nimport StatusDisplay from '../../helpers/StatusDisplay';\r\nimport * as UserConstants from \"../UserConstants\";\r\nimport { PrivilegeCommand } from \"../enums/PrivilegeCommands.ts\";\r\nimport * as Constants from \"../../Constants\";\r\nimport makeCreateJSON from \"../helpers/functions/MakeCreateJSON\";\r\nimport makeEditJSON from \"../helpers/functions/MakeEditJSON\";\r\nimport makeDeleteJSON from \"../helpers/functions/MakeDeleteJSON\";\r\nimport makeDetailViewJSON from \"../helpers/functions/MakeDetailViewJSON\";\r\n\r\nconst inputs = [\r\n    'username',\r\n    'email',\r\n    'display_name',\r\n    'privilege',\r\n    'password',\r\n]\r\n\r\nconst columns = [\r\n    'Username',\r\n    'Email',\r\n    'Display Name',\r\n    'Privilege',\r\n]\r\n\r\nconst adminColumns = [\r\n    'Actions',\r\n    'Username',\r\n    'Email',\r\n    'Display Name',\r\n    'Privilege'\r\n]\r\n\r\nconst columnLookup = {\r\n    \"username\": \"Username\",\r\n    \"email\": \"Email\",\r\n    \"display_name\": \"Display Name\",\r\n    'privilege': 'Privilege'\r\n}\r\n\r\nconst blankSearch = {\r\n    \"filter\":\r\n    {\r\n        \"username\": \"\",\r\n        \"display_name\": \"\",\r\n        \"email\": \"\",\r\n        \"privilege\": {\r\n            \"model\": true,\r\n            \"asset\": true,\r\n            \"datacenters\": [\"*\"],\r\n            \"power\": true,\r\n            \"audit\": true,\r\n            \"admin\": true\r\n        }\r\n    }\r\n}\r\n\r\nexport default class UsersView extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            items: [],\r\n            statusOpen: false,\r\n            statusSeverity: '',\r\n            statusMessage: '',\r\n            searchUsernm: '',\r\n            searchEml: '',\r\n            searchDspNm: '',\r\n            searchPriv: '',\r\n            deleteUsername: '',\r\n            viewUser: '',\r\n            csvData: [],\r\n            showDetailedView: false,\r\n            detailViewLoading: false,\r\n            originalUsername: '',\r\n            allDCPrivileges: [],\r\n            loadingPrivileges: true,\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.searchUsers(blankSearch);\r\n        this.getPrivileges();\r\n    }\r\n\r\n    createUser = (username, password, display_name, email, privileges, completion) => {\r\n        console.log(makeCreateJSON(username, password, display_name, email, privileges));\r\n        axios.post(\r\n            getURL(Constants.USERS_MAIN_PATH, UserCommand.create),\r\n            makeCreateJSON(username, password, display_name, email, privileges)\r\n        ).then(response => {\r\n            if (response.data.message === UserConstants.USER_SUCCESS_TOKEN) {\r\n                completion(true);\r\n                this.setDisplayStatus(true, UserConstants.USER_CREATION_SUCCESS_MESSAGE, UserConstants.USER_SUCCESS_TOKEN);\r\n                this.searchUsers(blankSearch);\r\n            } else {\r\n                completion(false);\r\n                this.setDisplayStatus(true, response.data.message, UserConstants.USER_FAILURE_TOKEN)\r\n            }\r\n        });\r\n    }\r\n\r\n    editUser = (originalUsername, username, password, display_name, email, privileges, completion) => {\r\n        axios.post(\r\n            getURL(Constants.USERS_MAIN_PATH, UserCommand.edit),\r\n            makeEditJSON(originalUsername, username, password, display_name, email, privileges)\r\n        ).then(response => this.processResponse(response, UserConstants.USER_EDIT_SUCCESS_MESSAGE, UserConstants.USER_EDIT_FAILURE_MESSAGE));\r\n    }\r\n\r\n    deleteUser = (username) => {\r\n        axios.post(\r\n            getURL(Constants.USERS_MAIN_PATH, UserCommand.delete),\r\n            makeDeleteJSON(username)\r\n        ).then(response => this.processResponse(response, UserConstants.USER_DELETE_SUCCESS_MESSAGE, UserConstants.USER_DELETE_FAILURE_MESSAGE));\r\n    }\r\n\r\n    detailViewUser = (username) => {\r\n        axios.post(\r\n            getURL(Constants.USERS_MAIN_PATH, UserCommand.detailView),\r\n            makeDetailViewJSON(username)\r\n        ).then(response => this.setState({ detailedValues: response.data['user'], detailViewLoading: false }));\r\n    }\r\n\r\n    searchUsers = (filters) => {\r\n        console.log(filters);\r\n        axios.post(\r\n            getURL(Constants.USERS_MAIN_PATH, UserCommand.search),\r\n            filters,\r\n        ).then(response => {\r\n            const models = response.data['users'] === undefined ? [] : response.data['users'];\r\n            var rows = [];\r\n            Object.values(models).forEach(model => {\r\n                var row = {};\r\n                Object.keys(model).forEach(key => {\r\n                    if (key in columnLookup) {\r\n                        row[columnLookup[key]] = model[key];\r\n                    } else {\r\n                        row[key] = model[key];\r\n                    }\r\n                });\r\n                rows.push(row);\r\n            });\r\n\r\n            this.setState({ items: rows });\r\n        });\r\n    }\r\n\r\n    getPrivileges = () => {\r\n        axios.get(getURL(Constants.PERMISSIONS_MAIN_PATH, PrivilegeCommand.GET_PRIVILEGES)).then(\r\n            response => {\r\n                console.log(response);\r\n                try {\r\n                    this.setState({\r\n                        allDCPrivileges: response.data.datacenters,\r\n                        loadingPrivileges: false,\r\n                    });\r\n                } catch {\r\n                    this.setState({\r\n                        allDCPrivileges: [],\r\n                        loadingPrivileges: false,\r\n                    });\r\n                }\r\n            }\r\n        );\r\n    }\r\n\r\n    setDisplayStatus = (open, message, severity) => {\r\n        console.log(severity);\r\n        this.setState({ statusOpen: open, statusMessage: message, statusSeverity: severity });\r\n    }\r\n\r\n    showDetailedView = (id) => {\r\n        this.setState({\r\n            showDetailedView: true,\r\n            detailViewLoading: true,\r\n            originalUsername: this.state.items[id]['username'],\r\n        });\r\n\r\n        var username = this.state.items[id]['username'];\r\n\r\n        this.detailViewUser(username);\r\n        //this.setState({ detailedValues: Constants.testUserArray[id], detailViewLoading:false})\r\n    }\r\n\r\n    closeDetailedView = () => {\r\n        this.setState({ showDetailedView: false })\r\n    }\r\n\r\n    updateUserEdited = (event) => {\r\n        const newDetails = this.state.detailedValues;\r\n        newDetails[event.target.name] = event.target.value;\r\n        this.setState({ detailedValues: newDetails });\r\n        this.forceUpdate()\r\n    }\r\n\r\n    closeShowStatus = () => {\r\n        this.setState({ statusOpen: false })\r\n    }\r\n\r\n    processResponse = (response, successMessage, failureMessage) => {\r\n        if (response.data.message === UserConstants.USER_SUCCESS_TOKEN) {\r\n            this.setDisplayStatus(true, successMessage, UserConstants.USER_SUCCESS_TOKEN);\r\n            this.searchUsers(blankSearch);\r\n        } else {\r\n            this.setDisplayStatus(true, response.data.message, UserConstants.USER_FAILURE_TOKEN);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <StatusDisplay\r\n                    open={this.state.statusOpen}\r\n                    severity={this.state.statusSeverity}\r\n                    closeStatus={this.closeShowStatus}\r\n                    message={this.state.statusMessage}\r\n                />\r\n                <Grid\r\n                    container\r\n                    spacing={5}\r\n                    direction=\"row\"\r\n                    justify=\"flex-start\"\r\n                    alignItems=\"center\"\r\n                    style={{ margin: \"0px\", maxWidth: \"95vw\" }}\r\n                >\r\n                    <Grid item xs={12}>\r\n                        <Typography variant=\"h4\">\r\n                            Users\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6} md={4} lg={6}>\r\n                        {(this.props.privilege.admin) ?\r\n                            (<div>\r\n                                <CreateUser\r\n                                    showCreateModal={this.state.showCreateModal}\r\n                                    closeCreateModal={this.closeCreateModal}\r\n                                    createModel={this.createUser}\r\n                                    updateModelCreator={this.updateUserCreator}\r\n                                    inputs={inputs}\r\n                                    options={[]}\r\n                                    useAutocomplete={false}\r\n                                    loading={this.state.loadingPrivileges}\r\n                                    privileges={this.state.allDCPrivileges}\r\n                                />\r\n                            </div>) : null}\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6} md={4} lg={6}>\r\n                        <FilterUser\r\n                            updateSearchText={this.updateSearchText}\r\n                            search={this.searchUsers}\r\n                            filters={columns}\r\n                            loading={this.state.loadingPrivileges}\r\n                            privileges={this.state.allDCPrivileges}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <UsersTable\r\n                            columns={this.props.privilege.admin ? adminColumns : columns}\r\n                            vals={this.state.items}\r\n                            keys={columns}\r\n                            privilege={this.props.privilege}\r\n                            showDetailedView={this.showDetailedView}\r\n                            filters={this.props.privilege.admin ? adminColumns : columns}\r\n                            delete={this.deleteUser}\r\n                            save={this.editUser}\r\n                            editUser={this.updateEditUser}\r\n                            loading={this.state.loadingPrivileges}\r\n                            privileges={this.state.allDCPrivileges}\r\n                        />\r\n                    </Grid>\r\n                </Grid>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","export enum AssetInput {\r\n    MODEL = 'model',\r\n    HOSTNAME = 'hostname',\r\n    RACK = 'rack',\r\n    RACK_U = 'rack_position',\r\n    RACK_ORIGINAL = 'rackOriginal',\r\n    RACK_U_ORIGINAL = 'rack_positionOriginal',\r\n    OWNER = 'owner',\r\n    COMMENT = 'comment',\r\n    DATACENTER = 'datacenter_id',\r\n    TAGS = 'tags',\r\n    MAC_ADDRESS = 'mac_address',\r\n    NETWORK_CONNECTIONS = 'network_connections',\r\n    POWER_CONNECTIONS = 'power_connections',\r\n    ASSET_NUMBER = 'asset_number',\r\n}\r\n","export enum AssetCommand {\r\n    create = 'create/',\r\n    delete = 'delete/',\r\n    edit = 'edit/',\r\n    view = 'view/',\r\n    detailView = 'detailView/',\r\n    search = 'search/',\r\n    GET_ALL_MODELS = 'assistedmodel/',\r\n    GET_ALL_OWNERS = 'assistedowner/',\r\n    GET_ALL_DATACENTERS = 'assisteddatacenter/',\r\n    GET_ALL_HOSTNAME = 'assistedhostname/',\r\n    UPLOAD_FILE = 'import/',\r\n    EXPORT_FILE = 'export/',\r\n    GET_NEXT_ASSET_NUM = 'nextAssetNumber/',\r\n    GET_NETWORK_NEIGHBORHOOD = \"networkNeighborhood/\",\r\n    CHANGE_PLAN_CREATE = 'createplan/',\r\n    CHANGE_PLAN_DELETE = 'deleteplan/',\r\n    CHANGE_PLAN_EDIT = 'editplan/',\r\n    CHANGE_PLAN_EXECUTE = 'execute/',\r\n    CHANGE_PLAN_GET_PLANS = 'getplans/',\r\n    CHANGE_PLAN_CREATE_ACTION = 'createaction/',\r\n    CHANGE_PLAN_EDIT_ACTION = 'editaction/',\r\n    CHANGE_PLAN_DELETE_ACTION = 'deleteaction/',\r\n    CHANGE_PLAN_GET_ACTIONS = 'getactions/',\r\n    GENERATE_LABELS = 'labelgen/',\r\n    DECOMMISSION = \"decommission_asset/\",\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function makeEditJSON(originalUsername, username, password, display_name, email, privileges) {\r\n\treturn {\r\n\t\t'username_original':originalUsername,\r\n\t\t'username': username,\r\n\t\t'password': password,\r\n\t\t'display_name': display_name,\r\n\t\t'email': email,\r\n\t\t'privilege': privileges,\r\n\t}\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function makeDeleteJSON(username) {\r\n\treturn {\r\n\t\t'username': username,\r\n\t}\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function makeDetailViewJSON(username) {\r\n\treturn {\r\n\t\t'username': username,\r\n\t}\r\n}\r\n","\r\n\r\n\r\nexport const GENERAL_ASSET_ERROR =  \"There was an error in the backend. Could not perform the given asset operation at this time.\";\r\n\r\n\r\nexport const ASSETS_MAIN_PATH = 'instances/';\r\nexport const CHANGE_PLAN_PATH = 'changeplans/';\r\nexport const ASSET_DOWNLOAD_FILE_NAME = 'assets.csv';\r\nexport const SUCCESS_TOKEN = \"success\";\r\nexport const ERROR_TOKEN = \"error\";\r\n","import React from \"react\";\r\nimport Graph from \"react-graph-vis\";\r\nimport axios from \"axios\";\r\n\r\nimport { Typography } from '@material-ui/core';\r\n\r\nimport { AssetCommand } from \"../enums/AssetCommands.ts\";\r\nimport getURL from \"../../helpers/functions/GetURL\"\r\nimport * as Constants from \"../../Constants\";\r\n\r\n// nodes: [\r\n//     { id: 1, label: \"Node 1\", title: \"node 1 tootip text\" },\r\n//     { id: 2, label: \"Node 2\", title: \"node 2 tootip text\" },\r\n//     { id: 3, label: \"Node 3\", title: \"node 3 tootip text\" },\r\n//     { id: 4, label: \"Node 4\", title: \"node 4 tootip text\" },\r\n//     { id: 5, label: \"Node 5\", title: \"node 5 tootip text\" }\r\n//   ],\r\n//   edges: [\r\n//     { from: 1, to: 2 },\r\n//     { from: 1, to: 3 },\r\n//     { from: 2, to: 4 },\r\n//     { from: 2, to: 5 },\r\n//     { from: 5, to: 2 }\r\n//   ]\r\n//\r\n// vals: {\r\n//      \"host1\": [ \"host2\", \"host4\" ],\r\n//      \"host3\": [\"host5\", \"host7\", \"host9\", \"host11\"]\r\n// }\r\n\r\nfunction getGraph(primaryHosts, host) {\r\n    if (host===\"\") {\r\n        return {};\r\n    }\r\n\r\n    var hostnameMapping = {};\r\n    const hostID = 0;\r\n\r\n    var nodes = [];\r\n    nodes.push({\r\n        id:hostID,\r\n        label:\"\" + host,\r\n        color:\"#F5F5DC\"\r\n    });\r\n\r\n    hostnameMapping[host] = hostID;\r\n\r\n    var edges = [];\r\n    var primaryHostID = 1;\r\n\r\n    try {\r\n        console.log(\"nodes and edges\");\r\n        console.log(primaryHosts);\r\n        Object.entries(primaryHosts).map(([primaryHost, secondaryHosts]) => {\r\n            if (primaryHost !== \"message\" && primaryHost !==\"\" && primaryHost!==\"metadata\") {\r\n                if (hostnameMapping[primaryHost] !== undefined) {\r\n                    edges.push({ from: hostID, to:hostnameMapping[primaryHost] });\r\n                    edges.push({ from: hostnameMapping[primaryHost], to:hostID });\r\n                } else {\r\n                    nodes.push({\r\n                        id:primaryHostID,\r\n                        label:\"\" + primaryHost,\r\n                        color:\"#F0FFFF\"\r\n                    });\r\n                    edges.push({ from: hostID, to: primaryHostID });\r\n                    edges.push({ from: primaryHostID, to:hostID });\r\n                    hostnameMapping[primaryHost] = primaryHostID;\r\n                }\r\n                console.log(\"nodes and edges\");\r\n                var secondaryHostID = primaryHostID + 1;\r\n                try {\r\n                    secondaryHosts.map(secondaryHost => {\r\n                        if (secondaryHost !== \"\") {\r\n                            if (hostnameMapping[secondaryHost] !== undefined) {\r\n                                edges.push({ from: primaryHostID, to: hostnameMapping[secondaryHost] });\r\n                                edges.push({ to: primaryHostID, from: hostnameMapping[secondaryHost] });\r\n                            } else {\r\n                                nodes.push({\r\n                                    id:secondaryHostID,\r\n                                    label:\"\" + secondaryHost,\r\n                                    color:\"#7FFFD4\"\r\n                                });\r\n                                edges.push({ from: primaryHostID, to: secondaryHostID });\r\n                                edges.push({ to: primaryHostID, from: secondaryHostID });\r\n                                hostnameMapping[secondaryHost] = secondaryHostID;\r\n                                secondaryHostID++;\r\n                            }\r\n                        }\r\n                    });\r\n                } catch {\r\n\r\n                }\r\n\r\n                console.log(\"nodes and edges\");\r\n                primaryHostID = secondaryHostID + 1;\r\n            }\r\n        });\r\n\r\n        console.log(\"nodes and edges\");\r\n        console.log(nodes);\r\n        console.log(edges);\r\n        return { nodes:nodes, edges:edges };\r\n\r\n    } catch (Exception) {\r\n        console.log(\"in here\")\r\n        console.log(Exception);\r\n        return { nodes:[], edges:[] }\r\n    }\r\n}\r\n\r\nclass NetworkGraph extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            graph:{\r\n                nodes:[],\r\n                edges:[],\r\n            },\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        axios.post(\r\n            getURL(Constants.ASSETS_MAIN_PATH, AssetCommand.GET_NETWORK_NEIGHBORHOOD), {\r\n                \"asset_number\":this.props.assetNum,\r\n            }).then(response => {\r\n                console.log(response);\r\n                this.setState({ graph:getGraph(response.data, this.props.host) });\r\n        });\r\n    }\r\n\r\n    render() {\r\n          const options = {\r\n            layout: {\r\n              hierarchical: false\r\n            },\r\n            edges: {\r\n              color: \"#000000\"\r\n            },\r\n            height: \"500px\",\r\n            interaction:{\r\n                dragNodes:false,\r\n                dragView: false,\r\n            }\r\n          };\r\n\r\n          const events = {\r\n            select: function(event) {\r\n              var { nodes, edges } = event;\r\n            }\r\n          };\r\n\r\n        return (\r\n            <span>\r\n                {this.state.graph.edges.length===0 ? <Typography>This asset is not currently connected to any other assets</Typography>:\r\n                <Graph\r\n                    graph={this.state.graph}\r\n                    options={options}\r\n                    events={events}\r\n                    getNetwork={network => {\r\n                        //  if you want access to vis.js network api you can set the state in a parent component using this property\r\n                    }}\r\n                />}\r\n            </span>\r\n        );\r\n    }\r\n}\r\n\r\nconst rootElement = document.getElementById(\"root\");\r\n\r\n\r\nexport default NetworkGraph;\r\n","/**\r\n * For MAC addresses, the system should accept a six-byte hexadecimal value\r\n * with any byte seperator punctuation (including colon, dash, underscore, and\r\n * no seperator at all). Upon accepting the value, it should be formatted into a\r\n * lower-case colon-delimited canonical form.\r\n *\r\n * @param {string} val\r\n */\r\n\r\nexport default function stringToMac(val) {\r\n    // A  A  :  A  A  :  A  A  :  A  A  :  A  A  :  A  A\r\n    // 0  1  2  3  4  5  6  7  8  9  10 11 12 13 14 15 16\r\n\r\n    var returnVal = \"\";\r\n\r\n    returnVal = val.replace(/[^0-9A-Fa-f]*/g, \"\").toLowerCase();\r\n\r\n    if (returnVal.length > 12) {\r\n        returnVal = returnVal.substring(0, 12);\r\n    }\r\n\r\n    if (returnVal.length === 1 || returnVal.length === 2) {\r\n        return returnVal;\r\n    }\r\n\r\n    if (returnVal.length === 3 || returnVal.length === 4) {\r\n        return returnVal.substring(0, 2) + \":\" + returnVal.substring(2);\r\n    }\r\n\r\n    if (returnVal.length === 5 || returnVal.length === 6) {\r\n        return returnVal.substring(0, 2) + \":\" + returnVal.substring(2, 4) + \":\" + returnVal.substring(4);\r\n    }\r\n\r\n    if (returnVal.length === 7 || returnVal.length === 8) {\r\n        return returnVal.substring(0, 2)\r\n        + \":\" + returnVal.substring(2, 4)\r\n        + \":\" + returnVal.substring(4, 6)\r\n        + \":\" + returnVal.substring(6);\r\n    }\r\n\r\n    if (returnVal.length === 9 || returnVal.length === 10) {\r\n        return returnVal.substring(0, 2)\r\n        + \":\" + returnVal.substring(2, 4)\r\n        + \":\" + returnVal.substring(4, 6)\r\n        + \":\" + returnVal.substring(6, 8)\r\n        + \":\" + returnVal.substring(8);\r\n    }\r\n\r\n    if (returnVal.length === 11 || returnVal.length === 12) {\r\n        return returnVal.substring(0, 2)\r\n        + \":\" + returnVal.substring(2, 4)\r\n        + \":\" + returnVal.substring(4, 6)\r\n        + \":\" + returnVal.substring(6, 8)\r\n        + \":\" + returnVal.substring(8, 10)\r\n        + \":\" + returnVal.substring(10,12);\r\n    }\r\n\r\n    return returnVal;\r\n}\r\n","import React from 'react';\r\n\r\nimport axios from 'axios';\r\n\r\nimport { TextField, Button, Tooltip, CircularProgress, Grid } from \"@material-ui/core\";\r\nimport { Autocomplete, Alert } from '@material-ui/lab';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { Radio, RadioGroup, FormControl, FormControlLabel, FormHelperText } from '@material-ui/core';\r\nimport { AppBar, Toolbar, IconButton, Slide, Dialog } from '@material-ui/core';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { Collapse, Modal, Backdrop } from '@material-ui/core';\r\n\r\nimport StatusDisplay from '../../helpers/StatusDisplay';\r\nimport { AssetInput } from '../enums/AssetInputs.ts';\r\nimport { AssetCommand } from '../enums/AssetCommands.ts'\r\nimport getURL from '../../helpers/functions/GetURL';\r\nimport * as AssetConstants from \"../AssetConstants\";\r\nimport * as Constants from \"../../Constants\";\r\nimport { Typography } from '@material-ui/core';\r\nimport stringToMac from \"./functions/StringToMacAddress\"\r\nimport stringToRack from \"./functions/StringToRack\";\r\n\r\nfunction createInputs(name, label, showTooltip, description) {\r\n    return { label, name, showTooltip, description };\r\n}\r\n\r\nconst emptySearch = {\r\n    \"filter\": {\r\n        \"vendor\": null,\r\n        \"model_number\": null,\r\n        \"height\": null,\r\n        \"model\": null,\r\n        \"hostname\": null,\r\n        \"rack\": null,\r\n        \"rack_position\": null,\r\n        \"username\": null,\r\n        \"display_name\": null,\r\n        \"email\": null,\r\n        \"privilege\": null,\r\n        \"model\": null,\r\n        \"hostname\": null,\r\n        \"starting_rack_letter\": null,\r\n        \"ending_rack_letter\": null,\r\n        \"starting_rack_number\": null,\r\n        \"ending_rack_number\": null,\r\n        \"rack\": null,\r\n        \"rack_position\": null\r\n    },\r\n    \"datacenter_name\": \"\",\r\n}\r\n\r\nconst searchPath = \"search/\";\r\nconst left = \"left\";\r\nconst right = \"right\";\r\nconst off = \"off\";\r\n\r\nconst useStyles = theme => ({\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n    dialogDiv: {\r\n        padding: theme.spacing(2, 4, 3),\r\n    },\r\n    modal: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    paper: {\r\n        backgroundColor: theme.palette.background.paper,\r\n        border: '2px solid #000',\r\n        boxShadow: theme.shadows[5],\r\n        padding: theme.spacing(2, 4, 3),\r\n    },\r\n    progress: {\r\n        display: 'flex',\r\n        '& > * + *': {\r\n            marginLeft: theme.spacing(2),\r\n        },\r\n    },\r\n    appBar: {\r\n        position: 'relative',\r\n    },\r\n    title: {\r\n        marginLeft: theme.spacing(2),\r\n        flex: 1,\r\n    },\r\n});\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n    return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nclass EditAsset extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            // next available asset number\r\n            loadingAssetNumber: true,\r\n\r\n            // model information\r\n            loadingModels: true,\r\n            modelList: [],\r\n            networkList: null,\r\n            powerPortList: null,\r\n\r\n            // owner information\r\n            loadingOwners: true,\r\n            ownerList: [],\r\n\r\n            // datacenter information\r\n            loadingDatacenters: true,\r\n            datacenterList: [],\r\n\r\n            // hostname information\r\n            loadingHostnames: true,\r\n            assetNumList: [],\r\n            assetNumToModelList: null,\r\n\r\n            model: \"\",\r\n            hostname: \"\",\r\n            rack: \"\",\r\n            rackU: -1,\r\n            owner: \"\",\r\n            comment: \"\",\r\n            datacenter_name: \"\",\r\n            tags: [],\r\n            network_connections: null,\r\n            power_connections: null,\r\n            asset_number: -1,\r\n\r\n            selectedConnection: null,\r\n\r\n            statusOpen: false,\r\n            statusMessage: \"\",\r\n            statusSeverity: \"\",\r\n\r\n            showModal: false,\r\n\r\n            powerPortState: null,\r\n            leftRight: null,\r\n            availableConnections: false,\r\n            portOptions: [],\r\n\r\n            canSubmit: false,\r\n            updated: false,\r\n            showConfirmationBox: false,\r\n\r\n            inputs: {\r\n                \"model\": createInputs(AssetInput.MODEL, \"Model\", false, \"A reference to an existing model\"),\r\n                \"hostname\": createInputs(AssetInput.HOSTNAME, \"Hostname\", false, \"A short string compliant with RFC 1034’s definition of 'label'\"),\r\n                \"rack\": createInputs(AssetInput.RACK, \"Rack\", false, \"The rack the equipment is installed in, written as a row letter and rack number, e.g. 'B12'\"),\r\n                \"rackU\": createInputs(AssetInput.RACK_U, \"Rack U\", false, \"An integer indicating the vertical location of the bottom of the equipment (e.g. '5')\"),\r\n                \"owner\": createInputs(AssetInput.OWNER, \"Owner\", false, \"A reference to an existing user on the system who owns this equipment\"),\r\n                \"comment\": createInputs(AssetInput.COMMENT, \"Comment\", false, \"Any additional information associated with this asset\"),\r\n                \"datacenter\": createInputs(AssetInput.DATACENTER, \"Datacenter\", false, \"A reference to an existing datacenter\"),\r\n                \"macAddress\": createInputs(AssetInput.MAC_ADDRESS, \"Mac Address\", false, \"A 6-byte hexadecimal string per network port shown canonically in lower case with colon delimiters (e.g., '00:1e:c9:ac:78:aa').\\nA hostname is required to enter in this value\"),\r\n                \"networkConnections\": createInputs(AssetInput.NETWORK_CONNECTIONS, \"Port Name\", false, \"For each network port, a reference to another network port on another piece of gear\"),\r\n                \"powerConnections\": createInputs(AssetInput.POWER_CONNECTIONS, \"Power Connections\", false, \"Choice of PDU port number (0 means not plugged in)\"),\r\n                \"assetNum\": createInputs(AssetInput.ASSET_NUMBER, \"Asset Number\", false, \"A six-digit serial number unique associated with an asset.\"),\r\n            },\r\n        };\r\n    }\r\n\r\n    componentWillMount() {\r\n        console.log(\"comp did update\");\r\n        if ((this.props.defaultValues.model !== this.state.model\r\n            || this.props.defaultValues.hostname !== this.state.hostname\r\n            || this.props.defaultValues.rack !== this.state.rack\r\n            || this.props.defaultValues.rack_position !== this.state.rackU\r\n            || this.props.defaultValues.owner !== this.state.owner\r\n            || this.props.defaultValues.comment !== this.state.comment\r\n            || this.props.defaultValues.datacenter_name !== this.state.datacenter_name\r\n            || this.props.defaultValues.tags !== this.state.tags\r\n            || this.props.defaultValues.network_connections !== this.state.network_connections\r\n            || this.props.defaultValues.power_connections !== this.state.power_connections\r\n            || this.props.defaultValues.asset_number !== this.state.asset_number)\r\n            && !this.state.updated\r\n        ) {\r\n            this.setState({\r\n                model: this.props.defaultValues.model,\r\n                hostname: this.props.defaultValues.hostname,\r\n                rack: this.props.defaultValues.rack,\r\n                rackU: this.props.defaultValues.rack_position,\r\n                owner: this.props.defaultValues.owner,\r\n                comment: this.props.defaultValues.comment,\r\n                datacenter_name: this.props.defaultValues.datacenter_name,\r\n                tags: this.props.defaultValues.tags,\r\n                network_connections: this.props.defaultValues.network_connections,\r\n                power_connections: this.getPowerPortFromProps(this.props.defaultValues.power_connections),\r\n                asset_number: this.props.defaultValues.asset_number,\r\n\r\n                leftRight: this.getPowerFromProps(this.props.defaultValues.power_connections),\r\n            });\r\n        } else {\r\n            //this.setState({ updated: true, });\r\n        }\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getLists();\r\n    }\r\n\r\n    getPowerFromProps = (pwrCons) => {\r\n        var pwr = [];\r\n\r\n        pwrCons.map(pwrCon => {\r\n            if (pwrCon.includes(\"L\")) {\r\n                pwr.push(\"left\");\r\n            } else if (pwrCon.includes(\"R\")) {\r\n                pwr.push(\"right\");\r\n            } else {\r\n                pwr.push(\"off\");\r\n            }\r\n        })\r\n\r\n        return pwr;\r\n    }\r\n\r\n    getPowerPortFromProps = (pwrCons) => {\r\n        var pwrPorts = [];\r\n\r\n        try {\r\n            pwrCons.map(pwrCon => {\r\n                pwrPorts.push(parseInt(pwrCon.substring(1)));\r\n            });\r\n        } catch {\r\n\r\n        }\r\n\r\n        return pwrPorts;\r\n    }\r\n\r\n    getLists = () => {\r\n        this.getModelList();\r\n        this.getOwnerList();\r\n        this.getDatacenterList();\r\n        this.getAssetList();\r\n    }\r\n\r\n    getModelList = () => {\r\n        axios.post(\r\n            getURL(Constants.MODELS_MAIN_PATH, searchPath), emptySearch).then(\r\n                response => {\r\n                    var models = response.data.models;\r\n\r\n                    var modelNames = [];\r\n                    var networkNames = {};\r\n                    var powerPortNames = {};\r\n\r\n                    models.map(model => {\r\n                        var modelKey = model.vendor + \" \" + model.model_number;\r\n                        modelNames.push(modelKey);\r\n                        networkNames[modelKey] = model.ethernet_ports;\r\n                        powerPortNames[modelKey] = parseInt(model.power_ports);\r\n                    });\r\n\r\n                    this.setState({ loadingModels: false, modelList: modelNames, networkList: networkNames, powerPortList: powerPortNames });\r\n                });\r\n    }\r\n\r\n    getOwnerList = () => {\r\n        axios.post(\r\n            getURL(Constants.USERS_MAIN_PATH, searchPath), {\r\n            \"filter\":\r\n            {\r\n                \"username\": \"\",\r\n                \"display_name\": \"\",\r\n                \"email\": \"\",\r\n                \"privilege\": {\r\n                    \"model\": true,\r\n                    \"asset\": true,\r\n                    \"datacenters\": [\"*\"],\r\n                    \"power\": true,\r\n                    \"audit\": true,\r\n                    \"admin\": true\r\n                }\r\n            }\r\n        }).then(\r\n            response => {\r\n                try {\r\n                    console.log(response);\r\n                    var users = [];\r\n                    response.data.users.map(user => users.push(user.username + \"/\" + user.display_name));\r\n                    this.setState({ loadingOwners: false, ownerList: users });\r\n                } catch {\r\n                    this.setState({ loadingOwners: false })\r\n                }\r\n\r\n            });\r\n    }\r\n\r\n    getDatacenterList = () => {\r\n        axios.get(\r\n            getURL(Constants.DATACENTERS_MAIN_PATH, \"all/\")).then(\r\n                response => {\r\n                    var datacenters = [];\r\n                    response.data.datacenters.map(datacenter => {\r\n                        if (this.props.privilege.datacenters.length > 0) {\r\n                            if (this.props.privilege.datacenters[0] === \"*\" || this.props.privilege.datacenters.includes(datacenter.abbreviation) || this.props.privilege.asset) {\r\n                                datacenters.push(datacenter.name);\r\n                            }\r\n                        }\r\n                    });\r\n                    this.setState({ loadingDatacenters: false, datacenterList: datacenters })\r\n                });\r\n\r\n    }\r\n\r\n    getAssetList = () => {\r\n        axios.post(\r\n            getURL(Constants.ASSETS_MAIN_PATH, searchPath), emptySearch).then(\r\n                response => {\r\n                    var instances = response.data.instances;\r\n\r\n                    var hostnames = [];\r\n                    var hostToModel = {};\r\n                    instances.map(instance => {\r\n                        hostnames.push(instance.hostname);\r\n                        hostToModel[instance.hostname] = instance.model;\r\n                    })\r\n\r\n                    this.setState({ loadingHostnames: false, assetNumList: hostnames, assetNumToModelList: hostToModel }, this.availableNetworkConnections());\r\n                });\r\n    }\r\n\r\n    editAsset = (event) => {\r\n        event.preventDefault();\r\n        var json = this.createJSON();\r\n        console.log(json);\r\n        var changePlanJSON = {\r\n            \"change_plan_id\": this.props.changePlanID,\r\n            \"step\": 1,\r\n            \"action\": \"update\",\r\n            \"asset_numberOriginal\": this.props.defaultValues.asset_number,\r\n            \"new_record\": json\r\n        };\r\n        var url = this.props.changePlanActive ? getURL(AssetConstants.CHANGE_PLAN_PATH, AssetCommand.CHANGE_PLAN_CREATE_ACTION) : getURL(AssetConstants.ASSETS_MAIN_PATH, AssetCommand.edit);\r\n        axios.post(\r\n            url,\r\n            this.props.changePlanActive ? changePlanJSON : json\r\n        ).then(\r\n            response => {\r\n                if (response.data.message === AssetConstants.SUCCESS_TOKEN) {\r\n                    this.setState({ statusOpen: true, statusMessage: \"Successfully saved edits\", statusSeverity: AssetConstants.SUCCESS_TOKEN });\r\n                } else {\r\n                    this.setState({ statusOpen: true, statusMessage: response.data.message, statusSeverity: AssetConstants.ERROR_TOKEN });\r\n                }\r\n            });\r\n    }\r\n\r\n    updateModel = (event) => {\r\n        var model = event.target.value;\r\n\r\n        if (model !== \"\") {\r\n            var ports = this.state.networkList[model];\r\n            var networkConns = {};\r\n\r\n            if (ports !== null) {\r\n                ports.map(port => {\r\n                    var defaultNetworkPort = {\r\n                        \"mac_address\": \"\",\r\n                        \"connection_hostname\": \"\",\r\n                        \"connection_port\": \"\",\r\n                    }\r\n                    networkConns[port] = defaultNetworkPort;\r\n                });\r\n            }\r\n        } else {\r\n            var networkConns = {};\r\n        }\r\n\r\n\r\n        this.setState({ model: model, network_connections: networkConns }, () => { });\r\n    }\r\n\r\n    updateHostname = (event) => {\r\n        this.setState({ hostname: event.target.value });\r\n    }\r\n\r\n    updateRack = (event) => {\r\n        var rackVal = stringToRack(event.target.value);\r\n        this.setState({ rack: rackVal }, () => { });\r\n    }\r\n\r\n    updateRackU = (event) => {\r\n        this.setState({ rackU: event.target.value }, () => { });\r\n    }\r\n\r\n    updateOwner = (event) => {\r\n        this.setState({ owner: event.target.value }, () => { });\r\n    }\r\n\r\n    updateComment = (event) => {\r\n        this.setState({ comment: event.target.value }, () => { });\r\n    }\r\n\r\n    updateDatacenter = (event) => {\r\n        this.setState({ datacenter_name: event.target.value }, () => { });\r\n    }\r\n\r\n    updateTags = (event) => {\r\n        this.setState({ tags: event.target.value }, () => { });\r\n    }\r\n\r\n    changeNetworkMacAddress = (event, port) => {\r\n        var val = stringToMac(event.target.value);\r\n        this.setState(prevState => {\r\n            let network_connections = Object.assign({}, prevState.network_connections);\r\n            network_connections[port].mac_address = val;\r\n            return { network_connections };\r\n        }, () => { });\r\n    }\r\n\r\n    changeNetworkHostname = (value, port) => {\r\n        var val = value === undefined ? \"\" : value;\r\n        this.setState(prevState => {\r\n            let network_connections = Object.assign({}, prevState.network_connections);\r\n            network_connections[port].connection_hostname = val;\r\n            return { network_connections };\r\n        }, () => { this.getPortOptions(val); });\r\n    }\r\n\r\n    changeNetworkPort = (value, port) => {\r\n        var val = value === undefined ? \"\" : value;\r\n\r\n        this.setState(prevState => {\r\n            let network_connections = Object.assign({}, prevState.network_connections);\r\n            network_connections[port] = (network_connections[port] === null) ? {} : network_connections[port];\r\n            network_connections[port].connection_port = val;\r\n            return { network_connections };\r\n        }, () => { });\r\n    }\r\n\r\n    updatePowerPort = (event, port) => {\r\n        var val = event.target.value;\r\n\r\n        this.setState(prevState => {\r\n            let power_connections = Object.assign({}, prevState.power_connections);\r\n            power_connections[port] = val;\r\n            return { power_connections };\r\n        }, () => { });\r\n    }\r\n\r\n    changePowerPortState = (event, portNum) => {\r\n        var val = event.target.value;\r\n\r\n        this.setState(prevState => {\r\n            let leftRight = Object.assign({}, prevState.leftRight);\r\n            leftRight[portNum] = val;\r\n            return { leftRight };\r\n        }, () => { });\r\n    }\r\n\r\n    updateAssetNumber = (event) => {\r\n        this.setState({ asset_number: event.target.value }, () => { });\r\n    }\r\n\r\n    getPowerConnections = () => {\r\n        if (this.state.leftRight === null) {\r\n            return [];\r\n        }\r\n\r\n        var pwrConns = [];\r\n        var defaultValue = 1;\r\n        Object.entries(this.state.leftRight).map(([key, value]) => {\r\n            var num = this.state.power_connections === null ? defaultValue : this.state.power_connections[key];\r\n            switch (value) {\r\n                case left:\r\n                    pwrConns.push(\"L\" + num);\r\n                    break;\r\n                case right:\r\n                    pwrConns.push(\"R\" + num);\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n        });\r\n\r\n        return pwrConns;\r\n    }\r\n\r\n    createJSON = () => {\r\n        return {\r\n            \"asset_numberOriginal\": this.props.defaultValues.asset_number,\r\n            \"model\": this.state.model,\r\n            \"hostname\": this.state.hostname,\r\n            \"rack\": this.state.rack,\r\n            \"rack_position\": this.state.rackU,\r\n            \"owner\": this.state.owner.split(\"/\")[0],\r\n            \"comment\": this.state.comment,\r\n            \"datacenter_name\": this.state.datacenter_name,\r\n            \"tags\": this.state.tags,\r\n            \"network_connections\": ((this.state.network_connections === null) ? {} : this.state.network_connections),\r\n            \"power_connections\": this.getPowerConnections(),\r\n            'asset_number': this.state.asset_number,\r\n        }\r\n    }\r\n\r\n    availableNetworkConnections = () => {\r\n        var availableNetworks = false;\r\n\r\n        var assets = this.state.assetNumList;\r\n        assets.map(asset => {\r\n            if (Object.keys(this.state.networList[this.state.assetNumToModelList[asset]].length).length > 0) {\r\n                availableNetworks = true;\r\n            }\r\n        });\r\n        this.setState({ availableConnections: availableNetworks });\r\n    }\r\n\r\n    showModal = () => {\r\n        this.setState({ showModal: true });\r\n    }\r\n\r\n    closeModal = () => {\r\n        window.location.reload();\r\n    }\r\n\r\n    statusClose = () => {\r\n        this.setState({ statusOpen: false, statusMessage: \"\", statusSeverity: \"\" });\r\n    }\r\n\r\n    getPortOptions = (hostname) => {\r\n        try {\r\n            this.setState({ portOptions: this.state.networkList[this.state.assetNumToModelList[hostname]] });\r\n        } catch {\r\n\r\n        }\r\n    }\r\n\r\n    getModel = () => {\r\n        return this.state.model;\r\n    }\r\n\r\n    displayNetworks = () => {\r\n        var model = this.getModel();\r\n        return (this.state.networkList && this.state.networkList[model]);\r\n    }\r\n\r\n    getNetworkConnections = () => {\r\n        return this.state.network_connections;\r\n    }\r\n\r\n    getMacValue = (port) => {\r\n        var netCons = this.getNetworkConnections();\r\n        if (netCons === null) {\r\n            return \"\";\r\n        }\r\n        return netCons[port] ? netCons[port].mac_address : \"\"\r\n    }\r\n\r\n    getConnectingHostname = (port) => {\r\n        var netCons = this.getNetworkConnections();\r\n        if (netCons === null) {\r\n            return \"\";\r\n        }\r\n        return netCons[port] ? netCons[port].connection_hostname : \"\"\r\n    }\r\n\r\n    getConnectionPort = (port) => {\r\n        var netCons = this.getNetworkConnections();\r\n        if (netCons === null) {\r\n            return \"\";\r\n        }\r\n        return netCons[port] ? netCons[port].connection_port : \"\"\r\n    }\r\n\r\n    connectionsDisabled = () => {\r\n        return this.state.hostname === \"\";\r\n    }\r\n\r\n    deleteAsset = () => {\r\n        this.setState({ showConfirmationBox: false })\r\n        axios.post(getURL(Constants.ASSETS_MAIN_PATH, AssetCommand.delete),\r\n            { \"asset_number\": this.props.defaultValues.asset_number, \"datacenter_name\": this.props.defaultValues.datacenter_name }).then(\r\n                response => {\r\n                    if (response.data.message === \"success\") {\r\n                        this.props.close();\r\n                        window.location.reload();\r\n                    } else {\r\n                        this.setState({ statusOpen: true, statusMessage: response.data.message, statusSeverity: AssetConstants.ERROR_TOKEN });\r\n                    }\r\n                }\r\n            )\r\n    }\r\n\r\n    decommissionAsset = () => {\r\n        axios.post(getURL(Constants.DECOMMISSIONS_MAIN_PATH, AssetCommand.DECOMMISSION),\r\n            {\r\n                \"asset_number\": this.props.defaultValues.asset_number,\r\n                \"datacenter_name\": this.props.defaultValues.datacenter_name,\r\n                \"decommission_user\": this.props.username,\r\n            }\r\n        ).then(\r\n            response => {\r\n                if (response.data.message === \"success\") {\r\n                    this.props.close();\r\n                    window.location.reload();\r\n                } else {\r\n                    this.setState({ statusOpen: true, statusMessage: response.data.message, statusSeverity: AssetConstants.ERROR_TOKEN });\r\n                }\r\n            }\r\n        )\r\n    }\r\n\r\n    openConfirmationBox = () => {\r\n        this.setState({ showConfirmationBox: true });\r\n    }\r\n\r\n    closeConfirmationBox = () => {\r\n        this.setState({ showConfirmationBox: false })\r\n    }\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n\r\n        return (\r\n            <span>\r\n                {(\r\n                    (this.state.loadingDatacenters\r\n                        || this.state.loadingModels\r\n                        || this.state.loadingHostnames\r\n                        || this.state.loadingOwners)\r\n                    //&& false\r\n                ) ? <div className={classes.progress}><CircularProgress /></div> :\r\n                    <form\r\n                        onSubmit={(event) => { this.editAsset(event) }}\r\n                    >\r\n                        <div className={classes.dialogDiv}>\r\n                            <Grid container spacing={3}>\r\n                                <Grid item xs={3}>\r\n                                    <Tooltip placement=\"top\" open={this.state.inputs.model.Tooltip} title={this.state.inputs.model.description}>\r\n                                        {this.props.disabled ?\r\n                                            <TextField\r\n                                                label={this.state.inputs.model.label}\r\n                                                name={this.state.inputs.model.name}\r\n                                                variant=\"outlined\"\r\n                                                fullWidth\r\n                                                value={this.state.model}\r\n                                                disabled\r\n                                            /> :\r\n                                            <Autocomplete\r\n                                                id=\"select-model\"\r\n                                                options={this.state.modelList}\r\n                                                includeInputInList\r\n                                                value={this.state.model}\r\n                                                renderInput={params => (\r\n                                                    <TextField\r\n                                                        {...params}\r\n                                                        label={this.state.inputs.model.label}\r\n                                                        name={this.state.inputs.model.name}\r\n                                                        onChange={this.updateModel}\r\n                                                        onBlur={this.updateModel}\r\n                                                        variant=\"outlined\"\r\n                                                        fullWidth\r\n                                                        required\r\n                                                    />\r\n                                                )}\r\n                                            />}\r\n                                    </Tooltip>\r\n                                </Grid>\r\n                                <Grid item xs={3}>\r\n                                    <Tooltip placement=\"top\" open={this.state.inputs.owner.Tooltip} title={this.state.inputs.owner.description}>\r\n                                        {this.props.disabled ?\r\n                                            <TextField\r\n                                                label={this.state.inputs.owner.label}\r\n                                                name={this.state.inputs.owner.name}\r\n                                                variant=\"outlined\"\r\n                                                fullWidth\r\n                                                value={this.state.owner}\r\n                                                disabled\r\n                                            /> :\r\n                                            <Autocomplete\r\n                                                id=\"select-owner\"\r\n                                                options={this.state.ownerList}\r\n                                                includeInputInList\r\n                                                value={this.state.owner}\r\n                                                renderInput={params => (\r\n                                                    <TextField\r\n                                                        {...params}\r\n                                                        label={this.state.inputs.owner.label}\r\n                                                        name={this.state.inputs.owner.name}\r\n                                                        onChange={this.updateOwner}\r\n                                                        onBlur={this.updateOwner}\r\n                                                        variant=\"outlined\"\r\n                                                        fullWidth\r\n                                                        disabled={this.props.disabled}\r\n                                                    />\r\n                                                )}\r\n                                            />}\r\n                                    </Tooltip>\r\n                                </Grid>\r\n                                <Grid item xs={3}>\r\n                                    <Tooltip placement=\"top\" open={this.state.inputs.datacenter.Tooltip} title={this.state.inputs.datacenter.description}>\r\n                                        {this.props.disabled ?\r\n                                            <TextField\r\n                                                label={this.state.inputs.datacenter.label}\r\n                                                name={this.state.inputs.datacenter.name}\r\n                                                variant=\"outlined\"\r\n                                                fullWidth\r\n                                                value={this.state.datacenter_name}\r\n                                                disabled\r\n                                            /> :\r\n                                            <Autocomplete\r\n                                                id=\"input-datacenter\"\r\n                                                options={this.state.datacenterList}\r\n                                                includeInputInList\r\n                                                value={this.state.datacenter_name}\r\n                                                renderInput={params => (\r\n                                                    <TextField\r\n                                                        {...params}\r\n                                                        label={this.state.inputs.datacenter.label}\r\n                                                        name={this.state.inputs.datacenter.name}\r\n                                                        onChange={this.updateDatacenter}\r\n                                                        onBlur={this.updateDatacenter}\r\n                                                        variant=\"outlined\"\r\n                                                        fullWidth\r\n                                                        required\r\n                                                        disabled={this.props.disabled}\r\n\r\n                                                    />\r\n                                                )}\r\n                                            />}\r\n                                    </Tooltip>\r\n                                </Grid>\r\n                                <Grid item xs={3}>\r\n                                    <Tooltip placement=\"top\" open={this.state.inputs.rack.Tooltip} title={this.state.inputs.rack.description}>\r\n                                        <TextField\r\n                                            id=\"input-rack\"\r\n                                            variant=\"outlined\"\r\n                                            label={this.state.inputs.rack.label}\r\n                                            name={this.state.inputs.rack.name}\r\n                                            onChange={this.updateRack}\r\n                                            value={this.state.rack}\r\n                                            required\r\n                                            fullWidth\r\n                                            disabled={this.props.disabled}\r\n                                            defaultValue={this.props.defaultValues.rack}\r\n                                        />\r\n                                    </Tooltip>\r\n                                </Grid>\r\n                                <Grid item xs={3}>\r\n                                    <Tooltip placement=\"top\" open={this.state.inputs.rackU.Tooltip} title={this.state.inputs.rackU.description}>\r\n                                        <TextField\r\n                                            id=\"input-rackU\"\r\n                                            variant=\"outlined\"\r\n                                            type=\"number\"\r\n                                            InputProps={{ inputProps: { min: 1, max: 42 } }}\r\n                                            label={this.state.inputs.rackU.label}\r\n                                            name={this.state.inputs.rackU.name}\r\n                                            onChange={this.updateRackU}\r\n                                            required\r\n                                            fullWidth\r\n                                            disabled={this.props.disabled}\r\n                                            value={this.state.rackU}\r\n                                        />\r\n                                    </Tooltip>\r\n                                </Grid>\r\n                                <Grid item xs={3}>\r\n                                    <Tooltip placement=\"top\" open={this.state.inputs.assetNum.Tooltip} title={this.state.inputs.assetNum.description}>\r\n                                        <TextField\r\n                                            id=\"input-asset-number\"\r\n                                            variant=\"outlined\"\r\n                                            type=\"number\"\r\n                                            InputProps={{ inputProps: { min: 100000, max: 999999 } }}\r\n                                            label={this.state.inputs.assetNum.label}\r\n                                            name={this.state.inputs.assetNum.name}\r\n                                            onChange={this.updateAssetNumber}\r\n                                            value={this.state.asset_number}\r\n                                            required\r\n                                            fullWidth\r\n                                            disabled={this.props.disabled}\r\n                                        />\r\n                                    </Tooltip>\r\n                                </Grid>\r\n                                <Grid item xs={3}>\r\n                                    <Tooltip placement=\"top\" open={this.state.inputs.hostname.Tooltip} title={this.state.inputs.hostname.description}>\r\n                                        <TextField\r\n                                            id=\"input-hostname\"\r\n                                            variant=\"outlined\"\r\n                                            label={this.state.inputs.hostname.label}\r\n                                            name={this.state.inputs.hostname.name}\r\n                                            onChange={this.updateHostname}\r\n                                            fullWidth\r\n                                            disabled={this.props.disabled}\r\n                                            value={this.state.hostname}\r\n                                        />\r\n                                    </Tooltip>\r\n                                </Grid>\r\n\r\n                                {this.displayNetworks() ?\r\n                                    <Grid item xs={12}>\r\n                                        {this.state.networkList[this.getModel()].map(networkPort => (\r\n                                            <Grid container spacing={3}>\r\n                                                <Grid item xs={2}>\r\n                                                    <Typography>{networkPort + \": \"}</Typography>\r\n                                                </Grid>\r\n                                                <Grid item xs={3}>\r\n                                                    <Tooltip placement=\"top\" open={this.state.inputs.macAddress.Tooltip} title={this.state.inputs.macAddress.description}>\r\n                                                        <TextField\r\n                                                            id=\"input-mac-address\"\r\n                                                            variant=\"outlined\"\r\n                                                            label={this.state.inputs.macAddress.label}\r\n                                                            name={this.state.inputs.macAddress.name}\r\n                                                            onChange={(event) => { this.changeNetworkMacAddress(event, networkPort) }}\r\n                                                            fullWidth\r\n                                                            value={this.getMacValue(networkPort)}\r\n                                                        />\r\n                                                    </Tooltip>\r\n                                                </Grid>\r\n                                                <Grid item xs={3}>\r\n                                                    <Tooltip placement=\"top\" open={this.state.inputs.networkConnections.Tooltip} title={this.state.inputs.networkConnections.description}>\r\n                                                        {this.props.disabled ?\r\n                                                            <TextField\r\n                                                                label={\"Connection Hostname\"}\r\n                                                                name={\"Connection Hostname\"}\r\n                                                                variant=\"outlined\"\r\n                                                                fullWidth\r\n                                                                value={this.getConnectingHostname(networkPort)}\r\n                                                                disabled\r\n                                                            /> :\r\n                                                            <Autocomplete\r\n                                                                id=\"input-network-ports-hostname\"\r\n                                                                options={this.state.assetNumList}\r\n                                                                includeInputInList\r\n                                                                onChange={(event, value) => { this.changeNetworkHostname(value, networkPort) }}\r\n                                                                required={this.getNetworkConnections()[networkPort].connection_port !== \"\"}\r\n                                                                value={this.getConnectingHostname(networkPort)}\r\n                                                                renderInput={params => (\r\n                                                                    <TextField\r\n                                                                        {...params}\r\n                                                                        label={\"Connection Hostname\"}\r\n                                                                        name={\"Connection Hostname\"}\r\n                                                                        variant=\"outlined\"\r\n                                                                        fullWidth\r\n                                                                    />\r\n                                                                )}\r\n                                                            />}\r\n                                                    </Tooltip>\r\n                                                </Grid>\r\n                                                <Grid item xs={3}>\r\n                                                    <Tooltip placement=\"top\" open={this.state.inputs.networkConnections.Tooltip} title={this.state.inputs.networkConnections.description}>\r\n                                                        {this.props.disabled ?\r\n                                                            <TextField\r\n                                                                label={\"Connection Port\"}\r\n                                                                name={\"Connection Port\"}\r\n                                                                variant=\"outlined\"\r\n                                                                fullWidth\r\n                                                                value={this.getConnectionPort(networkPort)}\r\n                                                                disabled\r\n                                                            /> :\r\n                                                            <Autocomplete\r\n                                                                id=\"input-network-ports-connection-port\"\r\n                                                                options={this.state.portOptions}\r\n                                                                includeInputInList\r\n                                                                onChange={(event, value) => { this.changeNetworkPort(value, networkPort) }}\r\n                                                                required={this.getNetworkConnections()[networkPort].connection_hostname !== \"\"}\r\n                                                                value={this.getConnectionPort(networkPort)}\r\n                                                                disabled={this.connectionsDisabled()}\r\n                                                                renderInput={params => (\r\n                                                                    <TextField\r\n                                                                        {...params}\r\n                                                                        label={\"Connection Port\"}\r\n                                                                        name={\"Connection Port\"}\r\n                                                                        variant=\"outlined\"\r\n                                                                        fullWidth\r\n                                                                    />\r\n                                                                )}\r\n                                                            />}\r\n                                                    </Tooltip>\r\n                                                </Grid>\r\n                                            </Grid>\r\n                                        ))}\r\n                                    </Grid> : null}\r\n\r\n                                {(\r\n                                    !(this.state.powerPortList\r\n                                        && this.state.powerPortList[this.state.model])\r\n                                ) ? null :\r\n                                    Array.from({ length: this.state.powerPortList[this.state.model] }, (_, k) => (\r\n                                        <Grid item xs={12}>\r\n                                            <Grid container spacing={3}>\r\n                                                <Grid item xs={12}>\r\n                                                    <Typography>{\"Power Port: \" + k}</Typography>\r\n                                                </Grid>\r\n                                                <Grid item xs={3}>\r\n                                                    <FormControl component=\"fieldset\">\r\n                                                        <RadioGroup\r\n                                                            id={\"power-port-\" + k}\r\n                                                            aria-label=\"position\"\r\n                                                            name={\"position\" + k}\r\n                                                            value={(this.state.leftRight === null) ? off : (this.state.leftRight[k] === undefined ? off : this.state.leftRight[k])}\r\n                                                            onChange={(event) => { this.changePowerPortState(event, k) }}\r\n                                                            row\r\n                                                        >\r\n                                                            <FormControlLabel\r\n                                                                value={left}\r\n                                                                control={<Radio color=\"primary\" />}\r\n                                                                label=\"Left\"\r\n                                                                labelPlacement=\"bottom\"\r\n                                                                disabled={this.props.disabled}\r\n                                                            />\r\n                                                            <FormControlLabel\r\n                                                                value={right}\r\n                                                                control={<Radio color=\"primary\" />}\r\n                                                                label=\"Right\"\r\n                                                                labelPlacement=\"bottom\"\r\n                                                                disabled={this.props.disabled}\r\n                                                            />\r\n                                                            <FormControlLabel\r\n                                                                value={off}\r\n                                                                control={<Radio color=\"primary\" />}\r\n                                                                label=\"No Connection\"\r\n                                                                labelPlacement=\"bottom\"\r\n                                                                disabled={this.props.disabled}\r\n                                                            />\r\n                                                        </RadioGroup>\r\n                                                    </FormControl>\r\n                                                </Grid>\r\n                                                {(this.state.leftRight === null) ? null : (this.state.leftRight[k] === undefined || this.state.leftRight[k] === off ? null :\r\n                                                    <Grid item xs={2}>\r\n                                                        <TextField\r\n                                                            type=\"number\"\r\n                                                            value={(this.state.power_connections === null) ? 1 : (this.state.power_connections[k] === undefined ? 1 : this.state.power_connections[k])}\r\n                                                            InputProps={{ inputProps: { min: 1, max: 24 } }}\r\n                                                            onChange={(event) => { this.updatePowerPort(event, k) }}\r\n                                                            disabled={this.props.disabled}\r\n                                                        />\r\n                                                        <FormHelperText>Power Port Number</FormHelperText>\r\n                                                    </Grid>\r\n                                                )}\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                    ))\r\n                                }\r\n                                <Grid item xs={6}>\r\n                                    <TextField\r\n                                        id=\"input-comment\"\r\n                                        variant=\"outlined\"\r\n                                        label={this.state.inputs.comment.label}\r\n                                        name={this.state.inputs.comment.name}\r\n                                        onChange={this.updateComment}\r\n                                        multiline={true}\r\n                                        fullWidth\r\n                                        defaultValue={this.props.defaultValues.comment}\r\n                                        disabled={this.props.disabled}\r\n                                    />\r\n                                </Grid>\r\n\r\n                                <Grid item xs={6} />\r\n                                {this.props.disabled ? null :\r\n                                    <Grid item xs={3}>\r\n                                        <Button\r\n                                            variant=\"contained\"\r\n                                            color={this.props.changePlanActive ? \"\" : \"primary\"}\r\n                                            type=\"submit\"\r\n                                            style={{\r\n                                                backgroundColor: this.props.changePlanActive ? \"#64b5f6\" : \"\"\r\n                                            }}\r\n                                        >\r\n                                            {this.props.changePlanActive ? \"Save to Change Plan\" : \"Save\"}\r\n                                        </Button>\r\n                                    </Grid>}\r\n                                {this.props.disabled ? null :\r\n                                    <Grid item xs={3}>\r\n                                        <Button\r\n                                            variant=\"contained\"\r\n                                            color=\"secondary\"\r\n                                            onClick={() => this.openConfirmationBox()}\r\n                                        >\r\n                                            {this.props.changePlanActive ? \"Delete in Change Plan\" : \"Delete\"}\r\n                                        </Button>\r\n                                    </Grid>}\r\n                                {this.props.disabled ? null :\r\n                                    <Grid item xs={6}>\r\n                                        <Button\r\n                                            variant=\"contained\"\r\n                                            onClick={() => this.decommissionAsset()}\r\n                                        >\r\n                                            {this.props.changePlanActive ? \"Decommission in Change Plan\" : \"Decommission\"}\r\n                                        </Button>\r\n                                    </Grid>}\r\n                            </Grid></div></form>}\r\n                {this.state.statusOpen ?\r\n                    <Alert\r\n                        severity={this.state.statusSeverity}\r\n                        action={\r\n                            <IconButton\r\n                                aria-label=\"close\"\r\n                                color=\"inherit\"\r\n                                size=\"small\"\r\n                                onClick={() => {\r\n                                    this.statusClose()\r\n                                }}\r\n                            >\r\n                                <CloseIcon fontSize=\"inherit\" />\r\n                            </IconButton>\r\n                        }\r\n                    >\r\n                        {this.state.statusMessage}\r\n                    </Alert> : null}\r\n\r\n                <Modal\r\n                    aria-labelledby=\"transition-modal-title\"\r\n                    aria-describedby=\"transition-modal-description\"\r\n                    className={classes.modal}\r\n                    open={this.state.showConfirmationBox}\r\n                    onClose={this.closeConfirmationBox}\r\n                    closeAfterTransition\r\n                    BackdropComponent={Backdrop}\r\n                    BackdropProps={{\r\n                        timeout: 500,\r\n                    }}\r\n                >\r\n                    <div className={classes.paper}>\r\n                        <Grid container spacing={5}>\r\n                            <Grid item xs={12}>\r\n                                Are you sure you wish to delete?\r\n                                    </Grid>\r\n                            <Grid item xs={2}>\r\n                                <Button\r\n                                    variant=\"contained\"\r\n                                    color=\"primary\"\r\n                                    onClick={() => this.deleteAsset()}\r\n                                >\r\n                                    Yes\r\n                                        </Button>\r\n                            </Grid>\r\n                            <Grid item xs={1}>\r\n                                <Button\r\n                                    variant=\"contained\"\r\n                                    color=\"primary\"\r\n                                    onClick={() => this.closeConfirmationBox()}\r\n                                >\r\n                                    No\r\n                                        </Button>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </div>\r\n                </Modal>\r\n            </span>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default withStyles(useStyles)(EditAsset);\r\n","import React from 'react';\r\n\r\nimport axios from 'axios';\r\n\r\nimport {\r\n    Button,\r\n    ExpansionPanel,\r\n    ExpansionPanelSummary,\r\n    ExpansionPanelDetails,\r\n    Dialog,\r\n    AppBar,\r\n    Toolbar,\r\n    Slide,\r\n    IconButton,\r\n    Grid,\r\n} from \"@material-ui/core/\"\r\nimport { Alert, AlertTitle } from \"@material-ui/lab\";\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\nimport { Typography } from '@material-ui/core';\r\nimport NetworkGraph from \"./NetworkGraph\";\r\nimport EditAsset from \"./EditAsset\";\r\n\r\nfunction createInputs(name, label, showTooltip, description) {\r\n    return {label, name, showTooltip, description};\r\n}\r\n\r\nconst useStyles = theme => ({\r\n      appBar: {\r\n        position: 'relative',\r\n      },\r\n      title: {\r\n        marginLeft: theme.spacing(2),\r\n        flex: 1,\r\n      },\r\n      button: {\r\n          marginLeft:theme.spacing(3),\r\n      }\r\n});\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n    return <Slide direction=\"up\" ref={ref} {...props} />;\r\n  });\r\n\r\nclass DetailAsset extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            networkNodes: null,\r\n            detailsExpanded: true,\r\n        };\r\n    }\r\n\r\n    closeDetailView = () => {\r\n        this.props.search();\r\n    }\r\n\r\n    toggleDetails = () => {\r\n        this.setState({ detailsExpanded: !this.state.detailsExpanded });\r\n    }\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n\r\n        return (\r\n        <span>\r\n            <Dialog fullScreen open={this.props.open} onClose={() => {window.location.reload();}} TransitionComponent={Transition} padding={3}>\r\n                <AppBar className={classes.appBar}>\r\n                    <Toolbar>\r\n                        <IconButton edge=\"start\" color=\"inherit\" onClick={() => {window.location.reload();}} aria-label=\"close\">\r\n                            <CloseIcon />\r\n                        </IconButton>\r\n                        <Typography variant=\"h6\" className={classes.title}>\r\n                            Asset Details\r\n                        </Typography>\r\n                    </Toolbar>\r\n                </AppBar>\r\n\r\n                {this.props.changePlanActive ?\r\n\t\t\t\t\t<Alert severity=\"info\">\r\n\t\t\t\t\t\t<AlertTitle>Change Plan Mode</AlertTitle>\r\n\t\t\t\t\t\tYou are currently in change plan mode! Changes made are being logged in the plan and not actually made in the system.\r\n\t\t\t\t\t</Alert> : null}\r\n\r\n                <ExpansionPanel expanded={this.state.detailsExpanded} onChange={this.toggleDetails}>\r\n                    <ExpansionPanelSummary\r\n                        expandIcon={<ExpandMoreIcon />}\r\n                        aria-controls=\"panel1a-content\"\r\n                        id=\"fields-header\"\r\n                    >\r\n                    <Typography>Asset General Details</Typography>\r\n                    </ExpansionPanelSummary>\r\n                    <ExpansionPanelDetails>\r\n                        <EditAsset\r\n                            defaultValues={this.props.asset}\r\n                            disabled={this.props.disabled}\r\n                            close={this.props.close}\r\n                            getAssetList={this.props.getAssetList}\r\n                            privilege={this.props.privilege}\r\n                            changePlanActive={this.props.changePlanActive}\r\n                            changePlanID={this.props.changePlanID}\r\n                            username={this.props.username}\r\n                        />\r\n                    </ExpansionPanelDetails>\r\n                </ExpansionPanel>\r\n                {this.props.asset.hostname !== undefined && this.props.asset.hostname !== \"\" ?\r\n                <ExpansionPanel>\r\n                    <ExpansionPanelSummary\r\n                        expandIcon={<ExpandMoreIcon />}\r\n                        aria-controls=\"panel1a-content\"\r\n                        id=\"networks-header\"\r\n                    >\r\n                        <Typography>Asset Network Management</Typography>\r\n                    </ExpansionPanelSummary>\r\n                    <ExpansionPanelDetails>\r\n                                <NetworkGraph\r\n                                    vals={this.state.networkNodes}\r\n                                    host={this.props.asset.hostname}\r\n                                    assetNum={this.props.asset.asset_number}\r\n                                />\r\n                    </ExpansionPanelDetails>\r\n                </ExpansionPanel>:null}\r\n            </Dialog>\r\n        </span>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default withStyles(useStyles)(DetailAsset);\r\n","import React from 'react';\r\n\r\nimport axios from 'axios';\r\n\r\nimport {\r\n    Grid,\r\n    FormHelperText,\r\n    FormControl,\r\n    Select,\r\n    MenuItem,\r\n    TextField,\r\n    Paper,\r\n    Typography,\r\n    Button,\r\n    FormControlLabel,\r\n    Switch,\r\n} from '@material-ui/core/';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport {\r\n    MuiPickersUtilsProvider,\r\n    KeyboardTimePicker,\r\n    KeyboardDatePicker,\r\n} from '@material-ui/pickers';\r\n\r\n\r\nimport * as Constants from '../../Constants';\r\n\r\nclass FilterAsset extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            datacenter: \"\",\r\n            model: \"\",\r\n            hostname: \"\",\r\n            startingLetter: \"A\",\r\n            endingLetter: \"Z\",\r\n            startingNum: 1,\r\n            endingNum: 1000,\r\n            showDecommissioned: false,\r\n            startDate: \"\",\r\n            endDate: \"\",\r\n            user: \"\",\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.search();\r\n    }\r\n\r\n    updateDatacenter = (event) => {\r\n        this.setState({ datacenter: event.target.value }, () => { this.search() });\r\n    }\r\n\r\n    updateModel = (event) => {\r\n        this.setState({ model: event.target.value }, () => { this.search() });\r\n    }\r\n\r\n    updateHostname = (event) => {\r\n        this.setState({ hostname: event.target.value }, () => { this.search() });\r\n    }\r\n\r\n    updateStartingLetter = (event) => {\r\n        this.setState({ startingLetter: event.target.value }, () => { this.search() });\r\n    }\r\n\r\n    updateEndingLetter = (event) => {\r\n        this.setState({ endingLetter: event.target.value }, () => { this.search() });\r\n    }\r\n\r\n    updateStartingNum = (event) => {\r\n        this.setState({ startingNum: event.target.value }, () => { this.search() });\r\n    }\r\n\r\n    updateEndingNum = (event) => {\r\n        this.setState({ endingNum: event.target.value }, () => { this.search() });\r\n    }\r\n\r\n    updateStartDate = (event) => {\r\n        console.log(event.target);\r\n        this.setState({ startDate: event.target.value }, () => this.search());\r\n    }\r\n\r\n    updateEndDate = (event) => {\r\n        this.setState({ endDate: event.target.value }, () => this.search());\r\n    }\r\n\r\n    updateUser = (event) => {\r\n        this.setState({ user: event.target.value }, () => this.search());\r\n    }\r\n\r\n    search = () => {\r\n        var items = [];\r\n        try {\r\n            console.log(this.state.showDecommissioned);\r\n            if (this.state.showDecommissioned) {\r\n                this.props.decAssets.map(asset => {\r\n                    console.log(this.state.startDate);\r\n                    console.log(this.state.endDate);\r\n                    console.log(asset.timestamp);\r\n                    var startDate = new Date(this.state.startDate===\"\" ? \"01/01/2001\" : this.state.startDate);\r\n                    var endDate = new Date(this.state.endDate===\"\" ? \"12/31/2025\" : this.state.startDate);\r\n                    var decDate = new Date(asset.timestamp);\r\n                    if (\r\n                        (asset.datacenter_name.includes(this.state.datacenter) || asset.abbreviation.includes(this.state.datacenter))\r\n                        && (asset.vendor + asset.model_number).includes(this.state.model)\r\n                        && asset.hostname.includes(this.state.hostname)\r\n                        && asset.rack >= this.state.startingLetter + \"\" + this.state.startingNum\r\n                        && asset.rack <= this.state.endingLetter + \"\" + this.state.endingNum\r\n                        && asset.owner.includes(this.state.user)\r\n                        && decDate >= startDate\r\n                        && decDate <= endDate\r\n                    ) {\r\n                        items.push(asset);\r\n                    }\r\n                });\r\n            } else {\r\n                this.props.allAssets.map(asset => {\r\n                    if (\r\n                        (asset.datacenter_name.includes(this.state.datacenter) || asset.abbreviation.includes(this.state.datacenter))\r\n                        && asset.model.includes(this.state.model)\r\n                        && asset.hostname.includes(this.state.hostname)\r\n                        && asset.rack >= this.state.startingLetter + \"\" + this.state.startingNum\r\n                        && asset.rack <= this.state.endingLetter + \"\" + this.state.endingNum\r\n                    ) {\r\n                        items.push(asset);\r\n                    }\r\n                });\r\n            }\r\n            this.props.updateItems(items);\r\n        } catch {\r\n            this.props.updateItems([]);\r\n        }\r\n\r\n    }\r\n\r\n    switchToDecommissioned = (event) => {\r\n        console.log(event.target.checked);\r\n        this.setState({ showDecommissioned: event.target.checked }, () => this.search());\r\n        this.props.switchToDec(event.target.checked);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <Paper elevation={3}>\r\n                    <Grid\r\n                        container\r\n                        spacing={2}\r\n                        direction=\"row\"\r\n                        justify=\"flex-start\"\r\n                        alignItems=\"center\"\r\n                        style={{ \"padding\": \"10px\" }}\r\n                    >\r\n                        <Grid item xs={12}>\r\n                            <Typography variant=\"h5\">Filter</Typography>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={6} md={4} lg={3}>\r\n                            <TextField\r\n                                id=\"datacenter\"\r\n                                label=\"Datacenter\"\r\n                                name=\"datacenter\"\r\n                                onChange={(event) => { this.updateDatacenter(event) }}\r\n                                style={{ width: \"100%\" }}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={6} md={4} lg={3}>\r\n                            <TextField\r\n                                id=\"model\"\r\n                                label=\"Model\"\r\n                                name=\"model\"\r\n                                onChange={(event) => { this.updateModel(event) }}\r\n                                style={{ width: \"100%\" }}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={6} md={4} lg={3}>\r\n                            <TextField\r\n                                id=\"hostname\"\r\n                                label=\"Hostname\"\r\n                                name=\"hostname\"\r\n                                onChange={(event) => this.updateHostname(event)}\r\n                                style={{ width: \"100%\" }}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item item xs={12} sm={6} md={4} lg={3}></Grid>\r\n                        <Grid item xs={12} sm={6} md={4} lg={2}>\r\n                            <FormControl>\r\n                                <Select\r\n                                    id=\"starting-letter-selector\"\r\n                                    value={this.state.startingLetter}\r\n                                    onChange={this.updateStartingLetter}\r\n                                >\r\n                                    {Constants.RackX.map(val => (<MenuItem value={val}>{val}</MenuItem>))}\r\n                                </Select>\r\n                                <FormHelperText>Starting Letter</FormHelperText>\r\n                            </FormControl>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={6} md={4} lg={2}>\r\n                            <FormControl>\r\n                                <Select\r\n                                    id=\"ending-letter-selector\"\r\n                                    value={this.state.endingLetter}\r\n                                    onChange={this.updateEndingLetter}\r\n                                >\r\n                                    {Constants.RackX.map(val => (<MenuItem value={val}>{val}</MenuItem>))}\r\n                                </Select>\r\n                                <FormHelperText>Ending Letter</FormHelperText>\r\n                            </FormControl>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={6} md={4} lg={3}>\r\n                            <FormControl>\r\n                                <TextField\r\n                                    id=\"starting-num-selector\"\r\n                                    type=\"number\"\r\n                                    value={this.state.startingNum}\r\n                                    onChange={this.updateStartingNum}\r\n                                    InputProps={{ inputProps: { min: 1 } }}\r\n                                />\r\n                                <FormHelperText>Starting Number</FormHelperText>\r\n                            </FormControl>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={6} md={4} lg={3}>\r\n                            <FormControl>\r\n                                <TextField\r\n                                    id=\"ending-num-selector\"\r\n                                    type=\"number\"\r\n                                    value={this.state.endingNum}\r\n                                    onChange={this.updateEndingNum}\r\n                                    InputProps={{ inputProps: { min: 1 } }}\r\n                                />\r\n                                <FormHelperText>Ending Number</FormHelperText>\r\n                            </FormControl>\r\n                        </Grid>\r\n                        <Grid item xs={2} sm={6} md={4} lg={3}>\r\n                            <FormControlLabel\r\n                                control={\r\n                                    <Switch\r\n                                        checked={this.state.showDecommissioned}\r\n                                        onChange={event => { this.switchToDecommissioned(event) }}\r\n                                        value=\"checkedB\"\r\n                                        color=\"primary\"\r\n                                    />\r\n                                }\r\n                                labelPlacement=\"top\"\r\n                                label={this.state.showDecommissioned ? \"Decommissioned Assets\" : \"Active Assets\" }\r\n                            />\r\n                        </Grid>\r\n                        {this.state.showDecommissioned ? <Grid item xs={12} sm={6} md={4} lg={3}>\r\n                            <TextField\r\n                                id=\"user\"\r\n                                label=\"User\"\r\n                                name=\"user\"\r\n                                onChange={(event) => { this.updateUser(event) }}\r\n                                style={{ width: \"100%\" }}\r\n                            />\r\n                        </Grid> : null}\r\n                        {this.state.showDecommissioned ? <Grid item xs={12} sm={6} md={4} lg={3}>\r\n                            <TextField\r\n                                id=\"start-date\"\r\n                                label=\"Start Date\"\r\n                                type=\"date\"\r\n                                onChange={event => this.updateStartDate(event)}\r\n                                InputLabelProps={{\r\n                                    shrink: true,\r\n                                }}\r\n                            />\r\n                        </Grid> : null}\r\n                        {this.state.showDecommissioned ? <Grid item xs={12} sm={6} md={4} lg={3}>\r\n                            <TextField\r\n                                id=\"end-date\"\r\n                                label=\"End Date\"\r\n                                type=\"date\"\r\n                                onChange={event => this.updateEndDate(event)}\r\n                                InputLabelProps={{\r\n                                    shrink: true,\r\n                                }}\r\n                            />\r\n                        </Grid> : null}\r\n                    </Grid>\r\n                </Paper>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default FilterAsset;\r\n","export default function descendingComparator(a, b, orderBy) {\r\n    if (b[orderBy] < a[orderBy]) {\r\n      return -1;\r\n    }\r\n    if (b[orderBy] > a[orderBy]) {\r\n      return 1;\r\n    }\r\n    return 0;\r\n  }\r\n","import React from 'react';\r\n\r\nimport axios from 'axios';\r\n\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from '@material-ui/core/Button';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Slide from '@material-ui/core/Slide';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport Collapse from '@material-ui/core/Collapse';\r\n\r\nimport StatusDisplay from '../../helpers/StatusDisplay';\r\nimport { AssetInput } from '../enums/AssetInputs.ts';\r\nimport { AssetCommand } from '../enums/AssetCommands.ts'\r\nimport getURL from '../../helpers/functions/GetURL';\r\nimport * as AssetConstants from \"../AssetConstants\";\r\nimport * as Constants from \"../../Constants\";\r\nimport { Typography } from '@material-ui/core';\r\nimport stringToMac from \"./functions/StringToMacAddress\"\r\nimport stringToRack from \"./functions/StringToRack\";\r\n\r\nfunction createInputs(name, label, showTooltip, description) {\r\n    return {label, name, showTooltip, description};\r\n}\r\n\r\nconst emptySearch = {\r\n    \"filter\": {\r\n            \"vendor\":null,\r\n            \"model_number\":null,\r\n            \"height\":null,\r\n            \"model\":null,\r\n            \"hostname\":null,\r\n            \"rack\":null,\r\n            \"rack_position\":null,\r\n            \"username\":null,\r\n            \"display_name\":null,\r\n            \"email\":null,\r\n            \"privilege\":null,\r\n            \"model\":null,\r\n            \"hostname\":null,\r\n            \"starting_rack_letter\":null,\r\n            \"ending_rack_letter\":null,\r\n            \"starting_rack_number\":null,\r\n            \"ending_rack_number\":null,\r\n            \"rack\":null,\r\n            \"rack_position\":null\r\n        },\r\n    \"datacenter_name\":\"\",\r\n}\r\n\r\nconst searchPath = \"search/\";\r\nconst left = \"left\";\r\nconst right = \"right\";\r\nconst off = \"off\";\r\n\r\nconst useStyles = theme => ({\r\n    root: {\r\n      flexGrow: 1,\r\n    },\r\n    dialogDiv: {\r\n        padding: theme.spacing(2, 4, 3),\r\n    },\r\n    modal: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        maxWidth: \"80%\",\r\n        margin:\"0 auto\",\r\n        minWidth:\"70%\",\r\n        maxHeight:\"600px\",\r\n        overflow:\"scroll\",\r\n      },\r\n      paper: {\r\n        backgroundColor: theme.palette.background.paper,\r\n        border: '2px solid #000',\r\n        boxShadow: theme.shadows[5],\r\n        padding: theme.spacing(2, 4, 3),\r\n      },\r\n      progress: {\r\n        display: 'flex',\r\n        '& > * + *': {\r\n          marginLeft: theme.spacing(2),\r\n        },\r\n      },\r\n      appBar: {\r\n        position: 'relative',\r\n      },\r\n      title: {\r\n        marginLeft: theme.spacing(2),\r\n        flex: 1,\r\n      },\r\n});\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n    return <Slide direction=\"up\" ref={ref} {...props} />;\r\n  });\r\n\r\nclass CreateAsset extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            // next available asset number\r\n            loadingAssetNumber:true,\r\n\r\n            // model information\r\n            loadingModels:true,\r\n            modelList:[],\r\n            networkList:null,\r\n            powerPortList:null,\r\n\r\n            // owner information\r\n            loadingOwners:true,\r\n            ownerList:[],\r\n\r\n            // datacenter information\r\n            loadingDatacenters:true,\r\n            datacenterList:[],\r\n\r\n            // hostname information\r\n            loadingHostnames:true,\r\n            assetNumList:[],\r\n            assetNumToModelList:null,\r\n\r\n            model:\"\",\r\n            hostname:\"\",\r\n            rack:\"\",\r\n            rackU:-1,\r\n            owner:\"\",\r\n            comment:\"\",\r\n            datacenter_name:\"\",\r\n            tags:[],\r\n            network_connections:null,\r\n            power_connections:null,\r\n            asset_number:100000,\r\n\r\n            selectedConnection:null,\r\n\r\n            statusOpen: false,\r\n            statusMessage: \"\",\r\n            statusSeverity:\"\",\r\n\r\n            showModal:false,\r\n\r\n            powerPortState:null,\r\n            leftRight:null,\r\n            availableConnections:false,\r\n            portOptions:[],\r\n\r\n            canSubmit:false,\r\n\r\n            next_pair:-1,\r\n            free_left:-1,\r\n            free_right:-1,\r\n\r\n            inputs: {\r\n                \"model\":createInputs(AssetInput.MODEL, \"Model\", false, \"A reference to an existing model\"),\r\n                \"hostname\":createInputs(AssetInput.HOSTNAME, \"Hostname\", false, \"A short string compliant with RFC 1034’s definition of 'label'\"),\r\n                \"rack\":createInputs(AssetInput.RACK, \"Rack\", false, \"The rack the equipment is installed in, written as a row letter and rack number, e.g. 'B12'\"),\r\n                \"rackU\":createInputs(AssetInput.RACK_U, \"Rack U\", false, \"An integer indicating the vertical location of the bottom of the equipment (e.g. '5')\"),\r\n                \"owner\":createInputs(AssetInput.OWNER, \"Owner\", false, \"A reference to an existing user on the system who owns this equipment\"),\r\n                \"comment\":createInputs(AssetInput.COMMENT, \"Comment\", false, \"Any additional information associated with this asset\"),\r\n                \"datacenter\":createInputs(AssetInput.DATACENTER, \"Datacenter\", false, \"A reference to an existing datacenter\"),\r\n                \"macAddress\":createInputs(AssetInput.MAC_ADDRESS, \"Mac Address\", false, \"A 6-byte hexadecimal string per network port shown canonically in lower case with colon delimiters (e.g., '00:1e:c9:ac:78:aa').\\nA hostname is required to enter in this value\"),\r\n                \"networkConnections\":createInputs(AssetInput.NETWORK_CONNECTIONS, \"Port Name\", false, \"For each network port, a reference to another network port on another piece of gear\"),\r\n                \"powerConnections\":createInputs(AssetInput.POWER_CONNECTIONS, \"Power Connections\", false, \"Choice of PDU port number (0 means not plugged in)\"),\r\n                \"assetNum\":createInputs(AssetInput.ASSET_NUMBER, \"Asset Number\", false, \"A six-digit serial number unique associated with an asset.\"),\r\n            },\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getLists();\r\n    }\r\n\r\n    getLists = () => {\r\n        this.getModelList();\r\n        this.getOwnerList();\r\n        this.getDatacenterList();\r\n        this.getNextAssetNum();\r\n        this.getAssetList();\r\n    }\r\n\r\n    getModelList = () => {\r\n        axios.post(\r\n            getURL(Constants.MODELS_MAIN_PATH, searchPath), emptySearch).then(\r\n            response => {\r\n                var models = response.data.models;\r\n\r\n                var modelNames = [];\r\n                var networkNames = {};\r\n                var powerPortNames = {};\r\n\r\n                models.map(model => {\r\n                    var modelKey = model.vendor + \" \" + model.model_number;\r\n                    modelNames.push(modelKey);\r\n                    networkNames[modelKey] = model.ethernet_ports;\r\n                    powerPortNames[modelKey] = parseInt(model.power_ports);\r\n                });\r\n\r\n                this.setState({ loadingModels: false, modelList: modelNames, networkList: networkNames, powerPortList: powerPortNames });\r\n            });\r\n    }\r\n\r\n    getOwnerList = () => {\r\n        axios.post(\r\n            getURL(Constants.USERS_MAIN_PATH, searchPath), {\r\n                \"filter\":\r\n                {\r\n                    \"username\": \"\",\r\n                    \"display_name\": \"\",\r\n                    \"email\": \"\",\r\n                    \"privilege\": {\r\n                        \"model\": true,\r\n                        \"asset\": true,\r\n                        \"datacenters\": [\"*\"],\r\n                        \"power\": true,\r\n                        \"audit\": true,\r\n                        \"admin\": true\r\n                    }\r\n                }\r\n            }).then(\r\n            response => {\r\n                var users = [];\r\n                response.data.users.map(user => users.push(user.username + \"/\" + user.display_name));\r\n                this.setState({ loadingOwners: false, ownerList: users });\r\n            });\r\n    }\r\n\r\n    getDatacenterList = () => {\r\n        axios.get(\r\n            getURL(Constants.DATACENTERS_MAIN_PATH, \"all/\")).then(\r\n            response => {\r\n                var datacenters = [];\r\n                response.data.datacenters.map(datacenter => {\r\n                    if (this.props.privilege.datacenters.length > 0) {\r\n                        if (this.props.privilege.datacenters[0] === \"*\" || this.props.privilege.datacenters.includes(datacenter.abbreviation) || this.props.privilege.asset) {\r\n                            datacenters.push(datacenter.name);\r\n                        }\r\n                    }\r\n                });\r\n                this.setState({ loadingDatacenters: false, datacenterList: datacenters })\r\n            });\r\n    }\r\n\r\n    getNextAssetNum = () => {\r\n        axios.get(\r\n            getURL(Constants.ASSETS_MAIN_PATH, AssetCommand.GET_NEXT_ASSET_NUM)).then(\r\n            response => this.setState({ loadingAssetNumber: false, asset_number: response.data.asset_number }));\r\n    }\r\n\r\n    getAssetList = () => {\r\n        axios.post(\r\n            getURL(Constants.ASSETS_MAIN_PATH, searchPath),emptySearch).then(\r\n            response => {\r\n                var instances = response.data.instances;\r\n\r\n                var hostnames = [];\r\n                var hostToModel = {};\r\n                instances.map(instance => {\r\n                    hostnames.push(instance.hostname);\r\n                    hostToModel[instance.hostname] = instance.model;\r\n                })\r\n\r\n                this.setState({ loadingHostnames: false, assetNumList: hostnames, assetNumToModelList: hostToModel }, this.availableNetworkConnections());\r\n            });\r\n    }\r\n\r\n    validJSON = (json) => {\r\n        var valid = (json.model !== \"\"\r\n        && json.datacenter_name !== \"\"\r\n        && json.rack !== \"\"\r\n        && json.rack_position !== -1\r\n        && json.asset_number >= 100000 && json.asset_number <= 999999)\r\n\r\n        // Object.entries(json.network_connections).map(([port, vals]) => {\r\n        //     var validConnection = (vals.connection_hostname !== undefined && vals.connection_port === undefined) || (vals.connection_hostname === undefined && vals.connection_port !== undefined);\r\n        //     valid = valid && validConnection;\r\n        // });\r\n\r\n        return valid;\r\n    }\r\n\r\n    createAsset = (event) => {\r\n        event.preventDefault();\r\n        var json = this.createJSON();\r\n        var changePlanJSON = {\r\n            \"change_plan_id\": this.props.changePlanID,\r\n            \"step\": 1,\r\n            \"action\": \"create\",\r\n            \"asset_numberOriginal\": this.state.asset_number,\r\n            \"new_record\": json\r\n        };\r\n        var url = this.props.changePlanActive ? getURL(AssetConstants.CHANGE_PLAN_PATH, AssetCommand.CHANGE_PLAN_CREATE_ACTION) : getURL(AssetConstants.ASSETS_MAIN_PATH, AssetCommand.create);\r\n\r\n        if (this.validJSON(json)) {\r\n            axios.post(\r\n                url,\r\n                this.props.changePlanActive ? changePlanJSON : json\r\n            ).then(\r\n                    response => {\r\n                    console.log(response);\r\n                    if (response.data.message === AssetConstants.SUCCESS_TOKEN) {\r\n                        this.props.showStatus(true, \"success\", \"Successfully created asset\");\r\n                        this.closeModal();\r\n                    } else {\r\n                        this.setState({ statusOpen: true, statusMessage: response.data.message, statusSeverity:AssetConstants.ERROR_TOKEN });\r\n                    }\r\n                });\r\n        }\r\n    }\r\n\r\n    updateModel = (event) => {\r\n        var model = event.target.value;\r\n\r\n        if (model !== \"\") {\r\n            var ports = this.state.networkList[model];\r\n            var networkConns = {};\r\n            if (ports !== null) {\r\n                ports.map(port => {\r\n                    var defaultNetworkPort = {\r\n                        \"mac_address\":\"\",\r\n                        \"connection_hostname\":\"\",\r\n                        \"connection_port\":\"\",\r\n                    }\r\n                    networkConns[port] = defaultNetworkPort;\r\n                });\r\n            }\r\n        } else {\r\n            var networkConns = {};\r\n        }\r\n\r\n\r\n        this.setState({ model: model, network_connections:networkConns }, () => { this.validateForm() });\r\n    }\r\n\r\n    updateHostname = (event) => {\r\n        this.setState({ hostname: event.target.value }, () => { this.validateForm() });\r\n    }\r\n\r\n    updateRack = (event) => {\r\n        var rackVal = stringToRack(event.target.value);\r\n        this.setState({ rack: rackVal }, () => { this.validateForm() });\r\n        if (rackVal.length === 2 && this.state.datacenter_name !== \"\") {\r\n            axios.post(getURL(Constants.RACKS_MAIN_PATH, \"nextPDU/\"), {\r\n                \"rack\":rackVal,\r\n                \"datacenter_name\":this.state.datacenter_name,\r\n            }).then(response => {\r\n                console.log(this.state.power_connections);\r\n                try {\r\n                    var firstFree = response.data.free_left;\r\n                    var pwrLst = [];\r\n                    console.log(\"updating power ports\");\r\n                    this.state.power_connections.map((powerPort, index) => {\r\n                        if (index%2===0 && index<this.state.power_connections.length-1) {\r\n                            console.log(index);\r\n                            pwrLst[index] = firstFree[index];\r\n                            pwrLst[index+1] = firstFree[index+1];\r\n                        } else {\r\n                            console.log(\"passing\");\r\n                        }\r\n\r\n                    });\r\n                } catch (exception) {\r\n                    console.log(exception);\r\n                }\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    updateRackU = (event) => {\r\n        this.setState({ rackU: event.target.value }, () => { this.validateForm() });\r\n    }\r\n\r\n    updateOwner = (event) => {\r\n        this.setState({ owner: event.target.value }, () => { this.validateForm() });\r\n    }\r\n\r\n    updateComment = (event) => {\r\n        this.setState({ comment: event.target.value }, () => { this.validateForm() });\r\n    }\r\n\r\n    updateDatacenter = (event) => {\r\n        this.setState({ datacenter_name: event.target.value }, () => { this.validateForm() });\r\n    }\r\n\r\n    updateTags = (event) => {\r\n        this.setState({ tags: event.target.value }, () => { this.validateForm() });\r\n    }\r\n\r\n    changeNetworkMacAddress = (event, port) => {\r\n        var val = stringToMac(event.target.value);\r\n        this.setState(prevState => {\r\n            let network_connections = Object.assign({}, prevState.network_connections);\r\n            network_connections[port].mac_address = val;\r\n            return { network_connections };\r\n        }, () => { this.validateForm() });\r\n    }\r\n\r\n    changeNetworkHostname = (value, port) => {\r\n        var val = value===undefined ? \"\" : value;\r\n        this.setState(prevState => {\r\n            let network_connections = Object.assign({}, prevState.network_connections);\r\n            network_connections[port].connection_hostname = val;\r\n            return { network_connections };\r\n        }, () => { this.getPortOptions(val); this.validateForm() });\r\n    }\r\n\r\n    changeNetworkPort = (value, port) => {\r\n        var val = value===undefined ? \"\" : value;\r\n\r\n        this.setState(prevState => {\r\n            let network_connections = Object.assign({}, prevState.network_connections);\r\n            network_connections[port] = (network_connections[port] === null) ? {} : network_connections[port];\r\n            network_connections[port].connection_port = val;\r\n            return { network_connections };\r\n        }, () => {  this.validateForm() });\r\n    }\r\n\r\n    updatePowerPort = (event, port) => {\r\n        var val = event.target.value;\r\n\r\n        this.setState(prevState => {\r\n            let power_connections = Object.assign({}, prevState.power_connections);\r\n            power_connections[port] = val;\r\n            return { power_connections };\r\n        }, () => { this.validateForm() });\r\n    }\r\n\r\n    changePowerPortState = (event, portNum) => {\r\n        var val = event.target.value;\r\n\r\n        this.setState(prevState => {\r\n            let leftRight = Object.assign({}, prevState.leftRight);\r\n            leftRight[portNum] = val;\r\n            return { leftRight };\r\n        }, () => { this.validateForm() });\r\n    }\r\n\r\n    updateAssetNumber = (event) => {\r\n        this.setState({ asset_number: event.target.value }, () => { this.validateForm() });\r\n    }\r\n\r\n    getPowerConnections = () => {\r\n        if (this.state.leftRight===null) {\r\n            return [];\r\n        }\r\n\r\n        var pwrConns = [];\r\n        var defaultValue = 1;\r\n        Object.entries(this.state.leftRight).map(([key, value]) => {\r\n            var num = this.state.power_connections===null ? defaultValue : this.state.power_connections[key];\r\n            switch(value) {\r\n                case left:\r\n                    pwrConns.push(\"L\" + num);\r\n                    break;\r\n                case right:\r\n                    pwrConns.push(\"R\" + num);\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n        });\r\n\r\n        return pwrConns;\r\n    }\r\n\r\n    createJSON = () => {\r\n        return {\r\n            \"model\":this.state.model,\r\n            \"hostname\":this.state.hostname,\r\n            \"rack\":this.state.rack,\r\n            \"rack_position\":this.state.rackU,\r\n            \"owner\":this.state.owner.split(\"/\")[0],\r\n            \"comment\":this.state.comment,\r\n            \"datacenter_name\":this.state.datacenter_name,\r\n            \"tags\":this.state.tags,\r\n            \"network_connections\":(this.state.network_connections===null) ? {}:this.state.network_connections,\r\n            \"power_connections\":this.getPowerConnections(),\r\n            'asset_number':this.state.asset_number,\r\n        }\r\n    }\r\n\r\n    availableNetworkConnections = () => {\r\n        var availableNetworks = false;\r\n\r\n        var assets = this.state.assetNumList;\r\n        assets.map(asset => {\r\n            if (Object.keys(this.state.networList[this.state.assetNumToModelList[asset]].length).length > 0) {\r\n                availableNetworks = true;\r\n            }\r\n        });\r\n        this.setState({ availableConnections: availableNetworks });\r\n    }\r\n\r\n    showModal = () => {\r\n        this.setState({ showModal: true });\r\n    }\r\n\r\n    closeModal = () => {\r\n        window.location.reload();\r\n    }\r\n\r\n    statusClose = () => {\r\n        this.setState({ statusOpen: false, statusMessage: \"\", statusSeverity:\"\" });\r\n    }\r\n\r\n    validateForm = () => {\r\n        this.setState({ canSubmit:this.validJSON(this.createJSON()) });\r\n    }\r\n\r\n    getPortOptions = (hostname) => {\r\n        try {\r\n            this.setState({ portOptions:this.state.networkList[this.state.assetNumToModelList[hostname]] });\r\n        } catch {\r\n\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n\r\n        return (\r\n        <span>\r\n            {(\r\n            (this.state.loadingAssetNumber\r\n            || this.state.loadingDatacenters\r\n            || this.state.loadingModels\r\n            || this.state.loadingHostnames\r\n            || this.state.loadingOwners)\r\n            //&& false\r\n            ) ? <div className={classes.progress}><CircularProgress /></div> :\r\n                <form\r\n                    onSubmit={(event) => {this.createAsset(event)}}\r\n                >\r\n                <div className={classes.dialogDiv}>\r\n                <Grid container spacing={3}>\r\n                    <Grid item xs={3}>\r\n                        <Tooltip placement=\"top\" open={this.state.inputs.model.Tooltip} title={this.state.inputs.model.description}>\r\n                            <Autocomplete\r\n                                id=\"select-model\"\r\n                                options={this.state.modelList}\r\n                                includeInputInList\r\n\r\n                                renderInput={params => (\r\n                                <TextField\r\n                                    {...params}\r\n                                    label={this.state.inputs.model.label}\r\n                                    name={this.state.inputs.model.name}\r\n                                    onChange={this.updateModel}\r\n                                    onBlur={this.updateModel}\r\n                                    variant=\"outlined\"\r\n                                    fullWidth\r\n                                    required\r\n                                />\r\n                                )}\r\n                            />\r\n                        </Tooltip>\r\n                    </Grid>\r\n                    <Grid item xs={3}>\r\n                        <Tooltip placement=\"top\" open={this.state.inputs.owner.Tooltip} title={this.state.inputs.owner.description}>\r\n                            <Autocomplete\r\n                                id=\"select-owner\"\r\n                                options={this.state.ownerList}\r\n                                includeInputInList\r\n                                renderInput={params => (\r\n                                <TextField\r\n                                    {...params}\r\n                                    label={this.state.inputs.owner.label}\r\n                                    name={this.state.inputs.owner.name}\r\n                                    onChange={this.updateOwner}\r\n                                    onBlur={this.updateOwner}\r\n                                    variant=\"outlined\"\r\n                                    fullWidth\r\n                                />\r\n                                )}\r\n                            />\r\n                        </Tooltip>\r\n                    </Grid>\r\n                    <Grid item xs={3}>\r\n                        <Tooltip placement=\"top\" open={this.state.inputs.datacenter.Tooltip} title={this.state.inputs.datacenter.description}>\r\n                            <Autocomplete\r\n                                id=\"input-datacenter\"\r\n                                options={this.state.datacenterList}\r\n                                includeInputInList\r\n\r\n                                renderInput={params => (\r\n                                <TextField\r\n                                    {...params}\r\n                                    label={this.state.inputs.datacenter.label}\r\n                                    name={this.state.inputs.datacenter.name}\r\n                                    onChange={this.updateDatacenter}\r\n                                    onBlur={this.updateDatacenter}\r\n                                    variant=\"outlined\"\r\n                                    fullWidth\r\n                                    required\r\n                                />\r\n                                )}\r\n                            />\r\n                        </Tooltip>\r\n                    </Grid>\r\n                    <Grid item xs={3}>\r\n                        <Tooltip placement=\"top\" open={this.state.inputs.rack.Tooltip} title={this.state.inputs.rack.description}>\r\n                            <TextField\r\n                                id=\"input-rack\"\r\n                                variant=\"outlined\"\r\n                                label={this.state.inputs.rack.label}\r\n                                name={this.state.inputs.rack.name}\r\n                                onChange={this.updateRack}\r\n                                value={this.state.rack}\r\n                                required\r\n                                fullWidth\r\n                            />\r\n                        </Tooltip>\r\n                    </Grid>\r\n                    <Grid item xs={3}>\r\n                        <Tooltip placement=\"top\" open={this.state.inputs.rackU.Tooltip} title={this.state.inputs.rackU.description}>\r\n                            <TextField\r\n                                id=\"input-rackU\"\r\n                                variant=\"outlined\"\r\n                                type=\"number\"\r\n                                InputProps={{ inputProps: { min: 1, max:42} }}\r\n                                label={this.state.inputs.rackU.label}\r\n                                name={this.state.inputs.rackU.name}\r\n                                onChange={this.updateRackU}\r\n                                required\r\n                                fullWidth\r\n                            />\r\n                        </Tooltip>\r\n                    </Grid>\r\n                    <Grid item xs={3}>\r\n                        <Tooltip placement=\"top\" open={this.state.inputs.assetNum.Tooltip} title={this.state.inputs.assetNum.description}>\r\n                            <TextField\r\n                                id=\"input-asset-number\"\r\n                                variant=\"outlined\"\r\n                                type=\"number\"\r\n                                InputProps={{ inputProps: { min: 100000, max:999999} }}\r\n                                label={this.state.inputs.assetNum.label}\r\n                                name={this.state.inputs.assetNum.name}\r\n                                onChange={this.updateAssetNumber}\r\n                                value={this.state.asset_number}\r\n                                required\r\n                                fullWidth\r\n                            />\r\n                        </Tooltip>\r\n                    </Grid>\r\n                    <Grid item xs={3}>\r\n                        <Tooltip placement=\"top\" open={this.state.inputs.hostname.Tooltip} title={this.state.inputs.hostname.description}>\r\n                            <TextField\r\n                                id=\"input-hostname\"\r\n                                variant=\"outlined\"\r\n                                label={this.state.inputs.hostname.label}\r\n                                name={this.state.inputs.hostname.name}\r\n                                onChange={this.updateHostname}\r\n                                fullWidth\r\n                            />\r\n                        </Tooltip>\r\n                    </Grid>\r\n\r\n                    {!(this.state.networkList && this.state.networkList[this.state.model]) ? null :\r\n                    <Grid item xs={12}>\r\n                        {this.state.networkList[this.state.model].map(networkPort => (\r\n                        <Grid container spacing={3}>\r\n                            <Grid item xs={2}>\r\n                                <Typography>{networkPort + \": \"}</Typography>\r\n                            </Grid>\r\n                            <Grid item xs={3}>\r\n                                <Tooltip placement=\"top\" open={this.state.inputs.macAddress.Tooltip} title={this.state.inputs.macAddress.description}>\r\n                                    <TextField\r\n                                        id=\"input-mac-address\"\r\n                                        variant=\"outlined\"\r\n                                        label={this.state.inputs.macAddress.label}\r\n                                        name={this.state.inputs.macAddress.name}\r\n                                        onChange={(event) => {this.changeNetworkMacAddress(event, networkPort)}}\r\n                                        fullWidth\r\n                                        value={ (this.state.network_connections !== null && this.state.network_connections[networkPort]!==undefined) ? this.state.network_connections[networkPort].mac_address : \"\" }\r\n                                    />\r\n                                </Tooltip>\r\n                            </Grid>\r\n                            <Grid item xs={3}>\r\n                                <Tooltip placement=\"top\" open={this.state.inputs.networkConnections.Tooltip} title={this.state.inputs.networkConnections.description}>\r\n                                    <Autocomplete\r\n                                        id=\"input-network-ports\"\r\n                                        options={this.state.assetNumList}\r\n                                        includeInputInList\r\n                                        onChange={(event, value) => {this.changeNetworkHostname(value, networkPort)}}\r\n                                        required={this.state.network_connections[networkPort].connection_port!==\"\"}\r\n                                        renderInput={params => (\r\n                                            <TextField\r\n                                                {...params}\r\n                                                label={\"Connection Hostname\"}\r\n                                                name={\"Connection Hostname\"}\r\n                                                variant=\"outlined\"\r\n                                                fullWidth\r\n                                                disabled={this.state.hostname===\"\"}\r\n                                            />\r\n                                        )}\r\n                                    />\r\n                                </Tooltip>\r\n                            </Grid>\r\n                            <Grid item xs={3}>\r\n                                <Tooltip placement=\"top\" open={this.state.inputs.networkConnections.Tooltip} title={this.state.inputs.networkConnections.description}>\r\n                                    <Autocomplete\r\n                                        id=\"input-network-ports\"\r\n                                        options={this.state.portOptions}\r\n                                        includeInputInList\r\n                                        onChange={(event, value) => {this.changeNetworkPort(value, networkPort)}}\r\n                                        renderInput={params => (\r\n                                            <TextField\r\n                                                {...params}\r\n                                                label={\"Connection Port\"}\r\n                                                name={\"Connection Port\"}\r\n                                                variant=\"outlined\"\r\n                                                fullWidth\r\n                                                required={this.state.network_connections[networkPort].connection_hostname!==\"\"}\r\n                                                disabled={this.state.hostname===\"\"}\r\n                                            />\r\n                                        )}\r\n                                    />\r\n                                </Tooltip>\r\n                            </Grid>\r\n                        </Grid>\r\n                        ))}\r\n                    </Grid>}\r\n\r\n                    {(\r\n                        !(this.state.powerPortList\r\n                        && this.state.powerPortList[this.state.model])\r\n                        ) ? null :\r\n                    Array.from( { length: this.state.powerPortList[this.state.model] }, (_, k) => (\r\n                    <Grid item xs={12}>\r\n                        <Grid container spacing={3}>\r\n                            <Grid item xs={12}>\r\n                                <Typography>{\"Power Port: \" + k}</Typography>\r\n                            </Grid>\r\n                            <Grid item xs={3}>\r\n                                <FormControl component=\"fieldset\">\r\n                                    <RadioGroup\r\n                                        id={\"power-port-\"+k}\r\n                                        aria-label=\"position\"\r\n                                        name={\"position\"+k}\r\n                                        value={(this.state.leftRight===null) ? off:(this.state.leftRight[k]===undefined ? off:this.state.leftRight[k])}\r\n                                        onChange={(event) => {this.changePowerPortState(event, k)} }\r\n                                        row\r\n                                    >\r\n                                        <FormControlLabel\r\n                                            value={left}\r\n                                            control={<Radio color=\"primary\" />}\r\n                                            label=\"Left\"\r\n                                            labelPlacement=\"bottom\"\r\n                                        />\r\n                                        <FormControlLabel\r\n                                            value={right}\r\n                                            control={<Radio color=\"primary\" />}\r\n                                            label=\"Right\"\r\n                                            labelPlacement=\"bottom\"\r\n                                        />\r\n                                        <FormControlLabel\r\n                                            value={off}\r\n                                            control={<Radio color=\"primary\" />}\r\n                                            label=\"No Connection\"\r\n                                            labelPlacement=\"bottom\"\r\n                                        />\r\n                                    </RadioGroup>\r\n                                </FormControl>\r\n                            </Grid>\r\n                            {(this.state.leftRight===null) ? null:(this.state.leftRight[k]===undefined||this.state.leftRight[k]===off ? null:\r\n                                <Grid item xs={2}>\r\n                                    <TextField\r\n                                        type=\"number\"\r\n                                        value={(this.state.power_connections===null) ? 1 : (this.state.power_connections[k]===undefined?1:this.state.power_connections[k])}\r\n                                        InputProps={{ inputProps: { min: 1, max: 24} }}\r\n                                        onChange={(event) => {this.updatePowerPort(event, k)} }\r\n                                    />\r\n                                    <FormHelperText>Power Port Number</FormHelperText>\r\n                                </Grid>\r\n                                )}\r\n                        </Grid>\r\n                    </Grid>\r\n                    ))\r\n                            }\r\n                    <Grid item xs={6}>\r\n                            <TextField\r\n                                id=\"input-comment\"\r\n                                variant=\"outlined\"\r\n                                label={this.state.inputs.comment.label}\r\n                                name={this.state.inputs.comment.name}\r\n                                onChange={this.updateComment}\r\n                                multiline={true}\r\n                                fullWidth\r\n                            />\r\n                    </Grid>\r\n                    <Grid item xs={6} />\r\n                    <Grid item xs={3}>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            type=\"submit\"\r\n                            disabled={!this.state.canSubmit}\r\n                            color={this.props.changePlanActive ? \"\" : \"primary\"}\r\n                            style={{\r\n                                backgroundColor: this.props.changePlanActive ? \"#64b5f6\" : \"\"\r\n                            }}\r\n                        >\r\n                            { this.props.changePlanActive ? \"Create in Change Plan\" : \"Create\" }\r\n                        </Button>\r\n                    </Grid>\r\n                    <Grid item xs={3}>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            onClick={this.closeModal}\r\n                        >\r\n                            Cancel\r\n                        </Button>\r\n                    </Grid>\r\n                </Grid></div></form>}\r\n                {this.state.statusOpen ?\r\n                <Alert\r\n                        severity={this.state.statusSeverity}\r\n                        action={\r\n                            <IconButton\r\n                                aria-label=\"close\"\r\n                                color=\"inherit\"\r\n                                size=\"small\"\r\n                                onClick={() => {\r\n                                this.statusClose()\r\n                                }}\r\n                            >\r\n                                <CloseIcon fontSize=\"inherit\" />\r\n                            </IconButton>\r\n                            }\r\n                    >\r\n                        {this.state.statusMessage}\r\n                    </Alert>:null}\r\n        </span>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default withStyles(useStyles)(CreateAsset);\r\n","import React from \"react\";\r\n\r\nimport axios from 'axios';\r\nimport Dropzone from 'react-dropzone'\r\n\r\nimport {\r\n\tModal,\r\n\tTypography,\r\n\tFade,\r\n\tBackdrop,\r\n\tGrid,\r\n\tButton,\r\n\tPaper,\r\n\twithStyles,\r\n} from \"@material-ui/core/\";\r\n\r\nimport getURL from \"../../helpers/functions/GetURL\";\r\nimport { AssetCommand } from \"../enums/AssetCommands.ts\";\r\nimport * as AssetConstants from \"../AssetConstants\";\r\nimport StatusDisplay from \"../../helpers/StatusDisplay\"\r\n\r\n\r\nconst useStyles = theme => ({\r\n\tgrid: {\r\n\t\tbackgroundColor: theme.palette.background.paper,\r\n\t\tboxShadow: theme.shadows[5],\r\n\t\tpadding: theme.spacing(2, 4, 3),\r\n\t\twidth: \"50%\"\r\n\t},\r\n})\r\n\r\nclass ImportAsset extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\r\n\t\tthis.state = {\r\n            importedFile:null,\r\n\r\n            showStatus:false,\r\n            statusSeverity:\"\",\r\n            statusMessage:\"\",\r\n\t\t};\r\n\t}\r\n\r\n\tsetFile = (file) => {\r\n\t\tthis.setState({ importedFile: file });\r\n\t}\r\n\r\n\tchooseFile = (event) => {\r\n        this.setState({ importedFile: event.target.files[0] })\r\n    }\r\n\r\n\tuploadFile = () => {\r\n        const data = new FormData();\r\n        data.append('file', this.state.importedFile);\r\n        this.sendUploadedFile(data);\r\n    }\r\n\r\n\tcloseImport = () => {\r\n\t\tthis.setState({ importedFile: null }, () => { this.props.close() });\r\n\t}\r\n\r\n\tsendUploadedFile = (data) => {\r\n        axios.post(\r\n            getURL(AssetConstants.ASSETS_MAIN_PATH, AssetCommand.UPLOAD_FILE), data\r\n            ).then(response => {\r\n                if (response.data.message === AssetConstants.SUCCESS_TOKEN) {\r\n\t\t\t\t\tthis.setState({ showStatus: true, statusMessage: response.data.summary, statusSeverity:AssetConstants.SUCCESS_TOKEN, showImport: false,})\r\n\t\t\t\t\tthis.props.close();\r\n                } else {\r\n                    this.setState({ showStatus: true, statusMessage: response.data.message, statusSeverity:AssetConstants.ERROR_TOKEN })\r\n                }\r\n            });\r\n    }\r\n\r\n    closeShowStatus = () => {\r\n        this.setState({ showStatus: false, statusMessage:\"\", statusSeverity:\"\" });\r\n    }\r\n\r\n\trender() {\r\n\t\tconst { classes } = this.props;\r\n\t\treturn (\r\n            <div>\r\n\t\t\t<Modal\r\n                aria-labelledby=\"transition-modal-title\"\r\n                aria-describedby=\"transition-modal-description\"\r\n                className={classes.modal}\r\n                open={this.props.open}\r\n                onClose={this.closeImport}\r\n                closeAfterTransition\r\n            >\r\n                    <Backdrop\r\n                        open={this.props.open}\r\n                    >\r\n                        <div className={classes.grid}>\r\n                        <Grid\r\n                            container\r\n                            spacing={1}\r\n                            direction=\"row\"\r\n                            justify=\"flex-start\"\r\n                            alignItems=\"center\"\r\n                        >\r\n                            <Grid item xs={9}>\r\n                                <Typography variant=\"h5\">Import Assets</Typography>\r\n                            </Grid>\r\n                            <Grid item xs={3}>\r\n                                <Button\r\n                                    onClick={this.closeImport}\r\n                                    style={{ width: \"100%\" }}\r\n                                >\r\n                                    Close\r\n                                </Button>\r\n                            </Grid>\r\n                            <Grid container item direction=\"row\" justify=\"center\" alignItems=\"center\" xs={12}>\r\n\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\ttype='file'\r\n\t\t\t\t\t\t\t\t\taccept=\".csv\"\r\n\t\t\t\t\t\t\t\t\tonChange={this.chooseFile}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t<Grid container item direciton=\"row\" justify=\"center\" alignItems=\"center\" xs={12}>\r\n                                <Button\r\n                                    variant=\"contained\"\r\n                                    color=\"primary\"\r\n\t\t\t\t\t\t\t\t\tstyle={{width: \"40%\"}}\r\n\t\t\t\t\t\t\t\t\tonClick={() => {this.uploadFile()}}\r\n                                >\r\n                                    Upload File\r\n                                </Button>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </div>\r\n                </Backdrop>\r\n            </Modal>\r\n            <StatusDisplay\r\n            open={this.state.showStatus}\r\n            severity={this.state.statusSeverity}\r\n            closeStatus={this.closeShowStatus}\r\n            message={this.state.statusMessage}\r\n        />\r\n        </div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default withStyles(useStyles)(ImportAsset);\r\n","import React from \"react\";\r\n\r\nimport {\r\n\tGrid,\r\n\tTypography,\r\n\tButton,\r\n\tPaper,\r\n\tDialog,\r\n\twithStyles,\r\n\tAppBar,\r\n\tToolbar,\r\n\tIconButton,\r\n\tSlide\r\n} from \"@material-ui/core/\";\r\nimport CloudUploadIcon from \"@material-ui/icons/CloudUpload\";\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\nimport CreateAsset from \"./CreateAsset\";\r\nimport ImportAsset from \"./ImportAsset\";\r\n\r\nconst useStyles = theme => ({\r\n\tappBar: {\r\n\t  position: 'relative',\r\n\t},\r\n\ttitle: {\r\n\t  marginLeft: theme.spacing(2),\r\n\t  flex: 1,\r\n\t},\r\n});\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n    return <Slide direction=\"up\" ref={ref} {...props} />;\r\n  });\r\n\r\nclass AddAsset extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\r\n\t\tthis.state = {\r\n\t\t\tshowCreate:false,\r\n\t\t\tshowImport:false,\r\n\t\t};\r\n\t}\r\n\r\n\topenImport = () => {\r\n\t\tthis.setState({ showImport: true });\r\n\t}\r\n\r\n\tcloseImport = () => {\r\n\t\tthis.setState({ showImport: false });\r\n\t}\r\n\r\n\topenCreate = () => {\r\n\t\tthis.setState({ showCreate: true });\r\n\t}\r\n\r\n\tcloseCreate = () => {\r\n\t\tthis.setState({ showCreate: false });\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst { classes } = this.props;\r\n\t\treturn (\r\n\t\t\t<React.Fragment>\r\n\t\t\t\t<Paper elevation={3}>\r\n\t\t\t\t\t<Grid\r\n\t\t\t\t\t\tcontainer\r\n\t\t\t\t\t\tspacing={2}\r\n\t\t\t\t\t\tdirection=\"row\"\r\n\t\t\t\t\t\tjustify=\"flex-start\"\r\n\t\t\t\t\t\talignItems=\"center\"\r\n\t\t\t\t\t\tstyle={{\"padding\": \"10px\"}}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t\t<Typography\r\n\t\t\t\t\t\t\t\tvariant=\"h5\"\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\tAdd\r\n\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\tvariant=\"contained\"\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\twidth: \"100%\",\r\n\t\t\t\t\t\t\t\t\tbackground: \"green\",\r\n\t\t\t\t\t\t\t\t\tcolor: \"white\"\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\tonClick={this.openCreate}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\tCreate\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Grid container item direciton=\"row\" justify=\"center\" alignItems=\"center\" xs={12}>\r\n\t\t\t\t\t\t\t<hr style={{width: \"5vw\"}} />\r\n\t\t\t\t\t\t\t<Typography color=\"textSecondary\">\r\n\t\t\t\t\t\t\t\tOr\r\n\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t<hr style={{width: \"5vw\"}} />\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\tvariant=\"contained\"\r\n\t\t\t\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t\t\t\t\tstyle={{width: \"100%\"}}\r\n\t\t\t\t\t\t\t\tstartIcon={<CloudUploadIcon />}\r\n\t\t\t\t\t\t\t\tonClick={() => {this.openImport()} }\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\tImport\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</Paper>\r\n\r\n\t\t\t\t<Dialog fullScreen open={this.state.showCreate} onClose={this.closeCreate} TransitionComponent={Transition} padding={3}>\r\n\t\t\t\t\t<AppBar className={classes.appBar}>\r\n\t\t\t\t\t\t<Toolbar>\r\n\t\t\t\t\t\t\t<IconButton edge=\"start\" color=\"inherit\" onClick={this.closeCreate} aria-label=\"close\">\r\n\t\t\t\t\t\t\t\t<CloseIcon />\r\n\t\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t\t\t<Typography variant=\"h6\" className={classes.title}>\r\n\t\t\t\t\t\t\t\tCreate Asset\r\n\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t</Toolbar>\r\n\t\t\t\t\t</AppBar>\r\n\t\t\t\t\t<CreateAsset\r\n\t\t\t\t\t\tclose={this.closeCreate}\r\n\t\t\t\t\t\tgetAssetList={this.props.getAssetList}\r\n\t\t\t\t\t\tshowStatus={this.props.showStatus}\r\n\t\t\t\t\t\tprivilege={this.props.privilege}\r\n\t\t\t\t\t\tchangePlanActive={this.props.changePlanActive}\r\n\t\t\t\t\t\tchangePlanID={this.props.changePlanID}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</Dialog>\r\n\r\n\t\t\t\t<ImportAsset\r\n\t\t\t\t\topen={this.state.showImport}\r\n\t\t\t\t\tclose={this.closeImport}\r\n\t\t\t\t/>\r\n\t\t\t</React.Fragment>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default withStyles(useStyles)(AddAsset);\r\n","import React from 'react';\r\n\r\nimport axios from \"axios\";\r\nimport { CSVLink } from \"react-csv\";\r\n\r\nimport {\r\n\tButton,\r\n\tPaper,\r\n\tGrid,\r\n    Typography,\r\n    Modal,\r\n    Fade,\r\n    Backdrop,\r\n    withStyles,\r\n    TextField\r\n} from '@material-ui/core/';\r\nimport CloudDownloadIcon from '@material-ui/icons/CloudDownload';\r\nimport TrackChangesIcon from '@material-ui/icons/TrackChanges';\r\nimport { AssetCommand } from '../enums/AssetCommands.ts'\r\nimport getURL from '../../helpers/functions/GetURL';\r\nimport * as AssetConstants from \"../AssetConstants\";\r\n\r\nconst useStyles = theme => ({\r\n    root: {\r\n      flexGrow: 1,\r\n    },\r\n    modal: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        width: \"100%\",\r\n      },\r\n      grid: {\r\n          backgroundColor: theme.palette.background.paper,\r\n          boxShadow: theme.shadows[5],\r\n          padding: theme.spacing(2, 4, 3),\r\n          width: \"50%\"\r\n      },\r\n      progress: {\r\n        display: 'flex',\r\n        '& > * + *': {\r\n          marginLeft: theme.spacing(2),\r\n        },\r\n      },\r\n});\r\n\r\nclass ExportAsset extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            csvData: \"\",\r\n            changePlanModal: false,\r\n            changeDescriptionModal: false,\r\n            canCreateChangePlans: false,\r\n\t\t};\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        this.setState({ canCreateChangePlans: (this.props.privilege.admin || this.props.privilege.asset || this.props.privilege.datacenters.length > 0) });\r\n    }\r\n\r\n\tdownloadTable = () => {\r\n        axios.post(\r\n            getURL(AssetConstants.ASSETS_MAIN_PATH, AssetCommand.EXPORT_FILE),\r\n            {\r\n                'filter':{},\r\n                \"datacenter_name\":\"\",\r\n            }\r\n            ).then(response => {\r\n                console.log(response);\r\n                this.setState({ csvData: response.data.csvData });\r\n                this.csvLink.link.click();\r\n            });\r\n    }\r\n\r\n    openChangePlanModal = () => {\r\n        this.setState({ changePlanModal: true });\r\n    }\r\n\r\n    closeChangePlanModal = () => {\r\n        this.setState({ changePlanModal: false });\r\n    }\r\n\r\n    updatePlanName = (event) => {\r\n        this.setState({ changePlanName: event.target.value });\r\n    }\r\n\r\n    beginChangePlan = () => {\r\n        this.closeChangePlanModal();\r\n        this.setState({ changeDescriptionModal: true });\r\n\r\n        axios.post(\r\n            getURL(AssetConstants.CHANGE_PLAN_PATH, AssetCommand.CHANGE_PLAN_CREATE),\r\n            {\r\n                'owner': this.props.username,\r\n                'name': this.state.changePlanName,\r\n            }\r\n            ).then(response => {\r\n                console.log(response);\r\n                this.props.updateChangePlan(true, response.data.change_plan);\r\n                this.setState({ changePlanName: \"\" });\r\n        });\r\n    }\r\n\r\n    closeDescriptionModal = () => {\r\n        this.setState({ changeDescriptionModal: false });\r\n    }\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n\r\n        return (\r\n            <div>\r\n                <Paper elevation={3}>\r\n                <Grid\r\n                    container\r\n                    spacing={2}\r\n                    direction=\"row\"\r\n                    justify=\"flex-start\"\r\n                    alignItems=\"center\"\r\n                    style={{\"padding\": \"10px\"}}\r\n                >\r\n                    <Grid item xs={12}>\r\n                        <Typography variant=\"h6\">Export</Typography>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <Typography>Download what is currently shown in the table.</Typography>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <Button\r\n                            onClick={() => {this.downloadTable()}}\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            startIcon={<CloudDownloadIcon />}\r\n                            style={{\r\n                                width: \"100%\"\r\n                            }}\r\n                        >\r\n                            Export All Data\r\n                        </Button>\r\n                    </Grid>\r\n                    { !this.props.changePlanActive && this.state.canCreateChangePlans ?\r\n                    <Grid container item direciton=\"row\" justify=\"center\" alignItems=\"center\" xs={12}>\r\n\t\t\t\t\t\t\t<hr style={{width: \"5vw\"}} />\r\n\t\t\t\t\t\t\t<Typography color=\"textSecondary\">\r\n\t\t\t\t\t\t\t\tOr\r\n\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t<hr style={{width: \"5vw\"}} />\r\n\t\t\t\t\t\t</Grid> : null }\r\n                    { !this.props.changePlanActive && this.state.canCreateChangePlans ?\r\n\t\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\tvariant=\"contained\"\r\n\t\t\t\t\t\t\t\tcolor=\"default\"\r\n\t\t\t\t\t\t\t\tstyle={{width: \"100%\"}}\r\n\t\t\t\t\t\t\t\tstartIcon={<TrackChangesIcon />}\r\n\t\t\t\t\t\t\t\tonClick={this.openChangePlanModal}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\tCreate Change Plan\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t</Grid> : null }\r\n                </Grid>\r\n            </Paper>\r\n\r\n\t\t\t<CSVLink\r\n                data={this.state.csvData}\r\n\t\t\t\tfilename={AssetConstants.ASSET_DOWNLOAD_FILE_NAME}\r\n\t\t\t\tclassName=\"hidden\"\r\n\t\t\t\tref={(r) => this.csvLink = r}\r\n\t\t\t\ttarget=\"_blank\"\r\n\t\t\t/>\r\n\r\n            <Modal\r\n                aria-labelledby=\"transition-modal-title\"\r\n                aria-describedby=\"transition-modal-description\"\r\n                className={classes.modal}\r\n                open={this.state.changePlanModal}\r\n                onClose={this.closeChangePlanModal}\r\n                closeAfterTransition\r\n            >\r\n                <Fade in={this.state.changePlanModal}>\r\n                    <Backdrop\r\n                        open={this.state.changePlanModal}\r\n                    >\r\n                    <div className={classes.grid}>\r\n                        <Grid\r\n                            container\r\n                            spacing={1}\r\n                            direction=\"row\"\r\n                            justify=\"flex-start\"\r\n                            alignItems=\"center\"\r\n                        >\r\n                            <Grid item xs={3}>\r\n                                <Typography>\r\n                                    Enter plan name:\r\n                                </Typography>\r\n                            </Grid>\r\n                            <Grid item xs={9}>\r\n                                <TextField type=\"text\" id=\"change-plan-name\" variant=\"outlined\" label=\"Change Plan Name\" name=\"change-plan-name\" onChange={this.updatePlanName} style={{ width: \"100%\" }} />\r\n                            </Grid>\r\n                            <Grid item xs={6}>\r\n                                <Button\r\n                                    variant=\"contained\"\r\n                                    color=\"primary\"\r\n                                    onClick={this.beginChangePlan}\r\n                                    style={{width: \"100%\"}}\r\n                                >\r\n                                    Begin\r\n                                </Button>\r\n                            </Grid>\r\n                            <Grid item xs={6}>\r\n                                <Button\r\n                                    variant=\"contained\"\r\n                                    color=\"secondary\"\r\n                                    onClick={this.closeChangePlanModal}\r\n                                    style={{width: \"100%\"}}\r\n                                >\r\n                                    Cancel\r\n                                </Button>\r\n                            </Grid>\r\n\r\n                        </Grid>\r\n                        </div>\r\n                </Backdrop>\r\n                </Fade>\r\n            </Modal>\r\n\r\n            <Modal\r\n                aria-labelledby=\"transition-modal-title\"\r\n                aria-describedby=\"transition-modal-description\"\r\n                className={classes.modal}\r\n                open={this.state.changeDescriptionModal}\r\n                onClose={this.closeDescriptionModal}\r\n                closeAfterTransition\r\n            >\r\n                <Fade in={this.state.changeDescriptionModal}>\r\n                    <Backdrop\r\n                        open={this.state.changeDescriptionModal}\r\n                    >\r\n                    <div className={classes.grid}>\r\n                        <Grid\r\n                            container\r\n                            spacing={1}\r\n                            direction=\"row\"\r\n                            justify=\"flex-start\"\r\n                            alignItems=\"center\"\r\n                        >\r\n                            <Grid item xs={3}>\r\n                            </Grid>\r\n                            <Grid item xs={6}>\r\n                                <Typography>\r\n                                    You are now in change plan mode. All changes made will be logged to the change plan and will not actually be made in the system. Use the icon in the bottom right corner to exit change plan mode!\r\n                                </Typography>\r\n                            </Grid>\r\n                            <Grid item xs={3}>\r\n                            </Grid>\r\n                            <Grid item xs={3}>\r\n                            </Grid>\r\n                            <Grid item xs={6}>\r\n                                <Button\r\n                                    variant=\"contained\"\r\n                                    color=\"primary\"\r\n                                    onClick={this.closeDescriptionModal}\r\n                                    style={{width: \"100%\"}}\r\n                                >\r\n                                    Ok\r\n                                </Button>\r\n                            </Grid>\r\n                            <Grid item xs={3}>\r\n                            </Grid>\r\n                        </Grid>\r\n                        </div>\r\n                </Backdrop>\r\n                </Fade>\r\n            </Modal>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withStyles(useStyles)(ExportAsset);\r\n","import React from 'react';\r\n\r\nimport axios from 'axios';\r\n\r\nimport { Table, TableBody, TableCell, TableContainer, TableHead, TableRow } from '@material-ui/core';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { Grid, Paper, Button } from '@material-ui/core';\r\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\r\nimport { Alert, AlertTitle } from '@material-ui/lab';\r\nimport NoteAddIcon from '@material-ui/icons/NoteAdd';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport CheckIcon from '@material-ui/icons/Check';\r\nimport ClearIcon from '@material-ui/icons/Clear';\r\nimport { AssetInput } from '../enums/AssetInputs.ts';\r\nimport { AssetCommand } from '../enums/AssetCommands.ts';\r\nimport getURL from '../../helpers/functions/GetURL';\r\nimport * as AssetConstants from \"../AssetConstants\";\r\nimport DetailAsset from \"./DetailsAsset\";\r\nimport FilterAsset from './FilterAsset';\r\nimport stableSort from \"../../helpers/functions/StableSort\";\r\nimport getComparator from \"../../helpers/functions/GetComparator\";\r\nimport { Privilege } from \"../../enums/privilegeTypes.ts\";\r\nimport AddAsset from \"./AddAsset\";\r\nimport ExportAsset from \"./ExportAsset\";\r\nimport * as Constants from '../../Constants';\r\nimport StatusDisplay from \"../../helpers/StatusDisplay\";\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\r\nimport { SpeedDial, SpeedDialAction, SpeedDialIcon } from '@material-ui/lab';\r\nimport TrackChangesIcon from '@material-ui/icons/TrackChanges';\r\n\r\nconst useStyles = theme => ({\r\n\troot: {\r\n\t\tpaddingLeft: theme.spacing(2),\r\n\t\tpaddingRight: theme.spacing(1),\r\n\t},\r\n\tstyledTableRow: {\r\n\t},\r\n\ttableCellHead: {\r\n\t},\r\n\tstyledTableCell: {\r\n\t\tfontSize: 14,\r\n\t},\r\n\ttable: {\r\n\t\tminWidth: 700,\r\n\t},\r\n\tpaper: {\r\n\t\twidth: '100%',\r\n\t\tmarginBottom: theme.spacing(2),\r\n\t},\r\n\tvisuallyHidden: {\r\n\t\tborder: 0,\r\n\t\tclip: 'rect(0 0 0 0)',\r\n\t\theight: 1,\r\n\t\tmargin: -1,\r\n\t\toverflow: 'hidden',\r\n\t\tpadding: 0,\r\n\t\tposition: 'absolute',\r\n\t\ttop: 20,\r\n\t\twidth: 1,\r\n\t},\r\n\ttitle: {\r\n\t\tflex: '1 1 100%',\r\n\t},\r\n});\r\n\r\nconst emptySearch = {\r\n\t\"filter\": {\r\n\t\t\"vendor\": null,\r\n\t\t\"model_number\": null,\r\n\t\t\"height\": null,\r\n\t\t\"model\": null,\r\n\t\t\"hostname\": null,\r\n\t\t\"rack\": null,\r\n\t\t\"rack_position\": null,\r\n\t\t\"username\": null,\r\n\t\t\"display_name\": null,\r\n\t\t\"email\": null,\r\n\t\t\"privilege\": null,\r\n\t\t\"model\": null,\r\n\t\t\"hostname\": null,\r\n\t\t\"starting_rack_letter\": null,\r\n\t\t\"ending_rack_letter\": null,\r\n\t\t\"starting_rack_number\": null,\r\n\t\t\"ending_rack_number\": null,\r\n\t\t\"rack\": null,\r\n\t\t\"rack_position\": null\r\n\t},\r\n\t\"datacenter_name\": \"\",\r\n}\r\n\r\nfunction createData(model, hostname, datacenter_name, rack, owner, asset_number) {\r\n\treturn { model, hostname, datacenter_name, rack, owner, asset_number };\r\n}\r\n\r\nfunction createDecData(model, hostname, datacenter_name, rack, owner, asset_number, decommission_user, timestamp) {\r\n\treturn { model, hostname, datacenter_name, rack, owner, asset_number, decommission_user, timestamp };\r\n}\r\n\r\nconst headCells = [\r\n\t{ id: 'datacenter_name', numeric: false, label: \"Datacenter\", align: \"left\" },\r\n\t{ id: 'hostname', numeric: false, label: \"Hostname\", align: \"left\" },\r\n\t{ id: 'model', numeric: false, label: \"Model\", align: \"left\" },\r\n\t{ id: 'rack', numeric: false, label: \"Rack\", align: \"left\" },\r\n\t{ id: 'owner', numeric: false, label: \"Owner\", align: \"left\" },\r\n\t{ id: 'asset_number', numeric: false, label: \"Asset Number\", align: \"right\" },\r\n];\r\n\r\nconst decommissionHeadCells = [\r\n\t{ id: 'decommission_user', numeric: false, label: \"User\", align: \"right\" },\r\n\t{ id: 'timestamp', numeric: false, label: \"Timestamp\", align: \"right\" },\r\n];\r\n\r\n\r\nclass TableAsset extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\r\n\t\tthis.state = {\r\n\t\t\tallAssets: [],\r\n\t\t\ttableItems: [],\r\n\t\t\tselectedItems: [],\r\n\t\t\tallSelected: false,\r\n\t\t\tdecAssets: [],\r\n\r\n\t\t\tdetailStatusOpen: false,\r\n\t\t\tdetailStatusSeverity: '',\r\n\t\t\tdetailStatusMessage: '',\r\n\r\n\t\t\tdeleteAssetRack: '',\r\n\t\t\tdeleteAssetrack_position: '',\r\n\r\n\t\t\tshowDetailedView: false,\r\n\t\t\tdetailViewLoading: false,\r\n\t\t\tdetailAsset: -1,\r\n\t\t\tdetailHostname: \"\",\r\n\t\t\toriginalRack: '',\r\n\t\t\toriginalrack_position: '',\r\n\r\n\t\t\torder: \"asc\",\r\n\t\t\torderBy: \"datacenter\",\r\n\r\n\t\t\tshowStatus: false,\r\n\t\t\tstatusSeverity: \"\",\r\n\t\t\tstatusMessage: \"\",\r\n\r\n\t\t\t// Change plan\r\n\t\t\tspeedDialOpen: false,\r\n\t\t\tdisplayDec: false,\r\n\t\t};\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\taxios.post(\r\n\t\t\tgetURL(Constants.ASSETS_MAIN_PATH, AssetCommand.search), emptySearch).then(\r\n\t\t\t\tresponse => {\r\n\t\t\t\t\tvar items = [];\r\n\r\n\t\t\t\t\tresponse.data.instances.map(asset => {\r\n\t\t\t\t\t\titems.push(createData(asset.model, asset.hostname, asset.datacenter_name, asset.rack + \" U\" + asset.rack_position, asset.owner, asset.asset_number));\r\n\t\t\t\t\t});\r\n\t\t\t\t\tthis.setState({ allAssets: response.data.instances, tableItems: items });\r\n\t\t\t\t});\r\n\t\tthis.getDecommissionedAssets();\r\n\t}\r\n\r\n\tdeleteAsset = () => {\r\n\t\tvar body = {};\r\n\t\tbody[AssetInput.RACK] = this.state.originalRack;\r\n\t\tbody[AssetInput.RACK_U] = this.state.originalrack_position;\r\n\r\n\t\taxios.post(\r\n\t\t\tgetURL(AssetConstants.ASSETS_MAIN_PATH, AssetCommand.delete), body\r\n\t\t).then(response => {\r\n\t\t\tif (response.data.message === AssetConstants.SUCCESS_TOKEN) {\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\tshowStatus: true,\r\n\t\t\t\t\tstatusMessage: \"Successfully deleted asset\",\r\n\t\t\t\t\tstatusSeverity: AssetConstants.SUCCESS_TOKEN,\r\n\t\t\t\t\toriginalRack: '',\r\n\t\t\t\t\toriginalrack_position: '',\r\n\t\t\t\t\tshowDetailedView: false\r\n\t\t\t\t});\r\n\t\t\t} else {\r\n\t\t\t\tthis.setState({ showStatus: true, statusMessage: response.data.message, statusSeverity: AssetConstants.ERROR_TOKEN })\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tgenerateLabels = () => {\r\n\t\tvar body = {};\r\n\t\tbody[AssetInput.ASSET_NUMBER] = this.state.selectedItems;\r\n\r\n\t\taxios.post(\r\n\t\t\tgetURL(AssetConstants.ASSETS_MAIN_PATH, AssetCommand.GENERATE_LABELS), body,\r\n\t\t\t{\r\n\t\t\t\tresponseType: 'arraybuffer',\r\n\t\t\t}\r\n\t\t).then(response => {\r\n\t\t\tconsole.log(response);\r\n\t\t\tconsole.log(response.data);\r\n\t\t\ttry {\r\n\t\t\t\tvar blob = new Blob([response.data], { type: \"application/pdf\" });\r\n\t\t\t\tvar link = document.createElement('a');\r\n\t\t\t\tlink.href = window.URL.createObjectURL(blob);\r\n\t\t\t\tlink.download = \"AssetLabels_\" + new Date() + \".pdf\";\r\n\t\t\t\tlink.click();\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\tshowStatus: true,\r\n\t\t\t\t\tstatusMessage: \"Successfully generated asset label(s)\",\r\n\t\t\t\t\tstatusSeverity: AssetConstants.SUCCESS_TOKEN,\r\n\t\t\t\t});\r\n\t\t\t} catch {\r\n\t\t\t\tthis.setState({ showStatus: true, statusMessage: \"Could not generate asset labels\", statusSeverity: AssetConstants.ERROR_TOKEN })\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tcloseDetailedView = () => {\r\n\t\tthis.setState({ showDetailedView: false })\r\n\t}\r\n\r\n\tcloseShowStatus = () => {\r\n\t\tthis.setState({ showStatus: false })\r\n\t}\r\n\r\n\tcreateSortHandler = (event, property) => {\r\n\t\tconst isAsc = this.state.orderBy === property && this.state.order === 'asc';\r\n\t\tthis.setState({ order: isAsc ? 'desc' : 'asc', orderBy: property });\r\n\t}\r\n\r\n\topenDetailedView = (event, asset) => {\r\n\t\tconsole.log(\"asset: \");\r\n\t\tconsole.log(asset);\r\n\t\tvar dAsset = {};\r\n\t\tvar assets = this.state.displayDec ? this.state.decAssets : this.state.allAssets;\r\n\t\tassets.map(currAsset => {\r\n\t\t\tif (currAsset.asset_number === asset.asset_number) {\r\n\t\t\t\tObject.assign(dAsset, currAsset);\r\n\t\t\t}\r\n\t\t})\r\n\t\tthis.setState({ detailAsset: dAsset, showDetailedView: true });\r\n\t}\r\n\r\n\tupdateItems = (assets) => {\r\n\t\tvar items = [];\r\n\r\n\t\tif (!this.state.displayDec) {\r\n\t\t\tassets.map(asset => {\r\n\t\t\t\titems.push(createData(asset.model, asset.hostname, asset.datacenter_name, asset.rack + \" U\" + asset.rack_position, asset.owner, asset.asset_number));\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\tassets.map(asset => {\r\n\t\t\t\titems.push(createDecData(asset.vendor + \" \" + asset.model_number, asset.hostname, asset.datacenter_name, asset.rack + \" U\" + asset.rack_position, asset.owner, asset.asset_number, asset.decommission_user, asset.timestamp));\r\n\t\t\t});\r\n\t\t}\r\n\r\n\r\n\t\tthis.setState({ tableItems: items });\r\n\t}\r\n\r\n\tgetAssetList = () => {\r\n\t\taxios.post(\r\n\t\t\tgetURL(Constants.ASSETS_MAIN_PATH, AssetCommand.search), emptySearch).then(\r\n\t\t\t\tresponse => { console.log(\"got list\"); console.log(response); this.setState({ allAssets: response.data.instances }); });\r\n\t}\r\n\r\n\tgetDecommissionedAssets = () => {\r\n\t\taxios.post(\r\n\t\t\tgetURL(Constants.DECOMMISSIONS_MAIN_PATH, AssetCommand.search), {\r\n\t\t\t\"filter\": {\r\n\t\t\t\t\"decommission_user\": \"\",\r\n\t\t\t\t\"start_date\": \"\",\r\n\t\t\t\t\"end_date\": \"\",\r\n\t\t\t}\r\n\t\t}).then(\r\n\t\t\tresponse => {\r\n\t\t\t\tconsole.log(\"decommissioned assets:\");\r\n\t\t\t\tconsole.log(response.data.decommissions);\r\n\t\t\t\tthis.setState({ decAssets: response.data.decommissions })\r\n\t\t\t});\r\n\t}\r\n\r\n\tshowStatusBar = (status, severity, message) => {\r\n\t\tthis.setState({ showStatus: status, statusSeverity: severity, statusMessage: message });\r\n\t}\r\n\r\n\tcloseShowStatus = () => {\r\n\t\tthis.setState({ showStatus: false, statusSeverity: \"\", statusMessage: \"\" });\r\n\t}\r\n\r\n\tonSelectAllClick = (event) => {\r\n\t\tvar newSelected = this.state.selectedItems;\r\n\t\tthis.state.tableItems.map(n => {\r\n\t\t\tconst selectedIndex = newSelected.indexOf(n.asset_number);\r\n\t\t\tif (selectedIndex === -1) {\r\n\t\t\t\tnewSelected = newSelected.concat(n.asset_number);\r\n\t\t\t}\r\n\t\t});\r\n\t\tthis.setState({ selectedItems: newSelected });\r\n\t\tthis.forceUpdate();\r\n\r\n\t}\r\n\r\n\tdeselectAllClick = () => {\r\n\t\tvar newSelected = this.state.selectedItems;\r\n\t\tthis.state.tableItems.map(n => {\r\n\t\t\tconst selectedIndex = newSelected.indexOf(n.asset_number);\r\n\t\t\tconsole.log(selectedIndex);\r\n\t\t\tif (selectedIndex === 0) {\r\n\t\t\t\tnewSelected = newSelected.slice(1);\r\n\t\t\t} else if (selectedIndex === newSelected - 1) {\r\n\t\t\t\tnewSelected = newSelected.slice(0, -1);\r\n\t\t\t} else if (selectedIndex > 0) {\r\n\t\t\t\tnewSelected = newSelected.slice(0, selectedIndex).concat(newSelected.slice(selectedIndex + 1));\r\n\t\t\t}\r\n\t\t});\r\n\t\tthis.setState({ selectedItems: newSelected });\r\n\t\tthis.forceUpdate();\r\n\t}\r\n\r\n\taddCheckedItem = (event, assetNum) => {\r\n\t\tif (event.target.getAttribute(\"class\") !== \"MuiButton-label\") {\r\n\t\t\tconst selectedIndex = this.state.selectedItems.indexOf(assetNum);\r\n\t\t\tlet newSelected = [];\r\n\r\n\t\t\tif (selectedIndex === -1) {\r\n\t\t\t\tnewSelected = newSelected.concat(this.state.selectedItems, assetNum);\r\n\t\t\t} else if (selectedIndex === 0) {\r\n\t\t\t\tnewSelected = newSelected.concat(this.state.selectedItems.slice(1));\r\n\t\t\t} else if (selectedIndex === this.state.selectedItems.length - 1) {\r\n\t\t\t\tnewSelected = newSelected.concat(this.state.selectedItems.slice(0, -1));\r\n\t\t\t} else if (selectedIndex > 0) {\r\n\t\t\t\tnewSelected = newSelected.concat(\r\n\t\t\t\t\tthis.state.selectedItems.slice(0, selectedIndex),\r\n\t\t\t\t\tthis.state.selectedItems.slice(selectedIndex + 1),\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t\tconsole.log(newSelected);\r\n\t\t\tthis.setState({ selectedItems: newSelected });\r\n\t\t}\r\n\t}\r\n\r\n\topenSpeedDial = () => {\r\n\t\tthis.setState({ speedDialOpen: true });\r\n\t}\r\n\r\n\tcloseSpeedDial = () => {\r\n\t\tthis.setState({ speedDialOpen: false });\r\n\t}\r\n\r\n\texitChangePlan = () => {\r\n\t\tthis.props.updateChangePlan(false, null);\r\n\t}\r\n\r\n\tswitchToDec = (switchBool) => {\r\n\t\tthis.setState({ displayDec: switchBool });\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst { classes } = this.props;\r\n\t\tvar allSelected = true;\r\n\t\tthis.state.tableItems.map(elem => {\r\n\t\t\tallSelected = allSelected && this.state.selectedItems.indexOf(elem.asset_number) !== -1;\r\n\t\t});\r\n\r\n\t\treturn (\r\n\t\t\t<React.Fragment>\r\n\t\t\t\t<Grid container spacing={3}>\r\n\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t{this.props.changePlanActive ?\r\n\t\t\t\t\t\t\t<Alert severity=\"info\">\r\n\t\t\t\t\t\t\t\t<AlertTitle>Change Plan Mode</AlertTitle>\r\n\t\t\t\t\t\tYou are currently in change plan mode! Changes made are being logged in the plan and not actually made in the system.\r\n\t\t\t\t\t</Alert> : null}\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t\t<Grid item xs={12} sm={6} md={4} lg={3}>\r\n\t\t\t\t\t\t{(this.props.privilege.admin || this.props.privilege.asset || this.props.privilege.datacenters.length > 0) ?\r\n\t\t\t\t\t\t\t<AddAsset\r\n\t\t\t\t\t\t\t\tshowStatus={this.showStatusBar}\r\n\t\t\t\t\t\t\t\tgetAssetList={this.getAssetList}\r\n\t\t\t\t\t\t\t\tprivilege={this.props.privilege}\r\n\t\t\t\t\t\t\t\tchangePlanActive={this.props.changePlanActive}\r\n\t\t\t\t\t\t\t\tchangePlanID={this.props.changePlanID}\r\n\t\t\t\t\t\t\t/> : null}\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t\t<Grid item xs={12} sm={6} md={4} lg={6}>\r\n\t\t\t\t\t\t<FilterAsset\r\n\t\t\t\t\t\t\tupdateItems={this.updateItems}\r\n\t\t\t\t\t\t\tgetAssetList={this.getAssetList}\r\n\t\t\t\t\t\t\tallAssets={this.state.allAssets}\r\n\t\t\t\t\t\t\tdecAssets={this.state.decAssets}\r\n\t\t\t\t\t\t\tswitchToDec={this.switchToDec}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t\t<Grid item xs={12} sm={6} md={4} lg={3}>\r\n\t\t\t\t\t\t<ExportAsset\r\n\t\t\t\t\t\t\titems={this.state.tableItems}\r\n\t\t\t\t\t\t\tchangePlanActive={this.props.changePlanActive}\r\n\t\t\t\t\t\t\tupdateChangePlan={this.props.updateChangePlan}\r\n\t\t\t\t\t\t\tprivilege={this.props.privilege}\r\n\t\t\t\t\t\t\tusername={this.props.username}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</Grid>\r\n\r\n\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t<Toolbar>\r\n\t\t\t\t\t\t{this.state.selectedItems.length > 0 ? (\r\n\t\t\t\t\t\t\t<Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\r\n\t\t\t\t\t\t\t\t{this.state.selectedItems.length} {this.state.selectedItems.length === 1 ? \"label\" : \"labels\"} ready to be generated\r\n\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t) : null}\r\n\r\n\t\t\t\t\t\t{this.state.selectedItems.length > 0 ? (\r\n\t\t\t\t\t\t\t<Tooltip title=\"Generate Labels\">\r\n\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\tvariant=\"contained\"\r\n\t\t\t\t\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t\t\t\t\t\tstartIcon={<NoteAddIcon />}\r\n\t\t\t\t\t\t\t\t\tonClick={() => this.generateLabels()}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\tGenerate Labels\r\n      \t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t) : null}\r\n\t\t\t\t\t</Toolbar>\r\n\t\t\t\t\t<TableContainer component={Paper}>\r\n\t\t\t\t\t\t<Table className={classes.table} aria-label=\"customized table\" style={{\r\n\t\t\t\t\t\t\tbackgroundColor: this.props.changePlanActive ? \"#64b5f6\" : \"\",\r\n\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t<TableHead>\r\n\t\t\t\t\t\t\t\t<TableRow className={classes.styledTableRow}>\r\n\t\t\t\t\t\t\t\t\t<TableCell padding=\"checkbox\">\r\n\t\t\t\t\t\t\t\t\t\t<Tooltip title=\"Select All\">\r\n\t\t\t\t\t\t\t\t\t\t\t<IconButton aria-label=\"select-all\" onClick={() => this.onSelectAllClick()}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<CheckIcon />\r\n\t\t\t\t\t\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t\t\t\t\t<Tooltip title=\"Deselect All\">\r\n\t\t\t\t\t\t\t\t\t\t\t<IconButton aria-label=\"deselect-all\" onClick={() => this.deselectAllClick()}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<ClearIcon />\r\n\t\t\t\t\t\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t\t\t\t</TableCell>\r\n\t\t\t\t\t\t\t\t\t{headCells.map(headCell => (\r\n\t\t\t\t\t\t\t\t\t\t<TableCell\r\n\t\t\t\t\t\t\t\t\t\t\tclassName={classes.tableCellHead}\r\n\t\t\t\t\t\t\t\t\t\t\tkey={headCell.id}\r\n\t\t\t\t\t\t\t\t\t\t\talign={headCell.align}\r\n\t\t\t\t\t\t\t\t\t\t\tsortDirection={this.state.orderBy === headCell.id ? this.state.order : false}\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t<TableSortLabel\r\n\t\t\t\t\t\t\t\t\t\t\t\tactive={this.state.orderBy === headCell.id}\r\n\t\t\t\t\t\t\t\t\t\t\t\tdirection={this.state.orderBy === headCell.id ? this.state.order : 'asc'}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={(event) => { this.createSortHandler(event, headCell.id) }}\r\n\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span style={{ fontWeight: \"bold\" }}>{headCell.label}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{this.state.orderBy === headCell.id ? (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<span className={classes.visuallyHidden}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{this.state.order === 'desc' ? 'sorted descending' : 'sorted ascending'}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t) : null}\r\n\t\t\t\t\t\t\t\t\t\t\t</TableSortLabel>\r\n\t\t\t\t\t\t\t\t\t\t</TableCell>\r\n\t\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t\t\t{this.state.displayDec ?\r\n\t\t\t\t\t\t\t\t\t\tdecommissionHeadCells.map(headCell => (\r\n\t\t\t\t\t\t\t\t\t\t\t<TableCell\r\n\t\t\t\t\t\t\t\t\t\t\t\tclassName={classes.tableCellHead}\r\n\t\t\t\t\t\t\t\t\t\t\t\tkey={headCell.id}\r\n\t\t\t\t\t\t\t\t\t\t\t\talign={headCell.align}\r\n\t\t\t\t\t\t\t\t\t\t\t\tsortDirection={this.state.orderBy === headCell.id ? this.state.order : false}\r\n\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<TableSortLabel\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tactive={this.state.orderBy === headCell.id}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tdirection={this.state.orderBy === headCell.id ? this.state.order : 'asc'}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={(event) => { this.createSortHandler(event, headCell.id) }}\r\n\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<span style={{ fontWeight: \"bold\" }}>{headCell.label}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t{this.state.orderBy === headCell.id ? (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className={classes.visuallyHidden}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{this.state.order === 'desc' ? 'sorted descending' : 'sorted ascending'}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t) : null}\r\n\t\t\t\t\t\t\t\t\t\t\t\t</TableSortLabel>\r\n\t\t\t\t\t\t\t\t\t\t\t</TableCell>)) : null}\r\n\t\t\t\t\t\t\t\t\t<TableCell align=\"left\" className={classes.tableCellHead}>{\"\"}</TableCell>\r\n\t\t\t\t\t\t\t\t</TableRow>\r\n\t\t\t\t\t\t\t</TableHead>\r\n\t\t\t\t\t\t\t<TableBody>\r\n\t\t\t\t\t\t\t\t{stableSort(this.state.tableItems, getComparator(this.state.order, this.state.orderBy))\r\n\t\t\t\t\t\t\t\t\t.map((row, index) => {\r\n\t\t\t\t\t\t\t\t\t\tconst labelId = `enhanced-table-checkbox-${index}`;\r\n\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t<TableRow\r\n\t\t\t\t\t\t\t\t\t\t\t\thover\r\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={event => this.addCheckedItem(event, row.asset_number)}\r\n\t\t\t\t\t\t\t\t\t\t\t\trole=\"checkbox\"\r\n\t\t\t\t\t\t\t\t\t\t\t\taria-checked={this.state.selectedItems.indexOf(row.asset_number) !== -1}\r\n\t\t\t\t\t\t\t\t\t\t\t\tselected={this.state.selectedItems.indexOf(row.asset_number) !== -1}\r\n\t\t\t\t\t\t\t\t\t\t\t\ttabIndex={-1}\r\n\t\t\t\t\t\t\t\t\t\t\t\tkey={row.assetNum}\r\n\t\t\t\t\t\t\t\t\t\t\t\trole=\"checkbox\"\r\n\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<TableCell padding=\"checkbox\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Checkbox\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tchecked={this.state.selectedItems.indexOf(row.asset_number) !== -1}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tinputProps={{ 'aria-labelledby': labelId }}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</TableCell>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<TableCell component=\"th\" id={labelId} scope=\"row\">{row.datacenter_name}</TableCell>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<TableCell align=\"left\">{row.hostname}</TableCell>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<TableCell align=\"left\">{row.model}</TableCell>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<TableCell align=\"left\">{row.rack}</TableCell>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<TableCell align=\"left\">{row.owner}</TableCell>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<TableCell align=\"right\">{row.asset_number}</TableCell>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{this.state.displayDec ? <TableCell align=\"right\">{row.decommission_user}</TableCell> : null}\r\n\t\t\t\t\t\t\t\t\t\t\t\t{this.state.displayDec ? <TableCell align=\"right\">{row.timestamp}</TableCell> : null}\r\n\t\t\t\t\t\t\t\t\t\t\t\t<TableCell align=\"center\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tvariant=\"contained\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={(event) => { this.openDetailedView(event, row); }}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tMore Details\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</TableCell>\r\n\t\t\t\t\t\t\t\t\t\t\t</TableRow>\r\n\t\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t</TableBody>\r\n\t\t\t\t\t\t</Table>\r\n\t\t\t\t\t</TableContainer>\r\n\t\t\t\t</Grid>\r\n\t\t\t\t{this.state.showDetailedView ?\r\n\t\t\t\t\t<DetailAsset\r\n\t\t\t\t\t\topen={this.state.showDetailedView}\r\n\t\t\t\t\t\tclose={this.closeDetailedView}\r\n\t\t\t\t\t\tsearch={this.search}\r\n\t\t\t\t\t\tasset={this.state.detailAsset}\r\n\t\t\t\t\t\tsearch={this.getAssetList}\r\n\t\t\t\t\t\tprivilege={this.props.privilege}\r\n\t\t\t\t\t\tchangePlanActive={this.props.changePlanActive}\r\n\t\t\t\t\t\tchangePlanID={this.props.changePlanID}\r\n\t\t\t\t\t\tdisabled={this.props.privilege === Privilege.USER || this.state.displayDec /* && username !== row.owner*/}\r\n\t\t\t\t\t\tprivilege={this.props.privilege}\r\n\t\t\t\t\t\tusername={this.props.username}\r\n\t\t\t\t\t/> : null}\r\n\t\t\t\t<SpeedDial\r\n\t\t\t\t\tariaLabel=\"SpeedDial openIcon example\"\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\tposition: 'absolute',\r\n\t\t\t\t\t\tbottom: '30px',\r\n\t\t\t\t\t\tright: '30px',\r\n\t\t\t\t\t}}\r\n\t\t\t\t\thidden={!this.props.changePlanActive}\r\n\t\t\t\t\ticon={<TrackChangesIcon />}\r\n\t\t\t\t\tonClose={this.closeSpeedDial}\r\n\t\t\t\t\tonOpen={this.openSpeedDial}\r\n\t\t\t\t\topen={this.state.speedDialOpen}\r\n\t\t\t\t>\r\n\t\t\t\t\t<SpeedDialAction\r\n\t\t\t\t\t\tkey=\"exit\"\r\n\t\t\t\t\t\ticon={<ExitToAppIcon />}\r\n\t\t\t\t\t\ttooltipTitle=\"Exit Change Plan\"\r\n\t\t\t\t\t\tonClick={this.exitChangePlan}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</SpeedDial>\r\n\t\t\t\t<StatusDisplay\r\n\t\t\t\t\topen={this.state.showStatus}\r\n\t\t\t\t\tseverity={this.state.statusSeverity}\r\n\t\t\t\t\tcloseStatus={this.closeShowStatus}\r\n\t\t\t\t\tmessage={this.state.statusMessage}\r\n\t\t\t\t/>\r\n\t\t\t</React.Fragment>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default withStyles(useStyles)(TableAsset);\r\n","export enum DatacenterCommand {\r\n    GET_ALL_DATACENTERS = \"all/\",\r\n    CREATE = \"create/\",\r\n    EDIT = \"edit/\",\r\n    DELETE = \"delete/\",\r\n}\r\n","import descendingComparator from \"./DescendingComparator\";\r\n\r\nexport default function getComparator(order, orderBy) {\r\n    return order === 'desc'\r\n      ? (a, b) => descendingComparator(a, b, orderBy)\r\n      : (a, b) => -descendingComparator(a, b, orderBy);\r\n  }\r\n","export default function stableSort(array, comparator) {\r\n    const stabilizedThis = array.map((el, index) => [el, index]);\r\n    stabilizedThis.sort((a, b) => {\r\n      const order = comparator(a[0], b[0]);\r\n      if (order !== 0) return order;\r\n      return a[1] - b[1];\r\n    });\r\n    return stabilizedThis.map(el => el[0]);\r\n  }\r\n","import React from 'react';\r\n\r\nexport default class ErrorBoundary extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = { hasError: false };\r\n    }\r\n\r\n    static getDerivedStateFromError(error) {\r\n      // Update state so the next render will show the fallback UI.\r\n      return \"An unforseen error occurred. Please refresh the page and try again later.\";\r\n    }\r\n\r\n    componentDidCatch(error, errorInfo) {\r\n      // You can also log the error to an error reporting service\r\n      //logErrorToMyService(error, errorInfo);\r\n    }\r\n\r\n    render() {\r\n      if (this.state.hasError) {\r\n        // You can render any custom fallback UI\r\n        return <h1>Something went wrong.</h1>;\r\n      }\r\n\r\n      return this.props.children;\r\n    }\r\n}\r\n","import React from 'react';\r\n\r\nimport {\r\n    Grid,\r\n    Typography,\r\n } from '@material-ui/core/';\r\n\r\nimport { Privilege } from '../../enums/privilegeTypes.ts'\r\nimport TableAsset from '../helpers/TableAssets';\r\nimport ErrorBoundary from '../../errors/ErrorBoundry';\r\n\r\nexport default class AssetsView extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            statusSeverity:'',\r\n            statusMessage:'',\r\n            showStatus:false,\r\n        };\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <ErrorBoundary>\r\n                    <Grid\r\n                        container\r\n                        spacing={5}\r\n                        direction=\"row\"\r\n                        justify=\"flex-start\"\r\n                        alignItems=\"center\"\r\n                        style={{margin: \"0px\", maxWidth: \"95vw\"}}\r\n                    >\r\n                        <Grid item xs={12}>\r\n                            <Typography variant=\"h4\">\r\n                                Assets\r\n                            </Typography>\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <TableAsset\r\n                                privilege={this.props.privilege}\r\n                                username={this.props.username}\r\n                                changePlanActive={this.props.changePlanActive}\r\n                                updateChangePlan={this.props.updateChangePlan}\r\n                                changePlanID={this.props.changePlanID}\r\n                            />\r\n                        </Grid>\r\n                    </Grid>\r\n                </ErrorBoundary>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React from \"react\";\r\n\r\nimport axios from \"axios\";\r\n\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { Button, InputLabel, Select, MenuItem } from '@material-ui/core';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Alert from '@material-ui/lab/Alert';\r\n\r\n\r\nimport * as Constants from \"../../Constants\";\r\nimport { DatacenterCommand } from \"../enums/DatacenterCommands\";\r\nimport getURL from \"../../helpers/functions/GetURL\";\r\n\r\nconst useStyles = theme => ({\r\n    root: {\r\n        width: '100%',\r\n    },\r\n    modal: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    paper: {\r\n        backgroundColor: theme.palette.background.paper,\r\n        border: '2px solid #000',\r\n        boxShadow: theme.shadows[5],\r\n        padding: theme.spacing(2, 4, 3),\r\n    },\r\n});\r\n\r\nclass CreateDatacenter extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            showCreate: false,\r\n            datacenterName: \"\",\r\n            datacenterAbbreviation: \"\",\r\n            showStatus: false,\r\n            statusSeverity: \"\",\r\n            statusMessage: \"\",\r\n        };\r\n    }\r\n\r\n    generateCreateJSON = () => {\r\n        return {\r\n            \"abbreviation\": this.state.datacenterAbbreviation,\r\n            \"datacenter_name\": this.state.datacenterName\r\n        }\r\n    }\r\n\r\n    createDatacenter = () => {\r\n        axios.post(\r\n            getURL(Constants.DATACENTERS_MAIN_PATH, DatacenterCommand.CREATE), this.generateCreateJSON()).then(\r\n                response => {\r\n                    console.log(response);\r\n                    if (response.data.message === \"success\") {\r\n                        this.setState({\r\n                            showCreate: false,\r\n                            datacenterName: \"\",\r\n                            datacenterAbbreviation: \"\",\r\n                        }, () => this.props.search());\r\n                    } else {\r\n                        this.setState({\r\n                            showStatus: true,\r\n                            statusSeverity: \"error\",\r\n                            statusMessage: response.data.message,\r\n                        })\r\n                    }\r\n                });\r\n    }\r\n\r\n    updateDatacenterName = (event) => {\r\n        this.setState({ datacenterName: event.target.value });\r\n    }\r\n\r\n    updateDatacenterAbbrevation = (event) => {\r\n        this.setState({ datacenterAbbreviation: this.getAbbreviation(event.target.value) });\r\n    }\r\n\r\n    getAbbreviation = (val) => {\r\n        if (val.length > 6) {\r\n            return val.substring(0, 7);\r\n        }\r\n\r\n        return val;\r\n    }\r\n\r\n    showCreate = () => {\r\n        this.setState({ showCreate: true });\r\n    }\r\n\r\n    closeCreate = () => {\r\n        this.setState({\r\n            showCreate: false,\r\n            datacenterName: \"\",\r\n            datacenterAbbreviation: \"\",\r\n        });\r\n    }\r\n\r\n    closeStatus = () => {\r\n        this.setState({ showStatus: false, statusSeverity: \"\", statusMessage: \"\", });\r\n    }\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <Grid item xs={3}>\r\n                    {this.props.datacenterList.length > 0 ? <InputLabel id=\"datacenter-select-label\">Select Datacenter</InputLabel> : null}\r\n                    {this.props.datacenterList.length > 0 ? <Select\r\n                        name='datacenter_name'\r\n                        id=\"datacenter-select\"\r\n                        value={this.props.dc}\r\n                        onChange={this.props.selectDatacenter}\r\n                        style={{ width: \"100%\" }}\r\n                    >\r\n                        {this.props.datacenterList.map(value => {\r\n                            return (<MenuItem value={value}>{value[\"name\"]}</MenuItem>);\r\n                        })}\r\n                    </Select> : null }\r\n                </Grid>\r\n                {this.props.disabled ? null :\r\n                    <Grid item xs={3}>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            onClick={() => { this.showCreate() }}\r\n                        >\r\n                            Create New Datacenter\r\n            </Button>\r\n                    </Grid>}\r\n\r\n\r\n                <Modal\r\n                    aria-labelledby=\"transition-modal-title\"\r\n                    aria-describedby=\"transition-modal-description\"\r\n                    className={classes.modal}\r\n                    open={this.state.showCreate}\r\n                    onClose={this.closeCreate}\r\n                    closeAfterTransition\r\n                    BackdropComponent={Backdrop}\r\n                    scroll=\"body\"\r\n                    BackdropProps={{\r\n                        timeout: 500,\r\n                    }}\r\n                >\r\n                    <Fade in={this.state.showCreate}>\r\n                        <div className={classes.paper}>\r\n                            <Grid container spacing={3}>\r\n                                <Grid item xs={2}>\r\n                                    <Typography>Datcenter Name:</Typography>\r\n                                </Grid>\r\n                                <Grid item xs={9}>\r\n                                    <TextField\r\n                                        id=\"input-rack\"\r\n                                        variant=\"outlined\"\r\n                                        label={\"datacenter-name\"}\r\n                                        name={\"datacenter-name\"}\r\n                                        onChange={this.updateDatacenterName}\r\n                                        required\r\n                                        fullWidth\r\n                                    />\r\n                                </Grid>\r\n                                <Grid item xs={2}>\r\n                                    <Typography>Datcenter Abbreviation:</Typography>\r\n                                </Grid>\r\n                                <Grid item xs={9}>\r\n                                    <Tooltip placement=\"top\" title={\"Max 6 characters\"}>\r\n                                        <TextField\r\n                                            id=\"input-rack\"\r\n                                            variant=\"outlined\"\r\n                                            label={\"datacenter-abbreviation\"}\r\n                                            name={\"datacenter-abbreviation\"}\r\n                                            onChange={this.updateDatacenterAbbrevation}\r\n                                            value={this.state.datacenterAbbreviation}\r\n                                            required\r\n                                            fullWidth\r\n                                        />\r\n                                    </Tooltip>\r\n                                </Grid>\r\n                                <Grid item xs={12}>\r\n                                    <Button\r\n                                        variant=\"contained\"\r\n                                        color=\"primary\"\r\n                                        type=\"submit\"\r\n                                        disabled={!(this.state.datacenterAbbreviation && this.state.datacenterName)}\r\n                                        onClick={() => { this.createDatacenter() }}\r\n                                    >\r\n                                        Create Datacenter\r\n                            </Button>\r\n                                </Grid>\r\n                                <Grid item xs={12}>\r\n                                    {this.state.showStatus ? <Alert severity=\"error\" onClose={() => { this.closeStatus() }}>{this.state.statusMessage}</Alert> : null}\r\n                                </Grid>\r\n                            </Grid>\r\n                        </div>\r\n                    </Fade>\r\n                </Modal>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withStyles(useStyles)(CreateDatacenter);\r\n","import React from \"react\";\r\n\r\nimport axios from \"axios\";\r\n\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from '@material-ui/core/Button';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport * as Constants from \"../../Constants\";\r\nimport { DatacenterCommand } from \"../enums/DatacenterCommands\";\r\nimport getURL from \"../../helpers/functions/GetURL\";\r\n\r\nconst useStyles = theme => ({\r\n    root: {\r\n      width: '100%',\r\n    },\r\n    modal: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    paper: {\r\n        backgroundColor: theme.palette.background.paper,\r\n        border: '2px solid #000',\r\n        boxShadow: theme.shadows[5],\r\n        padding: theme.spacing(2, 4, 3),\r\n    },\r\n  });\r\n\r\nclass EditDatacenter extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            datacenterName:props.dcName,\r\n            datacenterAbbreviation:props.dcAbbrev,\r\n\t\t};\r\n\r\n\t}\r\n\r\n    generateEditJSON = () => {\r\n\t\tconsole.log(\"generating edit\")\r\n\t\tconsole.log(this.props.dcName);\r\n        return {\r\n\t\t\t\"nameOriginal\": this.props.dcName,\r\n            \"abbreviation\" : this.state.datacenterAbbreviation||this.props.dcAbbrev,\r\n            \"datacenter_name\": this.state.datacenterName||this.props.dcName,\r\n        }\r\n    }\r\n\r\n    editDatacenter = () => {\r\n\t\tconsole.log(\"sending\");\r\n\t\tconsole.log(this.state.datacenterName);\r\n        axios.post(\r\n            getURL(Constants.DATACENTERS_MAIN_PATH, DatacenterCommand.EDIT), this.generateEditJSON()).then(\r\n            response => {\r\n                console.log(response);\r\n                if (response.status === Constants.HTTPS_STATUS_OK) {\r\n                    this.setState({\r\n                        datacenterName:\"\",\r\n                        datacenterAbbreviation:\"\",\r\n                    }, () => {this.props.search(); this.props.close() } );\r\n                } else {\r\n                    this.setState({\r\n                    })\r\n                }\r\n            });\r\n    }\r\n\r\n    updateDatacenterName = (event) => {\r\n        this.setState({ datacenterName: event.target.value });\r\n    }\r\n\r\n    updateDatacenterAbbrevation = (event) => {\r\n        this.setState({ datacenterAbbreviation: this.getAbbreviation(event.target.value) });\r\n    }\r\n\r\n    getAbbreviation = (val) => {\r\n        if (val.length > 6) {\r\n            return val.substring(0,7);\r\n        }\r\n\r\n        return val;\r\n\t}\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n\r\n        return (\r\n            <React.Fragment>\r\n            <Modal\r\n                aria-labelledby=\"transition-modal-title\"\r\n                aria-describedby=\"transition-modal-description\"\r\n                className={classes.modal}\r\n                open={this.props.show}\r\n                onClose={this.props.close}\r\n                closeAfterTransition\r\n                BackdropComponent={Backdrop}\r\n                scroll=\"body\"\r\n                BackdropProps={{\r\n                    timeout: 500,\r\n                }}\r\n            >\r\n                <Fade in={this.props.show}>\r\n                    <div className={classes.paper}>\r\n                        <Grid container spacing={3}>\r\n                            <Grid item xs={2}>\r\n                                <Typography>Datcenter Name:</Typography>\r\n                            </Grid>\r\n                            <Grid item xs={9}>\r\n                                <TextField\r\n                                    id=\"input-rack\"\r\n                                    variant=\"outlined\"\r\n                                    label={\"datacenter-name\"}\r\n                                    name={\"datacenter-name\"}\r\n\t\t\t\t\t\t\t\t\tonChange={this.updateDatacenterName}\r\n\t\t\t\t\t\t\t\t\tvalue={this.state.datacenterName||this.props.dcName}\r\n                                    required\r\n\t\t\t\t\t\t\t\t\tfullWidth\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={2}>\r\n                                <Typography>Datcenter Abbreviation:</Typography>\r\n                            </Grid>\r\n                            <Grid item xs={9}>\r\n                                <Tooltip placement=\"top\" title={\"Max 6 characters\"}>\r\n                                    <TextField\r\n                                        id=\"input-rack\"\r\n                                        variant=\"outlined\"\r\n                                        label={\"datacenter-abbreviation\"}\r\n                                        name={\"datacenter-abbreviation\"}\r\n                                        onChange={this.updateDatacenterAbbrevation}\r\n\t\t\t\t\t\t\t\t\t\tvalue={this.state.datacenterAbbreviation||this.props.dcAbbrev}\r\n                                        required\r\n\t\t\t\t\t\t\t\t\t\tfullWidth\r\n                                    />\r\n                                </Tooltip>\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\tvariant=\"contained\"\r\n\t\t\t\t\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t\t\t\t\t\ttype=\"submit\"\r\n\t\t\t\t\t\t\t\t\tonClick={() => { this.editDatacenter() }}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\tSave Edits\r\n\t\t\t\t\t\t\t\t</Button>\r\n                            </Grid>\r\n\t\t\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\tvariant=\"contained\"\r\n\t\t\t\t\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t\t\t\t\t\tonClick={this.props.close}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\tCancel\r\n\t\t\t\t\t\t\t\t</Button>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </div>\r\n                </Fade>\r\n            </Modal>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withStyles(useStyles)(EditDatacenter);\r\n","import React from 'react';\r\n\r\nimport { fade, withStyles, SvgIcon, Collapse, Grid, Typography } from '@material-ui/core';\r\nimport { TreeView, TreeItem } from '@material-ui/lab';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport \"../stylesheets/RackStyles.css\";\r\n\r\nimport ErrorBoundray from '../../errors/ErrorBoundry';\r\nimport { useSpring, animated } from 'react-spring/web.cjs';\r\n\r\nfunction MinusSquare(props) {\r\n    return (\r\n      <SvgIcon fontSize=\"inherit\" {...props}>\r\n        {/* tslint:disable-next-line: max-line-length */}\r\n        <path d=\"M22.047 22.074v0 0-20.147 0h-20.12v0 20.147 0h20.12zM22.047 24h-20.12q-.803 0-1.365-.562t-.562-1.365v-20.147q0-.776.562-1.351t1.365-.575h20.147q.776 0 1.351.575t.575 1.351v20.147q0 .803-.575 1.365t-1.378.562v0zM17.873 11.023h-11.826q-.375 0-.669.281t-.294.682v0q0 .401.294 .682t.669.281h11.826q.375 0 .669-.281t.294-.682v0q0-.401-.294-.682t-.669-.281z\" />\r\n      </SvgIcon>\r\n    );\r\n  }\r\n\r\n  function PlusSquare(props) {\r\n    return (\r\n      <SvgIcon fontSize=\"inherit\" {...props}>\r\n        {/* tslint:disable-next-line: max-line-length */}\r\n        <path d=\"M22.047 22.074v0 0-20.147 0h-20.12v0 20.147 0h20.12zM22.047 24h-20.12q-.803 0-1.365-.562t-.562-1.365v-20.147q0-.776.562-1.351t1.365-.575h20.147q.776 0 1.351.575t.575 1.351v20.147q0 .803-.575 1.365t-1.378.562v0zM17.873 12.977h-4.923v4.896q0 .401-.281.682t-.682.281v0q-.375 0-.669-.281t-.294-.682v-4.896h-4.923q-.401 0-.682-.294t-.281-.669v0q0-.401.281-.682t.682-.281h4.923v-4.896q0-.401.294-.682t.669-.281v0q.401 0 .682.281t.281.682v4.896h4.923q.401 0 .682.281t.281.682v0q0 .375-.281.669t-.682.294z\" />\r\n      </SvgIcon>\r\n    );\r\n  }\r\n\r\n  function CloseSquare(props) {\r\n    return (\r\n      <SvgIcon className=\"close\" fontSize=\"inherit\" {...props}>\r\n        {/* tslint:disable-next-line: max-line-length */}\r\n        <path d=\"M17.485 17.512q-.281.281-.682.281t-.696-.268l-4.12-4.147-4.12 4.147q-.294.268-.696.268t-.682-.281-.281-.682.294-.669l4.12-4.147-4.12-4.147q-.294-.268-.294-.669t.281-.682.682-.281.696 .268l4.12 4.147 4.12-4.147q.294-.268.696-.268t.682.281 .281.669-.294.682l-4.12 4.147 4.12 4.147q.294.268 .294.669t-.281.682zM22.047 22.074v0 0-20.147 0h-20.12v0 20.147 0h20.12zM22.047 24h-20.12q-.803 0-1.365-.562t-.562-1.365v-20.147q0-.776.562-1.351t1.365-.575h20.147q.776 0 1.351.575t.575 1.351v20.147q0 .803-.575 1.365t-1.378.562v0z\" />\r\n      </SvgIcon>\r\n    );\r\n  }\r\n\r\nfunction TransitionComponent(props) {\r\n    const style = useSpring({\r\n      from: { opacity: 0, transform: 'translate3d(20px,0,0)' },\r\n      to: { opacity: props.in ? 1 : 0, transform: `translate3d(${props.in ? 0 : 20}px,0,0)` },\r\n    });\r\n\r\n    return (\r\n      <animated.div style={style}>\r\n        <Collapse {...props} />\r\n      </animated.div>\r\n    );\r\n  }\r\n\r\n  TransitionComponent.propTypes = {\r\n    /**\r\n     * Show the component; triggers the enter or exit states\r\n     */\r\n    in: PropTypes.bool,\r\n  };\r\n\r\nconst StyledTreeItem = withStyles(theme => ({\r\n    iconContainer: {\r\n      '& .close': {\r\n        opacity: 0.3,\r\n      },\r\n    },\r\n    group: {\r\n      marginLeft: 12,\r\n      paddingLeft: 12,\r\n      borderLeft: `1px dashed ${fade(theme.palette.text.primary, 0.4)}`,\r\n    },\r\n  }))(props => <TreeItem {...props} TransitionComponent={TransitionComponent} />);\r\n\r\n\r\nconst useStyles = theme => ({\r\n    root: {\r\n      width: '100%',\r\n    },\r\n    heading: {\r\n      fontSize: theme.typography.pxToRem(15),\r\n      fontWeight: theme.typography.fontWeightRegular,\r\n    },\r\n    modal: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n      },\r\n      paper: {\r\n        backgroundColor: theme.palette.background.paper,\r\n        border: '2px solid #000',\r\n        boxShadow: theme.shadows[5],\r\n        padding: theme.spacing(2, 4, 3),\r\n      },\r\n  });\r\n\r\nclass RacksView extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            items: [],\r\n            firstRack: 'A1',\r\n            secondRack: 'A1',\r\n\r\n            showStatus: false,\r\n            statusMessage: '',\r\n            statusSeverity: 'info',\r\n\r\n            showConfirmationBox: false,\r\n\r\n            racksList: [],\r\n            racks: {}\r\n        };\r\n    }\r\n\r\n    handleFormat = (event, newFormats) => {\r\n        if (newFormats.length) {\r\n            this.setState({formats: newFormats});\r\n        }\r\n    };\r\n\r\n    closeShowStatus = () => {\r\n        this.setState({ showStatus: false })\r\n    }\r\n\r\n    closeConfirmationBox = () => {\r\n        this.setState({ showConfirmationBox: false });\r\n    }\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n        return (\r\n            <ErrorBoundray>\r\n                <Grid\r\n                    container\r\n                    spacing={5}\r\n                    direction=\"row\"\r\n                    justify=\"center\"\r\n                    alignItems=\"center\"f\r\n                    style={{margin: \"0px\", maxWidth: \"95vw\"}}\r\n                >\r\n\r\n                    <Grid item xs={12}>\r\n                        <Typography variant=\"h5\">Racks</Typography>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <TreeView\r\n                            className={classes.root}\r\n                            defaultExpanded={['1']}\r\n                            defaultCollapseIcon={<MinusSquare />}\r\n                            defaultExpandIcon={<PlusSquare />}\r\n                            defaultEndIcon={<CloseSquare />}\r\n                        >\r\n                            {Object.keys(this.props.racks).sort().map(key => {\r\n                                return (<StyledTreeItem nodeId={key} label={key}>\r\n                                        {this.props.racks[key].map(value => {\r\n                                            return (<StyledTreeItem nodeId={value} label={value} />);\r\n                                        })}\r\n                                    </StyledTreeItem>);\r\n                            })}\r\n                        </TreeView>\r\n                    </Grid>\r\n\r\n\r\n\r\n                </Grid>\r\n\r\n            </ErrorBoundray>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withStyles(useStyles)(RacksView);\r\n","export enum RackCommand {\r\n    GET_ALL_RACKS = \"all\",\r\n    CREATE_RACKS = \"create\",\r\n    DELETE_RACKS = \"delete\",\r\n    GET_RACK_DETAILS = \"details\"\r\n}\r\n","import React from \"react\";\r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { Grid, Paper, TextField, Modal, Backdrop, Fade } from '@material-ui/core';\r\nimport { ToggleButton, ToggleButtonGroup } from '@material-ui/lab';\r\n\r\nimport { RackCommand } from \"../../enums/RackCommands.ts\";\r\n\r\n\r\n\r\nexport default function ShowDatacenters(props) {\r\n    const [rackType, setRackType] = React.useState('single');\r\n    const [rack1, setRack1] = React.useState('A1');\r\n    const [rack2, setRack2] = React.useState('A1');\r\n\r\n    const handleRackType = (event, newType) => {\r\n        setRackType(newType);\r\n      };\r\n\r\n      const updateRack = (event) => {\r\n        setRack1(event.target.value);\r\n        setRack2(event.target.value);\r\n      }\r\n\r\n      const updateStart = (event) => {\r\n        setRack1(event.target.value);\r\n      }\r\n\r\n      const updateEnd = (event) => {\r\n        setRack2(event.target.value);\r\n      }\r\n\r\n    const createRacks = () => {\r\n        props.updateRacks(RackCommand.CREATE_RACKS, rack1, rack2);\r\n    }\r\n\r\n    const deleteRacks = () => {\r\n        props.updateRacks(RackCommand.DELETE_RACKS, rack1, rack2);\r\n    }\r\n\r\n    const viewRacks = () => {\r\n        props.updateRacks(RackCommand.GET_RACK_DETAILS, rack1, rack2);\r\n    }\r\n\r\n    try {\r\n        if (props.datacentersList.length == 0) {\r\n            return <Typography>There are currently no datacenters being managed.</Typography>\r\n        } else {\r\n            return (<div>{\r\n                <Grid container spacing={3}>\r\n                <Grid item xs={3}>\r\n                    <Paper elevation={3}>\r\n                    {props.disabled ? null :\r\n                    <Grid\r\n                        container\r\n                        spacing={2}\r\n                        direction=\"row\"\r\n                        justify=\"flex-start\"\r\n                        alignItems=\"center\"\r\n                        style={{\"padding\": \"10px\"}}\r\n                    >\r\n\r\n                        <Grid item xs={12}>\r\n                            <Typography variant=\"h6\">\r\n                                Manage\r\n                            </Typography>\r\n                        </Grid>\r\n\r\n                        <Grid item xs={12}>\r\n                            <Button\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                style={{ width: \"100%\" }}\r\n                                onClick={(event) => {props.editDatacenter(event, props.dc.name, props.dc.abbreviation)} }\r\n                            >\r\n                                Edit\r\n                            </Button>\r\n                        </Grid>\r\n                        <Grid container item direciton=\"row\" justify=\"center\" alignItems=\"center\" xs={12}>\r\n                            <hr style={{width: \"5vw\"}} />\r\n                            <Typography color=\"textSecondary\">\r\n                                Or\r\n                            </Typography>\r\n                            <hr style={{width: \"5vw\"}} />\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <Button\r\n                                variant=\"contained\"\r\n                                color=\"secondary\"\r\n                                style={{ width: \"100%\" }}\r\n                                onClick={(event) => {props.openConfirmationBox(event, props.selectedDatacenter)} }\r\n                            >\r\n                                Delete\r\n                            </Button>\r\n                        </Grid>\r\n                    </Grid>}\r\n                    </Paper>\r\n                </Grid>\r\n\r\n                <Grid item xs={3}>\r\n                <Paper elevation={3}>\r\n                    <Grid\r\n                        container\r\n                        spacing={2}\r\n                        direction=\"row\"\r\n                        justify=\"flex-start\"\r\n                        alignItems=\"center\"\r\n                        style={{\"padding\": \"10px\"}}\r\n                    >\r\n                        <Grid item xs={12}>\r\n                            <Typography variant=\"h6\">\r\n                                Racks\r\n                            </Typography>\r\n                        </Grid>\r\n                        <Grid container item direction=\"row\" justify=\"center\" xs={12}>\r\n                            <ToggleButtonGroup\r\n                                value={rackType}\r\n                                exclusive\r\n                                onChange={handleRackType}\r\n                                aria-label=\"rack type\"\r\n                            >\r\n                                <ToggleButton value=\"single\" aria-label=\"single-rack\">\r\n                                    Single\r\n                                </ToggleButton>\r\n                                <ToggleButton value=\"range\" aria-label=\"range-rack\">\r\n                                    Range\r\n                                </ToggleButton>\r\n                            </ToggleButtonGroup>\r\n                        </Grid>\r\n\r\n                        {rackType === \"single\" ? <Grid item xs={12}>\r\n                            <TextField id=\"standard-basic\" variant=\"outlined\" label=\"Rack\" name=\"rack1\" onChange={updateRack}/>\r\n                        </Grid> : <Grid container item spacing={3} direciton=\"row\" justify=\"center\"><Grid item xs={6}>\r\n                            <TextField id=\"standard-basic\" variant=\"outlined\" label=\"Start Rack (e.g. A1)\" name=\"rack1\" onChange={updateStart}/>\r\n                        </Grid>\r\n                        <Grid item xs={6}>\r\n                            <TextField id=\"standard-basic\" variant=\"outlined\" label=\"End Rack (e.g. B10)\" name=\"rack2\" onChange={updateEnd}/>\r\n                        </Grid></Grid> }\r\n                        {props.disabled ? null :\r\n                        <Grid item xs={6}>\r\n                            <Button\r\n                                variant=\"contained\"\r\n                                style={{ width: \"100%\", backgroundColor: \"green\", color: \"white\" }}\r\n                                onClick={createRacks}\r\n                            >\r\n                                Create\r\n                            </Button>\r\n                        </Grid>}\r\n                        {/* <Grid item xs={4}>\r\n                            <Button\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                style={{ width: \"100%\" }}\r\n                                onClick={viewRacks}\r\n                            >\r\n                                View\r\n                            </Button>\r\n                        </Grid> */}\r\n                        {props.disabled ? null :\r\n                        <Grid item xs={6}>\r\n                            <Button\r\n                                variant=\"contained\"\r\n                                color=\"secondary\"\r\n                                style={{ width: \"100%\" }}\r\n                                onClick={deleteRacks}\r\n                            >\r\n                                Delete\r\n                            </Button>\r\n                        </Grid>}\r\n                    </Grid>\r\n\r\n                    </Paper>\r\n                </Grid>\r\n            </Grid>\r\n            }\r\n            </div>\r\n            );\r\n        }\r\n    } catch (exception) {\r\n        console.log(exception);\r\n        return <Typography>Could not load any datacenters at this time</Typography>\r\n    }\r\n}\r\n","import React from 'react';\r\n\r\nimport axios from 'axios';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\r\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\r\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport Fade from '@material-ui/core/Fade';\r\n\r\nimport getURL from \"../../helpers/functions/GetURL\";\r\nimport * as Constants from \"../../Constants\";\r\nimport { DatacenterCommand } from \"../enums/DatacenterCommands.ts\";\r\nimport RacksView from \"../pages/RacksView\";\r\nimport ErrorBoundary from \"../../errors/ErrorBoundry\";\r\nimport CreateDatacenter from \"./CreateDatacenter\";\r\nimport { Privilege } from '../../enums/privilegeTypes.ts';\r\nimport EditDatacenter from \"./EditDatacenter\";\r\nimport ShowDatacenters from \"./functions/ShowDatacenters\";\r\n\r\nconst useStyles = theme => ({\r\n    root: {\r\n      width: '100%',\r\n    },\r\n    heading: {\r\n      fontSize: theme.typography.pxToRem(15),\r\n      fontWeight: theme.typography.fontWeightRegular,\r\n    },\r\n    progress: {\r\n        display: 'flex',\r\n        '& > * + *': {\r\n          marginLeft: theme.spacing(2),\r\n        },\r\n        justify:\"center\",\r\n        alignItems:\"center\",\r\n      },\r\n    modal: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    paper: {\r\n        backgroundColor: theme.palette.background.paper,\r\n        border: '2px solid #000',\r\n        boxShadow: theme.shadows[5],\r\n        padding: theme.spacing(2, 4, 3),\r\n    },\r\n  });\r\n\r\nclass ConfirmDeteleDC extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\r\n\t\tthis.state = {\r\n\r\n\t\t};\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst { classes } = this.props;\r\n\r\n\t\treturn (\r\n\t\t\t<Modal\r\n                    aria-labelledby=\"transition-modal-title\"\r\n                    aria-describedby=\"transition-modal-description\"\r\n                    className={classes.modal}\r\n                    open={this.props.showConfirmationBox}\r\n                    onClose={this.props.closeConfirmationBox}\r\n                    closeAfterTransition\r\n                    BackdropComponent={Backdrop}\r\n                    BackdropProps={{\r\n                    timeout: 500,\r\n                    }}\r\n                >\r\n                    <Fade in={this.props.showConfirmationBox}>\r\n                        <div className={classes.paper}>\r\n                            <Grid container spacing={5}>\r\n                                <Grid item xs={12}>\r\n                                    Are you sure you wish to delete?\r\n                                </Grid>\r\n                                <Grid item xs={2}>\r\n                                    <Button\r\n                                        variant=\"contained\"\r\n                                        color=\"primary\"\r\n                                        onClick={this.props.deleteDatacenter}\r\n                                    >\r\n                                        Yes\r\n                                    </Button>\r\n                                </Grid>\r\n                                <Grid item xs={1}>\r\n                                    <Button\r\n                                        variant=\"contained\"\r\n                                        color=\"primary\"\r\n                                        onClick={() => this.props.closeConfirmationBox()}\r\n                                    >\r\n                                        No\r\n                                    </Button>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </div>\r\n                    </Fade>\r\n                </Modal>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default withStyles(useStyles)(ConfirmDeteleDC);\r\n","export enum StatsCommand {\r\n    GENERATE_REPORT = \"generate-report\",\r\n    TEST = \"test\",\r\n}\r\n","import React from 'react';\r\n\r\nimport axios from 'axios';\r\n\r\nimport { Grid, CircularProgress, Typography, withStyles } from '@material-ui/core/';\r\nimport getURL from \"../../helpers/functions/GetURL\";\r\nimport * as Constants from \"../../Constants\";\r\nimport { DatacenterCommand } from \"../enums/DatacenterCommands.ts\";\r\nimport ErrorBoundary from \"../../errors/ErrorBoundry\";\r\nimport CreateDatacenter from \"../helpers/CreateDatacenter\";\r\nimport { Privilege } from '../../enums/privilegeTypes.ts';\r\nimport EditDatacenter from \"../helpers/EditDatacenter\";\r\nimport ConfirmDeteleDC from \"../helpers/ConfirmDeleteDC\";\r\nimport ShowDatacenters from \"../helpers/functions/ShowDatacenters\";\r\nimport RacksView from './RacksView';\r\nimport { RackCommand } from \"../enums/RackCommands.ts\";\r\nimport StatusDisplay from '../../helpers/StatusDisplay';\r\n\r\n\r\nconst racksMainPath = 'racks/';\r\n\r\n\r\nconst useStyles = theme => ({\r\n    root: {\r\n        width: '100%',\r\n    },\r\n    heading: {\r\n        fontSize: theme.typography.pxToRem(15),\r\n        fontWeight: theme.typography.fontWeightRegular,\r\n    },\r\n    progress: {\r\n        display: 'flex',\r\n        '& > * + *': {\r\n            marginLeft: theme.spacing(2),\r\n        },\r\n        justify: \"center\",\r\n        alignItems: \"center\",\r\n    },\r\n    modal: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    paper: {\r\n        backgroundColor: theme.palette.background.paper,\r\n        border: '2px solid #000',\r\n        boxShadow: theme.shadows[5],\r\n        padding: theme.spacing(2, 4, 3),\r\n    },\r\n});\r\n\r\n\r\nclass DatacenterView extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            datacentersList: [],\r\n            loadingDCList: true,\r\n            showConfirmationBox: false,\r\n            currentDatacenter: \"\",\r\n            showEditDC: false,\r\n            editDCName: \"\",\r\n            editDCAbbr: \"\",\r\n            selectedDatacenter: \"\",\r\n            fullDatacenter: {},\r\n            racks: {},\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getDatacenters();\r\n    }\r\n\r\n    getDatacenters = () => {\r\n        this.setState({ loadingDCList: true });\r\n        axios.get(getURL(Constants.DATACENTERS_MAIN_PATH, DatacenterCommand.GET_ALL_DATACENTERS)).then(\r\n            response => {\r\n                console.log(response.data.datacenters);\r\n                var datacenter = response.data.datacenters[0];\r\n                console.log(datacenter);\r\n                var name = datacenter === undefined ? \"\" : datacenter.name;\r\n                console.log(name);\r\n                this.setState({ datacentersList: response.data.datacenters, loadingDCList: false, selectedDatacenter: name, fullDatacenter: datacenter });\r\n                this.getAllRacks(name, true);\r\n            }\r\n        );\r\n    }\r\n\r\n    deleteDatacenter = () => {\r\n        console.log(this.state.currentDatacenter);\r\n        axios.post(getURL(Constants.DATACENTERS_MAIN_PATH, DatacenterCommand.DELETE),\r\n            {\r\n                \"datacenter_name\": this.state.currentDatacenter\r\n            }\r\n        ).then(\r\n            response => {\r\n                console.log(\"Deleteting\");\r\n                console.log(response);\r\n                if (response.data.message === \"success\") {\r\n                    this.setState({\r\n                        showConfirmationBox: false,\r\n                        showStatus: true,\r\n                        statusMessage: \"Successfully deleted datacenter\",\r\n                        statusSeverity: \"success\",\r\n                    });\r\n                    this.getDatacenters();\r\n                } else {\r\n                    this.setState({\r\n                        showConfirmationBox: false,\r\n                        showStatus: true,\r\n                        statusMessage: response.data.message,\r\n                        statusSeverity: \"error\",\r\n                    });\r\n                }\r\n\r\n            }\r\n        );\r\n    }\r\n\r\n    openConfirmationBox = (event, datacenter) => {\r\n        this.setState({ showConfirmationBox: true, currentDatacenter: datacenter });\r\n    }\r\n\r\n    closeConfirmationBox = () => {\r\n        this.setState({ showConfirmationBox: false });\r\n    }\r\n\r\n    openEditDatacenter = (event, datacenterName, datacenterAbbrev) => {\r\n        this.setState({ editDCName: datacenterName, editDCAbbr: datacenterAbbrev }, () => this.setState({ showEditDC: true, }));\r\n    }\r\n\r\n    closeEditDatacenter = () => {\r\n        this.setState({\r\n            showEditDC: false,\r\n            editDCName: \"\",\r\n            editDCAbbr: \"\",\r\n            showStatus: false,\r\n            statusMessage: '',\r\n            statusSeverity: 'info',\r\n        });\r\n    }\r\n\r\n    closeShowStatus = () => {\r\n        this.setState({ showStatus: false });\r\n    }\r\n\r\n    updateRacks = (command, rack1, rack2) => {\r\n        axios.post(\r\n            getURL(racksMainPath, command),\r\n            {\r\n                'start_letter': rack1[0],\r\n                'stop_letter': rack2[0],\r\n                'start_number': rack1.substring(1),\r\n                'stop_number': rack2.substring(1),\r\n                \"datacenter_name\": this.state.selectedDatacenter,\r\n            }\r\n        ).then(response => {\r\n            if (response.data.message === 'success') {\r\n                this.setState({ showStatus: true, statusMessage: \"Success\", statusSeverity: \"success\", showConfirmationBox: false });\r\n                if (command === RackCommand.GET_RACK_DETAILS) {\r\n                    const win = window.open(response.data.link, '_blank');\r\n                    if (win != null) {\r\n                        win.focus();\r\n                    }\r\n                }\r\n            } else {\r\n                this.setState({ showStatus: true, statusMessage: response.data.message, statusSeverity: \"error\" })\r\n            }\r\n            this.getAllRacks(this.state.selectedDatacenter, false);\r\n        });\r\n    }\r\n\r\n    getAllRacks = (datacenter, showSnack) => {\r\n        axios.post(getURL(racksMainPath, RackCommand.GET_ALL_RACKS), {\r\n            \"datacenter_name\": datacenter\r\n        }).then(response => {\r\n            console.log(response.data.racks);\r\n            var racks = {};\r\n            for (var i = 0; i < response.data.racks.length; ++i) {\r\n                var letter = response.data.racks[i].label[0];\r\n                if (letter in racks) {\r\n                    racks[letter].push(response.data.racks[i].label);\r\n                } else {\r\n                    racks[letter] = [response.data.racks[i].label];\r\n                }\r\n\r\n                racks[letter].sort();\r\n            }\r\n\r\n            this.setState({ racks: racks });\r\n\r\n            if (response.data.message === 'success') {\r\n                if (showSnack) {\r\n                    this.setState({ showStatus: true, statusMessage: \"Racks loaded\", statusSeverity: \"success\", racksList: response.data.racks })\r\n                }\r\n            } else {\r\n                this.setState({ showStatus: true, statusMessage: response.data.message, statusSeverity: \"error\" })\r\n            }\r\n        });\r\n    }\r\n\r\n    updateDatacenter = (event) => {\r\n        this.setState({ selectedDatacenter: event.target.value.name, fullDatacenter: event.target.value }, this.getAllRacks(event.target.value.name, true));\r\n    }\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <ErrorBoundary>\r\n                    <Grid\r\n                        container\r\n                        spacing={5}\r\n                        direction=\"row\"\r\n                        justify=\"center\"\r\n                        alignItems=\"center\"\r\n                        style={{ margin: \"0px\", maxWidth: \"95vw\" }}\r\n                    >\r\n                        <Grid item xs={12}>\r\n                            <Typography variant=\"h4\">\r\n                                Datacenters\r\n                            </Typography>\r\n                        </Grid>\r\n                        <CreateDatacenter\r\n                            disabled={this.props.disabled}\r\n                            search={this.getDatacenters}\r\n                            selectedDatacenter={this.state.selectedDatacenter}\r\n                            dc={this.state.fullDatacenter}\r\n                            selectDatacenter={this.updateDatacenter}\r\n                            datacenterList={this.state.datacentersList}\r\n                        />\r\n                        {this.state.loadingDCList ?\r\n                            <div className={classes.progress}><CircularProgress /></div> :\r\n\r\n                            <Grid item xs={12}>\r\n                                <ShowDatacenters\r\n                                    classes={classes}\r\n                                    datacentersList={this.state.datacentersList}\r\n                                    privilege={this.props.privilege}\r\n                                    openConfirmationBox={this.openConfirmationBox}\r\n                                    editDatacenter={this.openEditDatacenter}\r\n                                    selectedDatacenter={this.state.selectedDatacenter}\r\n                                    updateRacks={this.updateRacks}\r\n                                    disabled={this.props.disabled}\r\n                                    dc={this.state.fullDatacenter}\r\n                                />\r\n                            </Grid>}\r\n                        <Grid item xs={6}>\r\n                            <EditDatacenter\r\n                                show={this.state.showEditDC}\r\n                                close={this.closeEditDatacenter}\r\n                                dcName={this.state.editDCName}\r\n                                dcAbbrev={this.state.editDCAbbr}\r\n                                search={this.getDatacenters}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={6}>\r\n                            <ConfirmDeteleDC\r\n                                showConfirmationBox={this.state.showConfirmationBox}\r\n                                closeConfirmationBox={this.closeConfirmationBox}\r\n                                deleteDatacenter={this.deleteDatacenter}\r\n                                close={this.closeEditDatacneter}\r\n                            />\r\n                        </Grid>\r\n                    </Grid>\r\n\r\n                    <Grid\r\n                        container\r\n                        spacing={5}\r\n                        direction=\"row\"\r\n                        justify=\"center\"\r\n                        alignItems=\"center\"\r\n                        style={{ margin: \"0px\", maxWidth: \"95vw\" }}\r\n                    >\r\n                        <Grid item xs={12}>\r\n                            <RacksView\r\n                                disabled={this.props.disabled}\r\n                                datacenter={this.state.selectedDatacenter}\r\n                                racks={this.state.racks}\r\n                            />\r\n                        </Grid>\r\n                    </Grid>\r\n                    <StatusDisplay\r\n                        open={this.state.showStatus}\r\n                        severity={this.state.statusSeverity}\r\n                        closeStatus={this.closeShowStatus}\r\n                        message={this.state.statusMessage}\r\n                    />\r\n                </ErrorBoundary>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default withStyles(useStyles)(DatacenterView);\r\n","import React from 'react';\r\n\r\nimport axios from 'axios';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nimport ErrorBoundary from \"../../errors/ErrorBoundry\";\r\nimport DatacenterView from \"./DatacentersView\";\r\nimport { Privilege } from '../../enums/privilegeTypes';\r\n\r\nconst useStyles = theme => ({\r\n\r\n  });\r\n\r\nclass DatacenterManagerView extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n        };\r\n    }\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <ErrorBoundary>\r\n                    <DatacenterView disabled={!(this.props.privilege.admin || this.props.privilege.asset)} />\r\n                </ErrorBoundary>\r\n            </React.Fragment>\r\n        );\r\n}\r\n  }\r\n\r\n\r\n  export default withStyles(useStyles)(DatacenterManagerView);\r\n","export default function jsonToArr(incomingJSON) {\r\n    var json = {};\r\n    try {\r\n        json = JSON.parse(incomingJSON);\r\n    } catch (e) {\r\n        json = incomingJSON;\r\n    }\r\n\r\n    if (Object.entries(json).length === 0 && json.constructor === Object) {\r\n        return [];\r\n    }\r\n\r\n    const items = [];\r\n\r\n    Object.keys(json).map((key) => {\r\n        const row = [];\r\n        row.push(key);\r\n        row.push(json[key]);\r\n        items.push(row);\r\n\r\n        return key;\r\n    });\r\n    return items;\r\n}\r\n","import React from 'react';\r\nimport axios from 'axios';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport getURL from '../../helpers/functions/GetURL';\r\nimport * as Constants from \"../../Constants\";\r\nimport { DatacenterCommand } from \"../../racks/enums/DatacenterCommands.ts\";\r\nimport { StatsCommand } from \"../enums/StatsCommands.ts\";\r\nimport JSONtoArr from \"../../helpers/functions/JSONtoArr\";\r\nimport StatusDisplay from '../../helpers/StatusDisplay';\r\nimport ErrorBoundray from '../../errors/ErrorBoundry';\r\nimport { Select, MenuItem, InputLabel, Grid, Paper, Typography, Button } from '@material-ui/core';\r\nimport { Table, TableBody, TableCell, TableContainer, TableHead, TableRow} from '@material-ui/core';\r\nimport { ExpansionPanel, ExpansionPanelSummary, ExpansionPanelDetails } from '@material-ui/core';\r\n\r\nconst statsMainPath = 'stats/';\r\nconst tables = {\r\n    \"totalUsage\":\"Total Usage\",\r\n    \"spaceUsage\": \"Space Usage\",\r\n    \"vendorUsage\": \"Vendor Usage\",\r\n    \"modelUsage\": \"Model Usage\",\r\n    \"ownerUsage\": \"Owner Usage\",\r\n}\r\n\r\nconst tableCols = {\r\n    \"totalUsage\":[\"Total\", \"Usage\"],\r\n    \"spaceUsage\": [\"Rack\", \"Usage\"],\r\n    \"vendorUsage\": [\"Vendor\", \"Usage\"],\r\n    \"modelUsage\": [\"Model\", \"Usage\"],\r\n    \"ownerUsage\": [\"Ownder\", \"Usage\"],\r\n}\r\n\r\nexport default class StatisticsView extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            loadingDatacenters: true,\r\n            datacenterList: [],\r\n            selectedDatacenter: 'All Datacenters',\r\n            tableValues: {\r\n                \"totalUsage\":[],\r\n                \"spaceUsage\": [],\r\n                \"vendorUsage\": [],\r\n                \"modelUsage\": [],\r\n                \"ownerUsage\": [],\r\n            },\r\n            totalUsage:[],\r\n            spaceUsage:[],\r\n            vendorUsage:[],\r\n            modelUsage:[],\r\n            ownerUsage:[],\r\n\r\n            showStatus:false,\r\n            statusMessage:'',\r\n            statusSeverity:'',\r\n        };\r\n\r\n        this.closeShowStatus = this.closeShowStatus.bind(this);\r\n        this.generateReport = this.generateReport.bind(this);\r\n\r\n        axios.defaults.headers.common['token'] = this.props.token;\r\n        axios.defaults.headers.common['privilege'] = this.props.privilege;\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getDatacenters();\r\n    }\r\n\r\n    getDatacenters = () => {\r\n        axios.get(getURL(Constants.DATACENTERS_MAIN_PATH, DatacenterCommand.GET_ALL_DATACENTERS)).then(\r\n            response => {\r\n                console.log(response);\r\n                this.setState({ datacenterList: response.data.datacenters, loadingDatacenters: false });\r\n            }\r\n        );\r\n    }\r\n\r\n    generateReport() {\r\n        axios.post(getURL(statsMainPath, StatsCommand.GENERATE_REPORT), {\r\n            'datacenter_name': this.state.selectedDatacenter.name === \"All Datacenters\" ? \"\" : this.state.selectedDatacenter.name,\r\n        }).then(response => {\r\n                try {\r\n                    var data = response.data;\r\n                    var totalUsage = [];\r\n                    var totalUsageRow = [\"Total Usage\"];\r\n                    totalUsageRow.push(data[\"totalUsage\"]);\r\n                    totalUsage.push(totalUsageRow);\r\n\r\n                    var spaceUsage = JSONtoArr(data[\"spaceUsage\"]);\r\n                    if (spaceUsage.length === 0) {\r\n                        spaceUsage.push([\"No space is currently being used\", []])\r\n                    }\r\n                    var vendorUsage = JSONtoArr(data[\"vendorUsage\"]);\r\n                    if (vendorUsage.length === 0) {\r\n                        vendorUsage.push([\"No vendors currently using space\", []])\r\n                    }\r\n                    var modelUsage = JSONtoArr(data[\"modelUsage\"]);\r\n                    if (modelUsage.length === 0) {\r\n                        modelUsage.push([\"No models currently using space\", []])\r\n                    }\r\n                    var ownerUsage = JSONtoArr(data[\"ownerUsage\"]);\r\n                    if (ownerUsage.length === 0) {\r\n                        ownerUsage.push([\"No owners currently using space\", []])\r\n                    }\r\n\r\n                    this.setState({\r\n                        showStatus: true,\r\n                        statusSeverity:\"success\",\r\n                        statusMessage: \"Success\",\r\n                        tableValues: {\r\n                            \"totalUsage\":totalUsage,\r\n                            \"spaceUsage\": spaceUsage,\r\n                            \"vendorUsage\": vendorUsage,\r\n                            \"modelUsage\": modelUsage,\r\n                            \"ownerUsage\": ownerUsage,\r\n                        },\r\n                     })\r\n                } catch {\r\n                    this.setState({ showStatus: true, statusMessage: response.data.message, statusSeverity:\"error\" })\r\n                }\r\n            });\r\n    }\r\n\r\n    closeShowStatus() {\r\n        this.setState({ showStatus: false })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <ErrorBoundray >\r\n                <StatusDisplay\r\n                    open={this.state.showStatus}\r\n                    severity={this.state.statusSeverity}\r\n                    closeStatus={this.closeShowStatus}\r\n                    message={this.state.statusMessage}\r\n                />\r\n                <Grid\r\n                    container\r\n                    spacing={5}\r\n                    direction=\"row\"\r\n                    justify=\"center\"\r\n                    alignItems=\"center\"\r\n                    style={{margin: \"0px\", maxWidth: \"95vw\"}}\r\n                >\r\n                    <Grid item xs={12}>\r\n                        <Typography variant=\"h4\">\r\n                            Reports\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Grid item xs={3}>\r\n                        <InputLabel id=\"datacenter-select-label\">Select Datacenter</InputLabel>\r\n                        <Select\r\n                            name='datacenter_name'\r\n                            id=\"datacenter-select\"\r\n                            value={this.state.selectedDatacenter}\r\n                            onChange={(e) => this.setState({ selectedDatacenter: e.target.value })}\r\n                            style={{ width: \"100%\" }}\r\n                        >\r\n                            <MenuItem value=\"All Datacenters\">All Datacenters</MenuItem>\r\n                            {this.state.datacenterList.map(value => {\r\n                                return (<MenuItem value={value}>{value[\"name\"]}</MenuItem>);\r\n                            })}\r\n                        </Select>\r\n                    </Grid>\r\n                    <Grid item xs={3}>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            onClick={this.generateReport}\r\n                            disabled={this.state.loadingDatacenters}\r\n                        >\r\n                            Generate Report\r\n                        </Button>\r\n                    </Grid>\r\n                </Grid>\r\n                <div>\r\n\r\n                </div>\r\n                {Object.keys(tables).map(key => (\r\n                <ExpansionPanel>\r\n                    <ExpansionPanelSummary\r\n                        expandIcon={<ExpandMoreIcon />}\r\n                    >\r\n                        <Typography>{tables[key]}</Typography>\r\n                    </ExpansionPanelSummary>\r\n                    <ExpansionPanelDetails>\r\n                        <TableContainer component={Paper}>\r\n                            <Table>\r\n                                <TableHead>\r\n                                    <TableRow >\r\n                                        {tableCols[key].map(column => (<TableCell><span id={column}>{column}</span></TableCell>))}\r\n                                    </TableRow>\r\n                                </TableHead>\r\n                                <TableBody>\r\n                                {this.state.tableValues[key].map(row => (\r\n                                    <TableRow>\r\n                                        {row.map(column => (<TableCell><span id={column}>{column + (isNaN(column) ? \"\" : \"%\")}</span></TableCell>))}\r\n                                    </TableRow>\r\n                                ))}\r\n                                </TableBody>\r\n                            </Table>\r\n                        </TableContainer>\r\n                    </ExpansionPanelDetails>\r\n                </ExpansionPanel>\r\n                ))}\r\n                </ErrorBoundray>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","export enum LogCommand {\r\n    TEST = \"test/\",\r\n    GET_LOGS = \"getlogs/\",\r\n}\r\n","import React from \"react\"\r\n\r\nimport axios from 'axios';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport {\r\n    Grid,\r\n    Typography\r\n} from \"@material-ui/core/\";\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Button from '@material-ui/core/Button';\r\nimport { TextField } from '@material-ui/core';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\n\r\nimport { LogCommand } from \"../enums/LogCommands.ts\";\r\nimport getURL from \"../../helpers/functions/GetURL\";\r\nimport * as Constants from \"../../Constants\";\r\nimport ErrorBoundary from \"../../errors/ErrorBoundry\";\r\n\r\nconst useStyles = {\r\n    table: {\r\n      minWidth: 650,\r\n    },\r\n    searchbar: {\r\n        minWidth: \"200px\",\r\n        flexGrow: 1,\r\n    },\r\n  };\r\n\r\nfunction makeTableData(index, timestamp, type, message) {\r\n    return { index, timestamp, type, message };\r\n}\r\n\r\nconst typeKey = \"type\";\r\nconst timestampKey = \"timestamp\";\r\nconst USER_KEY = \"user\";\r\nconst ASSET_KEY = \"assets\";\r\n\r\nclass LogsView extends React.Component  {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            logItems:[],\r\n            filteredLogs:[],\r\n            allLogs:null,\r\n            filterUser:\"\",\r\n            filterAsset:\"\",\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getLogs();\r\n    }\r\n\r\n    getLogs = () => {\r\n        axios.get(getURL(Constants.LOGS_MAIN_PATH, LogCommand.GET_LOGS)).then(response => {\r\n            this.parseLog(response.data.log);\r\n            this.filter();\r\n        });\r\n    }\r\n\r\n    parseLog = (logs) => {\r\n        var items = [];\r\n        logs.map((log, index) => {\r\n            var message = \"\";\r\n            Object.entries(log).map(([key, value]) => {\r\n                if (key === typeKey || key === timestampKey) {\r\n                    return;\r\n                }\r\n                message += value + \"\\n\";\r\n            });\r\n            items.push(makeTableData(index, log[timestampKey], log[typeKey], message));\r\n        });\r\n\r\n        this.setState({ logItems: items, filteredLogs:items, allLogs:logs });\r\n    }\r\n\r\n    filter = () => {\r\n        var user = this.state.filterUser;\r\n        var asset = this.state.filterAsset;\r\n        var filteredItems = [];\r\n\r\n        this.state.allLogs.map(entry => {\r\n            console.log(entry);\r\n            var hasAsset = false;\r\n            var hasUser = false;\r\n\r\n            try {\r\n                if (entry.message.match(/\\[.+\\]/)[0].includes(user)) {\r\n                    hasUser = true;\r\n                }\r\n            } catch {\r\n                hasUser = false;\r\n            }\r\n\r\n\r\n            try {\r\n                if (asset !== \"\") {\r\n                    var assetNum = \"\" + entry.request.asset_number\r\n                    if (assetNum.includes(asset)) {\r\n                        hasAsset = true;\r\n                    }\r\n                } else {\r\n                    hasAsset = true;\r\n                }\r\n            } catch {\r\n                hasAsset = false;\r\n            }\r\n\r\n            if (hasAsset && hasUser) {\r\n                filteredItems.push(entry);\r\n            }\r\n        });\r\n\r\n        filteredItems.sort(function(a, b) {\r\n            if (a.timestamp > b.timestamp) return -1;\r\n            if (a.timestamp < b.timestamp) return 1;\r\n            return 0;\r\n        })\r\n\r\n        this.setState({ filteredLogs:filteredItems });\r\n    }\r\n\r\n    updateFilterUser = (event) => {\r\n        this.setState({ filterUser: event.target.value }, () => { this.filter() });\r\n    }\r\n\r\n    updateFilterAsset = (event) => {\r\n        this.setState({ filterAsset: event.target.value }, () => { this.filter() });\r\n    }\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <ErrorBoundary>\r\n                    <Grid\r\n                        container\r\n                        spacing={5}\r\n                        direction=\"row\"\r\n                        justify=\"flex-start\"\r\n                        alignItems=\"center\"\r\n                        style={{margin: \"0px\", maxWidth: \"95vw\"}}\r\n                    >\r\n                        <Grid item xs={12}>\r\n                            <Typography variant=\"h4\">\r\n                                Logs\r\n                            </Typography>\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <Button\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                onClick={this.getLogs}\r\n                            >\r\n                                Refresh Logs\r\n                            </Button>\r\n                        </Grid>\r\n                        <Grid item xs={6}>\r\n                            <TextField\r\n                                className={classes.searchbar}\r\n                                name={\"filter-users\"}\r\n                                placeholder=\"Search users\"\r\n                                fullWidth\r\n                                onChange={this.updateFilterUser}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={6}>\r\n                            <TextField\r\n                                className={classes.searchbar}\r\n                                name={\"filter-assets\"}\r\n                                placeholder=\"Search assets\"\r\n                                fullWidth\r\n                                onChange={this.updateFilterAsset}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <TableContainer component={Paper}>\r\n                                <Table className={classes.table} aria-label=\"simple table\">\r\n                                    <TableHead>\r\n                                    <TableRow>\r\n                                        <TableCell align=\"left\"><span id={\"timestamp\"} style={{fontWeight: \"bold\"}}>Timestamp</span></TableCell>\r\n                                        <TableCell align=\"left\"><span id={\"type\"} style={{fontWeight: \"bold\"}}>type</span></TableCell>\r\n                                        <TableCell align=\"left\"><span id={\"message\"} style={{fontWeight: \"bold\"}}>Message</span></TableCell>\r\n                                    </TableRow>\r\n                                    </TableHead>\r\n                                    <TableBody>\r\n                                    {this.state.filteredLogs.map(logItem => (\r\n                                        <TableRow key={logItem.timestamp}>\r\n                                            <TableCell aligh=\"left\">{logItem.timestamp}</TableCell>\r\n                                            <TableCell align=\"left\">{logItem.type}</TableCell>\r\n                                            <TableCell align=\"left\">{logItem.message}</TableCell>\r\n                                        </TableRow>\r\n                                    ))}\r\n                                    </TableBody>\r\n                                </Table>\r\n                            </TableContainer>\r\n                        </Grid>\r\n                    </Grid>\r\n                </ErrorBoundary>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withStyles(useStyles)(LogsView);\r\n","// React\nimport React from 'react';\nimport axios from 'axios';\n\n// Helpers\nimport getURL from '../../helpers/functions/GetURL';\nimport StatusDisplay from '../../helpers/StatusDisplay';\nimport ErrorBoundray from '../../errors/ErrorBoundry';\nimport { AssetCommand } from '../../assets/enums/AssetCommands.ts';\n\n// Material UI Core\nimport { Grid, Paper, Typography, Button, withStyles} from '@material-ui/core';\nimport { Modal, Fade, Backdrop, TextField } from '@material-ui/core';\nimport { Table, TableBody, TableCell, TableContainer, TableHead, TableRow} from '@material-ui/core';\nimport { ExpansionPanel, ExpansionPanelSummary, ExpansionPanelDetails } from '@material-ui/core';\n\n// Icons\nimport EditIcon from '@material-ui/icons/Edit';\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport ReplayIcon from '@material-ui/icons/Replay';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\n\n// Path prefix for change plan routes\nconst changePlanPath = \"changeplans/\";\n\n// CSS styles\nconst useStyles = theme => ({\n    root: {\n      flexGrow: 1,\n    },\n    modal: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        width: \"100%\",\n      },\n      grid: {\n          backgroundColor: theme.palette.background.paper,\n          boxShadow: theme.shadows[5],\n          padding: theme.spacing(2, 4, 3),\n          width: \"50%\"\n      },\n      progress: {\n        display: 'flex',\n        '& > * + *': {\n          marginLeft: theme.spacing(2),\n        },\n      },\n});\n\n// A view to display a user's change plans\nclass ChangePlansView extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            // Status snackbar\n            showStatus: false,\n            statusMessage: '',\n            statusSeverity: '',\n\n            // Change plans\n            changePlans: [],\n\n            // Change plan actions\n            changePlanDetails: {},\n\n            // Dialog to rename a change plan\n            renameDialog: false,\n\n            // Name to rename a change plan\n            planName: \"\",\n\n            // Id of change plan to rename\n            planId: null,\n\n            // Dialog to execute a change plan\n            executeDialog: false,\n\n            // Id of change plan to execute\n            executeId: null,\n\n            // Dialog to delete a change plan\n            deleteDialog: false,\n\n            // Id of change plan to delete\n            deleteId: null\n        };\n\n        // Axios network request headers\n        axios.defaults.headers.common['token'] = this.props.token;\n        axios.defaults.headers.common['privilege'] = this.props.privilege;\n    }\n\n    // When component appears on screen\n    componentDidMount() {\n        this.fetchAllChangePlans();\n    }\n\n    // Get all change plans for the user\n    fetchAllChangePlans = () => {\n        axios.post(\n            getURL(changePlanPath, AssetCommand.CHANGE_PLAN_GET_PLANS), {\n                'owner': this.props.username,\n            }).then(response => {\n                var change_plans = response.data.change_plans;\n                if (change_plans !== null) {\n                    this.setState({ changePlans: change_plans });\n\n                    // For each change plan, grab details/actions\n                    change_plans.forEach(plan => {\n                        axios.post(\n                            getURL(changePlanPath, AssetCommand.CHANGE_PLAN_GET_ACTIONS), {\n                                'change_plan_id': plan.identifier,\n                                'owner': this.props.username,\n                            }).then(response => {\n                                var details = this.state.changePlanDetails;\n                                details[plan.identifier] = response.data.change_plan_actions;\n\n                                this.setState({ changePlanDetails: details });\n                            });\n                    });\n                }\n            }\n        );\n    }\n\n    closeShowStatus = () => {\n        this.setState({ showStatus: false })\n    }\n\n    // Enter change plan mode for the given change plan unique id\n    startEditing = (identifier) => {\n        this.props.updateChangePlan(true, identifier);\n    }\n\n    // Saves the plan name\n    updatePlanName = (event) => {\n        this.setState({ planName: event.target.value });\n    }\n\n    // Change the name of the change plan with the given unique id\n    renameChangePlan = () => {\n        this.closeRenameDialog();\n\n        axios.post(\n            getURL(changePlanPath, AssetCommand.CHANGE_PLAN_EDIT), {\n                'change_plan_id': this.state.planId,\n                'name': this.state.planName,\n                'owner': this.props.username,\n            }).then(response => {\n                this.setState({ planId: null, planName: \"\" });\n                this.fetchAllChangePlans();\n            }\n        );\n    }\n\n    // Open the dialog to rename the change plan for the given unique id\n    openRenameDialog = (identifier) => {\n        this.setState({ renameDialog: true, planId: identifier });\n    }\n\n    // Close the dialog to rename the change plan\n    closeRenameDialog = () => {\n        this.setState({ renameDialog: false });\n    }\n\n    // Open the dialog to execute the change plan for the given unique id\n    openExecuteDialog = (identifier) => {\n        this.setState({ executeDialog: true, executeId: identifier });\n    }\n\n    // Close the dialog to execute the change plan\n    closeExecuteDialog = () => {\n        this.setState({ executeDialog: false });\n    }\n\n    // Execute the change plan\n    executeChangePlan = () => {\n        this.closeExecuteDialog();\n\n        axios.post(\n            getURL(changePlanPath, AssetCommand.CHANGE_PLAN_EXECUTE), {\n                'change_plan_id': this.state.executeId,\n                'owner': this.props.username,\n            }).then(response => {\n                this.setState({ executeId: null });\n                this.fetchAllChangePlans();\n            }\n        );\n    }\n\n    // Open the dialog to delete the change plan for the given unique id\n    openDeleteDialog = (identifier) => {\n        this.setState({ deleteDialog: true, deleteId: identifier });\n    }\n\n    // Close the dialog to delete the change plan\n    closeDeleteDialog = () => {\n        this.setState({ deleteDialog: false });\n    }\n\n    // Delete the change plan\n    deleteChangePlan = () => {\n        this.closeDeleteDialog();\n\n        axios.post(\n            getURL(changePlanPath, AssetCommand.CHANGE_PLAN_DELETE), {\n                'change_plan_id': this.state.deleteId,\n                'owner': this.props.username,\n            }).then(response => {\n                this.setState({ deleteId: null });\n                this.fetchAllChangePlans();\n            }\n        );\n    }\n\n    lookup = (key) => {\n        return {\n            \"asset_numberOriginal\": \"Asset Number\",\n            \"model\": \"Model\",\n            \"hostname\": \"Hostname\",\n            \"rack\": \"Rack\",\n            \"rack_position\": \"Rack Position\",\n            \"owner\": \"Owner\",\n            \"comment\": \"Comment\",\n            \"datacenter_name\": \"Datacenter\",\n            \"tags\": \"Tags\",\n            \"network_connections\": \"Network Connections\",\n            \"power_connections\": \"Power Connections\",\n            'asset_number': \"Asset Number\",\n        }[key];\n    }\n\n    render() {\n        const { classes } = this.props;\n\n        return (\n            <div>\n                <ErrorBoundray >\n                <StatusDisplay\n                    open={this.state.showStatus}\n                    severity={this.state.statusSeverity}\n                    closeStatus={this.closeShowStatus}\n                    message={this.state.statusMessage}\n                />\n                <Grid\n                    container\n                    spacing={5}\n                    direction=\"row\"\n                    justify=\"center\"\n                    alignItems=\"center\"\n                    style={{margin: \"0px\", maxWidth: \"95vw\"}}\n                >\n                    <Grid item xs={12}>\n                        <Typography variant=\"h4\">\n                            Change Plans\n                        </Typography>\n                    </Grid>\n                    <Grid item xs={5}></Grid>\n                    <Grid item xs={2}>\n                        <Typography>\n                            Saved changed plans\n                        </Typography>\n                    </Grid>\n                    <Grid item xs={5}></Grid>\n                    <Grid item xs={2}></Grid>\n                    <Grid item xs={8}>\n                        { this.state.changePlans.map(plan => {\n                            return (<ExpansionPanel key={plan.identifier}>\n                                <ExpansionPanelSummary\n                                    expandIcon={<ExpandMoreIcon />}\n                                >\n                                    <Typography>{plan.name}</Typography>\n                                </ExpansionPanelSummary>\n                                <ExpansionPanelDetails>\n                                <Grid\n                                    container\n                                    spacing={3}\n                                    direction=\"row\"\n                                    justify=\"center\"\n                                    alignItems=\"center\"\n                                    style={{margin: \"0px\", maxWidth: \"95vw\"}}\n                                >\n                                    <Grid item xs={3}></Grid>\n                                    <Grid item xs={3}>\n                                    <Button\n                                        variant=\"contained\"\n                                        color=\"primary\"\n                                        style={{width: \"100%\"}}\n                                        startIcon={<ReplayIcon />}\n                                        onClick={() => { this.openRenameDialog(plan.identifier) }}\n                                    >\n                                        Rename\n                                    </Button>\n                                    </Grid>\n                                    <Grid item xs={3}>\n                                    <Button\n                                        variant=\"contained\"\n                                        color=\"default\"\n                                        style={{width: \"100%\"}}\n                                        startIcon={<EditIcon />}\n                                        onClick={() => { this.startEditing(plan.identifier) }}\n                                    >\n                                        Edit\n                                    </Button>\n                                    </Grid>\n                                    <Grid item xs={3}></Grid>\n                                <Grid item xs={12}>\n                                { this.state.changePlanDetails[plan.identifier] !== undefined ?\n                                    this.state.changePlanDetails[plan.identifier].map(detail => {\n                                        var diff = detail.diff;\n                                        var isCreate = detail.action === \"create\";\n                                        console.log(detail.new_record);\n                                        return (<TableContainer component={Paper}>\n                                                    <Typography>\n                                                    { detail.action.charAt(0).toUpperCase() + detail.action.slice(1) } Asset Number: {\n                                                        detail.new_record.asset_numberOriginal === undefined ?\n                                                        detail.new_record.asset_number : detail.new_record.asset_numberOriginal\n                                                    }</Typography>\n                                                    <Table>\n                                                        <TableHead>\n                                                            <TableRow >\n                                                                <TableCell>Field</TableCell>\n                                                                { isCreate ? <TableCell>Value</TableCell> : <TableCell>Old</TableCell>}\n                                                                { isCreate ? null : <TableCell>New</TableCell> }\n                                                            </TableRow>\n                                                        </TableHead>\n                                                        <TableBody>\n                                                        {Object.keys(diff).map(key => {\n                                                            if (key === \"tags\") {\n                                                                return null;\n                                                            }\n\n                                                            return isCreate ?\n                                                                (\n                                                                    <TableRow>\n                                                                        <TableCell>{this.lookup(key)}</TableCell>\n                                                                        <TableCell>\n                                                                            { (key !== \"power_connections\" && key !== \"network_connections\") ? diff[key] : \"\" }\n                                                                        </TableCell>\n                                                                    </TableRow>\n                                                                ) :\n                                                                (\n                                                                    <TableRow>\n                                                                        <TableCell>{this.lookup(key)}</TableCell>\n                                                                        <TableCell>{diff[key][0]}</TableCell>\n                                                                        <TableCell>{diff[key][1]}</TableCell>\n                                                                    </TableRow>\n                                                                )\n                                                        }\n                                                        )}\n                                                        </TableBody>\n                                                    </Table>\n                                                </TableContainer>);\n                                    })\n                                    : \"This change plan has made no changes!\" }\n                                </Grid>\n                                <Grid item xs={3}>\n                                    <Button\n                                        variant=\"contained\"\n                                        color=\"primary\"\n                                        style={{width: \"100%\"}}\n                                        startIcon={<PlayArrowIcon />}\n                                        onClick={() => { this.openExecuteDialog(plan.identifier) }}\n                                    >\n                                        Execute\n                                    </Button>\n                                    </Grid>\n                                    <Grid item xs={3}>\n                                    <Button\n                                        variant=\"contained\"\n                                        color=\"secondary\"\n                                        style={{width: \"100%\"}}\n                                        startIcon={<DeleteIcon />}\n                                        onClick={() => { this.openDeleteDialog(plan.identifier) }}\n                                    >\n                                        Delete\n                                    </Button>\n                                </Grid>\n                                </Grid>\n\n                                </ExpansionPanelDetails>\n                            </ExpansionPanel>);\n                        })\n                        }\n                    </Grid>\n                    <Grid item xs={2}></Grid>\n                </Grid>\n\n\n                <Modal\n                    aria-labelledby=\"transition-modal-title\"\n                    aria-describedby=\"transition-modal-description\"\n                    className={classes.modal}\n                    open={this.state.renameDialog}\n                    onClose={this.closeRenameDialog}\n                    closeAfterTransition\n                >\n                <Fade in={this.state.renameDialog}>\n                    <Backdrop\n                        open={this.state.renameDialog}\n                    >\n                    <div className={classes.grid}>\n                        <Grid\n                            container\n                            spacing={1}\n                            direction=\"row\"\n                            justify=\"flex-start\"\n                            alignItems=\"center\"\n                        >\n                            <Grid item xs={3}>\n                                <Typography>\n                                    New plan name:\n                                </Typography>\n                            </Grid>\n                            <Grid item xs={9}>\n                                <TextField type=\"text\" id=\"change-plan-name\" variant=\"outlined\" label=\"Change Plan Name\" name=\"change-plan-name\" onChange={this.updatePlanName} style={{ width: \"100%\" }} />\n                            </Grid>\n                            <Grid item xs={6}>\n                                <Button\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    onClick={this.renameChangePlan}\n                                    style={{width: \"100%\"}}\n                                >\n                                    Save\n                                </Button>\n                            </Grid>\n                            <Grid item xs={6}>\n                                <Button\n                                    variant=\"contained\"\n                                    color=\"secondary\"\n                                    onClick={this.closeRenameDialog}\n                                    style={{width: \"100%\"}}\n                                >\n                                    Cancel\n                                </Button>\n                            </Grid>\n\n                        </Grid>\n                        </div>\n                </Backdrop>\n                </Fade>\n            </Modal>\n\n            <Modal\n                    aria-labelledby=\"transition-modal-title\"\n                    aria-describedby=\"transition-modal-description\"\n                    className={classes.modal}\n                    open={this.state.executeDialog}\n                    onClose={this.closeExecuteDialog}\n                    closeAfterTransition\n                >\n                <Fade in={this.state.executeDialog}>\n                    <Backdrop\n                        open={this.state.executeDialog}\n                    >\n                    <div className={classes.grid}>\n                        <Grid\n                            container\n                            spacing={1}\n                            direction=\"row\"\n                            justify=\"flex-start\"\n                            alignItems=\"center\"\n                        >\n                            <Grid item xs={3}>\n                                <Typography>\n                                    Are you sure you want to execute this change plan?\n                                </Typography>\n                            </Grid>\n                            <Grid item xs={9}></Grid>\n                            <Grid item xs={6}>\n                                <Button\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    onClick={this.executeChangePlan}\n                                    style={{width: \"100%\"}}\n                                >\n                                    Yes\n                                </Button>\n                            </Grid>\n                            <Grid item xs={6}>\n                                <Button\n                                    variant=\"contained\"\n                                    color=\"secondary\"\n                                    onClick={this.closeExecuteDialog}\n                                    style={{width: \"100%\"}}\n                                >\n                                    Cancel\n                                </Button>\n                            </Grid>\n\n                        </Grid>\n                        </div>\n                </Backdrop>\n                </Fade>\n            </Modal>\n\n\n            <Modal\n                    aria-labelledby=\"transition-modal-title\"\n                    aria-describedby=\"transition-modal-description\"\n                    className={classes.modal}\n                    open={this.state.deleteDialog}\n                    onClose={this.closeDeleteDialog}\n                    closeAfterTransition\n                >\n                <Fade in={this.state.deleteDialog}>\n                    <Backdrop\n                        open={this.state.deleteDialog}\n                    >\n                    <div className={classes.grid}>\n                        <Grid\n                            container\n                            spacing={1}\n                            direction=\"row\"\n                            justify=\"flex-start\"\n                            alignItems=\"center\"\n                        >\n                            <Grid item xs={3}>\n                                <Typography>\n                                    Are you sure you want to delete this change plan?\n                                </Typography>\n                            </Grid>\n                            <Grid item xs={9}></Grid>\n                            <Grid item xs={6}>\n                                <Button\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    onClick={this.deleteChangePlan}\n                                    style={{width: \"100%\"}}\n                                >\n                                    Yes\n                                </Button>\n                            </Grid>\n                            <Grid item xs={6}>\n                                <Button\n                                    variant=\"contained\"\n                                    color=\"secondary\"\n                                    onClick={this.closeDeleteDialog}\n                                    style={{width: \"100%\"}}\n                                >\n                                    Cancel\n                                </Button>\n                            </Grid>\n\n                        </Grid>\n                        </div>\n                </Backdrop>\n                </Fade>\n            </Modal>\n\n\n                </ErrorBoundray>\n            </div>\n        );\n    }\n}\n\nexport default withStyles(useStyles)(ChangePlansView);\n","import React from 'react';\r\n\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport AccountCircle from '@material-ui/icons/AccountCircle';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\n\r\nimport ModelsView from './models/pages/ModelsView';\r\nimport UsersView from './users/pages/UsersView';\r\nimport AssetsView from './assets/pages/AssetsView';\r\nimport DatacenterManagerView from './racks/pages/DatacenterManagerView';\r\nimport StatisticsView from './statistics/pages/StatisticsView';\r\nimport LogsView from \"./logs/pages/LogsView\";\r\nimport ChangePlansView from \"./changeplans/pages/ChangePlans\";\r\n\r\nimport ErrorBoundry from './errors/ErrorBoundry';\r\n\r\nimport '../stylesheets/TabStyles.css';\r\n\r\nconst useStyles = theme => ({\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n    menuButton: {\r\n        marginRight: theme.spacing(2),\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n    },\r\n    tab: {\r\n        flexGrow: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        maxWidth: \"100%\",\r\n        width: \"100%\",\r\n        margin: \"0 auto\",\r\n    }\r\n});\r\n\r\nconst currentTab = \"currentTab\";\r\n\r\nclass TabViewer extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            currentTabID:0,\r\n            anchorEl: null,\r\n            isMenuOpen:false,\r\n\r\n            // Change plan\r\n            changePlanActive: false,\r\n            changePlanID: null,\r\n        };\r\n        this.handleChange = this.handleChange.bind(this);\r\n\r\n        console.log(sessionStorage.getItem(currentTab));\r\n    }\r\n\r\n    componentDidMount() {\r\n        console.log(sessionStorage.getItem(currentTab));\r\n        if (sessionStorage.getItem(currentTab) !== null) {\r\n            var tab =   parseInt(sessionStorage.getItem(currentTab));\r\n            this.setState({ currentTabID:tab });\r\n        }\r\n\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        sessionStorage.removeItem(currentTab);\r\n    }\r\n\r\n    handleChange(event, newValue) {\r\n        this.setState({ currentTabID: newValue });\r\n        sessionStorage.setItem(currentTab, newValue);\r\n    }\r\n\r\n    handleProfileMenuOpen = (event) => {\r\n        this.setState({ anchorEl: event.currentTarget, isMenuOpen: true });\r\n    }\r\n\r\n    handleMenuClose = () => {\r\n        this.setState({ anchorEl: null, isMenuOpen:false });\r\n    }\r\n\r\n    updateChangePlan = (status, id) => {\r\n        this.setState({ changePlanActive: status, changePlanID: id });\r\n    }\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n\r\n        return (\r\n            <div className={classes.root}>\r\n                <ErrorBoundry>\r\n                    <AppBar position=\"static\">\r\n                        <Toolbar>\r\n                            <Typography variant=\"h6\" className={classes.title}>\r\n                                Hyposoft Server Management\r\n                    </Typography>\r\n                            <div>\r\n                                <IconButton\r\n                                    aria-label=\"account of current user\"\r\n                                    aria-controls=\"menu-appbar\"\r\n                                    aria-haspopup=\"true\"\r\n                                    color=\"inherit\"\r\n                                    onClick={this.handleProfileMenuOpen}\r\n                                >\r\n                                    <AccountCircle />\r\n                                </IconButton>\r\n                                <Menu\r\n                                    anchorEl={this.state.anchorEl}\r\n                                    anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n                                    id='primary-search-account-menu'\r\n                                    keepMounted\r\n                                    transformOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n                                    open={this.state.isMenuOpen}\r\n                                    onClose={this.handleMenuClose}\r\n                                >\r\n                                    <MenuItem>{\"Username: \" + this.props.username}</MenuItem>\r\n                                    <MenuItem onClick={this.props.logout} >LOGOUT</MenuItem>\r\n                                </Menu>\r\n                            </div>\r\n                        </Toolbar>\r\n                    </AppBar>\r\n\r\n            <Tabs value={this.state.currentTabID} onChange={this.handleChange}\r\n                indicatorColor=\"primary\"\r\n                textColor=\"primary\"\r\n                centered\r\n            >\r\n                <Tab value={0} style={{flexGrow: 1,}} label=\"Models\"> </Tab>\r\n                <Tab value={1} style={{flexGrow: 1,}} label=\"Assets\" ></Tab>\r\n                { (this.props.privilege.asset || this.props.privilege.admin) ? <Tab value={6} style={{flexGrow: 1,}} label=\"Change Plans\" ></Tab> : null }\r\n                {(this.props.privilege.admin) ? <Tab value={2} style={{flexGrow: 1,}} label=\"Users\"></Tab> : null}\r\n                {(this.props.privilege.admin || this.props.privilege.asset) ? <Tab value={3} style={{flexGrow: 1,}} label=\"Datacenters\" /> : null}\r\n                <Tab value={4} style={{flexGrow: 1,}} label=\"Statistics\" />\r\n                {(this.props.privilege.admin || this.props.privilege.audit) ? <Tab value={5} style={{flexGrow: 1,}} label=\"Logs\" />:null}\r\n            </Tabs>\r\n            {this.state.currentTabID !== 0 ? null :\r\n            <Typography\r\n                component=\"div\"\r\n                role=\"tabpanel\"\r\n                id={`simple-tabpanel-0`}\r\n                aria-labelledby={`simple-tab-0`}\r\n            >\r\n                <Container className={classes.tab} ><ModelsView token={this.props.token} privilege={this.props.privilege} /></Container>\r\n            </Typography>}\r\n            {this.state.currentTabID !== 1 ? null :\r\n            <Typography\r\n                component=\"div\"\r\n                role=\"tabpanel\"\r\n                id={`simple-tabpanel-0`}\r\n                aria-labelledby={`simple-tab-0`}\r\n            >\r\n                <Container className={classes.tab} >\r\n                    <AssetsView\r\n                        token={this.props.token}\r\n                        privilege={this.props.privilege}\r\n                        username={this.props.username}\r\n                        changePlanActive={this.state.changePlanActive}\r\n                        updateChangePlan={this.updateChangePlan}\r\n                        changePlanID ={this.state.changePlanID}\r\n                    />\r\n                </Container>\r\n            </Typography>}\r\n            {this.state.currentTabID !== 2 ? null :\r\n            <Typography\r\n                component=\"div\"\r\n                role=\"tabpanel\"\r\n                id={`simple-tabpanel-0`}\r\n                aria-labelledby={`simple-tab-0`}\r\n            >\r\n                <Container className={classes.tab} ><UsersView token={this.props.token} privilege={this.props.privilege} /></Container>\r\n            </Typography>}\r\n            {this.state.currentTabID !== 3 ? null :\r\n            <Typography\r\n                component=\"div\"\r\n                role=\"tabpanel\"\r\n                id={`simple-tabpanel-0`}\r\n                aria-labelledby={`simple-tab-0`}\r\n            >\r\n                <Container className={classes.tab} ><DatacenterManagerView token={this.props.token} privilege={this.props.privilege} /></Container>\r\n            </Typography>}\r\n            {this.state.currentTabID !== 4 ? null :\r\n            <Typography\r\n                component=\"div\"\r\n                role=\"tabpanel\"\r\n                hidden={this.state.currentTabID !== 4}\r\n                id={`simple-tabpanel-0`}\r\n                aria-labelledby={`simple-tab-0`}\r\n            >\r\n                <Container className={classes.tab} ><StatisticsView token={this.props.token} privilege={this.props.privilege} /></Container>\r\n            </Typography>}\r\n            {this.state.currentTabID !== 5 ? null :\r\n            <Typography\r\n                component=\"div\"\r\n                role=\"tabpanel\"\r\n                hidden={this.state.currentTabID !== 5}\r\n                id={`tab-panel-logs`}\r\n                aria-labelledby={`tab-panel-logs`}\r\n            >\r\n                <Container className={classes.tab} ><LogsView /></Container>\r\n            </Typography>}\r\n            { this.state.currentTabID !== 6 ? null :\r\n            <Typography\r\n                component=\"div\"\r\n                role=\"tabpanel\"\r\n                hidden={this.state.currentTabID !== 6}\r\n                id={`tab-panel-logs`}\r\n                aria-labelledby={`tab-panel-logs`}\r\n            >\r\n                <Container className={classes.tab} >\r\n                    <ChangePlansView\r\n                        token={this.props.token}\r\n                        privilege={this.props.privilege}\r\n                        username={this.props.username}\r\n                        updateChangePlan={this.updateChangePlan}\r\n                    />\r\n                </Container>\r\n            </Typography>}\r\n            </ErrorBoundry>\r\n        </div>);\r\n    }\r\n}\r\n\r\n\r\nexport default withStyles(useStyles)(TabViewer);\r\n","import React from \"react\";\r\n\r\nimport axios from 'axios';\r\n\r\nimport Login from \"./Login\";\r\nimport TabViewer from \"./Tabs\";\r\nimport getURL from './helpers/functions/GetURL';\r\nimport * as Constants from \"./Constants\";\r\n\r\nconst storedToken = 'token';\r\nconst storedPrivilege = 'privilege';\r\nconst storedLoggedIn = 'loggedIn';\r\nconst storedUsername = 'username';\r\n\r\nexport default class PageSelector extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\r\n\t\tthis.state = {\r\n\t\t\ttoken: sessionStorage.getItem(storedToken) || '',\r\n\t\t\tprivilege: sessionStorage.getItem(storedPrivilege) || '',\r\n\t\t\tloggedIn: sessionStorage.getItem(storedLoggedIn) || '',\r\n\t\t\tusername: sessionStorage.getItem(storedUsername) || '',\r\n\t\t};\r\n\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\r\n\t\taxios.defaults.headers.common['token'] = this.state.token;\r\n\t\taxios.defaults.headers.common['privilege'] = this.state.privilege;\r\n\t}\r\n\r\n\tlogin = (token, username, privilege) => {\r\n\t\tconsole.log(privilege);\r\n\t\tsessionStorage.setItem(storedToken, token);\r\n\t\tsessionStorage.setItem(storedPrivilege, JSON.stringify(privilege));\r\n\t\tsessionStorage.setItem(storedLoggedIn, true);\r\n\t\tsessionStorage.setItem(storedUsername, username);\r\n\r\n\t\taxios.defaults.headers.common['token'] = token;\r\n\t\taxios.defaults.headers.common['privilege'] = privilege;\r\n\r\n\t\tthis.setState({\r\n\t\t\ttoken: token,\r\n\t\t\tprivilege: privilege,\r\n\t\t\tloggedIn: true,\r\n\t\t\tusername: username,\r\n\t\t});\r\n\r\n\t\twindow.history.replaceState({}, \"Hyposoft Asset Management\", \"/\")\r\n\t}\r\n\r\n\tloginWithOAuth = (token, username, privilege) => {\r\n\r\n\t\tsessionStorage.setItem(storedToken, token);\r\n\t\tsessionStorage.setItem(storedPrivilege, privilege);\r\n\t\tsessionStorage.setItem(storedLoggedIn, true);\r\n\t\tsessionStorage.setItem(storedUsername, username);\r\n\r\n\t\taxios.defaults.headers.common['token'] = token;\r\n\t\taxios.defaults.headers.common['privilege'] = privilege;\r\n\r\n\t\tthis.setState({\r\n\t\t\ttoken: token,\r\n\t\t\tprivilege: privilege,\r\n\t\t\tloggedIn: true,\r\n\t\t\tusername: username,\r\n\t\t}, () => { window.history.replaceState({}, \"Hyposoft Asset Management\", \"/\") });\r\n\t}\r\n\r\n\tlogout = () => {\r\n\t\taxios.get(getURL('users/', 'logout'));\r\n\r\n\t\tthis.setState({\r\n\t\t\ttoken: '',\r\n\t\t\tprivilege: '',\r\n\t\t\tloggedIn: false,\r\n\t\t\tusername: '',\r\n\t\t});\r\n\r\n\t\tsessionStorage.removeItem(storedToken);\r\n\t\tsessionStorage.removeItem(storedPrivilege);\r\n\t\tsessionStorage.removeItem(storedLoggedIn);\r\n\t\tsessionStorage.removeItem(storedUsername);\r\n\r\n\t\twindow.history.replaceState({}, \"Hyposoft Asset Management\", \"/\")\r\n\t\tconsole.log(window.location.href);\r\n\t\tconsole.log(Constants.SHIB_REDIRECT_URI);\r\n\t\t//window.location = Constants.SHIB_REDIRECT_URI;\r\n\t}\r\n\r\n\trender() {\r\n\r\n\t\tvar privilege = \"\";\r\n\t\ttry {\r\n\t\t\tprivilege = JSON.parse(this.state.privilege);\r\n\t\t} catch {\r\n\t\t\tprivilege = this.state.privilege;\r\n\t\t}\r\n\t\tconsole.log(\"privilege: \");\r\n\t\tconsole.log(privilege);\r\n\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t{this.state.loggedIn ?\r\n\t\t\t\t\t<TabViewer\r\n\t\t\t\t\t\ttoken={this.state.token}\r\n\t\t\t\t\t\tusername={this.state.username}\r\n\t\t\t\t\t\tprivilege={privilege}\r\n\t\t\t\t\t\tlogout={this.logout}\r\n\t\t\t\t\t/> :\r\n\t\t\t\t\t<Login\r\n\t\t\t\t\t\tloginFunc={this.login}\r\n\t\t\t\t\t\tshib={this.props.redirected}\r\n\t\t\t\t\t\tloginFuncOAuth={this.loginWithOAuth}\r\n\t\t\t\t\t/>}\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './stylesheets/index.css';\nimport PageSelector from './javascript/PageSelector';\n\nReactDOM.render(<PageSelector redirected={document.referrer}/>, document.getElementById('root'));\n"],"sourceRoot":""}
