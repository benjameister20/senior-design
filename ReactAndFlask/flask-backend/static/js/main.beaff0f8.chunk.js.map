{"version":3,"sources":["images/logo.png","javascript/Constants.jsx","javascript/enums/privilegeTypes.ts","javascript/helpers/functions/GetURL.jsx","javascript/models/enums/ModelCommands.ts","javascript/models/enums/ModelInputs.ts","javascript/helpers/StatusDisplay.jsx","javascript/errors/ErrorBoundry.jsx","javascript/ShibLogin.jsx","javascript/Login.jsx","javascript/models/helpers/ButtonsModel.jsx","javascript/models/helpers/FilterModel.jsx","javascript/models/helpers/DetailModel.jsx","javascript/models/helpers/CreateModel.jsx","javascript/users/enums/UserCommands.ts","javascript/users/enums/UserInputs.ts","javascript/helpers/UploadModal.jsx","javascript/helpers/TableView.jsx","javascript/models/ModelConstants.jsx","javascript/models/pages/ModelsView.jsx","javascript/assets/enums/AssetCommands.ts","javascript/users/helpers/FilterUser.jsx","javascript/users/helpers/DetailUser.jsx","javascript/users/helpers/CreateUser.jsx","javascript/users/UserConstants.jsx","javascript/users/pages/UsersView.jsx","javascript/assets/AssetConstants.jsx","javascript/assets/enums/AssetInputs.ts","javascript/assets/helpers/ImpExpAsset.jsx","javascript/assets/helpers/functions/StringToMacAddress.jsx","javascript/assets/helpers/CreateAsset.jsx","javascript/assets/helpers/functions/StringToRack.jsx","javascript/assets/helpers/NetworkGraph.jsx","javascript/assets/helpers/DetailsAsset.jsx","javascript/assets/helpers/FilterAsset.jsx","javascript/helpers/functions/DescendingComparator.jsx","javascript/assets/helpers/TableAssets.jsx","javascript/racks/enums/RackCommands.ts","javascript/helpers/functions/GetComparator.jsx","javascript/helpers/functions/StableSort.jsx","javascript/assets/pages/AssetsView.jsx","javascript/statistics/enums/StatsCommands.ts","javascript/racks/pages/RacksView.jsx","javascript/helpers/functions/JSONtoArr.jsx","javascript/statistics/pages/StatisticsView.jsx","javascript/logs/enums/LogCommands.ts","javascript/logs/pages/LogsView.jsx","javascript/Tabs.jsx","javascript/PageSelector.jsx","index.jsx"],"names":["module","exports","serverEndpoint","RackX","ASSETS_MAIN_PATH","MODELS_MAIN_PATH","USERS_MAIN_PATH","DATACENTERS_MAIN_PATH","LOGS_MAIN_PATH","CLIENT_ID","SHIB_REDIRECT_URI","window","location","href","Privilege","SHIBBOLETH_LOGIN","encodeURIComponent","HTTPS_STATUS_OK","getURL","path","endpoint","Constants","ModelCommand","ModelInput","StatusDisplay","props","state","Snackbar","open","this","autoHideDuration","onClose","closeStatus","elevation","variant","severity","message","IconButton","aria-label","color","size","onClick","fontSize","React","Component","ErrorBoundary","hasError","error","errorInfo","children","ShibLogin","username","password","statusMessage","showStatus","statusSeverity","Grid","container","spacing","direction","justify","alignItems","onKeyDown","e","onKeyPressed","style","item","xs","src","logo","alt","height","Card","minWidth","CardContent","Typography","fontWeight","gutterBottom","closeShowStatus","loginMainPath","queryString","require","Login","getDukeCredentials","token","axios","get","headers","then","response","console","log","post","data","netid","mail","displayName","status","setState","initialized","oauth","loginFuncOAuth","loginWithOAuth","bind","submitCredentials","shib","params","parse","hash","substring","access_token","loginFunc","event","target","value","key","preventDefault","stopPropagation","TextField","id","label","required","ref","onChange","updateUsername","type","updatePassword","Button","direciton","width","ButtonsModel","startIcon","openImportModal","downloadTable","FilterModel","filters","hasOwnProperty","forceUpdate","search","map","filter","index","InputBase","placeholder","inputProps","updateSearchText","createInputs","name","inputs","DetailModel","updateColor","updateModelColorDetails","hex","showConfirmationBox","closeModal","confirmDelete","deleteItem","delete","showDetailedView","ExpansionPanel","ExpansionPanelSummary","expandIcon","ExpansionPanelDetails","statusOpen","statusClose","loading","CircularProgress","Autocomplete","options","includeInputInList","freeSolo","defaultValue","defaultValues","vendor","renderInput","updateModelCreator","onBlur","fullWidth","disabled","modelNumber","powerPorts","cpu","memory","storage","comments","edit","UserCommand","UserInput","CreateModel","updateModelColor","createModel","UploadModal","Modal","top","left","transform","background","aria-labelledby","aria-describedby","showImportModal","closeImportModal","accept","chooseFile","uploadFile","textDescription","TableView","TableContainer","component","Paper","Table","className","TableHead","TableRow","columns","col","TableCell","TableBody","vals","row","keys","scope","GENERAL_MODEL_ERROR","modelsMainPath","ModelsView","create","createdModel","Vendor","model_number","Height","display_color","ethernet_ports","power_ports","CPU","Memory","Storage","Comment","showCreateModal","getVendorList","searchModels","createStatusOpen","createStatusMessage","createStatusSeverity","catch","ModelConstants","editModel","originalVendor","originalModelNumber","originalHeight","detailedValues","detailStatusOpen","detailStatusMessage","detailStatusSeverity","deleteModel","detailViewModel","modelNum","detailView","detailViewLoading","viewVendor","viewModel","searchVendor","searchModelNum","searchHeight","items","searchText","VENDOR_VALUES","vendorsList","results","madeVendorQuery","sendUploadedFile","UPLOAD_FILE","summary","EXPORT_FILE","csvData","csvLink","link","click","openCreateModal","closeCreateModal","closeDetailedView","updateModelEdited","reason","createStatusClose","detailStatusClose","FormData","append","importedFile","files","createdVendor","createdModelNum","createdHeight","createdDispClr","createdEthPorts","createdPwrPorts","createdCPU","createdMem","createdStorage","createdComments","deleteVendor","defaults","common","privilege","ADMIN","filename","r","useAutocomplete","USER","AssetCommand","Filters","DetailedView","input","CreateModal","class","GENERAL_USER_ERROR","usersMainPath","UsersView","createUser","createdUser","Username","Password","display_name","Email","searchUsers","UserConstants","editUser","originalUsername","deleteUser","deleteUsername","detailViewUser","viewUser","searchUsernm","searchEml","searchDspNm","searchPriv","updateUserCreator","updateUserEdited","createStatus","AssetInput","SUCCESS_TOKEN","ERROR_TOKEN","ImpExpAsset","AssetConstants","showImport","classes","modal","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","timeout","Fade","in","paper","button","withStyles","theme","display","justifyContent","backgroundColor","palette","border","boxShadow","shadows","padding","margin","stringToMac","val","returnVal","replace","toLowerCase","length","showTooltip","description","emptySearch","searchPath","right","CreateAsset","getLists","getModelList","getOwnerList","getDatacenterList","getNextAssetNum","getAssetList","models","modelNames","networkNames","powerPortNames","model","modelKey","push","parseInt","loadingModels","modelList","networkList","powerPortList","availableNetworkConnections","users","user","loadingOwners","ownerList","datacenters","datacenter","loadingDatacenters","datacenterList","GET_NEXT_ASSET_NUM","loadingAssetNumber","asset_number","instances","assetNums","assetNumToModel","instance","loadingHostnames","assetNumList","assetNumToModelList","validJSON","json","valid","owner","datacenter_name","rack","rack_position","Object","entries","network_connections","validConnection","undefined","connection_hostname","connection_port","createAsset","createJSON","showModal","hostname","rackU","comment","tags","power_connections","updateModel","validateForm","updateHostname","updateRack","rackVal","result","toUpperCase","stringToRack","updateRackU","updateOwner","updateComment","updateDatacenter","updateTags","changeNetworkMacAddress","port","prevState","assign","mac_address","changeNetworkHostname","changeNetworkPort","updatePowerPort","changePowerPortState","portNum","leftRight","updateAssetNumber","getPowerConnections","pwrConns","num","availableNetworks","asset","networList","availableConnections","selectedConnection","powerPortState","canSubmit","MODEL","HOSTNAME","RACK","RACK_U","OWNER","COMMENT","DATACENTER","MAC_ADDRESS","NETWORK_CONNECTIONS","POWER_CONNECTIONS","ASSET_NUMBER","scroll","progress","Tooltip","placement","title","InputProps","min","max","assetNum","networkPort","macAddress","networkConnections","Array","from","_","k","FormControl","RadioGroup","FormControlLabel","control","Radio","labelPlacement","FormHelperText","multiline","root","flexGrow","maxWidth","overflow","marginLeft","getGraph","primaryHosts","host","hostnameMapping","nodes","edges","primaryHostID","primaryHost","secondaryHosts","to","secondaryHostID","secondaryHost","NetworkGraph","graph","layout","hierarchical","interaction","dragNodes","dragView","events","select","getNetwork","network","document","getElementById","DetailAsset","getDetailView","detailAsset","loadingDetailAsset","close","aria-controls","FilterAsset","hostnames","hostnamesList","datacenter_id","updateStartingLetter","startingLetter","updateEndingLetter","endingLetter","updateStartingNum","startingNum","updateEndingNum","endingNum","getSearchJSON","updateItems","Fragment","searchbar","hostnameList","Select","startingRackLetter","changeStartingLetter","MenuItem","endingRackLetter","changeEndingLetter","startingRackNumber","changeStartingNum","endingRackNumber","changeEndingNum","descendingComparator","a","b","orderBy","createData","RackCommand","headCells","numeric","align","testRows","TableAsset","editAsset","body","getAssetAsJSON","RACK_ORIGINAL","originalRack","RACK_U_ORIGINAL","originalrack_position","deleteAsset","getAssetDetails","createSortHandler","property","isAsc","order","openDetailedView","detailHostname","tableItems","deleteAssetRack","deleteAssetrack_position","assets","table","styledTableRow","headCell","tableCellHead","sortDirection","TableSortLabel","active","visuallyHidden","array","comparator","stabilizedThis","el","sort","stableSort","labelId","hover","tabIndex","primary","light","white","styledTableCell","marginBottom","clip","position","AssetsView","StatsCommand","racksMainPath","RacksView","getAllRacks","GET_ALL_RACKS","racksList","racks","createRacks","updateRacks","CREATE_RACKS","deleteRacks","DELETE_RACKS","viewRacks","GET_RACK_DETAILS","command","win","focus","heading","typography","pxToRem","fontWeightRegular","jsonToArr","incomingJSON","JSON","constructor","LogCommand","tables","tableCols","StatisticsView","tableValues","totalUsage","spaceUsage","vendorUsage","modelUsage","ownerUsage","generateReport","GENERATE_REPORT","totalUsageRow","JSONtoArr","column","isNaN","typeKey","timestampKey","USER_KEY","ASSET_KEY","LogsView","getLogs","GET_LOGS","parseLog","logs","timestamp","makeTableData","logItems","filteredLogs","allLogs","filterByUser","filterUser","filteredItems","entry","includes","filterByAsset","filterAsset","updateFilterUser","updateFilterAsset","logItem","aligh","TabViewer","handleProfileMenuOpen","anchorEl","currentTarget","isMenuOpen","handleMenuClose","currentTabID","handleChange","newValue","AppBar","Toolbar","aria-haspopup","Menu","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","logout","Tabs","indicatorColor","textColor","centered","Tab","role","Container","tab","hidden","menuButton","marginRight","storedToken","storedPrivilege","storedLoggedIn","storedUsername","PageSelector","login","sessionStorage","setItem","loggedIn","history","replaceState","removeItem","getItem","redirected","ReactDOM","render","referrer"],"mappings":"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","file":"static/js/main.beaff0f8.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.df79d0ea.png\";","/**\r\n * Constants file\r\n */\r\n\r\nexport const localServerEndpoint = 'http://localhost:4010/';\r\nexport const testServerEndpoint = 'https://parseltongue-finishinge-lfw68m.herokuapp.com/';\r\nexport const devServerEndpoint = 'https://parseltongue-dev.herokuapp.com/';\r\nexport const prodServerEndpoint = 'https://parseltongue-prod.herokuapp.com/';\r\n\r\nexport const serverEndpoint = localServerEndpoint;\r\n\r\n\r\nexport const RackX = [\r\n    'A', 'B', 'C', 'D', 'E',\r\n    'F', 'G', 'H', 'I', 'J',\r\n    'K', 'L', 'M', 'N', 'O',\r\n    'P', 'Q', 'R', 'S', 'T',\r\n    'W', 'X', 'Y', 'Z',\r\n]\r\n\r\nexport const ASSETS_MAIN_PATH = 'instances/';\r\nexport const MODELS_MAIN_PATH = \"models/\";\r\nexport const USERS_MAIN_PATH = \"users/\";\r\nexport const RACKS_MAIN_PATH = \"racks/\";\r\nexport const DATACENTERS_MAIN_PATH = \"datacenters/\";\r\nexport const LOGS_MAIN_PATH = \"logs/\"\r\n\r\nexport const CLIENT_ID = \"ParselTonguesUserAuth\";\r\nexport const CLIENT_SECRET = \"LpUwB*eiK4Iw#1gaCu5jYp1u5uRF3ERsdmuNUGoKYNzn7rHm7b\";\r\nexport const SCOPE = \"basic\";\r\n\r\nexport var SHIB_REDIRECT_URI = \"\";\r\n\r\nif (window.location.href === \"http://localhost:3000\" || window.location.href === \"http://localhost:3000/\") {\r\n    SHIB_REDIRECT_URI = window.location.href;\r\n} else {\r\n    SHIB_REDIRECT_URI = serverEndpoint;\r\n}\r\n\r\nexport const SHIBBOLETH_LOGIN =\r\n    \"https://oauth.oit.duke.edu/oauth/authorize.php?\"\r\n     + \"client_id=\" + encodeURIComponent(CLIENT_ID)\r\n     + \"&client_secret=\" + encodeURIComponent(CLIENT_SECRET)\r\n     + \"&redirect_uri=\" + encodeURIComponent(SHIB_REDIRECT_URI)\r\n     + \"&response_type=token\"\r\n     + \"&state=1129\"\r\n     + \"&scope=\" + encodeURIComponent(SCOPE);\r\n\r\nexport const HTTPS_STATUS_OK = 200;\r\n","export enum Privilege  {\r\n    ADMIN = \"admin\",\r\n    USER = \"user\",\r\n};\r\n","import * as Constants from '../../Constants';\r\n\r\nexport default function getURL(path, endpoint) {\r\n    return Constants.serverEndpoint + path + endpoint;\r\n}\r\n","export enum ModelCommand {\r\n    create = 'create/',\r\n    delete = 'delete/',\r\n    edit = 'edit/',\r\n    view = 'view/',\r\n    detailView = 'detailView/',\r\n    search = 'search/',\r\n    VENDOR_VALUES = 'assistedvendor/',\r\n    UPLOAD_FILE = 'import/',\r\n    EXPORT_FILE = 'export/'\r\n}\r\n","export enum ModelInput {\r\n    Vendor = 'vendor',\r\n    model_number = 'model_number',\r\n    Height = 'height',\r\n    display_color = 'display_color',\r\n    ethernet_ports = 'ethernet_ports',\r\n    power_ports = 'power_ports',\r\n    CPU = 'cpu',\r\n    Memory = 'memory',\r\n    Storage = 'storage',\r\n    Comment = 'comment'\r\n}\r\n","import React from 'react';\r\n\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\n\r\n\r\nexport default class StatusDisplay extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n\r\n        };\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Snackbar open={this.props.open} autoHideDuration={12000} onClose={this.props.closeStatus}>\r\n                    <MuiAlert elevation={6} variant=\"filled\"\r\n                        severity={this.props.severity}\r\n                    >\r\n                        <div>\r\n                        {this.props.message}\r\n                        <IconButton\r\n                            aria-label=\"close\"\r\n                            color=\"inherit\"\r\n                            size=\"small\"\r\n                            onClick={this.props.closeStatus}\r\n                        >\r\n                            <CloseIcon fontSize=\"inherit\" />\r\n                        </IconButton>\r\n                        </div>\r\n                    </MuiAlert >\r\n                </Snackbar>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\r\n\r\nexport default class ErrorBoundary extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = { hasError: false };\r\n    }\r\n\r\n    static getDerivedStateFromError(error) {\r\n      // Update state so the next render will show the fallback UI.\r\n      return \"An unforseen error occurred. Please refresh the page and try again later.\";\r\n    }\r\n\r\n    componentDidCatch(error, errorInfo) {\r\n      // You can also log the error to an error reporting service\r\n      //logErrorToMyService(error, errorInfo);\r\n    }\r\n\r\n    render() {\r\n      if (this.state.hasError) {\r\n        // You can render any custom fallback UI\r\n        return <h1>Something went wrong.</h1>;\r\n      }\r\n\r\n      return this.props.children;\r\n    }\r\n}\r\n","import React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport StatusDisplay from './helpers/StatusDisplay';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport logo from '../images/logo.png';\r\n\r\n\r\n\r\nexport default class ShibLogin extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            username:'',\r\n            password:'',\r\n            statusMessage:'',\r\n            showStatus:false,\r\n            statusSeverity:'info',\r\n        };\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Grid\r\n                container\r\n                spacing={5}\r\n                direction=\"column\"\r\n                justify=\"flex-start\"\r\n                alignItems=\"center\"\r\n                onKeyDown={(e) => this.onKeyPressed(e)}\r\n                style={{\r\n                    \"minHeight\": \"102vh\",\r\n                    \"background\": \"linear-gradient(to top, #a8e063, #56ab2f)\",\r\n                }}\r\n            >\r\n                <Grid item xs={12}>\r\n                    <img src={logo} alt=\"\" style={{height: \"200px\", \"marginTop\": \"50px\"}} />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <Card\r\n                        style={\r\n                            {\r\n                                minWidth: '20vw',\r\n                            }\r\n                        }\r\n                    >\r\n                        <CardContent>\r\n                            <Grid\r\n                                container\r\n                                spacing={1}\r\n                                direction=\"column\"\r\n                                justify=\"center\"\r\n                                alignItems=\"center\"\r\n                            >\r\n                                <Grid container item alignItems=\"flex-start\" xs={12}>\r\n                                    <Typography\r\n                                        variant=\"h6\"\r\n                                        color=\"textPrimary\"\r\n                                        fontWeight=\"fontWeightBold\"\r\n                                        gutterBottom\r\n                                    >\r\n                                        Please wait while we log you in...\r\n                                    </Typography>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </CardContent>\r\n                    </Card>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <StatusDisplay\r\n                        open={this.state.showStatus}\r\n                        severity={this.state.statusSeverity}\r\n                        closeStatus={this.closeShowStatus}\r\n                        message={this.state.statusMessage}\r\n                    />\r\n                </Grid>\r\n            </Grid>\r\n\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport axios from 'axios';\r\nimport getURL from './helpers/functions/GetURL';\r\nimport { Privilege } from './enums/privilegeTypes.ts'\r\nimport StatusDisplay from './helpers/StatusDisplay';\r\nimport ErrorBoundary from './errors/ErrorBoundry';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport logo from '../images/logo.png';\r\nimport ShibLogin from './ShibLogin';\r\nimport * as Constants from \"./Constants\";\r\n\r\nconst loginMainPath = 'users/';\r\nconst queryString = require('query-string');\r\n\r\nexport default class Login extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            username:'',\r\n            password:'',\r\n            statusMessage:'',\r\n            showStatus:false,\r\n            statusSeverity:'info',\r\n            initialized:false,\r\n            oauth:false,\r\n        };\r\n\r\n        this.closeShowStatus = this.closeShowStatus.bind(this);\r\n        this.submitCredentials = this.submitCredentials.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        console.log(this.props.shib);\r\n        try {\r\n            var params = queryString.parse(window.location.hash.substring(1));\r\n            if (params.access_token != null) {\r\n                this.getDukeCredentials(params.access_token);\r\n                this.setState({ oauth: true });\r\n            }\r\n\r\n            console.log(params);\r\n        } catch(e) {\r\n            console.log(\"tried:\")\r\n        }\r\n        this.setState({ initialized: true });\r\n    }\r\n\r\n    submitCredentials() {\r\n        axios.post(\r\n            getURL(loginMainPath, 'authenticate'),\r\n            {\r\n                \"username\":this.state.username,\r\n                \"password\":this.state.password,\r\n            }\r\n            ).then(response => {\r\n                var valid = response.data['message'];\r\n                if (valid === 'success') {\r\n                    this.setState({ message: '' });\r\n                    this.props.loginFunc(response.data['token'], this.state.username, response.data['privilege']);\r\n                } else {\r\n                    this.setState({ showStatus:true, statusMessage:response.data['message'] });\r\n                }\r\n            });\r\n        //this.props.loginFunc('token', \"Administrator\", Privilege.ADMIN);\r\n    }\r\n\r\n    updateUsername(event) {\r\n        this.setState({ username: event.target.value })\r\n    }\r\n\r\n    updatePassword(event) {\r\n        this.setState({ password: event.target.value })\r\n    }\r\n\r\n    closeShowStatus() {\r\n        this.setState({ showStatus: false })\r\n    }\r\n\r\n    onKeyPressed(event) {\r\n        console.log(\"key down\");\r\n        if (event.key === 'Enter') {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n            this.submitCredentials();\r\n        }\r\n    }\r\n\r\n    getDukeCredentials = (token) => {\r\n        axios.get('https://api.colab.duke.edu/identity/v1/', {\r\n            headers: {\r\n                'x-api-key': Constants.CLIENT_ID,\r\n                'Authorization': `Bearer ${token}`\r\n            }\r\n        }).then(response => {\r\n            console.log(response);\r\n            axios.post(\r\n                getURL(loginMainPath, 'oauth'),\r\n                {\r\n                    \"username\":response.data.netid,\r\n                    \"email\":response.data.mail,\r\n                    \"display_name\":response.data.displayName,\r\n                    \"client_id\":Constants.CLIENT_ID,\r\n                    \"token\":token,\r\n                }\r\n                ).then(response => {\r\n                    console.log(\"response:\")\r\n                    console.log(response);\r\n                    var valid = response.data['message'];\r\n                    if (response.status === Constants.HTTPS_STATUS_OK) {\r\n                        this.setState({\r\n                            username:'',\r\n                            password:'',\r\n                            statusMessage:'',\r\n                            showStatus:false,\r\n                            statusSeverity:'info',\r\n                            initialized:false,\r\n                            oauth:false,\r\n                         });\r\n                        this.props.loginFuncOAuth(response.data['token'], response.data.username, response.data['privilege']);\r\n                    } else {\r\n                        this.setState({ showStatus:true, statusMessage:response.data['message'] });\r\n                    }\r\n            });\r\n        });\r\n    }\r\n\r\n    loginWithOAuth = () => {\r\n        window.location = Constants.SHIBBOLETH_LOGIN;\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <ErrorBoundary>\r\n            { (this.state.oauth) ? <ShibLogin />:\r\n            <Grid\r\n                container\r\n                spacing={5}\r\n                direction=\"column\"\r\n                justify=\"flex-start\"\r\n                alignItems=\"center\"\r\n                onKeyDown={(e) => this.onKeyPressed(e)}\r\n                style={{\r\n                    \"minHeight\": \"102vh\",\r\n                    \"background\": \"linear-gradient(to top, #a8e063, #56ab2f)\",\r\n                }}\r\n            >\r\n                <Grid item xs={12}>\r\n                    <img src={logo} alt=\"\" style={{height: \"200px\", \"marginTop\": \"50px\"}} />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <Card\r\n                        style={\r\n                            {\r\n                                minWidth: '20vw',\r\n                            }\r\n                        }\r\n                    >\r\n                        <CardContent>\r\n                            <Grid\r\n                                container\r\n                                spacing={1}\r\n                                direction=\"column\"\r\n                                justify=\"center\"\r\n                                alignItems=\"center\"\r\n                            >\r\n                                <Grid container item alignItems=\"flex-start\" xs={12}>\r\n                                    <Typography\r\n                                        variant=\"h4\"\r\n                                        color=\"textPrimary\"\r\n                                        fontWeight=\"fontWeightBold\"\r\n                                        gutterBottom\r\n                                    >\r\n                                        Login\r\n                                    </Typography>\r\n                                </Grid>\r\n                                <Grid item xs={12}>\r\n                                    <TextField\r\n                                        id=\"username-input\"\r\n                                        label=\"Username\"\r\n                                        variant=\"outlined\"\r\n                                        required={true}\r\n                                        ref='username'\r\n                                        onChange={this.updateUsername.bind(this)}\r\n                                        style={{minWidth: \"15vw\"}}\r\n                                    />\r\n                                </Grid>\r\n                                <Grid item xs={12}>\r\n                                    <TextField\r\n                                        id=\"password-input\"\r\n                                        label=\"Password\"\r\n                                        variant=\"outlined\"\r\n                                        required={true}\r\n                                        ref='password'\r\n                                        type=\"password\"\r\n                                        onChange={this.updatePassword.bind(this)}\r\n                                        style={{minWidth: \"15vw\"}}\r\n                                    />\r\n                                </Grid>\r\n                                <Grid item xs={12}>\r\n                                    <Button\r\n                                        onClick={this.submitCredentials}\r\n                                        variant=\"contained\"\r\n                                        color=\"primary\"\r\n                                        style={{minWidth: \"15vw\"}}\r\n                                    >\r\n                                        Sign In\r\n                                    </Button>\r\n                                </Grid>\r\n                                <Grid container item direciton=\"row\" justify=\"center\" alignItems=\"center\" xs={12}>\r\n                                        <hr style={{width: \"5vw\"}} />\r\n                                        <Typography color=\"textSecondary\">\r\n                                            Or\r\n                                        </Typography>\r\n                                        <hr style={{width: \"5vw\"}} />\r\n                                </Grid>\r\n                                <Grid item xs={12}>\r\n                                    <Button\r\n                                        onClick={this.loginWithOAuth}\r\n                                        variant=\"contained\"\r\n                                        color=\"primary\"\r\n                                    >\r\n                                        Sign In with NetID\r\n                                    </Button>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </CardContent>\r\n                    </Card>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <StatusDisplay\r\n                        open={this.state.showStatus}\r\n                        severity={this.state.statusSeverity}\r\n                        closeStatus={this.closeShowStatus}\r\n                        message={this.state.statusMessage}\r\n                    />\r\n                </Grid>\r\n            </Grid>\r\n            }\r\n            </ErrorBoundary>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\r\nimport CloudDownloadIcon from '@material-ui/icons/CloudDownload';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nexport default class ButtonsModel extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n\r\n        };\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div>\r\n                <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    startIcon={<CloudUploadIcon />}\r\n                    onClick={this.props.openImportModal}\r\n                >\r\n                    Import\r\n                </Button>\r\n                <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    startIcon={<CloudDownloadIcon />}\r\n                    onClick={this.props.downloadTable}\r\n                >\r\n                    Export\r\n                </Button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nexport default class FilterModel extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            filters:{},\r\n        };\r\n    }\r\n\r\n    updateSearchText(event) {\r\n        if (this.state.filters.hasOwnProperty(event.target.id)) {\r\n            this.state.filters[event.target.id] = event.target.value;\r\n            this.forceUpdate();\r\n        } else {\r\n            this.state.filters[event.target.id] = event.target.value;\r\n            this.forceUpdate();\r\n        }\r\n    }\r\n\r\n    search() {\r\n        this.props.search(this.state.filters);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.props.filters.map((filter, index) => (\r\n                    <div>\r\n                        <SearchIcon />\r\n                        <InputBase\r\n                            placeholder={filter+\" filter\"}\r\n                            inputProps={{ 'aria-label': 'search' }}\r\n                            onChange={this.updateSearchText.bind(this)}\r\n                            id={filter}\r\n                        />\r\n                    </div>\r\n                ))\r\n                }\r\n                <div>\r\n                    <Button\r\n                        onClick={this.search.bind(this)}\r\n                    >\r\n                        Search\r\n                    </Button>\r\n                </div>\r\n                Click the search button to populate table. Searching with empty filters searches over all values. Click on row values to see detailed view.\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from '@material-ui/core/Button';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\r\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\r\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport { CompactPicker } from 'react-color';\r\nimport StatusDisplay from '../../helpers/StatusDisplay';\r\n\r\nfunction createInputs(name, label) {\r\n    return {label, name};\r\n}\r\n\r\nconst inputs = {\r\n    \"vendor\":createInputs('vendor', \"Vendor\", ),\r\n    \"modelNumber\":createInputs('model_number', \"Model Number\"),\r\n    \"height\":createInputs('height', \"Height\"),\r\n    \"displayColor\":createInputs('display_color', \"Display Color\"),\r\n    \"powerPorts\":createInputs('power_ports', \"Power Ports\"),\r\n    \"cpu\":createInputs('cpu', \"CPU\"),\r\n    \"memory\":createInputs('memory', \"Memory\"),\r\n    \"storage\":createInputs('storage', \"Storage\"),\r\n    \"comments\":createInputs('comments', \"Comments\"),\r\n}\r\n\r\nexport default class DetailModel extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            showConfirmationBox:false,\r\n            color:null,\r\n        };\r\n\r\n        this.closeModal = this.closeModal.bind(this);\r\n        this.confirmDelete = this.confirmDelete.bind(this);\r\n        this.deleteItem = this.deleteItem.bind(this);\r\n    }\r\n\r\n    confirmDelete() {\r\n        this.setState({ showConfirmationBox: true });\r\n    }\r\n\r\n    closeModal() {\r\n        this.setState({showConfirmationBox:false,});\r\n    }\r\n\r\n    deleteItem() {\r\n        this.setState({ showConfirmationBox: false });\r\n        this.props.delete();\r\n    }\r\n\r\n    updateColor = (color) => {\r\n        this.setState({ color: color });\r\n        this.props.updateModelColorDetails(color.hex);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n        <div>\r\n            {!this.props.showDetailedView ? null:\r\n            <ExpansionPanel >\r\n                    <ExpansionPanelSummary\r\n                        expandIcon={<ExpandMoreIcon />}\r\n                    >\r\n                        <Typography>Model Details</Typography>\r\n                    </ExpansionPanelSummary>\r\n                    <ExpansionPanelDetails>\r\n                        <StatusDisplay\r\n                            open={this.props.statusOpen}\r\n                            severity={this.props.statusSeverity}\r\n                            closeStatus={this.props.statusClose}\r\n                            message={this.props.statusMessage}\r\n                            autoHideDuration={6000}\r\n                        />\r\n                    {\r\n                this.props.loading ? <CircularProgress /> :\r\n                <div>\r\n                    <Autocomplete\r\n                            id=\"select-vendor\"\r\n                            options={this.props.options}\r\n                            includeInputInList\r\n                            freeSolo\r\n                            defaultValue={this.props.defaultValues[inputs.vendor.name]}\r\n                            renderInput={params => (\r\n                            <TextField {...params}\r\n                                label={inputs.vendor.label}\r\n                                name={inputs.vendor.name}\r\n                                onChange={this.props.updateModelCreator}\r\n                                onBlur={this.props.updateModelCreator}\r\n                                variant=\"outlined\" fullWidth\r\n                                disabled={this.props.disabled}\r\n                            />\r\n                            )}\r\n                        />\r\n                        <TextField id=\"standard-basic\" variant=\"outlined\"\r\n                            label={inputs.modelNumber.label} name={inputs.modelNumber.name}\r\n                            onChange={this.props.updateModelCreator}\r\n                            disabled={this.props.disabled}\r\n                            defaultValue={this.props.defaultValues[inputs.modelNumber.name]}\r\n                        />\r\n                        <TextField id=\"standard-basic\" variant=\"outlined\"\r\n                            label={inputs.height.label} name={inputs.height.name}\r\n                            onChange={this.props.updateModelCreator}\r\n                            disabled={this.props.disabled}\r\n                            defaultValue={this.props.defaultValues[inputs.height.name]}\r\n                        />\r\n                        <CompactPicker\r\n                            color={this.state.color || this.props.defaultValues[\"display_color\"]}\r\n                            onChange={this.updateColor}\r\n\r\n                        />\r\n                        <TextField id=\"standard-basic\" variant=\"outlined\"\r\n                            label={inputs.powerPorts.label} name={inputs.powerPorts.name}\r\n                            onChange={this.props.updateModelCreator}\r\n                            disabled={this.props.disabled}\r\n                            defaultValue={this.props.defaultValues[inputs.powerPorts.name]}\r\n                        />\r\n                        <TextField id=\"standard-basic\" variant=\"outlined\"\r\n                            label={inputs.cpu.label} name={inputs.cpu.name}\r\n                            onChange={this.props.updateModelCreator}\r\n                            disabled={this.props.disabled}\r\n                            defaultValue={this.props.defaultValues[inputs.cpu.name]}\r\n                        />\r\n                        <TextField id=\"standard-basic\" variant=\"outlined\"\r\n                            label={inputs.memory.label} name={inputs.memory.name}\r\n                            onChange={this.props.updateModelCreator}\r\n                            disabled={this.props.disabled}\r\n                            defaultValue={this.props.defaultValues[inputs.memory.name]}\r\n                        />\r\n                        <TextField id=\"standard-basic\" variant=\"outlined\"\r\n                            label={inputs.storage.label} name={inputs.storage.name}\r\n                            onChange={this.props.updateModelCreator}\r\n                            disabled={this.props.disabled}\r\n                            defaultValue={this.props.defaultValues[inputs.storage.name]}\r\n                        />\r\n                        <TextField id=\"standard-basic\" variant=\"outlined\"\r\n                            label={inputs.comments.label} name={inputs.comments.name}\r\n                            onChange={this.props.updateModelCreator}\r\n                            disabled={this.props.disabled}\r\n                            defaultValue={this.props.defaultValues[inputs.comments.name]}\r\n                        />\r\n\r\n                    {this.props.disabled ? null:\r\n                    <div>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            onClick={this.props.edit}\r\n                            disabled={this.state.showConfirmationBox}\r\n                        >\r\n                            Save\r\n                        </Button>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            onClick={this.confirmDelete}\r\n                            disabled={this.state.showConfirmationBox}\r\n                        >\r\n                            Delete\r\n                        </Button>\r\n                    </div>}\r\n                    {this.state.showConfirmationBox ? <div>\r\n                        Are you sure you wish to delete?\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            onClick={this.deleteItem}\r\n                        >\r\n                            Yes\r\n                        </Button>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            onClick={this.closeModal}\r\n                        >\r\n                            No\r\n                        </Button>\r\n                    </div>:null}\r\n                </div>}\r\n                    </ExpansionPanelDetails>\r\n                </ExpansionPanel>}\r\n        </div>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\n\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from '@material-ui/core/Button';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\r\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\r\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport { CompactPicker } from 'react-color';\r\n\r\nimport '../stylesheets/ModelStyles.css';\r\nimport StatusDisplay from '../../helpers/StatusDisplay';\r\n\r\nfunction createInputs(name, label) {\r\n    return {label, name};\r\n}\r\n\r\nconst inputs = {\r\n    \"vendor\":createInputs('vendor', \"Vendor\", ),\r\n    \"modelNumber\":createInputs('model_number', \"Model Number\"),\r\n    \"height\":createInputs('height', \"Height\"),\r\n    \"displayColor\":createInputs('display_color', \"Display Color\"),\r\n    \"powerPorts\":createInputs('power_ports', \"Power Ports\"),\r\n    \"cpu\":createInputs('cpu', \"CPU\"),\r\n    \"memory\":createInputs('memory', \"Memory\"),\r\n    \"storage\":createInputs('storage', \"Storage\"),\r\n    \"comments\":createInputs('comments', \"Comments\"),\r\n}\r\n\r\nexport default class CreateModel extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            color:'#000',\r\n        };\r\n    }\r\n\r\n    updateColor = (color) => {\r\n        console.log(color);\r\n        this.setState({ color: color });\r\n        this.props.updateModelColor(color.hex);\r\n        console.log(\"state: \" + this.state.color);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n        <div>\r\n            <ExpansionPanel>\r\n                    <ExpansionPanelSummary\r\n                        expandIcon={<ExpandMoreIcon />}\r\n                    >\r\n                        <Typography>Create Model</Typography>\r\n                    </ExpansionPanelSummary>\r\n                    <ExpansionPanelDetails>\r\n                        <StatusDisplay\r\n                            open={this.props.statusOpen}\r\n                            severity={this.props.statusSeverity}\r\n                            closeStatus={this.props.statusClose}\r\n                            message={this.props.statusMessage}\r\n                        />\r\n                    <div>\r\n                        <Autocomplete\r\n                            id=\"select-vendor\"\r\n                            options={this.props.options}\r\n                            includeInputInList\r\n                            freeSolo\r\n                            renderInput={params => (\r\n                            <TextField {...params} label={inputs.vendor.label} name={inputs.vendor.name} onChange={this.props.updateModelCreator} onBlur={this.props.updateModelCreator} variant=\"outlined\" fullWidth />\r\n                            )}\r\n                        />\r\n                        <TextField id=\"standard-basic\" variant=\"outlined\" label={inputs.modelNumber.label} name={inputs.modelNumber.name} onChange={this.props.updateModelCreator}/>\r\n                        <TextField id=\"standard-basic\" variant=\"outlined\" label={inputs.height.label} name={inputs.height.name} onChange={this.props.updateModelCreator}/>\r\n                        <CompactPicker\r\n                            color={this.state.color}\r\n                            onChange={this.updateColor}\r\n\r\n                        />\r\n                        <TextField id=\"standard-basic\" variant=\"outlined\" label={inputs.powerPorts.label} name={inputs.powerPorts.name} onChange={this.props.updateModelCreator}/>\r\n                        <TextField id=\"standard-basic\" variant=\"outlined\" label={inputs.cpu.label} name={inputs.cpu.name} onChange={this.props.updateModelCreator}/>\r\n                        <TextField id=\"standard-basic\" variant=\"outlined\" label={inputs.memory.label} name={inputs.memory.name} onChange={this.props.updateModelCreator}/>\r\n                        <TextField id=\"standard-basic\" variant=\"outlined\" label={inputs.storage.label} name={inputs.storage.name} onChange={this.props.updateModelCreator}/>\r\n                        <TextField id=\"standard-basic\" variant=\"outlined\" label={inputs.comments.label} name={inputs.comments.name} onChange={this.props.updateModelCreator}/>\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        onClick={this.props.createModel}\r\n                    >\r\n                        Create\r\n                    </Button>\r\n                </div>\r\n                    </ExpansionPanelDetails>\r\n                </ExpansionPanel>\r\n        </div>\r\n        );\r\n    }\r\n}\r\n","export enum UserCommand {\r\n    create = 'create/',\r\n    delete = 'delete/',\r\n    edit = 'edit/',\r\n    view = 'view/',\r\n    detailView = 'detailView/',\r\n    search='search/',\r\n}\r\n","export enum UserInput {\r\n    Username='username',\r\n    Password='password',\r\n    Email='email',\r\n    display_name='display_name',\r\n    Privilege='privilege',\r\n}\r\n","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Modal from '@material-ui/core/Modal';\r\n\r\nexport default class UploadModal extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {};\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Modal\r\n                style={{top: `50%`,left: `50%`,transform: `translate(-50%, -50%)`, background:'#AAAAAA'}}\r\n                aria-labelledby=\"simple-modal-title\"\r\n                aria-describedby=\"simple-modal-description\"\r\n                open={this.props.showImportModal}\r\n                onClose={this.props.closeImportModal}\r\n            >\r\n                <div>\r\n                    <div>\r\n                    <input\r\n                        type='file'\r\n                        accept=\".csv\"\r\n                        onChange={this.props.chooseFile}\r\n                    />\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        onClick={this.props.uploadFile}\r\n                    >\r\n                        Upload\r\n                    </Button>\r\n                    </div>\r\n                    <p\r\n                        style={{color: `white`}}\r\n                    >\r\n                        {this.props.textDescription}\r\n                    </p>\r\n                </div>\r\n            </Modal>\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nexport default class TableView extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n\r\n    };\r\n  }\r\n\r\n  showDetailedView(event) {\r\n    this.props.showDetailedView(event.target.id);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <TableContainer component={Paper}>\r\n          <Table className={{minWidth: 650}} aria-label=\"simple table\">\r\n            <TableHead>\r\n              <TableRow >\r\n                {this.props.columns.map(col => (<TableCell><span id={col}>{col}</span></TableCell>))}\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {this.props.vals.map((row, index)=> (\r\n              <TableRow>\r\n                {this.props.keys.map(key => (<TableCell scope=\"row\"><span id={index} onClick={this.showDetailedView.bind(this)}>{row[key]}</span></TableCell>))}\r\n              </TableRow>\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","\r\n\r\n\r\nexport const GENERAL_MODEL_ERROR =  \"There was an error in the backend. Could not perform the given model operation at this time.\";\r\n","import React from 'react';\r\nimport axios from 'axios';\r\nimport { CSVLink } from \"react-csv\";\r\n\r\nimport { ModelCommand } from '../enums/ModelCommands.ts'\r\nimport { ModelInput } from '../enums/ModelInputs.ts'\r\n\r\nimport ButtonsModel from '../helpers/ButtonsModel';\r\nimport FilterModel from '../helpers/FilterModel';\r\nimport DetailModel from '../helpers/DetailModel';\r\nimport CreateModel from '../helpers/CreateModel';\r\n\r\nimport { Privilege } from '../../enums/privilegeTypes.ts'\r\n\r\nimport UploadModal from '../../helpers/UploadModal';\r\nimport getURL from '../../helpers/functions/GetURL';\r\nimport TableView from '../../helpers/TableView';\r\nimport StatusDisplay from '../../helpers/StatusDisplay';\r\n\r\nimport ErrorBoundray from '../../errors/ErrorBoundry';\r\nimport * as ModelConstants from \"../ModelConstants\";\r\n\r\nconst columns = [\r\n    'vendor',\r\n    'model_number',\r\n    'height',\r\n]\r\n\r\nconst modelsMainPath = 'models/';\r\nconst modelDownloadFileName = 'models.csv';\r\n\r\nexport default class ModelsView extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n\r\n            // modals\r\n            showCreateModal:false,\r\n            showImportModal:false,\r\n\r\n            // table items\r\n            items:[], //Constants.testModelArray,\r\n\r\n            // vals for creating a new model\r\n            createdModel : {\r\n                'vendor':'',\r\n                'model_number':'',\r\n                'height':'',\r\n                'display_color':'',\r\n                'ethernet_ports':'',\r\n                'power_ports':'',\r\n                'cpu':'',\r\n                'memory':'',\r\n                'storage':'',\r\n                'comment':'',\r\n            },\r\n            createdVendor:'',\r\n            createdModelNum:'',\r\n            createdHeight:'',\r\n            createdDispClr:'',\r\n            createdEthPorts:'',\r\n            createdPwrPorts:'',\r\n            createdCPU:'',\r\n            createdMem:'',\r\n            createdStorage:'',\r\n            createdComments:'',\r\n\r\n            // vals for deleting a model\r\n            deleteVendor:'',\r\n            deleteModel:'',\r\n\r\n            // vals for viewing a model\r\n            viewVendor:'',\r\n            viewModel:'',\r\n\r\n            // searching a model\r\n            searchText:\"\",\r\n            searchVendor:'',\r\n            searchModelNum:'',\r\n            searchHeight:'',\r\n\r\n            // csv data\r\n            csvData:'',\r\n            importedFile:null,\r\n\r\n            // detailed view\r\n            showDetailedView: false,\r\n            detailViewLoading:false,\r\n            detailedValues : {\r\n                'vendor':'',\r\n                'model_number':'',\r\n                'height':'',\r\n                'display_color':'',\r\n                'ethernet_ports':'',\r\n                'power_ports':'',\r\n                'cpu':'',\r\n                'memory':'',\r\n                'storage':'',\r\n                'comment':'',\r\n            },\r\n            originalVendor:'',\r\n            originalModelNumber:'',\r\n            originalHeight:'',\r\n\r\n            statusOpen:false,\r\n            statusSeverity:'',\r\n            statusMessage:'',\r\n            detailStatusOpen:false,\r\n            detailStatusSeverity:'',\r\n            detailStatusMessage:'',\r\n            createStatusOpen:false,\r\n            createStatusSeverity:'',\r\n            createStatusMessage:'',\r\n\r\n            vendorsList:[],\r\n            madeVendorQuery:false,\r\n\r\n        };\r\n\r\n        axios.defaults.headers.common['token'] = this.props.token;\r\n        axios.defaults.headers.common['privilege'] = this.props.privilege;\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.searchModels();\r\n        this.getVendorList();\r\n    }\r\n\r\n    createModel = () => {\r\n        axios.post(\r\n            getURL(modelsMainPath, ModelCommand.create),\r\n            {\r\n                'vendor':this.state.createdModel[ModelInput.Vendor],\r\n                'model_number':this.state.createdModel[ModelInput.model_number],\r\n                'height':this.state.createdModel[ModelInput.Height],\r\n                'display_color':this.state.createdModel[ModelInput.display_color],\r\n                'ethernet_ports':this.state.createdModel[ModelInput.ethernet_ports],\r\n                'power_ports':this.state.createdModel[ModelInput.power_ports],\r\n                'cpu':this.state.createdModel[ModelInput.CPU],\r\n                'memory':this.state.createdModel[ModelInput.Memory],\r\n                'storage':this.state.createdModel[ModelInput.Storage],\r\n                'comment':this.state.createdModel[ModelInput.Comment],\r\n                'ethernet_ports':[\"eth0\", \"eth1\", \"eth2\", \"eth3\"],\r\n            }\r\n            ).then(\r\n                response => {\r\n                    if (response.data.message === 'success') {\r\n                        this.setState({\r\n                            showStatus: true,\r\n                            statusMessage: \"Successfully created model\",\r\n                            statusSeverity:\"success\",\r\n                            createdModel : {\r\n                                'vendor':'',\r\n                                'model_number':'',\r\n                                'height':'',\r\n                                'display_color':'',\r\n                                'ethernet_ports':'',\r\n                                'power_ports':'',\r\n                                'cpu':'',\r\n                                'memory':'',\r\n                                'storage':'',\r\n                                'comment':'',\r\n                            },\r\n                            showCreateModal:false,\r\n                        });\r\n                        this.getVendorList();\r\n                        this.searchModels();\r\n                    } else {\r\n                        this.setState({ createStatusOpen: true, createStatusMessage: response.data.message, createStatusSeverity:\"error\" })\r\n                    }\r\n                }).catch(\r\n                    this.setState({ createStatusOpen: true, createStatusMessage: ModelConstants.GENERAL_MODEL_ERROR, createStatusSeverity:\"error\" })\r\n                );\r\n    }\r\n\r\n    editModel = () => {\r\n        axios.post(\r\n            getURL(modelsMainPath, ModelCommand.edit),\r\n            {\r\n                'vendorOriginal':this.state.originalVendor,\r\n                'model_numberOriginal':this.state.originalModelNumber,\r\n                'heightOriginal':this.state.originalHeight,\r\n\r\n                'vendor':this.state.detailedValues[ModelInput.Vendor],\r\n                'model_number':this.state.detailedValues[ModelInput.model_number],\r\n                'height':this.state.detailedValues[ModelInput.Height],\r\n                'display_color':this.state.detailedValues[ModelInput.display_color],\r\n                'ethernet_ports':this.state.detailedValues[ModelInput.ethernet_ports],\r\n                'power_ports':this.state.detailedValues[ModelInput.power_ports],\r\n                'cpu':this.state.detailedValues[ModelInput.CPU],\r\n                'memory':this.state.detailedValues[ModelInput.Memory],\r\n                'storage':this.state.detailedValues[ModelInput.Storage],\r\n                'comment':this.state.detailedValues[ModelInput.Comment],\r\n            }\r\n            ).then(\r\n                response => {\r\n                    if (response.data.message === 'success') {\r\n                        this.setState({\r\n                            showStatus: true,\r\n                            statusSeverity:'success',\r\n                            statusMessage: \"Successfully edited model\",\r\n                            originalVendor:'',\r\n                            originalModelNumber:'',\r\n                            originalHeight:'',\r\n                            detailedValues : {\r\n                                'vendor':'',\r\n                                'model_number':'',\r\n                                'height':'',\r\n                                'display_color':'',\r\n                                'ethernet_ports':'',\r\n                                'power_ports':'',\r\n                                'cpu':'',\r\n                                'memory':'',\r\n                                'storage':'',\r\n                                'comment':'',\r\n                            },\r\n                            showDetailedView:false\r\n                        });\r\n                        this.getVendorList();\r\n                        this.searchModels();\r\n                    } else {\r\n                        this.setState({ detailStatusOpen: true, detailStatusMessage: response.data.message, detailStatusSeverity:\"error\" })\r\n                    }\r\n                }).catch(\r\n                    this.setState({ detailStatusOpen: true, detailStatusMessage: ModelConstants.GENERAL_MODEL_ERROR, detailStatusSeverity:\"error\" })\r\n                );\r\n    }\r\n\r\n\r\n    deleteModel = () => {\r\n        axios.post(\r\n            getURL(modelsMainPath, ModelCommand.delete),\r\n            {\r\n                'vendor':this.state.originalVendor,\r\n                'model_number':this.state.originalModelNumber,\r\n            }\r\n            ).then(\r\n                response => {\r\n                    if (response.data.message === 'success') {\r\n                        this.setState({\r\n                            showStatus: true,\r\n                            statusSeverity:'success',\r\n                            statusMessage: \"Successfully deleted model\",\r\n                            detailedValues : {\r\n                                'vendor':'',\r\n                                'model_number':'',\r\n                                'height':'',\r\n                                'display_color':'',\r\n                                'ethernet_ports':'',\r\n                                'power_ports':'',\r\n                                'cpu':'',\r\n                                'memory':'',\r\n                                'storage':'',\r\n                                'comment':'',\r\n                            },\r\n                            showDetailedView:false\r\n                        });\r\n                        this.getVendorList();\r\n                        this.searchModels();\r\n                    } else {\r\n                        this.setState({ showStatus: true, statusMessage: response.data.message, statusSeverity:\"error\" })\r\n                    }\r\n                }).catch(\r\n                    this.setState({ showStatus: true, statusMessage: ModelConstants.GENERAL_MODEL_ERROR, statusSeverity:\"error\" })\r\n                );\r\n    }\r\n\r\n    detailViewModel = (vendor, modelNum) => {\r\n        axios.post(\r\n            getURL(modelsMainPath, ModelCommand.detailView),\r\n            {\r\n                'vendor':vendor,\r\n                'model_number':modelNum,\r\n            }\r\n            ).then(response => {\r\n                this.setState({ detailedValues: response.data['models'][0], detailViewLoading:false});\r\n            }\r\n            ).catch(function(error) {\r\n                console.log(error);\r\n                this.setState({ showStatus: true, statusMessage: ModelConstants.GENERAL_MODEL_ERROR, statusSeverity:\"error\" });\r\n            });\r\n\r\n        this.setState({\r\n            viewVendor:'',\r\n            viewModel:'',\r\n        });\r\n    }\r\n\r\n    searchModels = () => {\r\n        axios.post(\r\n            getURL(modelsMainPath, ModelCommand.search),\r\n            {\r\n                'filter':{\r\n                    'vendor':this.state.searchVendor,\r\n                    'model_number':this.state.searchModelNum,\r\n                    'height':this.state.searchHeight,\r\n                }\r\n            }\r\n            ).then(response => {\r\n                this.setState({ items: response.data['models'] })\r\n            });\r\n\r\n        this.setState({\r\n            searchText:'',\r\n        });\r\n    }\r\n\r\n    getVendorList = () => {\r\n        axios.get(\r\n            getURL(modelsMainPath, ModelCommand.VENDOR_VALUES), {}\r\n            ).then(response => this.setState({ vendorsList: response.data.results }));\r\n\r\n        this.setState({ madeVendorQuery: true });\r\n    }\r\n\r\n    sendUploadedFile = (data) => {\r\n        axios.post(\r\n            getURL(modelsMainPath, ModelCommand.UPLOAD_FILE), data\r\n            ).then(response => {\r\n                if (response.data.message === 'success') {\r\n                    this.setState({ showStatus: true, statusMessage: response.data.summary, statusSeverity:'success', showImportModal: false,})\r\n                    this.searchModels();\r\n                } else {\r\n                    this.setState({ showStatus: true, statusMessage: response.data.message, statusSeverity:\"error\" })\r\n                }\r\n            });\r\n    }\r\n\r\n    downloadTable = () => {\r\n        axios.post(\r\n            getURL(modelsMainPath, ModelCommand.EXPORT_FILE),\r\n            {\r\n                'filter':{\r\n                    'vendor':this.state.searchVendor,\r\n                    'model_number':this.state.searchModelNum,\r\n                    'height':this.state.searchHeight,\r\n                }\r\n            }\r\n            ).then(response => {\r\n                this.setState({ csvData: response.data.csvData });\r\n                this.csvLink.link.click();\r\n            });\r\n    }\r\n\r\n    search = (filters) => {\r\n        this.setState({ searchVendor:filters['vendor'], searchModelNum:filters['model_number'], searchHeight:filters['height']}, this.searchModels);\r\n    }\r\n\r\n    openCreateModal = () => {\r\n        this.setState({showCreateModal: true});\r\n    }\r\n\r\n    openImportModal = () => {\r\n        this.setState({showImportModal: true});\r\n    }\r\n\r\n    showDetailedView = (id) => {\r\n        this.setState({\r\n            showDetailedView: true,\r\n            detailViewLoading:true,\r\n\r\n            originalHeight:this.state.items[id]['height'],\r\n            originalModelNumber:this.state.items[id]['model_number'],\r\n            originalVendor:this.state.items[id]['vendor'],\r\n         });\r\n\r\n        var vendor = this.state.items[id]['vendor'];\r\n        var modelNum = this.state.items[id]['model_number'];\r\n\r\n        this.detailViewModel(vendor, modelNum);\r\n    }\r\n\r\n    closeCreateModal = () => {\r\n        this.setState({showCreateModal: false});\r\n    }\r\n\r\n    closeImportModal = () => {\r\n        this.setState({showImportModal: false});\r\n    }\r\n\r\n    closeDetailedView = () => {\r\n        this.setState({ showDetailedView: false })\r\n    }\r\n\r\n    updateModelCreator = (event) => {\r\n        this.state.createdModel[event.target.name] = event.target.value;\r\n        this.forceUpdate();\r\n    }\r\n\r\n    updateModelColor = (color) => {\r\n        console.log(\"updating color to \" + color);\r\n        this.state.createdModel['display_color'] = color;\r\n        this.forceUpdate();\r\n    }\r\n\r\n    updateModelColorDetails = (color) => {\r\n        console.log(\"updating color to \" + color);\r\n        this.state.detailedValues['display_color'] = color;\r\n        this.forceUpdate();\r\n    }\r\n\r\n    updateModelEdited = (event) => {\r\n        this.state.detailedValues[event.target.name] = event.target.value;\r\n        this.forceUpdate()\r\n    }\r\n\r\n    updateSearchText = (event) => {\r\n        this.setState({ searchText: event.target.value})\r\n    }\r\n\r\n    closeShowStatus = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n        this.setState({ showStatus: false })\r\n    }\r\n\r\n    createStatusClose = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n        this.setState({ createStatusOpen: false })\r\n    }\r\n\r\n    detailStatusClose = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n        this.setState({ detailStatusOpen: false })\r\n    }\r\n\r\n    uploadFile = () => {\r\n        const data = new FormData();\r\n        data.append('file', this.state.importedFile);\r\n        this.sendUploadedFile(data);\r\n    }\r\n\r\n    chooseFile = (event) => {\r\n        this.setState({ importedFile: event.target.files[0] })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <ErrorBoundray>\r\n                <StatusDisplay\r\n                    open={this.state.showStatus}\r\n                    severity={this.state.statusSeverity}\r\n                    closeStatus={this.closeShowStatus}\r\n                    message={this.state.statusMessage}\r\n                    autoHideDuration={6000}\r\n                />\r\n                {(this.props.privilege === Privilege.ADMIN) ?\r\n                    (<div><ButtonsModel\r\n                    openCreateModal={this.openCreateModal}\r\n                    openImportModal={this.openImportModal}\r\n                    downloadTable={this.downloadTable}\r\n                />\r\n                <CSVLink\r\n                    data={this.state.csvData}\r\n                    filename={modelDownloadFileName}\r\n                    className=\"hidden\"\r\n                    ref={(r) => this.csvLink = r}\r\n                    target=\"_blank\"\r\n                />\r\n                <CreateModel\r\n                    statusOpen={this.state.createStatusOpen}\r\n                    statusSeverity={this.state.createStatusSeverity}\r\n                    statusClose={this.createStatusClose}\r\n                    statusMessage={this.state.createStatusMessage}\r\n\r\n                    showCreateModal={this.state.showCreateModal}\r\n                    closeCreateModal={this.closeCreateModal}\r\n                    createModel={this.createModel}\r\n                    updateModelCreator={this.updateModelCreator}\r\n                    options={this.state.vendorsList}\r\n                    useAutocomplete={true}\r\n                    updateModelColor={this.updateModelColor}\r\n                />\r\n                <UploadModal\r\n                    showImportModal={this.state.showImportModal}\r\n                    closeImportModal={this.closeImportModal}\r\n                    uploadFile={this.uploadFile}\r\n                    chooseFile={this.chooseFile}\r\n                    textDescription=\"The following format should be used for each row: vendor,model_number,height,display_color,ethernet_ports,power_ports,cpu,memory,storage,comment\"\r\n                /></div>):null\r\n                }\r\n                <FilterModel\r\n                    updateSearchText={this.updateSearchText}\r\n                    search={this.search}\r\n                    filters={columns}\r\n                />\r\n                <TableView\r\n                    columns={columns}\r\n                    vals={this.state.items}\r\n                    keys={columns}\r\n                    showDetailedView={this.showDetailedView}\r\n                    filters={columns}\r\n                />\r\n                <DetailModel\r\n                    statusOpen={this.state.detailStatusOpen}\r\n                    statusSeverity={this.state.detailStatusSeverity}\r\n                    statusClose={this.detailStatusClose}\r\n                    statusMessage={this.state.detailStatusMessage}\r\n\r\n                    showDetailedView={this.state.showDetailedView}\r\n                    closeDetailedView={this.closeDetailedView}\r\n                    updateModelEdited={this.updateModelEdited}\r\n                    defaultValues={this.state.detailedValues}\r\n                    loading={this.state.detailViewLoading}\r\n                    edit={this.editModel}\r\n                    delete={this.deleteModel}\r\n                    disabled={this.props.privilege===Privilege.USER}\r\n                    options={this.state.vendorsList}\r\n                    useAutocomplete={true}\r\n                    updateModelColorDetails={this.updateModelColorDetails}\r\n                />\r\n            </ErrorBoundray>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","export enum AssetCommand {\r\n    create = 'create/',\r\n    delete = 'delete/',\r\n    edit = 'edit/',\r\n    view = 'view/',\r\n    detailView = 'detailView/',\r\n    search = 'search/',\r\n    GET_ALL_MODELS = 'assistedmodel/',\r\n    GET_ALL_OWNERS = 'assistedowner/',\r\n    GET_ALL_DATACENTERS = 'assisteddatacenter/',\r\n    GET_ALL_HOSTNAME = 'assistedhostname/',\r\n    UPLOAD_FILE = 'import/',\r\n    EXPORT_FILE = 'export/',\r\n    GET_NEXT_ASSET_NUM = 'nextAssetNumber/',\r\n}\r\n","import React from 'react';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nexport default class Filters extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            filters:{},\r\n        };\r\n    }\r\n\r\n    updateSearchText(event) {\r\n        if (this.state.filters.hasOwnProperty(event.target.id)) {\r\n            this.state.filters[event.target.id] = event.target.value;\r\n            this.forceUpdate();\r\n        } else {\r\n            this.state.filters[event.target.id] = event.target.value;\r\n            this.forceUpdate();\r\n        }\r\n    }\r\n\r\n    search() {\r\n        this.props.search(this.state.filters);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.props.filters.map((filter, index) => (\r\n                    <div>\r\n                        <SearchIcon />\r\n                        <InputBase\r\n                            placeholder={filter+\" filter\"}\r\n                            inputProps={{ 'aria-label': 'search' }}\r\n                            onChange={this.updateSearchText.bind(this)}\r\n                            id={filter}\r\n                        />\r\n                    </div>\r\n                ))\r\n                }\r\n                <div>\r\n                    <Button\r\n                        onClick={this.search.bind(this)}\r\n                    >\r\n                        Search\r\n                    </Button>\r\n                </div>\r\n                Click the search button to populate table. Searching with empty filters searches over all values. Click on row values to see detailed view.\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from '@material-ui/core/Button';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\r\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\r\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport StatusDisplay from '../../helpers/StatusDisplay';\r\n\r\nexport default class DetailedView extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            showConfirmationBox:false,\r\n        };\r\n\r\n        this.closeModal = this.closeModal.bind(this);\r\n        this.confirmDelete = this.confirmDelete.bind(this);\r\n        this.deleteItem = this.deleteItem.bind(this);\r\n    }\r\n\r\n    confirmDelete() {\r\n        this.setState({ showConfirmationBox: true });\r\n    }\r\n\r\n    closeModal() {\r\n        this.setState({showConfirmationBox:false,});\r\n    }\r\n\r\n    deleteItem() {\r\n        this.setState({ showConfirmationBox: false });\r\n        this.props.delete();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n        <div>\r\n            {!this.props.showDetailedView ? null:\r\n            <ExpansionPanel >\r\n                    <ExpansionPanelSummary\r\n                        expandIcon={<ExpandMoreIcon />}\r\n                    >\r\n                        <Typography>Create</Typography>\r\n                    </ExpansionPanelSummary>\r\n                    <ExpansionPanelDetails>\r\n                        <StatusDisplay\r\n                            open={this.props.statusOpen}\r\n                            severity={this.props.statusSeverity}\r\n                            closeStatus={this.props.statusClose}\r\n                            message={this.props.statusMessage}\r\n                        />\r\n                    {\r\n                this.props.loading ? <CircularProgress /> :\r\n                <div>\r\n                    {this.props.inputs.map(input => (\r\n                        <TextField name={input} disabled={this.props.disabled} id=\"standard-basic\" label={input} onChange={this.props.updateModelEdited} defaultValue={this.props.defaultValues[input]}/>\r\n                    ))}\r\n                    {this.props.disabled ? null:\r\n                    <div>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            onClick={this.props.edit}\r\n                            disabled={this.state.showConfirmationBox}\r\n                        >\r\n                            Save\r\n                        </Button>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            onClick={this.confirmDelete}\r\n                            disabled={this.state.showConfirmationBox}\r\n                        >\r\n                            Delete\r\n                        </Button>\r\n                    </div>}\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            onClick={this.props.closeDetailedView}\r\n                            disabled={this.state.showConfirmationBox}\r\n                        >\r\n                            Close\r\n                        </Button>\r\n\r\n                    {this.state.showConfirmationBox ? <div>\r\n                        Are you sure you wish to delete?\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            onClick={this.deleteItem}\r\n                        >\r\n                            Yes\r\n                        </Button>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            onClick={this.closeModal}\r\n                        >\r\n                            No\r\n                        </Button>\r\n                    </div>:null}\r\n                </div>}\r\n                    </ExpansionPanelDetails>\r\n                </ExpansionPanel>}\r\n        </div>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from '@material-ui/core/Button';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\r\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\r\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport '../../../stylesheets/Models.css';\r\nimport StatusDisplay from '../../helpers/StatusDisplay';\r\n\r\nexport default class CreateModal extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n\r\n        };\r\n    }\r\n\r\n    render() {\r\n        return (\r\n        <div>\r\n            <ExpansionPanel class=\"create-expansion-tab\">\r\n                    <ExpansionPanelSummary\r\n                        expandIcon={<ExpandMoreIcon />}\r\n                    >\r\n                        <Typography>Create User</Typography>\r\n                    </ExpansionPanelSummary>\r\n                    <ExpansionPanelDetails class=\"create-expansion-tab\">\r\n                    <div>\r\n                        <StatusDisplay\r\n                            open={this.props.statusOpen}\r\n                            severity={this.props.statusSeverity}\r\n                            closeStatus={this.props.statusClose}\r\n                            message={this.props.statusMessage}\r\n                        />\r\n                    {this.props.inputs.map((input, index) => (\r\n                        (index===0 && this.props.useAutocomplete) ? <Autocomplete\r\n                            id=\"combo-box-demo\"\r\n                            options={this.props.options}\r\n                            includeInputInList\r\n                            freeSolo\r\n                            renderInput={params => (\r\n                            <TextField {...params} label={input} name={input} onChange={this.props.updateModelCreator} onBlur={this.props.updateModelCreator} variant=\"outlined\" fullWidth />\r\n                            )}\r\n                        /> :\r\n                        <TextField id=\"standard-basic\" variant=\"outlined\" label={input} name={input} onChange={this.props.updateModelCreator}/>\r\n                    ))}\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        onClick={this.props.createModel}\r\n                    >\r\n                        Create\r\n                    </Button>\r\n                </div>\r\n                    </ExpansionPanelDetails>\r\n                </ExpansionPanel>\r\n        </div>\r\n        );\r\n    }\r\n}\r\n","\r\n\r\nexport const GENERAL_USER_ERROR =  \"There was an error in the backend. Could not perform the given user operation at this time.\";\r\n","import React from 'react';\r\nimport axios from 'axios';\r\n\r\nimport { UserCommand } from '../enums/UserCommands.ts'\r\nimport { UserInput } from '../enums/UserInputs.ts'\r\n\r\nimport FilterUser from '../helpers/FilterUser';\r\nimport DetailUser from '../helpers/DetailUser';\r\nimport CreateUser from '../helpers/CreateUser';\r\n\r\nimport UploadModal from '../../helpers/UploadModal';\r\nimport getURL from '../../helpers/functions/GetURL';\r\nimport TableView from '../../helpers/TableView';\r\nimport StatusDisplay from '../../helpers/StatusDisplay';\r\n\r\nimport { Privilege } from '../../enums/privilegeTypes.ts'\r\n\r\nimport ErrorBoundray from '../../errors/ErrorBoundry';\r\nimport * as UserConstants from \"../UserConstants\";\r\n\r\nconst inputs = [\r\n    'username',\r\n    'email',\r\n    'display_name',\r\n    'privilege',\r\n    'password',\r\n]\r\n\r\nconst columns = [\r\n    'username',\r\n    'email',\r\n    'display_name',\r\n    'privilege',\r\n]\r\n\r\nconst usersMainPath = 'users/';\r\n\r\nexport default class UsersView extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n\r\n            // modals\r\n            showCreateModal:false,\r\n            showImportModal:false,\r\n\r\n            // table items\r\n            items:[], //Constants.testUserArray,\r\n\r\n            // vals for creating a new user\r\n            createdUser : {\r\n                'username':'',\r\n                'password':'',\r\n                'display_name':'',\r\n                'email':'',\r\n                'privilege':'',\r\n            },\r\n\r\n            statusOpen:false,\r\n            statusSeverity:'',\r\n            statusMessage:'',\r\n            detailStatusOpen:false,\r\n            detailStatusSeverity:'',\r\n            detailStatusMessage:'',\r\n            createStatusOpen:false,\r\n            createStatusSeverity:'',\r\n            createStatusMessage:'',\r\n\r\n            searchUsernm:'',\r\n            searchEml:'',\r\n            searchDspNm:'',\r\n            searchPriv:'',\r\n\r\n            // vals for deleting a user\r\n            deleteUsername:'',\r\n\r\n            // vals for viewing a user\r\n            viewUser:'',\r\n\r\n            // csv data\r\n            csvData:[],\r\n\r\n            // detailed view\r\n            showDetailedView: false,\r\n            detailViewLoading:false,\r\n            detailedValues : {\r\n                'username':'',\r\n                'display_name':'',\r\n                'email':'',\r\n                'privilege':'',\r\n            },\r\n            originalUsername:'',\r\n\r\n            initialized:false,\r\n        };\r\n\r\n        axios.defaults.headers.common['token'] = this.props.token;\r\n        axios.defaults.headers.common['privilege'] = this.props.privilege;\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.searchUsers();\r\n    }\r\n\r\n    createUser = () => {\r\n        axios.post(\r\n            getURL(usersMainPath, UserCommand.create),\r\n            {\r\n                'username':this.state.createdUser[UserInput.Username],\r\n                'password':this.state.createdUser[UserInput.Password],\r\n                'display_name':this.state.createdUser[UserInput.display_name],\r\n                'email':this.state.createdUser[UserInput.Email],\r\n                'privilege':this.state.createdUser[UserInput.Privilege],\r\n            }\r\n            ).then(response => {\r\n                if (response.data.message === 'success') {\r\n                    this.setState({\r\n                        createStatusOpen: true,\r\n                        createStatusMessage: \"Successfully created user\",\r\n                        createStatusSeverity:\"success\",\r\n                        createdUser : {\r\n                            'username':'',\r\n                            'password':'',\r\n                            'display_name':'',\r\n                            'email':'',\r\n                            'privilege':'',\r\n                        },\r\n                        showCreateModal:false,\r\n                    });\r\n                    this.searchUsers();\r\n                } else {\r\n                    this.setState({ createStatusOpen: true, createStatusMessage: response.data.message, createStatusSeverity:\"error\" })\r\n                }\r\n            }).catch(\r\n                this.setState({ createStatusOpen: true, createStatusMessage: UserConstants.GENERAL_USER_ERROR, createStatusSeverity:\"error\" })\r\n            );\r\n    }\r\n\r\n    editUser = () => {\r\n        axios.post(\r\n            getURL(usersMainPath, UserCommand.edit),\r\n            {\r\n                'username_original':this.state.originalUsername,\r\n                'username':this.state.detailedValues[UserInput.Username],\r\n                'display_name':this.state.detailedValues[UserInput.display_name],\r\n                'email':this.state.detailedValues[UserInput.Email],\r\n                'privilege':this.state.detailedValues[UserInput.Privilege],\r\n            }\r\n            ).then(response => {\r\n                if (response.data.message === 'success') {\r\n                    this.setState({\r\n                        detailStatusOpen: true,\r\n                        detailStatusMessage: \"Successfully edited user\",\r\n                        detailStatusSeverity:\"success\",\r\n                        originalUsername:'',\r\n                        detailedValues : {\r\n                            'username':'',\r\n                            'display_name':'',\r\n                            'email':'',\r\n                            'privilege':'',\r\n                        },\r\n                        showDetailedView:false,\r\n                    });\r\n                    this.searchUsers();\r\n                } else {\r\n                    this.setState({ detailStatusOpen: true, detailStatusMessage: response.data.message, detailStatusSeverity:\"error\" })\r\n                }\r\n            }).catch(\r\n                this.setState({ detailStatusOpen: true, detailStatusMessage: UserConstants.GENERAL_USER_ERROR, detailStatusSeverity:\"error\" })\r\n            );\r\n    }\r\n\r\n\r\n    deleteUser = () => {\r\n        axios.post(\r\n            getURL(usersMainPath, UserCommand.delete),\r\n            {\r\n                'username':this.state.originalUsername,\r\n            }\r\n            ).then(response => {\r\n                if (response.data.message === 'success') {\r\n                    this.setState({\r\n                        statusOpen: true,\r\n                        statusMessage: \"Successfully deleted user\",\r\n                        statusSeverity:\"success\",\r\n                        deleteUsername:'',\r\n                        showDetailedView:false,\r\n                    });\r\n                    this.searchUsers();\r\n                } else {\r\n                    this.setState({ showStatus: true, statusMessage: response.data.message, statusSeverity:\"error\" })\r\n                }\r\n            }).catch(\r\n                this.setState({ showStatus: true, statusMessage: UserConstants.GENERAL_USER_ERROR, statusSeverity:\"error\" })\r\n            );\r\n    }\r\n\r\n    detailViewUser = (username) => {\r\n        axios.post(\r\n            getURL(usersMainPath, UserCommand.detailView),\r\n            {\r\n                'username':username,\r\n            }\r\n            ).then(response => this.setState({ detailedValues: response.data['user'], detailViewLoading:false})\r\n            ).catch(\r\n                this.setState({ showStatus: true, statusMessage: UserConstants.GENERAL_USER_ERROR, statusSeverity:\"error\" })\r\n            );\r\n\r\n        this.setState({\r\n            viewUser:'',\r\n        });\r\n    }\r\n\r\n    searchUsers = () => {\r\n        axios.post(\r\n            getURL(usersMainPath, UserCommand.search),\r\n            {\r\n                'filter':{\r\n                    'username':this.state.searchUsernm,\r\n                    'email':this.state.searchEml,\r\n                    'display_name':this.state.searchDspNm,\r\n                    'privilege':this.state.searchPriv,\r\n                }\r\n            }\r\n            ).then(response => this.setState({ items: (response.data['users']===null) ? [] : response.data['users'] }));\r\n\r\n        this.setState({ initialized: true})\r\n    }\r\n\r\n    search = (filters) => {\r\n        this.setState({\r\n            searchUsernm:filters['username'],\r\n            searchEml:filters['email'],\r\n            searchDspNm: filters['display_name'],\r\n            searchPriv:filters['privilege'],\r\n        }, this.searchUsers);\r\n    }\r\n\r\n    downloadTable = () => {\r\n        this.csvLink.link.click();\r\n    }\r\n\r\n    openCreateModal = () => {\r\n        this.setState({showCreateModal: true});\r\n    }\r\n\r\n    openImportModal = () => {\r\n        this.setState({showImportModal: true});\r\n    }\r\n\r\n    showDetailedView = (id) => {\r\n        this.setState({\r\n            showDetailedView: true,\r\n            detailViewLoading:true,\r\n            originalUsername:this.state.items[id]['username'],\r\n         });\r\n\r\n        var username = this.state.items[id]['username'];\r\n\r\n        this.detailViewUser(username);\r\n        //this.setState({ detailedValues: Constants.testUserArray[id], detailViewLoading:false})\r\n    }\r\n\r\n    closeCreateModal = () => {\r\n        this.setState({showCreateModal: false});\r\n    }\r\n\r\n    closeImportModal = () => {\r\n        this.setState({showImportModal: false});\r\n    }\r\n\r\n    closeDetailedView = () => {\r\n        this.setState({ showDetailedView: false })\r\n    }\r\n\r\n    updateUserCreator = (event) => {\r\n        this.state.createdUser[event.target.name] = event.target.value;\r\n        this.forceUpdate()\r\n    }\r\n\r\n    updateUserEdited = (event) => {\r\n        this.state.detailedValues[event.target.name] = event.target.value;\r\n        this.forceUpdate()\r\n    }\r\n\r\n    closeShowStatus = () => {\r\n        this.setState({ showStatus: false })\r\n    }\r\n\r\n    createStatusClose = () => {\r\n        this.setState({ createStatusOpen: false })\r\n    }\r\n\r\n    detailStatusClose = () => {\r\n        this.setState({ detailStatusOpen: false })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <ErrorBoundray>\r\n                <StatusDisplay\r\n                    open={this.state.showStatus}\r\n                    severity={this.state.statusSeverity}\r\n                    closeStatus={this.closeShowStatus}\r\n                    message={this.state.statusMessage}\r\n                />\r\n                {(this.props.privilege === Privilege.ADMIN) ?\r\n                    (<div>\r\n                <CreateUser\r\n                    statusOpen={this.state.createStatusOpen}\r\n                    statusSeverity={this.state.createStatusSeverity}\r\n                    statusClose={this.createStatusClose}\r\n                    statusMessage={this.state.createStatusMessage}\r\n\r\n                    showStatus={this.state.createStatus}\r\n                    showCreateModal={this.state.showCreateModal}\r\n                    closeCreateModal={this.closeCreateModal}\r\n                    createModel={this.createUser}\r\n                    updateModelCreator={this.updateUserCreator}\r\n                    inputs={inputs}\r\n                    options={[]}\r\n                    useAutocomplete={false}\r\n                />\r\n                <UploadModal\r\n                    showImportModal={this.state.showImportModal}\r\n                    closeImportModal={this.closeImportModal}\r\n                /></div>):null\r\n            }\r\n                <FilterUser\r\n                    updateSearchText={this.updateSearchText}\r\n                    search={this.search}\r\n                    filters={columns}\r\n                />\r\n                <TableView\r\n                    columns={columns}\r\n                    vals={this.state.items}\r\n                    keys={columns}\r\n                    showDetailedView={this.showDetailedView}\r\n                    filters={columns}\r\n                />\r\n                <DetailUser\r\n                    statusOpen={this.state.detailStatusOpen}\r\n                    statusSeverity={this.state.detailStatusSeverity}\r\n                    statusClose={this.detailStatusClose}\r\n                    statusMessage={this.state.detailStatusMessage}\r\n\r\n                    showDetailedView={this.state.showDetailedView}\r\n                    closeDetailedView={this.closeDetailedView}\r\n                    inputs={columns}\r\n                    updateModelEdited={this.updateUserEdited}\r\n                    defaultValues={this.state.detailedValues}\r\n                    loading={this.state.detailViewLoading}\r\n                    edit={this.editUser}\r\n                    delete={this.deleteUser}\r\n                    disabled={this.props.privilege===Privilege.USER}\r\n                />\r\n                </ErrorBoundray>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","\r\n\r\n\r\nexport const GENERAL_ASSET_ERROR =  \"There was an error in the backend. Could not perform the given asset operation at this time.\";\r\n\r\n\r\nexport const ASSETS_MAIN_PATH = 'instances/';\r\nexport const ASSET_DOWNLOAD_FILE_NAME = 'assets.csv';\r\nexport const SUCCESS_TOKEN = \"success\";\r\nexport const ERROR_TOKEN = \"error\";\r\n","export enum AssetInput {\r\n    MODEL = 'model',\r\n    HOSTNAME = 'hostname',\r\n    RACK = 'rack',\r\n    RACK_U = 'rack_position',\r\n    RACK_ORIGINAL = 'rackOriginal',\r\n    RACK_U_ORIGINAL = 'rack_positionOriginal',\r\n    OWNER = 'owner',\r\n    COMMENT = 'comment',\r\n    DATACENTER = 'datacenter_id',\r\n    TAGS = 'tags',\r\n    MAC_ADDRESS = 'mac_address',\r\n    NETWORK_CONNECTIONS = 'network_connections',\r\n    POWER_CONNECTIONS = 'power_connections',\r\n    ASSET_NUMBER = 'asset_number',\r\n}\r\n","import React from 'react';\r\n\r\nimport axios from 'axios';\r\nimport { CSVLink } from \"react-csv\";\r\n\r\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\r\nimport CloudDownloadIcon from '@material-ui/icons/CloudDownload';\r\nimport Button from '@material-ui/core/Button';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport Fade from '@material-ui/core/Fade';\r\n\r\nimport { AssetCommand } from '../enums/AssetCommands.ts'\r\nimport getURL from '../../helpers/functions/GetURL';\r\nimport * as AssetConstants from \"../AssetConstants\";\r\n\r\nconst useStyles = theme => ({\r\n    modal: {\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n    },\r\n    paper: {\r\n      backgroundColor: theme.palette.background.paper,\r\n      border: '2px solid #000',\r\n      boxShadow: theme.shadows[5],\r\n      padding: theme.spacing(2, 4, 3),\r\n    },\r\n    button: {\r\n        margin: theme.spacing(2, 4, 3),\r\n    }\r\n  });\r\n\r\nclass ImpExpAsset extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            csvData:'',\r\n            importedFile:null,\r\n\r\n            showImport:false,\r\n        };\r\n    }\r\n\r\n    sendUploadedFile = (data) => {\r\n        axios.post(\r\n            getURL(AssetConstants.ASSETS_MAIN_PATH, AssetCommand.UPLOAD_FILE), data\r\n            ).then(response => {\r\n                if (response.data.message === AssetConstants.SUCCESS_TOKEN) {\r\n                    this.setState({ showStatus: true, statusMessage: response.data.summary, statusSeverity:AssetConstants.SUCCESS_TOKEN, showImport: false,})\r\n                } else {\r\n                    this.setState({ showStatus: true, statusMessage: response.data.message, statusSeverity:AssetConstants.ERROR_TOKEN })\r\n                }\r\n            });\r\n        }\r\n\r\n    downloadTable = () => {\r\n        axios.post(\r\n            getURL(AssetConstants.ASSETS_MAIN_PATH, AssetCommand.EXPORT_FILE), { 'filter':this.props.filters }\r\n            ).then(response => {\r\n                this.setState({ csvData: response.data.csvData });\r\n                this.csvLink.link.click();\r\n            });\r\n    }\r\n\r\n    openImportModal = () => {\r\n        this.setState({showImport: true});\r\n    }\r\n\r\n    closeImportModal = () => {\r\n        this.setState({showImport: false});\r\n    }\r\n\r\n    uploadFile = () => {\r\n        const data = new FormData();\r\n        data.append('file', this.state.importedFile);\r\n        this.sendUploadedFile(data);\r\n        this.setState({ showImport: false });\r\n    }\r\n\r\n    chooseFile = (event) => {\r\n        this.setState({ importedFile: event.target.files[0] })\r\n    }\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n\r\n        return(\r\n            <span>\r\n                <Grid container spacing={3}>\r\n                    <Grid item xs={2}>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            startIcon={<CloudUploadIcon />}\r\n                            onClick={() => {this.openImportModal()} }\r\n                        >\r\n                            Import\r\n                        </Button>\r\n                    </Grid>\r\n                    <Grid item xs={2}>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            startIcon={<CloudDownloadIcon />}\r\n                            onClick={() => {this.downloadTable()}}\r\n                        >\r\n                            Export\r\n                        </Button>\r\n                    </Grid>\r\n                </Grid>\r\n\r\n                <CSVLink\r\n                    data={this.state.csvData}\r\n                    filename={AssetConstants.ASSET_DOWNLOAD_FILE_NAME}\r\n                    className=\"hidden\"\r\n                    ref={(r) => this.csvLink = r}\r\n                    target=\"_blank\"\r\n                />\r\n\r\n                <Modal\r\n                    aria-labelledby=\"transition-modal-title\"\r\n                    aria-describedby=\"transition-modal-description\"\r\n                    className={classes.modal}\r\n                    open={this.state.showImport}\r\n                    onClose={this.closeImportModal}\r\n                    closeAfterTransition\r\n                    BackdropComponent={Backdrop}\r\n                    BackdropProps={{\r\n                    timeout: 500,\r\n                    }}\r\n                >\r\n                    <Fade in={this.state.showImport}>\r\n                    <div className={classes.paper}>\r\n                        <input\r\n                            type='file'\r\n                            accept=\".csv\"\r\n                            onChange={this.chooseFile}\r\n                        />\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            onClick={() => {this.uploadFile()}}\r\n                            className={classes.button}\r\n                        >\r\n                            Upload\r\n                        </Button>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            onClick={() => {this.uploadFile()}}\r\n                        >\r\n                            Cancel\r\n                        </Button>\r\n                    </div>\r\n                    </Fade>\r\n                </Modal>\r\n            </span>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withStyles(useStyles)(ImpExpAsset);\r\n","/**\r\n * For MAC addresses, the system should accept a six-byte hexadecimal value\r\n * with any byte seperator punctuation (including colon, dash, underscore, and\r\n * no seperator at all). Upon accepting the value, it should be formatted into a\r\n * lower-case colon-delimited canonical form.\r\n *\r\n * @param {string} val\r\n */\r\n\r\nexport default function stringToMac(val) {\r\n    // A  A  :  A  A  :  A  A  :  A  A  :  A  A  :  A  A\r\n    // 0  1  2  3  4  5  6  7  8  9  10 11 12 13 14 15 16\r\n\r\n    var returnVal = \"\";\r\n\r\n    returnVal = val.replace(/[^0-9A-Fa-f]*/g, \"\").toLowerCase();\r\n\r\n    if (returnVal.length > 12) {\r\n        returnVal = returnVal.substring(0, 12);\r\n    }\r\n\r\n    if (returnVal.length === 1 || returnVal.length === 2) {\r\n        return returnVal;\r\n    }\r\n\r\n    if (returnVal.length === 3 || returnVal.length === 4) {\r\n        return returnVal.substring(0, 2) + \":\" + returnVal.substring(2);\r\n    }\r\n\r\n    if (returnVal.length === 5 || returnVal.length === 6) {\r\n        return returnVal.substring(0, 2) + \":\" + returnVal.substring(2, 4) + \":\" + returnVal.substring(4);\r\n    }\r\n\r\n    if (returnVal.length === 7 || returnVal.length === 8) {\r\n        return returnVal.substring(0, 2)\r\n        + \":\" + returnVal.substring(2, 4)\r\n        + \":\" + returnVal.substring(4, 6)\r\n        + \":\" + returnVal.substring(6);\r\n    }\r\n\r\n    if (returnVal.length === 9 || returnVal.length === 10) {\r\n        return returnVal.substring(0, 2)\r\n        + \":\" + returnVal.substring(2, 4)\r\n        + \":\" + returnVal.substring(4, 6)\r\n        + \":\" + returnVal.substring(6, 8)\r\n        + \":\" + returnVal.substring(8);\r\n    }\r\n\r\n    if (returnVal.length === 11 || returnVal.length === 12) {\r\n        return returnVal.substring(0, 2)\r\n        + \":\" + returnVal.substring(2, 4)\r\n        + \":\" + returnVal.substring(4, 6)\r\n        + \":\" + returnVal.substring(6, 8)\r\n        + \":\" + returnVal.substring(8, 10)\r\n        + \":\" + returnVal.substring(10,12);\r\n    }\r\n\r\n    return returnVal;\r\n}\r\n","import React from 'react';\r\n\r\nimport axios from 'axios';\r\n\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from '@material-ui/core/Button';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\n\r\nimport StatusDisplay from '../../helpers/StatusDisplay';\r\nimport { AssetInput } from '../enums/AssetInputs.ts';\r\nimport { AssetCommand } from '../enums/AssetCommands.ts'\r\nimport getURL from '../../helpers/functions/GetURL';\r\nimport * as AssetConstants from \"../AssetConstants\";\r\nimport * as Constants from \"../../Constants\";\r\nimport { Typography } from '@material-ui/core';\r\nimport stringToMac from \"./functions/StringToMacAddress\"\r\nimport stringToRack from \"./functions/StringToRack\";\r\n\r\nfunction createInputs(name, label, showTooltip, description) {\r\n    return {label, name, showTooltip, description};\r\n}\r\n\r\nconst emptySearch = {\r\n    \"filter\": {\r\n            \"vendor\":null,\r\n            \"model_number\":null,\r\n            \"height\":null,\r\n            \"model\":null,\r\n            \"hostname\":null,\r\n            \"rack\":null,\r\n            \"rack_position\":null,\r\n            \"username\":null,\r\n            \"display_name\":null,\r\n            \"email\":null,\r\n            \"privilege\":null,\r\n            \"model\":null,\r\n            \"hostname\":null,\r\n            \"starting_rack_letter\":null,\r\n            \"ending_rack_letter\":null,\r\n            \"starting_rack_number\":null,\r\n            \"ending_rack_number\":null,\r\n            \"rack\":null,\r\n            \"rack_position\":null\r\n        },\r\n    \"datacenter_name\":\"\",\r\n}\r\n\r\nconst searchPath = \"search/\";\r\nconst left = \"left\";\r\nconst right = \"right\";\r\nconst off = \"off\";\r\n\r\nconst useStyles = theme => ({\r\n    root: {\r\n      flexGrow: 1,\r\n    },\r\n    modal: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        maxWidth: \"80%\",\r\n        margin:\"0 auto\",\r\n        minWidth:\"70%\",\r\n        overflow: \"scroll\"\r\n      },\r\n      paper: {\r\n        backgroundColor: theme.palette.background.paper,\r\n        border: '2px solid #000',\r\n        boxShadow: theme.shadows[5],\r\n        padding: theme.spacing(2, 4, 3),\r\n      },\r\n      progress: {\r\n        display: 'flex',\r\n        '& > * + *': {\r\n          marginLeft: theme.spacing(2),\r\n        },\r\n      },\r\n});\r\n\r\nclass CreateAsset extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            // next available asset number\r\n            loadingAssetNumber:true,\r\n\r\n            // model information\r\n            loadingModels:true,\r\n            modelList:[],\r\n            networkList:null,\r\n            powerPortList:null,\r\n\r\n            // owner information\r\n            loadingOwners:true,\r\n            ownerList:[],\r\n\r\n            // datacenter information\r\n            loadingDatacenters:true,\r\n            datacenterList:[],\r\n\r\n            // hostname information\r\n            loadingHostnames:true,\r\n            assetNumList:[],\r\n            assetNumToModelList:null,\r\n\r\n            model:\"\",\r\n            hostname:\"\",\r\n            rack:\"\",\r\n            rackU:-1,\r\n            owner:\"\",\r\n            comment:\"\",\r\n            datacenter_name:\"\",\r\n            tags:[],\r\n            network_connections:null,\r\n            power_connections:null,\r\n            asset_number:100000,\r\n\r\n            selectedConnection:null,\r\n\r\n            statusOpen: false,\r\n            statusMessage: \"\",\r\n            statusSeverity:\"\",\r\n\r\n            showModal:false,\r\n\r\n            powerPortState:null,\r\n            leftRight:null,\r\n            availableConnections:false,\r\n\r\n            canSubmit:false,\r\n\r\n            inputs: {\r\n                \"model\":createInputs(AssetInput.MODEL, \"Model\", false, \"A reference to an existing model\"),\r\n                \"hostname\":createInputs(AssetInput.HOSTNAME, \"Hostname\", false, \"A short string compliant with RFC 1034’s definition of 'label'\"),\r\n                \"rack\":createInputs(AssetInput.RACK, \"Rack\", false, \"The rack the equipment is installed in, written as a row letter and rack number, e.g. 'B12'\"),\r\n                \"rackU\":createInputs(AssetInput.RACK_U, \"Rack U\", false, \"An integer indicating the vertical location of the bottom of the equipment (e.g. '5')\"),\r\n                \"owner\":createInputs(AssetInput.OWNER, \"Owner\", false, \"A reference to an existing user on the system who owns this equipment\"),\r\n                \"comment\":createInputs(AssetInput.COMMENT, \"Comment\", false, \"Any additional information associated with this asset\"),\r\n                \"datacenter\":createInputs(AssetInput.DATACENTER, \"Datacenter\", false, \"A reference to an existing datacenter\"),\r\n                \"macAddress\":createInputs(AssetInput.MAC_ADDRESS, \"Mac Address\", false, \"A 6-byte hexadecimal string per network port shown canonically in lower case with colon delimiters (e.g., '00:1e:c9:ac:78:aa')\"),\r\n                \"networkConnections\":createInputs(AssetInput.NETWORK_CONNECTIONS, \"Port Name\", false, \"For each network port, a reference to another network port on another piece of gear\"),\r\n                \"powerConnections\":createInputs(AssetInput.POWER_CONNECTIONS, \"Power Connections\", false, \"Choice of PDU port number (0 means not plugged in)\"),\r\n                \"assetNum\":createInputs(AssetInput.ASSET_NUMBER, \"Asset Number\", false, \"A six-digit serial number unique associated with an asset.\"),\r\n            },\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getLists();\r\n    }\r\n\r\n    getLists = () => {\r\n        this.getModelList();\r\n        this.getOwnerList();\r\n        this.getDatacenterList();\r\n        this.getNextAssetNum();\r\n        this.getAssetList();\r\n    }\r\n\r\n    getModelList = () => {\r\n        axios.post(\r\n            getURL(Constants.MODELS_MAIN_PATH, searchPath), emptySearch).then(\r\n            response => {\r\n                var models = response.data.models;\r\n\r\n                var modelNames = [];\r\n                var networkNames = {};\r\n                var powerPortNames = {};\r\n\r\n                models.map(model => {\r\n                    var modelKey = model.vendor + \" \" + model.model_number;\r\n                    modelNames.push(modelKey);\r\n                    networkNames[modelKey] = model.ethernet_ports;\r\n                    powerPortNames[modelKey] = parseInt(model.power_ports);\r\n                });\r\n\r\n                this.setState({ loadingModels: false, modelList: modelNames, networkList: networkNames, powerPortList: powerPortNames }, this.availableNetworkConnections())\r\n            });\r\n    }\r\n\r\n    getOwnerList = () => {\r\n        axios.post(\r\n            getURL(Constants.USERS_MAIN_PATH, searchPath), emptySearch).then(\r\n            response => {\r\n                var users = [];\r\n                response.data.users.map(user => users.push(user.username));\r\n                this.setState({ loadingOwners: false, ownerList: users });\r\n            });\r\n    }\r\n\r\n    getDatacenterList = () => {\r\n        axios.get(\r\n            getURL(Constants.DATACENTERS_MAIN_PATH, \"all/\")).then(\r\n            response => {\r\n                var datacenters = [];\r\n                response.data.datacenters.map(datacenter => datacenters.push(datacenter.name));\r\n                this.setState({ loadingDatacenters: false, datacenterList: datacenters })\r\n            });\r\n    }\r\n\r\n    getNextAssetNum = () => {\r\n        axios.get(\r\n            getURL(Constants.ASSETS_MAIN_PATH, AssetCommand.GET_NEXT_ASSET_NUM)).then(\r\n            response => this.setState({ loadingAssetNumber: false, asset_number: response.data.asset_number }));\r\n    }\r\n\r\n    getAssetList = () => {\r\n        console.log(emptySearch);\r\n        axios.post(\r\n            getURL(Constants.ASSETS_MAIN_PATH, searchPath),emptySearch).then(\r\n            response => {\r\n                console.log(\"instances\")\r\n                console.log(response);\r\n                var instances = response.data.instances;\r\n\r\n                var assetNums = [];\r\n                var assetNumToModel = {};\r\n                instances.map(instance => {\r\n                    assetNums.push(instance.asset_number);\r\n                    assetNumToModel[instance.asset_number] = instance.model;\r\n                })\r\n\r\n                this.setState({ loadingHostnames: false, assetNumList: assetNums, assetNumToModelList: assetNumToModel }, this.availableNetworkConnections());\r\n            });\r\n    }\r\n\r\n    validJSON = (json) => {\r\n        var valid = (json.model !== \"\"\r\n        && json.owner !== \"\"\r\n        && json.datacenter_name !== \"\"\r\n        && json.rack !== \"\"\r\n        && json.rack_position !== -1\r\n        && json.asset_number >= 100000 && json.asset_number <= 999999)\r\n\r\n        Object.entries(json.network_connections).map(([port, vals]) => {\r\n            var validConnection = (vals.connection_hostname !== undefined && vals.connection_port === undefined) || (vals.connection_hostname === undefined && vals.connection_port !== undefined);\r\n            valid = valid && validConnection;\r\n        });\r\n\r\n        return valid;\r\n    }\r\n\r\n    createAsset = (event) => {\r\n        event.preventDefault();\r\n        var json = this.createJSON();\r\n        if (this.validJSON(json)) {\r\n            axios.post(\r\n                getURL(AssetConstants.ASSETS_MAIN_PATH, AssetCommand.create),\r\n                json).then(\r\n                    response => {\r\n                    if (response.data.message === AssetConstants.SUCCESS_TOKEN) {\r\n                        this.setState({\r\n                            statusOpen: true,\r\n                            statusMessage: \"Successfully created asset\",\r\n                            statusSeverity:AssetConstants.SUCCESS_TOKEN,\r\n                            showModal:false,\r\n\r\n                            model:\"\",\r\n                            hostname:\"\",\r\n                            rack:\"\",\r\n                            rackU:-1,\r\n                            owner:\"\",\r\n                            comment:\"\",\r\n                            datacenter_name:\"\",\r\n                            tags:[],\r\n                            network_connections:[],\r\n                            power_connections:[],\r\n                            asset_number:-1,\r\n                        }, this.props.search());\r\n                    } else {\r\n                        console.log(response);\r\n                        this.setState({ statusOpen: true, statusMessage: response.data.message, statusSeverity:AssetConstants.ERROR_TOKEN }, console.log(this.state.statusOpen));\r\n                    }\r\n                });\r\n        }\r\n\r\n    }\r\n\r\n    updateModel = (event) => {\r\n        this.setState({ model: event.target.value }, () => { this.validateForm() });\r\n    }\r\n\r\n    updateHostname = (event) => {\r\n        this.setState({ hostname: event.target.value }, () => { this.validateForm() });\r\n    }\r\n\r\n    updateRack = (event) => {\r\n        var rackVal = stringToRack(event.target.value);\r\n        this.setState({ rack: rackVal }, () => { this.validateForm() });\r\n    }\r\n\r\n    updateRackU = (event) => {\r\n        this.setState({ rackU: event.target.value }, () => { this.validateForm() });\r\n    }\r\n\r\n    updateOwner = (event) => {\r\n        this.setState({ owner: event.target.value }, () => { this.validateForm() });\r\n    }\r\n\r\n    updateComment = (event) => {\r\n        this.setState({ comment: event.target.value }, () => { this.validateForm() });\r\n    }\r\n\r\n    updateDatacenter = (event) => {\r\n        this.setState({ datacenter_name: event.target.value }, () => { this.validateForm() });\r\n    }\r\n\r\n    updateTags = (event) => {\r\n        this.setState({ tags: event.target.value }, () => { this.validateForm() });\r\n    }\r\n\r\n    changeNetworkMacAddress = (event, port) => {\r\n        var val = stringToMac(event.target.value);\r\n\r\n\r\n        this.setState(prevState => {\r\n            let network_connections = Object.assign({}, prevState.network_connections);\r\n            console.log(network_connections);\r\n            console.log(network_connections[port]);\r\n            if (network_connections[port] === undefined) {\r\n                network_connections[port] = {\r\n                    \"mac_address\":val,\r\n                }\r\n            } else {\r\n                network_connections[port].mac_address = val;\r\n            }\r\n\r\n            console.log(network_connections[port][\"mac_address\"]);\r\n            network_connections[port] = (network_connections[port] === null) ? {} : network_connections[port];\r\n            network_connections[port].mac_address = val;\r\n            return { network_connections };\r\n        }, () => { this.validateForm() });\r\n    }\r\n\r\n    changeNetworkHostname = (event, port) => {\r\n        var val = event.target.value;\r\n\r\n        this.setState(prevState => {\r\n            let network_connections = Object.assign({}, prevState.network_connections);\r\n            network_connections[port] = (network_connections[port] === null) ? {} : network_connections[port];\r\n            network_connections[port].connection_hostname = val;\r\n            return { network_connections };\r\n        }, () => { this.validateForm() });\r\n    }\r\n\r\n    changeNetworkPort = (event, port) => {\r\n        var val = event.target.value;\r\n\r\n        this.setState(prevState => {\r\n            let network_connections = Object.assign({}, prevState.network_connections);\r\n            network_connections[port] = (network_connections[port] === null) ? {} : network_connections[port];\r\n            network_connections[port].connection_port = val;\r\n            return { network_connections };\r\n        }, () => { this.validateForm() });\r\n    }\r\n\r\n    updatePowerPort = (event, port) => {\r\n        var val = event.target.value;\r\n\r\n        this.setState(prevState => {\r\n            let power_connections = Object.assign({}, prevState.power_connections);\r\n            power_connections[port] = val;\r\n            return { power_connections };\r\n        }, () => { this.validateForm() });\r\n    }\r\n\r\n    changePowerPortState = (event, portNum) => {\r\n        var val = event.target.value;\r\n\r\n        this.setState(prevState => {\r\n            let leftRight = Object.assign({}, prevState.leftRight);\r\n            leftRight[portNum] = val;\r\n            return { leftRight };\r\n        }, () => { this.validateForm() });\r\n    }\r\n\r\n    updateAssetNumber = (event) => {\r\n        this.setState({ asset_number: event.target.value }, () => { this.validateForm() });\r\n    }\r\n\r\n    getPowerConnections = () => {\r\n        if (this.state.leftRight===null) {\r\n            return [];\r\n        }\r\n\r\n        var pwrConns = [];\r\n        var defaultValue = 1;\r\n        Object.entries(this.state.leftRight).map(([key, value]) => {\r\n            var num = this.state.power_connections===null ? defaultValue : this.state.power_connections[key];\r\n            switch(value) {\r\n                case left:\r\n                    pwrConns.push(\"L\" + num);\r\n                    break;\r\n                case right:\r\n                    pwrConns.push(\"R\" + num);\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n        });\r\n\r\n        return pwrConns;\r\n    }\r\n\r\n    createJSON = () => {\r\n        return {\r\n            \"model\":this.state.model,\r\n            \"hostname\":this.state.hostname,\r\n            \"rack\":this.state.rack,\r\n            \"rack_position\":this.state.rackU,\r\n            \"owner\":this.state.owner,\r\n            \"comment\":this.state.comment,\r\n            \"datacenter_name\":this.state.datacenter_name,\r\n            \"tags\":this.state.tags,\r\n            \"network_connections\":(this.state.network_connections===null) ? {}:this.state.network_connections,\r\n            \"power_connections\":this.getPowerConnections(),\r\n            'asset_number':this.state.asset_number,\r\n        }\r\n    }\r\n\r\n    availableNetworkConnections = () => {\r\n        var availableNetworks = false;\r\n\r\n        var assets = this.state.assetNumList;\r\n        assets.map(asset => {\r\n            if (Object.keys(this.state.networList[this.state.assetNumToModelList[asset]].length).length > 0) {\r\n                availableNetworks = true;\r\n            }\r\n        });\r\n        console.log(availableNetworks);\r\n        this.setState({ availableConnections: availableNetworks });\r\n    }\r\n\r\n    showModal = () => {\r\n        this.setState({ showModal: true });\r\n    }\r\n\r\n    closeModal = () => {\r\n        this.setState({\r\n            // next available asset number\r\n            loadingAssetNumber:true,\r\n\r\n            // model information\r\n            loadingModels:true,\r\n            modelList:[],\r\n            networkList:null,\r\n            powerPortList:null,\r\n\r\n            // owner information\r\n            loadingOwners:true,\r\n            ownerList:[],\r\n\r\n            // datacenter information\r\n            loadingDatacenters:true,\r\n            datacenterList:[],\r\n\r\n            // hostname information\r\n            loadingHostnames:true,\r\n            assetNumList:[],\r\n            assetNumToModelList:null,\r\n\r\n            model:\"\",\r\n            hostname:\"\",\r\n            rack:\"\",\r\n            rackU:-1,\r\n            owner:\"\",\r\n            comment:\"\",\r\n            datacenter_name:\"\",\r\n            tags:[],\r\n            network_connections:null,\r\n            power_connections:null,\r\n            asset_number:100000,\r\n\r\n            selectedConnection:null,\r\n\r\n            statusOpen: false,\r\n            statusMessage: \"\",\r\n            statusSeverity:\"\",\r\n\r\n            showModal:false,\r\n\r\n            powerPortState:null,\r\n            leftRight:null,\r\n            availableConnections:false,\r\n\r\n            canSubmit:false,\r\n        }, this.getLists());\r\n    }\r\n\r\n    statusClose = () => {\r\n        this.setState({ statusOpen: false, statusMessage: \"\", statusSeverity:\"\" });\r\n    }\r\n\r\n    validateForm = () => {\r\n        this.setState({ canSubmit:this.validJSON(this.createJSON()) });\r\n    }\r\n\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n\r\n        return (\r\n        <span>\r\n            <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                onClick={() => {this.showModal()} }\r\n            >\r\n                Create Asset\r\n            </Button>\r\n            <Modal\r\n                    aria-labelledby=\"transition-modal-title\"\r\n                    aria-describedby=\"transition-modal-description\"\r\n                    className={classes.modal}\r\n                    open={this.state.showModal}\r\n                    onClose={this.closeModal}\r\n                    closeAfterTransition\r\n                    BackdropComponent={Backdrop}\r\n                    scroll=\"body\"\r\n                    BackdropProps={{\r\n                        timeout: 500,\r\n                    }}\r\n                >\r\n                    <Fade in={this.state.showModal}>\r\n                    <div className={classes.paper}>\r\n                    {(\r\n                    (this.state.loadingAssetNumber\r\n                    || this.state.loadingDatacenters\r\n                    || this.state.loadingModels\r\n                    || this.state.loadingHostnames\r\n                    || this.state.loadingOwners)\r\n                    //&& false\r\n                    ) ? <div className={classes.progress}><CircularProgress /></div> :\r\n                        <form>\r\n                        <Grid container spacing={3}>\r\n                            <Grid item xs={3}>\r\n                                <Tooltip placement=\"top\" open={this.state.inputs.model.Tooltip} title={this.state.inputs.model.description}>\r\n                                    <Autocomplete\r\n                                        id=\"select-model\"\r\n                                        options={this.state.modelList}\r\n                                        includeInputInList\r\n\r\n                                        renderInput={params => (\r\n                                        <TextField\r\n                                            {...params}\r\n                                            label={this.state.inputs.model.label}\r\n                                            name={this.state.inputs.model.name}\r\n                                            onChange={this.updateModel}\r\n                                            onBlur={this.updateModel}\r\n                                            variant=\"outlined\"\r\n                                            fullWidth\r\n                                            required\r\n                                        />\r\n                                        )}\r\n                                    />\r\n                                </Tooltip>\r\n                            </Grid>\r\n                            <Grid item xs={3}>\r\n                                <Tooltip placement=\"top\" open={this.state.inputs.owner.Tooltip} title={this.state.inputs.owner.description}>\r\n                                    <Autocomplete\r\n                                        id=\"select-owner\"\r\n                                        options={this.state.ownerList}\r\n                                        includeInputInList\r\n                                        renderInput={params => (\r\n                                        <TextField\r\n                                            {...params}\r\n                                            label={this.state.inputs.owner.label}\r\n                                            name={this.state.inputs.owner.name}\r\n                                            onChange={this.updateOwner}\r\n                                            onBlur={this.updateOwner}\r\n                                            variant=\"outlined\"\r\n                                            fullWidth\r\n                                            required\r\n                                        />\r\n                                        )}\r\n                                    />\r\n                                </Tooltip>\r\n                            </Grid>\r\n                            <Grid item xs={3}>\r\n                                <Tooltip placement=\"top\" open={this.state.inputs.datacenter.Tooltip} title={this.state.inputs.datacenter.description}>\r\n                                    <Autocomplete\r\n                                        id=\"input-datacenter\"\r\n                                        options={this.state.datacenterList}\r\n                                        includeInputInList\r\n\r\n                                        renderInput={params => (\r\n                                        <TextField\r\n                                            {...params}\r\n                                            label={this.state.inputs.datacenter.label}\r\n                                            name={this.state.inputs.datacenter.name}\r\n                                            onChange={this.updateDatacenter}\r\n                                            onBlur={this.updateDatacenter}\r\n                                            variant=\"outlined\"\r\n                                            fullWidth\r\n                                            required\r\n                                        />\r\n                                        )}\r\n                                    />\r\n                                </Tooltip>\r\n                            </Grid>\r\n                            <Grid item xs={3}>\r\n                                <Tooltip placement=\"top\" open={this.state.inputs.rack.Tooltip} title={this.state.inputs.rack.description}>\r\n                                    <TextField\r\n                                        id=\"input-rack\"\r\n                                        variant=\"outlined\"\r\n                                        label={this.state.inputs.rack.label}\r\n                                        name={this.state.inputs.rack.name}\r\n                                        onChange={this.updateRack}\r\n                                        value={this.state.rack}\r\n                                        required\r\n                                        fullWidth\r\n                                    />\r\n                                </Tooltip>\r\n                            </Grid>\r\n                            <Grid item xs={3}>\r\n                                <Tooltip placement=\"top\" open={this.state.inputs.rackU.Tooltip} title={this.state.inputs.rackU.description}>\r\n                                    <TextField\r\n                                        id=\"input-rackU\"\r\n                                        variant=\"outlined\"\r\n                                        type=\"number\"\r\n                                        InputProps={{ inputProps: { min: 1, max:42} }}\r\n                                        label={this.state.inputs.rackU.label}\r\n                                        name={this.state.inputs.rackU.name}\r\n                                        onChange={this.updateRackU}\r\n                                        required\r\n                                        fullWidth\r\n                                    />\r\n                                </Tooltip>\r\n                            </Grid>\r\n                            <Grid item xs={3}>\r\n                                <Tooltip placement=\"top\" open={this.state.inputs.assetNum.Tooltip} title={this.state.inputs.assetNum.description}>\r\n                                    <TextField\r\n                                        id=\"input-asset-number\"\r\n                                        variant=\"outlined\"\r\n                                        type=\"number\"\r\n                                        InputProps={{ inputProps: { min: 100000, max:999999} }}\r\n                                        label={this.state.inputs.assetNum.label}\r\n                                        name={this.state.inputs.assetNum.name}\r\n                                        onChange={this.updateAssetNumber}\r\n                                        value={this.state.asset_number}\r\n                                        required\r\n                                        fullWidth\r\n                                    />\r\n                                </Tooltip>\r\n                            </Grid>\r\n                            <Grid item xs={3}>\r\n                                <Tooltip placement=\"top\" open={this.state.inputs.hostname.Tooltip} title={this.state.inputs.hostname.description}>\r\n                                    <TextField\r\n                                        id=\"input-hostname\"\r\n                                        variant=\"outlined\"\r\n                                        label={this.state.inputs.hostname.label}\r\n                                        name={this.state.inputs.hostname.name}\r\n                                        onChange={this.updateHostname}\r\n                                        fullWidth\r\n                                    />\r\n                                </Tooltip>\r\n                            </Grid>\r\n\r\n                            <Grid item xs={12}>\r\n                                {(\r\n                                    (!(this.state.networkList\r\n                                        && this.state.networkList[this.state.model])\r\n                                    || (this.state.hostname===\"\"))\r\n                                    || !this.state.availableConnections\r\n                                ) ? null:\r\n                                this.state.networkList[this.state.model].map(networkPort => (\r\n                                <Grid container spacing={3}>\r\n                                    <Grid item xs={2}>\r\n                                        <Typography>{networkPort + \": \"}</Typography>\r\n                                    </Grid>\r\n                                    <Grid item xs={3}>\r\n                                        <Tooltip placement=\"top\" open={this.state.inputs.macAddress.Tooltip} title={this.state.inputs.macAddress.description}>\r\n                                            <TextField\r\n                                                id=\"input-mac-address\"\r\n                                                variant=\"outlined\"\r\n                                                label={this.state.inputs.macAddress.label}\r\n                                                name={this.state.inputs.macAddress.name}\r\n                                                onChange={(event) => {this.changeNetworkMacAddress(event, networkPort)}}\r\n                                                fullWidth\r\n                                                value={ (this.state.network_connections !== null && this.state.network_connections[networkPort]!==undefined) ? this.state.network_connections[networkPort].mac_address : \"\" }\r\n                                            />\r\n                                        </Tooltip>\r\n                                    </Grid>\r\n                                    <Grid item xs={3}>\r\n                                        <Tooltip placement=\"top\" open={this.state.inputs.networkConnections.Tooltip} title={this.state.inputs.networkConnections.description}>\r\n                                            <Autocomplete\r\n                                                id=\"input-network-ports\"\r\n                                                options={this.state.assetNumList}\r\n                                                includeInputInList\r\n                                                renderInput={params => (\r\n                                                    <TextField\r\n                                                        {...params}\r\n                                                        label={\"Connection Hostname\"}\r\n                                                        name={\"Connection Hostname\"}\r\n                                                        onBlur={(event) => {this.changeNetworkHostname(event, networkPort)}}\r\n                                                        variant=\"outlined\"\r\n                                                        fullWidth\r\n                                                        value={ (this.state.network_connections !== null && this.state.network_connections[networkPort]!==undefined) ? this.state.network_connections[networkPort].connection_hostname : \"\" }\r\n                                                    />\r\n                                                )}\r\n                                            />\r\n                                        </Tooltip>\r\n                                    </Grid>\r\n                                    <Grid item xs={3}>\r\n                                        <Tooltip placement=\"top\" open={this.state.inputs.networkConnections.Tooltip} title={this.state.inputs.networkConnections.description}>\r\n                                            <Autocomplete\r\n                                                id=\"input-network-ports\"\r\n                                                options={this.state.networkList[this.state.assetNumToModelList[networkPort]]}\r\n                                                includeInputInList\r\n                                                renderInput={params => (\r\n                                                    <TextField\r\n                                                        {...params}\r\n                                                        label={\"Connection Port\"}\r\n                                                        name={\"Connection Port\"}\r\n                                                        onBlur={(event) => {this.changeNetworkPort(event, networkPort)}}\r\n                                                        variant=\"outlined\"\r\n                                                        fullWidth\r\n                                                        value={ (this.state.network_connections !== null && this.state.network_connections[networkPort]!==undefined) ? this.state.network_connections[networkPort].connection_port : \"\" }\r\n                                                    />\r\n                                                )}\r\n                                            />\r\n                                        </Tooltip>\r\n                                    </Grid>\r\n                                </Grid>\r\n                                ))}\r\n                            </Grid>\r\n\r\n                            {(\r\n                                !(this.state.powerPortList\r\n                                && this.state.powerPortList[this.state.model])\r\n                                ) ? null :\r\n                            Array.from( { length: this.state.powerPortList[this.state.model] }, (_, k) => (\r\n                            <Grid item xs={12}>\r\n                                <Grid container spacing={3}>\r\n                                    <Grid item xs={12}>\r\n                                        <Typography>{\"Power Port: \" + k}</Typography>\r\n                                    </Grid>\r\n                                    <Grid item xs={3}>\r\n                                        <FormControl component=\"fieldset\">\r\n                                            <RadioGroup\r\n                                                id={\"power-port-\"+k}\r\n                                                aria-label=\"position\"\r\n                                                name={\"position\"+k}\r\n                                                value={(this.state.leftRight===null) ? off:(this.state.leftRight[k]===undefined ? off:this.state.leftRight[k])}\r\n                                                onChange={(event) => {this.changePowerPortState(event, k)} }\r\n                                                row\r\n                                            >\r\n                                                <FormControlLabel\r\n                                                    value={left}\r\n                                                    control={<Radio color=\"primary\" />}\r\n                                                    label=\"Left\"\r\n                                                    labelPlacement=\"bottom\"\r\n                                                />\r\n                                                <FormControlLabel\r\n                                                    value={right}\r\n                                                    control={<Radio color=\"primary\" />}\r\n                                                    label=\"Right\"\r\n                                                    labelPlacement=\"bottom\"\r\n                                                />\r\n                                                <FormControlLabel\r\n                                                    value={off}\r\n                                                    control={<Radio color=\"primary\" />}\r\n                                                    label=\"No Connection\"\r\n                                                    labelPlacement=\"bottom\"\r\n                                                />\r\n                                            </RadioGroup>\r\n                                        </FormControl>\r\n                                    </Grid>\r\n                                    {(this.state.leftRight===null) ? null:(this.state.leftRight[k]===undefined||this.state.leftRight[k]===off ? null:\r\n                                        <Grid item xs={2}>\r\n                                            <TextField\r\n                                                type=\"number\"\r\n                                                value={(this.state.power_connections===null) ? 1 : (this.state.power_connections[k]===undefined?1:this.state.power_connections[k])}\r\n                                                InputProps={{ inputProps: { min: 1, max: 24} }}\r\n                                                onChange={(event) => {this.updatePowerPort(event, k)} }\r\n                                            />\r\n                                            <FormHelperText>Power Port Number</FormHelperText>\r\n                                        </Grid>\r\n                                        )}\r\n                                </Grid>\r\n                            </Grid>\r\n                            ))\r\n                                    }\r\n                            <Grid item xs={6}>\r\n                                    <TextField\r\n                                        id=\"input-comment\"\r\n                                        variant=\"outlined\"\r\n                                        label={this.state.inputs.comment.label}\r\n                                        name={this.state.inputs.comment.name}\r\n                                        onChange={this.updateComment}\r\n                                        multiline={true}\r\n                                        fullWidth\r\n                                    />\r\n                            </Grid>\r\n                            <Grid item xs={6} />\r\n                            <Grid item xs={1}>\r\n                                <Button\r\n                                    variant=\"contained\"\r\n                                    color=\"primary\"\r\n                                    type=\"submit\"\r\n                                    onClick={(event) => {this.createAsset(event)}}\r\n                                    disabled={!this.state.canSubmit}\r\n                                >\r\n                                    Create\r\n                                </Button>\r\n                            </Grid>\r\n                            <Grid item xs={9}>\r\n                                <Button\r\n                                    variant=\"contained\"\r\n                                    color=\"primary\"\r\n                                    type=\"submit\"\r\n                                    onClick={this.closeModal}\r\n                                >\r\n                                    Cancel\r\n                                </Button>\r\n                            </Grid>\r\n                        </Grid></form>}\r\n                        <StatusDisplay\r\n                            open={this.statusOpen}\r\n                            severity={this.statusSeverity}\r\n                            closeStatus={this.statusClose}\r\n                            message={this.statusMessage}\r\n                        />\r\n                    </div>\r\n                    </Fade>\r\n                </Modal>\r\n        </span>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default withStyles(useStyles)(CreateAsset);\r\n","\r\n\r\nexport default function stringToRack(rack) {\r\n    var result = \"\";\r\n    var numRegex = /[0-9]/;\r\n\r\n    result = rack.replace(/[^0-9a-fA-F]*/g, \"\");\r\n\r\n    if (result.length > 2) {\r\n        result = result.substring(0,2);\r\n    }\r\n\r\n    if (result.length == 1) {\r\n        return result.replace(/^(\\d)+/g,\"A$1\").toUpperCase();\r\n    }\r\n\r\n    result = result.replace(/^(\\d)*(\\w)*/, \"$2$1\").toUpperCase();\r\n\r\n    if (result.length == 1) {\r\n        return result.replace(/^(\\d)+/g,\"A$1\").toUpperCase();\r\n    }\r\n\r\n    return result;\r\n\r\n}\r\n","import React from \"react\";\r\nimport Graph from \"react-graph-vis\";\r\n\r\n// nodes: [\r\n//     { id: 1, label: \"Node 1\", title: \"node 1 tootip text\" },\r\n//     { id: 2, label: \"Node 2\", title: \"node 2 tootip text\" },\r\n//     { id: 3, label: \"Node 3\", title: \"node 3 tootip text\" },\r\n//     { id: 4, label: \"Node 4\", title: \"node 4 tootip text\" },\r\n//     { id: 5, label: \"Node 5\", title: \"node 5 tootip text\" }\r\n//   ],\r\n//   edges: [\r\n//     { from: 1, to: 2 },\r\n//     { from: 1, to: 3 },\r\n//     { from: 2, to: 4 },\r\n//     { from: 2, to: 5 },\r\n//     { from: 5, to: 2 }\r\n//   ]\r\n//\r\n// vals: {\r\n//      \"host1\": [ \"host2\", \"host4\" ],\r\n//      \"host3\": [\"host5\", \"host7\", \"host9\", \"host11\"]\r\n// }\r\n\r\nfunction getGraph(primaryHosts, host) {\r\n    var hostnameMapping = {};\r\n    const hostID = 0;\r\n\r\n    var nodes = [];\r\n    nodes.push({\r\n        id:hostID,\r\n        label:\"\" + host,\r\n        color:\"#F5F5DC\"\r\n    });\r\n\r\n    hostnameMapping[host] = hostID;\r\n\r\n    var edges = [];\r\n    var primaryHostID = 1;\r\n\r\n    Object.entries(primaryHosts).map(([primaryHost, secondaryHosts]) => {\r\n        if (hostnameMapping[primaryHost] !== undefined) {\r\n            edges.push({ from: host, to:hostnameMapping[primaryHost] });\r\n        } else {\r\n            nodes.push({\r\n                id:primaryHostID,\r\n                label:\"\" + primaryHost,\r\n                color:\"#F0FFFF\"\r\n            });\r\n            edges.push({ from: hostID, to: primaryHostID });\r\n            hostnameMapping[primaryHost] = primaryHostID;\r\n        }\r\n\r\n        var secondaryHostID = primaryHostID + 1;\r\n        secondaryHosts.map(secondaryHost => {\r\n            if (hostnameMapping[secondaryHost] !== undefined) {\r\n                edges.push({ from: primaryHostID, to: hostnameMapping[secondaryHost]});\r\n            } else {\r\n                nodes.push({\r\n                    id:secondaryHostID,\r\n                    label:\"\" + secondaryHost,\r\n                    color:\"#7FFFD4\"\r\n                });\r\n                edges.push({ from: primaryHostID, to: secondaryHostID });\r\n                hostnameMapping[secondaryHost] = secondaryHostID;\r\n                secondaryHostID++;\r\n            }\r\n\r\n        });\r\n\r\n        primaryHostID = secondaryHostID + 1;\r\n\r\n    });\r\n\r\n    return { nodes:nodes, edges:edges };\r\n}\r\n\r\nclass NetworkGraph extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n        };\r\n    }\r\n\r\n    render() {\r\n          const options = {\r\n            layout: {\r\n              hierarchical: true\r\n            },\r\n            edges: {\r\n              color: \"#000000\"\r\n            },\r\n            height: \"500px\",\r\n            interaction:{\r\n                dragNodes:false,\r\n                dragView: false,\r\n            }\r\n          };\r\n\r\n          const events = {\r\n            select: function(event) {\r\n              var { nodes, edges } = event;\r\n            }\r\n          };\r\n\r\n        return (\r\n            <Graph\r\n                graph={getGraph(this.props.vals, this.props.host)}\r\n                options={options}\r\n                events={events}\r\n                getNetwork={network => {\r\n                    //  if you want access to vis.js network api you can set the state in a parent component using this property\r\n                }}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nconst rootElement = document.getElementById(\"root\");\r\n\r\n\r\nexport default NetworkGraph;\r\n","import React from 'react';\r\n\r\nimport axios from 'axios';\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from '@material-ui/core/Button';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\r\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\r\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\n\r\nimport StatusDisplay from '../../helpers/StatusDisplay';\r\nimport { AssetInput } from '../enums/AssetInputs.ts';\r\nimport { AssetCommand } from '../enums/AssetCommands.ts'\r\nimport getURL from '../../helpers/functions/GetURL';\r\nimport * as AssetConstants from \"../AssetConstants\";\r\nimport * as Constants from \"../../Constants\";\r\nimport { Typography } from '@material-ui/core';\r\nimport stringToMac from \"./functions/StringToMacAddress\"\r\nimport stringToRack from \"./functions/StringToRack\";\r\nimport NetworkGraph from \"./NetworkGraph\";\r\n\r\nfunction createInputs(name, label, showTooltip, description) {\r\n    return {label, name, showTooltip, description};\r\n}\r\n\r\nconst emptySearch = {\r\n    \"filter\": {\r\n            \"vendor\":null,\r\n            \"model_number\":null,\r\n            \"height\":null,\r\n            \"model\":null,\r\n            \"hostname\":null,\r\n            \"rack\":null,\r\n            \"rack_position\":null,\r\n            \"username\":null,\r\n            \"display_name\":null,\r\n            \"email\":null,\r\n            \"privilege\":null,\r\n            \"model\":null,\r\n            \"hostname\":null,\r\n            \"starting_rack_letter\":null,\r\n            \"ending_rack_letter\":null,\r\n            \"starting_rack_number\":null,\r\n            \"ending_rack_number\":null,\r\n            \"rack\":null,\r\n            \"rack_position\":null\r\n        },\r\n    \"datacenter_name\":\"\",\r\n}\r\n\r\nconst searchPath = \"search/\";\r\nconst left = \"left\";\r\nconst right = \"right\";\r\nconst off = \"off\";\r\n\r\nconst useStyles = theme => ({\r\n    root: {\r\n      flexGrow: 1,\r\n    },\r\n    modal: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        maxWidth: \"80%\",\r\n        margin:\"0 auto\",\r\n        minWidth:\"70%\",\r\n      },\r\n      paper: {\r\n        backgroundColor: theme.palette.background.paper,\r\n        border: '2px solid #000',\r\n        boxShadow: theme.shadows[5],\r\n        padding: theme.spacing(2, 4, 3),\r\n      },\r\n      progress: {\r\n        display: 'flex',\r\n        '& > * + *': {\r\n          marginLeft: theme.spacing(2),\r\n        },\r\n      },\r\n});\r\n\r\nclass DetailAsset extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n\r\n            // model information\r\n            loadingModels:true,\r\n            modelList:[],\r\n            networkList:null,\r\n            powerPortList:null,\r\n\r\n            // owner information\r\n            loadingOwners:true,\r\n            ownerList:[],\r\n\r\n            // datacenter information\r\n            loadingDatacenters:true,\r\n            datacenterList:[],\r\n\r\n            // hostname information\r\n            loadingHostnames:true,\r\n            assetNumList:[],\r\n            assetNumToModelList:null,\r\n\r\n            model:\"\",\r\n            hostname:\"\",\r\n            rack:\"\",\r\n            rackU:-1,\r\n            owner:\"\",\r\n            comment:\"\",\r\n            datacenter_name:\"\",\r\n            tags:[],\r\n            network_connections:null,\r\n            power_connections:null,\r\n            asset_number:100000,\r\n\r\n            selectedConnection:null,\r\n\r\n            statusOpen: false,\r\n            statusMessage: \"\",\r\n            statusSeverity:\"\",\r\n\r\n            showModal:false,\r\n\r\n            powerPortState:null,\r\n            leftRight:null,\r\n            availableConnections:false,\r\n\r\n            canSubmit:false,\r\n\r\n            detailAsset:null,\r\n            loadingDetailAsset: true,\r\n\r\n            inputs: {\r\n                \"model\":createInputs(AssetInput.MODEL, \"Model\", false, \"A reference to an existing model\"),\r\n                \"hostname\":createInputs(AssetInput.HOSTNAME, \"Hostname\", false, \"A short string compliant with RFC 1034’s definition of 'label'\"),\r\n                \"rack\":createInputs(AssetInput.RACK, \"Rack\", false, \"The rack the equipment is installed in, written as a row letter and rack number, e.g. 'B12'\"),\r\n                \"rackU\":createInputs(AssetInput.RACK_U, \"Rack U\", false, \"An integer indicating the vertical location of the bottom of the equipment (e.g. '5')\"),\r\n                \"owner\":createInputs(AssetInput.OWNER, \"Owner\", false, \"A reference to an existing user on the system who owns this equipment\"),\r\n                \"comment\":createInputs(AssetInput.COMMENT, \"Comment\", false, \"Any additional information associated with this asset\"),\r\n                \"datacenter\":createInputs(AssetInput.DATACENTER, \"Datacenter\", false, \"A reference to an existing datacenter\"),\r\n                \"macAddress\":createInputs(AssetInput.MAC_ADDRESS, \"Mac Address\", false, \"A 6-byte hexadecimal string per network port shown canonically in lower case with colon delimiters (e.g., '00:1e:c9:ac:78:aa')\"),\r\n                \"networkConnections\":createInputs(AssetInput.NETWORK_CONNECTIONS, \"Port Name\", false, \"For each network port, a reference to another network port on another piece of gear\"),\r\n                \"powerConnections\":createInputs(AssetInput.POWER_CONNECTIONS, \"Power Connections\", false, \"Choice of PDU port number (0 means not plugged in)\"),\r\n                \"assetNum\":createInputs(AssetInput.ASSET_NUMBER, \"Asset Number\", false, \"A six-digit serial number unique associated with an asset.\"),\r\n            },\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getLists();\r\n        this.getDetailView();\r\n    }\r\n\r\n    getDetailView = () => {\r\n        axios.post(getURL(Constants.ASSETS_MAIN_PATH, AssetCommand.detailView), { \"asset_number\":this.props.asset }).then(\r\n            response => {\r\n                this.setState({ detailAsset: response.data.instances[0], loadingDetailAsset: false});\r\n            }\r\n        );\r\n\r\n        var detailTemp = {\r\n            \"model\": \"Dell 27\",\r\n            \"hostname\": \"HOSTNAME\",\r\n            \"rack\": \"A1\",\r\n            \"rack_position\": 1,\r\n            \"owner\": \"OWNER\",\r\n            \"comment\": \"COMMENT\",\r\n            \"datacenter_name\": \"DATACENTER NAME\",\r\n            \"tags\": \"TAGS\",\r\n            \"network_connections\": \"\",\r\n            \"power_connections\": \"\",\r\n            \"asset_number\": 1000005,\r\n        };\r\n        this.setState({ detailAsset: detailTemp });\r\n    }\r\n\r\n    getLists = () => {\r\n        this.getModelList();\r\n        this.getOwnerList();\r\n        this.getDatacenterList();\r\n        this.getAssetList();\r\n    }\r\n\r\n    getModelList = () => {\r\n        axios.post(\r\n            getURL(Constants.MODELS_MAIN_PATH, searchPath), emptySearch).then(\r\n            response => {\r\n                var models = response.data.models;\r\n\r\n                var modelNames = [];\r\n                var networkNames = {};\r\n                var powerPortNames = {};\r\n\r\n                models.map(model => {\r\n                    var modelKey = model.vendor + \" \" + model.model_number;\r\n                    modelNames.push(modelKey);\r\n                    networkNames[modelKey] = model.ethernet_ports;\r\n                    powerPortNames[modelKey] = parseInt(model.power_ports);\r\n                });\r\n\r\n                this.setState({ loadingModels: false, modelList: modelNames, networkList: networkNames, powerPortList: powerPortNames }, this.availableNetworkConnections())\r\n            });\r\n    }\r\n\r\n    getOwnerList = () => {\r\n        axios.post(\r\n            getURL(Constants.USERS_MAIN_PATH, searchPath), emptySearch).then(\r\n            response => {\r\n                var users = [];\r\n                response.data.users.map(user => users.push(user.username));\r\n                this.setState({ loadingOwners: false, ownerList: users });\r\n            });\r\n    }\r\n\r\n    getDatacenterList = () => {\r\n        axios.get(\r\n            getURL(Constants.DATACENTERS_MAIN_PATH, \"all/\")).then(\r\n            response => {\r\n                var datacenters = [];\r\n                response.data.datacenters.map(datacenter => datacenters.push(datacenter.name));\r\n                this.setState({ loadingDatacenters: false, datacenterList: datacenters })\r\n            });\r\n    }\r\n\r\n    getAssetList = () => {\r\n        console.log(emptySearch);\r\n        axios.post(\r\n            getURL(Constants.ASSETS_MAIN_PATH, searchPath),emptySearch).then(\r\n            response => {\r\n                console.log(\"instances\")\r\n                console.log(response);\r\n                var instances = response.data.instances;\r\n\r\n                var assetNums = [];\r\n                var assetNumToModel = {};\r\n                instances.map(instance => {\r\n                    assetNums.push(instance.asset_number);\r\n                    assetNumToModel[instance.asset_number] = instance.model;\r\n                })\r\n\r\n                this.setState({ loadingHostnames: false, assetNumList: assetNums, assetNumToModelList: assetNumToModel }, this.availableNetworkConnections());\r\n            });\r\n    }\r\n\r\n    validJSON = (json) => {\r\n        var valid = (json.model !== \"\"\r\n        && json.owner !== \"\"\r\n        && json.datacenter_name !== \"\"\r\n        && json.rack !== \"\"\r\n        && json.rack_position !== -1\r\n        && json.asset_number >= 100000 && json.asset_number <= 999999)\r\n\r\n        Object.entries(json.network_connections).map(([port, vals]) => {\r\n            var validConnection = (vals.connection_hostname !== undefined && vals.connection_port === undefined) || (vals.connection_hostname === undefined && vals.connection_port !== undefined);\r\n            valid = valid && validConnection;\r\n        });\r\n\r\n        return valid;\r\n    }\r\n\r\n    createAsset = (event) => {\r\n        event.preventDefault();\r\n        var json = this.createJSON();\r\n        if (this.validJSON(json)) {\r\n            axios.post(\r\n                getURL(AssetConstants.ASSETS_MAIN_PATH, AssetCommand.create),\r\n                json).then(\r\n                    response => {\r\n                    if (response.data.message === AssetConstants.SUCCESS_TOKEN) {\r\n                        this.setState({\r\n                            statusOpen: true,\r\n                            statusMessage: \"Successfully created asset\",\r\n                            statusSeverity:AssetConstants.SUCCESS_TOKEN,\r\n                            showModal:false,\r\n\r\n                            model:\"\",\r\n                            hostname:\"\",\r\n                            rack:\"\",\r\n                            rackU:-1,\r\n                            owner:\"\",\r\n                            comment:\"\",\r\n                            datacenter_name:\"\",\r\n                            tags:[],\r\n                            network_connections:[],\r\n                            power_connections:[],\r\n                            asset_number:-1,\r\n                        }, this.props.search());\r\n                    } else {\r\n                        console.log(response);\r\n                        this.setState({ statusOpen: true, statusMessage: response.data.message, statusSeverity:AssetConstants.ERROR_TOKEN }, console.log(this.state.statusOpen));\r\n                    }\r\n                });\r\n        }\r\n\r\n    }\r\n\r\n    updateModel = (event) => {\r\n        this.setState({ model: event.target.value }, () => { this.validateForm() });\r\n    }\r\n\r\n    updateHostname = (event) => {\r\n        this.setState({ hostname: event.target.value }, () => { this.validateForm() });\r\n    }\r\n\r\n    updateRack = (event) => {\r\n        //var rackVal = stringToRack(event.target.value);\r\n        this.setState({ rack: event.target.value }, () => { this.validateForm() });\r\n    }\r\n\r\n    updateRackU = (event) => {\r\n        this.setState({ rackU: event.target.value }, () => { this.validateForm() });\r\n    }\r\n\r\n    updateOwner = (event) => {\r\n        this.setState({ owner: event.target.value }, () => { this.validateForm() });\r\n    }\r\n\r\n    updateComment = (event) => {\r\n        this.setState({ comment: event.target.value }, () => { this.validateForm() });\r\n    }\r\n\r\n    updateDatacenter = (event) => {\r\n        this.setState({ datacenter_name: event.target.value }, () => { this.validateForm() });\r\n    }\r\n\r\n    updateTags = (event) => {\r\n        this.setState({ tags: event.target.value }, () => { this.validateForm() });\r\n    }\r\n\r\n    changeNetworkMacAddress = (event, port) => {\r\n        var val = stringToMac(event.target.value);\r\n\r\n\r\n        this.setState(prevState => {\r\n            let network_connections = Object.assign({}, prevState.network_connections);\r\n            console.log(network_connections);\r\n            console.log(network_connections[port]);\r\n            if (network_connections[port] === undefined) {\r\n                network_connections[port] = {\r\n                    \"mac_address\":val,\r\n                }\r\n            } else {\r\n                network_connections[port].mac_address = val;\r\n            }\r\n\r\n            console.log(network_connections[port][\"mac_address\"]);\r\n            network_connections[port] = (network_connections[port] === null) ? {} : network_connections[port];\r\n            network_connections[port].mac_address = val;\r\n            return { network_connections };\r\n        }, () => { this.validateForm() });\r\n    }\r\n\r\n    changeNetworkHostname = (event, port) => {\r\n        var val = event.target.value;\r\n\r\n        this.setState(prevState => {\r\n            let network_connections = Object.assign({}, prevState.network_connections);\r\n            network_connections[port] = (network_connections[port] === null) ? {} : network_connections[port];\r\n            network_connections[port].connection_hostname = val;\r\n            return { network_connections };\r\n        }, () => { this.validateForm() });\r\n    }\r\n\r\n    changeNetworkPort = (event, port) => {\r\n        var val = event.target.value;\r\n\r\n        this.setState(prevState => {\r\n            let network_connections = Object.assign({}, prevState.network_connections);\r\n            network_connections[port] = (network_connections[port] === null) ? {} : network_connections[port];\r\n            network_connections[port].connection_port = val;\r\n            return { network_connections };\r\n        }, () => { this.validateForm() });\r\n    }\r\n\r\n    updatePowerPort = (event, port) => {\r\n        var val = event.target.value;\r\n\r\n        this.setState(prevState => {\r\n            let power_connections = Object.assign({}, prevState.power_connections);\r\n            power_connections[port] = val;\r\n            return { power_connections };\r\n        }, () => { this.validateForm() });\r\n    }\r\n\r\n    changePowerPortState = (event, portNum) => {\r\n        var val = event.target.value;\r\n\r\n        this.setState(prevState => {\r\n            let leftRight = Object.assign({}, prevState.leftRight);\r\n            leftRight[portNum] = val;\r\n            return { leftRight };\r\n        }, () => { this.validateForm() });\r\n    }\r\n\r\n    updateAssetNumber = (event) => {\r\n        this.setState({ asset_number: event.target.value }, () => { this.validateForm() });\r\n    }\r\n\r\n    getPowerConnections = () => {\r\n        if (this.state.leftRight===null) {\r\n            return [];\r\n        }\r\n\r\n        var pwrConns = [];\r\n        var defaultValue = 1;\r\n        Object.entries(this.state.leftRight).map(([key, value]) => {\r\n            var num = this.state.power_connections===null ? defaultValue : this.state.power_connections[key];\r\n            switch(value) {\r\n                case left:\r\n                    pwrConns.push(\"L\" + num);\r\n                    break;\r\n                case right:\r\n                    pwrConns.push(\"R\" + num);\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n        });\r\n\r\n        return pwrConns;\r\n    }\r\n\r\n    createJSON = () => {\r\n        return {\r\n            \"model\":this.state.model,\r\n            \"hostname\":this.state.hostname,\r\n            \"rack\":this.state.rack,\r\n            \"rack_position\":this.state.rackU,\r\n            \"owner\":this.state.owner,\r\n            \"comment\":this.state.comment,\r\n            \"datacenter_name\":this.state.datacenter_name,\r\n            \"tags\":this.state.tags,\r\n            \"network_connections\":(this.state.network_connections===null) ? {}:this.state.network_connections,\r\n            \"power_connections\":this.getPowerConnections(),\r\n            'asset_number':this.state.asset_number,\r\n        }\r\n    }\r\n\r\n    availableNetworkConnections = () => {\r\n        var availableNetworks = false;\r\n\r\n        var assets = this.state.assetNumList;\r\n        assets.map(asset => {\r\n            if (Object.keys(this.state.networList[this.state.assetNumToModelList[asset]].length).length > 0) {\r\n                availableNetworks = true;\r\n            }\r\n        });\r\n        console.log(availableNetworks);\r\n        this.setState({ availableConnections: availableNetworks });\r\n    }\r\n\r\n    showModal = () => {\r\n        this.setState({ showModal: true });\r\n    }\r\n\r\n    closeModal = () => {\r\n        this.setState({\r\n\r\n            // model information\r\n            loadingModels:true,\r\n            modelList:[],\r\n            networkList:null,\r\n            powerPortList:null,\r\n\r\n            // owner information\r\n            loadingOwners:true,\r\n            ownerList:[],\r\n\r\n            // datacenter information\r\n            loadingDatacenters:true,\r\n            datacenterList:[],\r\n\r\n            // hostname information\r\n            loadingHostnames:true,\r\n            assetNumList:[],\r\n            assetNumToModelList:null,\r\n\r\n            model:\"\",\r\n            hostname:\"\",\r\n            rack:\"\",\r\n            rackU:-1,\r\n            owner:\"\",\r\n            comment:\"\",\r\n            datacenter_name:\"\",\r\n            tags:[],\r\n            network_connections:null,\r\n            power_connections:null,\r\n            asset_number:100000,\r\n\r\n            selectedConnection:null,\r\n\r\n            statusOpen: false,\r\n            statusMessage: \"\",\r\n            statusSeverity:\"\",\r\n\r\n            showModal:false,\r\n\r\n            powerPortState:null,\r\n            leftRight:null,\r\n            availableConnections:false,\r\n\r\n            canSubmit:false,\r\n        }, this.getLists());\r\n    }\r\n\r\n    statusClose = () => {\r\n        this.setState({ statusOpen: false, statusMessage: \"\", statusSeverity:\"\" });\r\n    }\r\n\r\n    validateForm = () => {\r\n        this.setState({ canSubmit:this.validJSON(this.createJSON()) });\r\n    }\r\n\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n\r\n        return (\r\n        <span>\r\n            <Modal\r\n                    aria-labelledby=\"transition-modal-title\"\r\n                    aria-describedby=\"transition-modal-description\"\r\n                    className={classes.modal}\r\n                    open={this.props.open}\r\n                    onClose={this.props.close}\r\n                    closeAfterTransition\r\n                    BackdropComponent={Backdrop}\r\n                    scroll=\"body\"\r\n                    BackdropProps={{\r\n                        timeout: 500,\r\n                    }}\r\n                >\r\n                    <Fade in={this.props.open}>\r\n                    <div className={classes.paper}>\r\n\r\n                    <ExpansionPanel>\r\n                        <ExpansionPanelSummary\r\n                            expandIcon={<ExpandMoreIcon />}\r\n                            aria-controls=\"panel1a-content\"\r\n                            id=\"fields-header\"\r\n                        >\r\n                        <Typography>Asset General Details</Typography>\r\n                        </ExpansionPanelSummary>\r\n                        <ExpansionPanelDetails>\r\n\r\n\r\n                            {(\r\n                            this.state.loadingDatacenters\r\n                            || this.state.loadingModels\r\n                            || this.state.loadingHostnames\r\n                            || this.state.loadingOwners\r\n                            //|| this.state.loadingDetailAsset\r\n                            //&& false\r\n                            ) ? <div className={classes.progress}><CircularProgress /></div> :\r\n                                <form>\r\n                                <Grid container spacing={3}>\r\n                                    <Grid item xs={3}>\r\n                                        <Tooltip placement=\"top\" open={this.state.inputs.model.Tooltip} title={this.state.inputs.model.description}>\r\n                                            <Autocomplete\r\n                                                id=\"select-model\"\r\n                                                options={this.state.modelList}\r\n                                                includeInputInList\r\n                                                defaultValue={this.state.detailAsset.model}\r\n                                                renderInput={params => (\r\n                                                <TextField\r\n                                                    {...params}\r\n                                                    label={this.state.inputs.model.label}\r\n                                                    name={this.state.inputs.model.name}\r\n                                                    onChange={this.updateModel}\r\n                                                    onBlur={this.updateModel}\r\n                                                    variant=\"outlined\"\r\n                                                    fullWidth\r\n                                                    required\r\n\r\n                                                />\r\n                                                )}\r\n                                            />\r\n                                        </Tooltip>\r\n                                    </Grid>\r\n                                    <Grid item xs={3}>\r\n                                        <Tooltip placement=\"top\" open={this.state.inputs.owner.Tooltip} title={this.state.inputs.owner.description}>\r\n                                            <Autocomplete\r\n                                                id=\"select-owner\"\r\n                                                options={this.state.ownerList}\r\n                                                includeInputInList\r\n                                                defaultValue={this.state.detailAsset.owner}\r\n                                                renderInput={params => (\r\n                                                <TextField\r\n                                                    {...params}\r\n                                                    label={this.state.inputs.owner.label}\r\n                                                    name={this.state.inputs.owner.name}\r\n                                                    onChange={this.updateOwner}\r\n                                                    onBlur={this.updateOwner}\r\n                                                    variant=\"outlined\"\r\n                                                    fullWidth\r\n                                                    required\r\n                                                />\r\n                                                )}\r\n                                            />\r\n                                        </Tooltip>\r\n                                    </Grid>\r\n                                    <Grid item xs={3}>\r\n                                        <Tooltip placement=\"top\" open={this.state.inputs.datacenter.Tooltip} title={this.state.inputs.datacenter.description}>\r\n                                            <Autocomplete\r\n                                                id=\"input-datacenter\"\r\n                                                options={this.state.datacenterList}\r\n                                                includeInputInList\r\n                                                defaultValue={this.state.detailAsset.datacenter_name}\r\n                                                renderInput={params => (\r\n                                                <TextField\r\n                                                    {...params}\r\n                                                    label={this.state.inputs.datacenter.label}\r\n                                                    name={this.state.inputs.datacenter.name}\r\n                                                    onChange={this.updateDatacenter}\r\n                                                    onBlur={this.updateDatacenter}\r\n                                                    variant=\"outlined\"\r\n                                                    fullWidth\r\n                                                    required\r\n                                                />\r\n                                                )}\r\n                                            />\r\n                                        </Tooltip>\r\n                                    </Grid>\r\n                                    <Grid item xs={3}>\r\n                                        <Tooltip placement=\"top\" open={this.state.inputs.rack.Tooltip} title={this.state.inputs.rack.description}>\r\n                                            <TextField\r\n                                                id=\"input-rack\"\r\n                                                variant=\"outlined\"\r\n                                                label={this.state.inputs.rack.label}\r\n                                                name={this.state.inputs.rack.name}\r\n                                                onChange={this.updateRack}\r\n                                                required\r\n                                                fullWidth\r\n                                                defaultValue={this.state.detailAsset.rack}\r\n                                            />\r\n                                        </Tooltip>\r\n                                    </Grid>\r\n                                    <Grid item xs={3}>\r\n                                        <Tooltip placement=\"top\" open={this.state.inputs.rackU.Tooltip} title={this.state.inputs.rackU.description}>\r\n                                            <TextField\r\n                                                id=\"input-rackU\"\r\n                                                variant=\"outlined\"\r\n                                                type=\"number\"\r\n                                                InputProps={{ inputProps: { min: 1, max:42} }}\r\n                                                label={this.state.inputs.rackU.label}\r\n                                                name={this.state.inputs.rackU.name}\r\n                                                onChange={this.updateRackU}\r\n                                                required\r\n                                                fullWidth\r\n                                                defaultValue={this.state.detailAsset.rack_position}\r\n                                            />\r\n                                        </Tooltip>\r\n                                    </Grid>\r\n                                    <Grid item xs={3}>\r\n                                        <Tooltip placement=\"top\" open={this.state.inputs.assetNum.Tooltip} title={this.state.inputs.assetNum.description}>\r\n                                            <TextField\r\n                                                id=\"input-asset-number\"\r\n                                                variant=\"outlined\"\r\n                                                type=\"number\"\r\n                                                InputProps={{ inputProps: { min: 100000, max:999999} }}\r\n                                                label={this.state.inputs.assetNum.label}\r\n                                                name={this.state.inputs.assetNum.name}\r\n                                                onChange={this.updateAssetNumber}\r\n                                                required\r\n                                                fullWidth\r\n                                                defaultValue={this.state.detailAsset.asset_number}\r\n                                            />\r\n                                        </Tooltip>\r\n                                    </Grid>\r\n                                    <Grid item xs={3}>\r\n                                        <Tooltip placement=\"top\" open={this.state.inputs.hostname.Tooltip} title={this.state.inputs.hostname.description}>\r\n                                            <TextField\r\n                                                id=\"input-hostname\"\r\n                                                variant=\"outlined\"\r\n                                                label={this.state.inputs.hostname.label}\r\n                                                name={this.state.inputs.hostname.name}\r\n                                                onChange={this.updateHostname}\r\n                                                fullWidth\r\n                                                defaultValue={this.state.detailAsset.hostname}\r\n                                            />\r\n                                        </Tooltip>\r\n                                    </Grid>\r\n                                    <Grid item xs={6}>\r\n                                            <TextField\r\n                                                id=\"input-comment\"\r\n                                                variant=\"outlined\"\r\n                                                label={this.state.inputs.comment.label}\r\n                                                name={this.state.inputs.comment.name}\r\n                                                onChange={this.updateComment}\r\n                                                multiline={true}\r\n                                                fullWidth\r\n                                                defaultValue={this.state.detailAsset.comment}\r\n                                            />\r\n                                    </Grid>\r\n                                </Grid></form>}\r\n                                <StatusDisplay\r\n                                    open={this.statusOpen}\r\n                                    severity={this.statusSeverity}\r\n                                    closeStatus={this.statusClose}\r\n                                    message={this.statusMessage}\r\n                                />\r\n\r\n                        </ExpansionPanelDetails>\r\n                    </ExpansionPanel>\r\n\r\n                    <ExpansionPanel>\r\n                        <ExpansionPanelSummary\r\n                            expandIcon={<ExpandMoreIcon />}\r\n                            aria-controls=\"panel1a-content\"\r\n                            id=\"networks-header\"\r\n                        >\r\n                            <Typography>Asset Network Management</Typography>\r\n                        </ExpansionPanelSummary>\r\n                        <ExpansionPanelDetails>\r\n                            <NetworkGraph\r\n                                vals={{\r\n                                         \"host1\": [ \"host2\", \"host4\", \"host11\" ],\r\n                                         \"host3\": [\"host5\", \"host7\", \"host9\", \"host11\"]\r\n                                    }}\r\n                                host={this.props.hostname}\r\n                            />\r\n                        </ExpansionPanelDetails>\r\n                    </ExpansionPanel>\r\n                    <ExpansionPanel>\r\n                        <ExpansionPanelSummary\r\n                            expandIcon={<ExpandMoreIcon />}\r\n                            aria-controls=\"panel1a-content\"\r\n                            id=\"power-header\"\r\n                        >\r\n                            <Typography>Asset Power Management</Typography>\r\n                        </ExpansionPanelSummary>\r\n                        <ExpansionPanelDetails>\r\n                        </ExpansionPanelDetails>\r\n                    </ExpansionPanel>\r\n                    <Button>\r\n                        Save edits\r\n                    </Button>\r\n                    <Button>\r\n                        Delete asset\r\n                    </Button>\r\n                    <Button>\r\n                        Close without saving\r\n                    </Button>\r\n\r\n\r\n                    </div>\r\n                    </Fade>\r\n                </Modal>\r\n        </span>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default withStyles(useStyles)(DetailAsset);\r\n","import React from 'react';\r\n\r\nimport axios from 'axios';\r\n\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport { MenuItem, TextField } from '@material-ui/core';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nimport { AssetCommand } from '../enums/AssetCommands.ts'\r\nimport getURL from '../../helpers/functions/GetURL';\r\nimport * as AssetConstants from \"../AssetConstants\";\r\nimport * as Constants from '../../Constants';\r\n\r\nconst emptySearch = {\r\n    \"filter\": {\r\n            \"vendor\":null,\r\n            \"model_number\":null,\r\n            \"height\":null,\r\n            \"model\":null,\r\n            \"hostname\":null,\r\n            \"rack\":null,\r\n            \"rack_position\":null,\r\n            \"username\":null,\r\n            \"display_name\":null,\r\n            \"email\":null,\r\n            \"privilege\":null,\r\n            \"model\":null,\r\n            \"hostname\":null,\r\n            \"starting_rack_letter\":null,\r\n            \"ending_rack_letter\":null,\r\n            \"starting_rack_number\":null,\r\n            \"ending_rack_number\":null,\r\n            \"rack\":null,\r\n            \"rack_position\":null\r\n        },\r\n    \"datacenter_name\":\"\",\r\n}\r\n\r\nconst searchPath = \"search/\";\r\n\r\nconst useStyles = theme => ({\r\n    root: {\r\n      flexGrow: 1,\r\n    },\r\n    searchbar: {\r\n        minWidth: \"200px\",\r\n        flexGrow: 1,\r\n    }\r\n}\r\n);\r\n\r\nclass FilterAsset extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            model:\"\",\r\n            hostname:\"\",\r\n            datacenter_id:\"\",\r\n            startingLetter:\"\",\r\n            endingLetter:\"\",\r\n            startingNum:null,\r\n            endingNum:null,\r\n\r\n            loadingModels:true,\r\n            loadingHostnames:true,\r\n            loadingDatacenters:true,\r\n\r\n            modelList:[],\r\n            datacenterList:[],\r\n            hostnamesList:[],\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.search();\r\n        this.getModelList();\r\n        this.getDatacenterList();\r\n        this.getAssetList();\r\n    }\r\n\r\n    getModelList = () => {\r\n        axios.post(\r\n            getURL(Constants.MODELS_MAIN_PATH, searchPath), emptySearch).then(\r\n            response => {\r\n                var models = response.data.models;\r\n                var modelNames = [];\r\n                models.map(model => {\r\n                    var modelKey = model.vendor + \" \" + model.model_number;\r\n                    modelNames.push(modelKey);\r\n                });\r\n                this.setState({ loadingModels: false, modelList: modelNames });\r\n            });\r\n    }\r\n\r\n    getDatacenterList = () => {\r\n        axios.get(\r\n            getURL(Constants.DATACENTERS_MAIN_PATH, \"all/\")).then(\r\n            response => {\r\n                var datacenters = [];\r\n                response.data.datacenters.map(datacenter => datacenters.push(datacenter.name));\r\n                this.setState({ loadingDatacenters: false, datacenterList: datacenters })\r\n            });\r\n    }\r\n\r\n    getAssetList = () => {\r\n        console.log(emptySearch);\r\n        axios.post(\r\n            getURL(Constants.ASSETS_MAIN_PATH, searchPath),emptySearch).then(\r\n            response => {\r\n                var instances = response.data.instances;\r\n                var hostnames = [];\r\n                instances.map(instance => {\r\n                    hostnames.push(instance.asset_number);\r\n                })\r\n                this.setState({ loadingHostnames: false, hostnamesList: hostnames });\r\n            });\r\n    }\r\n\r\n    updateModel = (event) => {\r\n        this.setState({ model: event.target.value }, () => { this.search() });\r\n    }\r\n\r\n    updateHostname = (event) => {\r\n        this.setState({ hostname: event.target.value }, () => { this.search() });\r\n    }\r\n\r\n    updateDatacenter = (event) => {\r\n        this.setState({ datacenter_id: event.target.value }, () => { this.search() });\r\n    }\r\n\r\n    updateStartingLetter = (event) => {\r\n        this.setState({ startingLetter: event.target.value }, () => { this.search() });\r\n    }\r\n\r\n    updateEndingLetter = (event) => {\r\n        this.setState({ endingLetter: event.target.value }, () => { this.search() });\r\n    }\r\n\r\n    updateStartingNum = (event) => {\r\n        this.setState({ startingNum: event.target.value }, () => { this.search() });\r\n    }\r\n\r\n    updateEndingNum = (event) => {\r\n        this.setState({ endingNum: event.target.value }, () => { this.search() });\r\n    }\r\n\r\n    getSearchJSON = () => {\r\n        return {\r\n            \"datacenter_name\":this.state.datacenter_id,\r\n            \"filters\": {\r\n                \"model\":this.state.model,\r\n                \"hostname\":this.state.hostname,\r\n                \"starting_rack_letter\":this.state.startingLetter,\r\n                \"ending_rack_letter\":this.state.endingLetter,\r\n                \"starting_rack_number\":this.state.startingNum,\r\n                \"ending_rack_number\":this.state.endingNum\r\n            }\r\n        }\r\n    }\r\n\r\n    search = () => {\r\n        axios.post(\r\n            getURL(AssetConstants.ASSETS_MAIN_PATH, AssetCommand.search), this.getSearchJSON()\r\n            ).then(response => {\r\n                this.props.updateItems(response.data.instances);\r\n            });\r\n    }\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <Grid container spacing={3} className={classes.root}>\r\n                    <Grid item xs={3}>\r\n                        <FormControl>\r\n                            {this.state.loadingDatacenters ? <CircularProgress /> :\r\n                            <Autocomplete\r\n                                id=\"select-datacenter\"\r\n                                options={this.state.datacenterList}\r\n                                includeInputInList\r\n                                renderInput={params => (\r\n                                <TextField\r\n                                    {...params}\r\n                                    className={classes.searchbar}\r\n                                    name={\"select-datacenter\"}\r\n                                    placeholder=\"datacenter\"\r\n                                    fullWidth\r\n                                />\r\n                                )}\r\n                            />}\r\n                            <FormHelperText>Filter by Datacenter</FormHelperText>\r\n                        </FormControl>\r\n                    </Grid>\r\n                    <Grid item xs={3}>\r\n                        <FormControl>\r\n                            {this.state.loadingModels ? <CircularProgress /> :\r\n                            <Autocomplete\r\n                                id=\"select-model\"\r\n                                options={this.state.modelList}\r\n                                includeInputInList\r\n                                renderInput={params => (\r\n                                <TextField\r\n                                    className={classes.searchbar}\r\n                                    {...params}\r\n                                    name={\"select-model\"}\r\n                                    placeholder=\"model\"\r\n                                    fullWidth\r\n                                />\r\n                                )}\r\n                            />}\r\n                            <FormHelperText>Filter by model</FormHelperText>\r\n                        </FormControl>\r\n                    </Grid>\r\n                    <Grid item xs={6}>\r\n                        <FormControl>\r\n                            {this.state.loadingHostnames ? <CircularProgress /> :\r\n                            <Autocomplete\r\n                                id=\"select-hostname\"\r\n                                options={this.state.hostnameList}\r\n                                includeInputInList\r\n                                renderInput={params => (\r\n                                <TextField\r\n                                    {...params}\r\n                                    className={classes.searchbar}\r\n                                    name={\"select-hostname\"}\r\n                                    placeholder=\"hostname\"\r\n                                    fullWidth\r\n                                />\r\n                                )}\r\n                            />}\r\n                            <FormHelperText>Filter by hostname</FormHelperText>\r\n                        </FormControl>\r\n                    </Grid>\r\n                    <Grid item xs={1}>\r\n                        <FormControl>\r\n                                <Select\r\n                                    id=\"starting-letter-selector\"\r\n                                    value={this.state.startingRackLetter}\r\n                                    onChange={this.changeStartingLetter}\r\n                                >\r\n                                    {Constants.RackX.map(val => (<MenuItem value={val}>{val}</MenuItem>))}\r\n                                </Select>\r\n                                <FormHelperText>Starting Letter</FormHelperText>\r\n                        </FormControl>\r\n                    </Grid>\r\n                    <Grid item xs={1}>\r\n                        <FormControl>\r\n                                <Select\r\n                                    id=\"ending-letter-selector\"\r\n                                    value={this.state.endingRackLetter}\r\n                                    onChange={this.changeEndingLetter}\r\n                                >\r\n                                    {Constants.RackX.map(val => (<MenuItem value={val}>{val}</MenuItem>))}\r\n                                </Select>\r\n                                <FormHelperText>Ending Letter</FormHelperText>\r\n                        </FormControl>\r\n                    </Grid>\r\n                    <Grid item xs={1}>\r\n                        <FormControl>\r\n                                <TextField\r\n                                    id=\"starting-num-selector\"\r\n                                    type=\"number\"\r\n                                    value={this.state.startingRackNumber}\r\n                                    onChange={this.changeStartingNum}\r\n                                    InputProps={{ inputProps: { min: 1} }}\r\n                                />\r\n                                <FormHelperText>Starting Number</FormHelperText>\r\n                        </FormControl>\r\n                    </Grid>\r\n                    <Grid item xs={1}>\r\n                        <FormControl>\r\n                                <TextField\r\n                                    id=\"ending-num-selector\"\r\n                                    type=\"number\"\r\n                                    value={this.state.endingRackNumber}\r\n                                    onChange={this.changeEndingNum}\r\n                                    InputProps={{ inputProps: { min: 1} }}\r\n                                />\r\n                                <FormHelperText>Ending Number</FormHelperText>\r\n                        </FormControl>\r\n                    </Grid>\r\n                </Grid>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withStyles(useStyles)(FilterAsset);\r\n","export default function descendingComparator(a, b, orderBy) {\r\n    if (b[orderBy] < a[orderBy]) {\r\n      return -1;\r\n    }\r\n    if (b[orderBy] > a[orderBy]) {\r\n      return 1;\r\n    }\r\n    return 0;\r\n  }\r\n","import React from 'react';\r\n\r\nimport axios from 'axios';\r\n\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport { Button } from '@material-ui/core';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\r\n\r\nimport { AssetInput } from '../enums/AssetInputs.ts';\r\nimport { AssetCommand } from '../enums/AssetCommands.ts';\r\nimport getURL from '../../helpers/functions/GetURL';\r\nimport * as AssetConstants from \"../AssetConstants\";\r\nimport DetailAsset from \"./DetailsAsset\";\r\nimport FilterAsset from './FilterAsset';\r\nimport stableSort from \"../../helpers/functions/StableSort\";\r\nimport getComparator from \"../../helpers/functions/GetComparator\";\r\nimport { Privilege } from \"../../enums/privilegeTypes.ts\";\r\n\r\n\r\nconst useStyles = theme => ({\r\n\tstyledTableRow: {\r\n\t'&:nth-of-type(odd)': {\r\n\t\tbackgroundColor: theme.palette.primary.light,\r\n\t},\r\n\t},\r\n\ttableCellHead: {\r\n\t\tbackgroundColor: theme.palette.primary.light,\r\n\t\tcolor: theme.palette.common.white,\r\n\t},\r\n\tstyledTableCell:{\r\n\t\tfontSize: 14,\r\n\t},\r\n\ttable: {\r\n\t\tminWidth: 700,\r\n\t},\r\n  \tpaper: {\r\n\t\twidth: '100%',\r\n\t\tmarginBottom: theme.spacing(2),\r\n\t},\r\n\tvisuallyHidden: {\r\n\t\tborder: 0,\r\n\t\tclip: 'rect(0 0 0 0)',\r\n\t\theight: 1,\r\n\t\tmargin: -1,\r\n\t\toverflow: 'hidden',\r\n\t\tpadding: 0,\r\n\t\tposition: 'absolute',\r\n\t\ttop: 20,\r\n\t\twidth: 1,\r\n\t  },\r\n});\r\n\r\nfunction createData(model, hostname, datacenter, rack, rackU, owner, assetNum) {\r\n  return { model, hostname, datacenter, rack, rackU, owner, assetNum };\r\n}\r\n\r\nconst headCells = [\r\n\t{ id: 'datacenter', numeric: false, label:\"Datacenter\", align:\"left\" },\r\n\t{ id: 'hostname', numeric: false, label:\"Hostname\", align:\"left\" },\r\n\t{ id: 'model', numeric: false, label:\"Model\", align:\"left\" },\r\n\t{ id: 'rack', numeric: false, label:\"Location\", align:\"left\" },\r\n\t{ id: 'owner', numeric: false, label:\"Owner\", align:\"left\" },\r\n\t{ id: 'assetNumber', numeric: false, label:\"Asset Number\", align:\"right\" },\r\n];\r\n\r\nconst testRows = [\r\n\tcreateData('Frozen yoghurt', 159, 6.0, 24, 4.0),\r\n\tcreateData('Ice cream sandwich', 237, 9.0, 37, 4.3),\r\n\tcreateData('Eclair', 262, 16.0, 24, 6.0),\r\n\tcreateData('Cupcake', 305, 3.7, 67, 4.3),\r\n\tcreateData('Gingerbread', 356, 16.0, 49, 3.9),\r\n  ];\r\n\r\n\r\nclass TableAsset extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n\t  tableItems:[],\r\n\r\n\t  detailStatusOpen:false,\r\n\t  detailStatusSeverity:'',\r\n\t  detailStatusMessage:'',\r\n\r\n\t  deleteAssetRack:'',\r\n\t  deleteAssetrack_position:'',\r\n\r\n\t  showDetailedView: false,\r\n\t  detailViewLoading:false,\r\n\t  detailAsset:-1,\r\n\t  detailHostname:\"\",\r\n\t  originalRack:'',\r\n\t  originalrack_position:'',\r\n\r\n\t  order:\"asc\",\r\n\t  orderBy:\"datacenter\",\r\n    };\r\n  }\r\n\r\n\teditAsset = () => {\r\n\tlet body = this.state.detailedValues.getAssetAsJSON();\r\n\tbody[AssetInput.RACK_ORIGINAL] = this.state.originalRack;\r\n\tbody[AssetInput.RACK_U_ORIGINAL] = this.state.originalrack_position;\r\n\taxios.post(\r\n\t\tgetURL(AssetConstants.ASSETS_MAIN_PATH, AssetCommand.edit),body\r\n\t\t).then(response => {\r\n\t\t\tif (response.data.message === AssetConstants.SUCCESS_TOKEN) {\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\tshowStatus: true,\r\n\t\t\t\t\tstatusMessage: \"Successfully edited asset\",\r\n\t\t\t\t\tstatusSeverity:AssetConstants.SUCCESS_TOKEN,\r\n\t\t\t\t\tdetailedValues : null,\r\n\t\t\t\t\tshowDetailedView:false,\r\n\t\t\t\t});\r\n\t\t\t} else {\r\n\t\t\t\tthis.setState({ detailStatusOpen: true, detailStatusMessage: response.data.message, detailStatusSeverity:AssetConstants.ERROR_TOKEN })\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\r\n\tdeleteAsset = () => {\r\n\t\tvar body = {};\r\n\t\tbody[AssetInput.RACK] = this.state.originalRack;\r\n\t\tbody[AssetInput.RACK_U] = this.state.originalrack_position;\r\n\r\n\t\taxios.post(\r\n\t\t\tgetURL(AssetConstants.ASSETS_MAIN_PATH, AssetCommand.delete), body\r\n\t\t\t).then(response => {\r\n\t\t\t\tif (response.data.message === AssetConstants.SUCCESS_TOKEN) {\r\n\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\tshowStatus: true,\r\n\t\t\t\t\t\tstatusMessage: \"Successfully deleted asset\",\r\n\t\t\t\t\t\tstatusSeverity:AssetConstants.SUCCESS_TOKEN,\r\n\t\t\t\t\t\toriginalRack:'',\r\n\t\t\t\t\t\toriginalrack_position:'',\r\n\t\t\t\t\t\tshowDetailedView:false\r\n\t\t\t\t\t});\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.setState({ showStatus: true, statusMessage: response.data.message, statusSeverity:AssetConstants.ERROR_TOKEN })\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t}\r\n\r\n\tgetAssetDetails = (rack, rack_position) => {\r\n\t\tthis.setState({ detailViewLoading: true });\r\n\r\n\t\tvar body = {};\r\n\t\tbody[AssetInput.RACK] = rack;\r\n\t\tbody[AssetInput.RACK_U] = rack_position;\r\n\r\n\t\taxios.post(\r\n\t\t\tgetURL(AssetConstants.ASSETS_MAIN_PATH, AssetCommand.detailView), body\r\n\t\t\t).then(response => this.setState({ detailedValues: response.data['assets'][0], detailViewLoading:false}));\r\n\t}\r\n\r\n\tcloseDetailedView = () => {\r\n\t\tthis.setState({ showDetailedView: false })\r\n\t}\r\n\r\n\tcloseShowStatus = () => {\r\n\t\tthis.setState({ showStatus: false })\r\n\t}\r\n\r\n\tcreateSortHandler = (event, property) => {\r\n\t\tconst isAsc = this.state.orderBy === property && this.state.order === 'asc';\r\n\t\tthis.setState({ order: isAsc ? 'desc' : 'asc', orderBy:property });\r\n\t}\r\n\r\n\topenDetailedView = (event, assetNum, hostname) => {\r\n\t\tthis.setState({ detailAsset: assetNum, showDetailedView: true, detailHostname:hostname });\r\n\t}\r\n\r\n\tupdateItems(assets) {\r\n\t\tvar items = [];\r\n\r\n\t\tassets.map(asset => {\r\n\t\t\titems.push(createData(asset.model, asset.hostname, asset.datacenter_id, asset.rack, asset.rack_position, asset.owner, asset.asset_number));\r\n\t\t});\r\n\r\n\t\tthis.setState({ tableItems : items });\r\n\t}\r\n\r\n\trender() {\r\n\tconst { classes } = this.props;\r\n\r\n\treturn (\r\n\t\t<React.Fragment>\r\n\t\t\t<Grid container spacing={3}>\r\n\t\t\t\t<Grid item xs={6}>\r\n\t\t\t\t\t<FilterAsset\r\n\t\t\t\t\t\tupdateItems={this.updateItems}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</Grid>\r\n\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t<TableContainer component={Paper}>\r\n\t\t\t\t\t\t<Table className={classes.table} aria-label=\"customized table\">\r\n\t\t\t\t\t\t\t<TableHead>\r\n\t\t\t\t\t\t\t<TableRow className={classes.styledTableRow}>\r\n\t\t\t\t\t\t\t{headCells.map(headCell => (\r\n\t\t\t\t\t\t\t\t<TableCell\r\n\t\t\t\t\t\t\t\t\tclassName={classes.tableCellHead}\r\n\t\t\t\t\t\t\t\t\tkey={headCell.id}\r\n\t\t\t\t\t\t\t\t\talign={headCell.align}\r\n\t\t\t\t\t\t\t\t\tsortDirection={this.state.orderBy === headCell.id ? this.state.order : false}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t<TableSortLabel\r\n\t\t\t\t\t\t\t\t\t\tactive={this.state.orderBy === headCell.id}\r\n\t\t\t\t\t\t\t\t\t\tdirection={this.state.orderBy === headCell.id ? this.state.order : 'asc'}\r\n\t\t\t\t\t\t\t\t\t\tonClick={(event) => {this.createSortHandler(event, headCell.id)} }\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t{headCell.label}\r\n\t\t\t\t\t\t\t\t\t{this.state.orderBy === headCell.id ? (\r\n\t\t\t\t\t\t\t\t\t\t<span className={classes.visuallyHidden}>\r\n\t\t\t\t\t\t\t\t\t\t\t{this.state.order === 'desc' ? 'sorted descending' : 'sorted ascending'}\r\n\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t) : null}\r\n\t\t\t\t\t\t\t\t\t</TableSortLabel>\r\n\t\t\t\t\t\t\t\t</TableCell>\r\n\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t\t<TableCell align=\"left\" className={classes.tableCellHead}>{\"\"}</TableCell>\r\n\t\t\t\t\t\t\t</TableRow>\r\n\t\t\t\t\t\t\t</TableHead>\r\n\t\t\t\t\t\t\t<TableBody>\r\n\r\n\r\n\t\t\t\t\t\t\t\t{stableSort(testRows, getComparator(this.state.order, this.state.orderBy))\r\n\t\t\t\t\t\t\t\t\t//.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n\t\t\t\t\t\t\t\t\t.map((row, index) => {\r\n\t\t\t\t\t\t\t\t\t\tconst labelId = `enhanced-table-checkbox-${index}`;\r\n\r\n\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t<TableRow\r\n\t\t\t\t\t\t\t\t\t\t\t\thover\r\n\t\t\t\t\t\t\t\t\t\t\t\ttabIndex={-1}\r\n\t\t\t\t\t\t\t\t\t\t\t\tkey={row.assetNum}\r\n\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<TableCell component=\"th\" id={labelId} scope=\"row\">{row.model}</TableCell>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<TableCell align=\"left\">{row.hostname}</TableCell>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<TableCell align=\"left\">{row.datacenter}</TableCell>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<TableCell align=\"left\">{row.rack + \" U\" + row.rackU}</TableCell>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<TableCell align=\"left\">{row.owner}</TableCell>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<TableCell align=\"right\">{row.assetNum}</TableCell>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<TableCell align=\"center\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tvariant=\"contained\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={(event) => {this.openDetailedView(event, row.assetNum, row.hostname)}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tMore Details\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</TableCell>\r\n\t\t\t\t\t\t\t\t\t\t\t</TableRow>\r\n\t\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t\t{/*emptyRows > 0 && (\r\n\t\t\t\t\t\t\t\t\t\t<TableRow style={{ height: (dense ? 33 : 53) * emptyRows }}>\r\n\t\t\t\t\t\t\t\t\t\t<TableCell colSpan={6} />\r\n\t\t\t\t\t\t\t\t\t\t</TableRow>\r\n\t\t\t\t\t\t\t\t\t)*/}\r\n\t\t\t\t\t\t\t</TableBody>\r\n\t\t\t\t\t\t</Table>\r\n\t\t\t\t\t</TableContainer>\r\n\t\t\t\t</Grid>\r\n\t\t\t</Grid>\r\n\t\t<DetailAsset\r\n\t\t\topen={this.state.showDetailedView}\r\n\t\t\tclose={this.closeDetailedView}\r\n\t\t\tsearch={this.search}\r\n\t\t\tdisabled={this.props.privilege===Privilege.USER /* && username !== row.owner*/}\r\n\t\t\tasset={this.state.detailAsset}\r\n\t\t\thostname={this.state.detailHostname}\r\n\t\t/>\r\n\t\t</React.Fragment>\r\n\t);\r\n  }\r\n}\r\n\r\nexport default withStyles(useStyles)(TableAsset);\r\n","export enum RackCommand {\r\n    GET_ALL_RACKS = \"all\",\r\n    CREATE_RACKS = \"create\",\r\n    DELETE_RACKS = \"delete\",\r\n    GET_RACK_DETAILS = \"details\"\r\n}\r\n","import descendingComparator from \"./DescendingComparator\";\r\n\r\nexport default function getComparator(order, orderBy) {\r\n    return order === 'desc'\r\n      ? (a, b) => descendingComparator(a, b, orderBy)\r\n      : (a, b) => -descendingComparator(a, b, orderBy);\r\n  }\r\n","export default function stableSort(array, comparator) {\r\n    const stabilizedThis = array.map((el, index) => [el, index]);\r\n    stabilizedThis.sort((a, b) => {\r\n      const order = comparator(a[0], b[0]);\r\n      if (order !== 0) return order;\r\n      return a[1] - b[1];\r\n    });\r\n    return stabilizedThis.map(el => el[0]);\r\n  }\r\n","import React from 'react';\r\n\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nimport { Privilege } from '../../enums/privilegeTypes.ts'\r\nimport ImpExpAsset from '../helpers/ImpExpAsset';\r\nimport CreateAsset from '../helpers/CreateAsset';\r\nimport StatusDisplay from '../../helpers/StatusDisplay';\r\nimport TableAsset from '../helpers/TableAssets';\r\nimport ErrorBoundary from '../../errors/ErrorBoundry';\r\nimport \"../stylesheets/AssetStyles.css\";\r\n\r\nexport default class AssetsView extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            statusSeverity:'',\r\n            statusMessage:'',\r\n            showStatus:false,\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <ErrorBoundary>\r\n                    <StatusDisplay\r\n                        open={this.state.showStatus}\r\n                        severity={this.state.statusSeverity}\r\n                        closeStatus={this.closeShowStatus}\r\n                        message={this.state.statusMessage}\r\n                    />\r\n                    <Grid container spacing={3}>\r\n                        <Grid item xs={3}>\r\n                            {(this.props.privilege === Privilege.ADMIN) ? <CreateAsset search={this.search} />:null}\r\n                        </Grid>\r\n                        <Grid item xs={6}>\r\n                            {(this.props.privilege === Privilege.ADMIN) ? <ImpExpAsset downloadTable={this.downloadTable} />:null}\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <TableAsset />\r\n                        </Grid>\r\n                    </Grid>\r\n                </ErrorBoundary>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","export enum StatsCommand {\r\n    GENERATE_REPORT = \"generate-report\",\r\n    TEST = \"test\",\r\n}\r\n","import React from 'react';\r\n\r\nimport axios from 'axios';\r\n\r\nimport Select from '@material-ui/core/Select';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport { MenuItem, Button, TextField } from '@material-ui/core';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\r\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\r\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\n\r\n\r\nimport { RackCommand } from \"../enums/RackCommands.ts\";\r\nimport { Privilege } from '../../enums/privilegeTypes.ts';\r\nimport \"../stylesheets/RackStyles.css\";\r\n\r\nimport getURL from '../../helpers/functions/GetURL';\r\nimport * as Constants from '../../Constants';\r\nimport StatusDisplay from '../../helpers/StatusDisplay';\r\n\r\nimport ErrorBoundray from '../../errors/ErrorBoundry';\r\n\r\nconst racksMainPath = 'racks/';\r\n\r\nconst useStyles = theme => ({\r\n    root: {\r\n      width: '100%',\r\n    },\r\n    heading: {\r\n      fontSize: theme.typography.pxToRem(15),\r\n      fontWeight: theme.typography.fontWeightRegular,\r\n    },\r\n  });\r\n\r\nclass RacksView extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            items:[],\r\n            startingRackLetter:'A',\r\n            endingRackLetter:'A',\r\n            startingRackNumber:1,\r\n            endingRackNumber:1,\r\n\r\n            showStatus:false,\r\n            statusMessage:'',\r\n            statusSeverity:'',\r\n\r\n            showConfirmationBox:false,\r\n\r\n            racksList:[],\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getAllRacks();\r\n    }\r\n\r\n    getAllRacks = () => {\r\n        axios.get(getURL(racksMainPath, RackCommand.GET_ALL_RACKS)).then(response => {\r\n                if (response.data.message === 'success') {\r\n                    this.setState({ showStatus: true, statusMessage: \"Success\", statusSeverity:\"success\", racksList:response.data.racks })\r\n                } else {\r\n                    this.setState({ showStatus: true, statusMessage: response.data.message, statusSeverity:\"error\" })\r\n                }\r\n            });\r\n    }\r\n\r\n    updateRacks(command) {\r\n        axios.post(\r\n            getURL(racksMainPath, command),\r\n            {\r\n                'start_letter':this.state.startingRackLetter,\r\n                'stop_letter':this.state.endingRackLetter,\r\n                'start_number':this.state.startingRackNumber,\r\n                'stop_number':this.state.endingRackNumber,\r\n            }\r\n            ).then(response => {\r\n                console.log(response);\r\n                if (response.data.message === 'success') {\r\n                    this.setState({ showStatus: true, statusMessage: \"Success\", statusSeverity:\"success\", showConfirmationBox:false });\r\n                    if (command === RackCommand.GET_RACK_DETAILS) {\r\n                        const win = window.open(response.data.link, '_blank');\r\n                        if (win != null) {\r\n                            win.focus();\r\n                        }\r\n                    }\r\n                } else {\r\n                    this.setState({ showStatus: true, statusMessage: response.data.message, statusSeverity:\"error\" })\r\n                }\r\n            });\r\n    }\r\n\r\n    createRacks = () => {\r\n        this.updateRacks(RackCommand.CREATE_RACKS);\r\n    }\r\n\r\n    deleteRacks = () => {\r\n        this.updateRacks(RackCommand.DELETE_RACKS);\r\n    }\r\n\r\n    viewRacks = () => {\r\n        this.updateRacks(RackCommand.GET_RACK_DETAILS);\r\n    }\r\n\r\n    changeStartingLetter = (event) => {\r\n        this.setState({ startingRackLetter: event.target.value })\r\n    }\r\n\r\n    changeEndingLetter = (event) => {\r\n        this.setState({ endingRackLetter: event.target.value })\r\n    }\r\n\r\n    changeStartingNum = (event) => {\r\n        this.setState({ startingRackNumber: event.target.value })\r\n    }\r\n\r\n    changeEndingNum = (event) => {\r\n        this.setState({ endingRackNumber: event.target.value })\r\n    }\r\n\r\n    closeShowStatus = () => {\r\n        this.setState({ showStatus: false })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <ErrorBoundray>\r\n                <Paper elevation={3}>\r\n                <StatusDisplay\r\n                    open={this.state.showStatus}\r\n                    severity={this.state.statusSeverity}\r\n                    closeStatus={this.closeShowStatus}\r\n                    message={this.state.statusMessage}\r\n                />\r\n                <FormControl>\r\n                    <div class=\"select-letter\">\r\n                        <Select id=\"starting-letter-selector\" value={this.state.startingRackLetter} onChange={this.changeStartingLetter}>\r\n                            {Constants.RackX.map(val => (<MenuItem value={val}>{val}</MenuItem>))}\r\n                        </Select>\r\n                        <FormHelperText>Starting Letter</FormHelperText>\r\n                    </div>\r\n                </FormControl>\r\n                <FormControl>\r\n                    <div class=\"select-letter\">\r\n                        <Select id=\"ending-letter-selector\" value={this.state.endingRackLetter} onChange={this.changeEndingLetter}>\r\n                            {Constants.RackX.map(val => (<MenuItem value={val}>{val}</MenuItem>))}\r\n                        </Select>\r\n                        <FormHelperText>Ending Letter</FormHelperText>\r\n                    </div>\r\n                </FormControl>\r\n                <FormControl>\r\n                    <div class=\"select-number\">\r\n                        <TextField\r\n                            id=\"starting-num-selector\"\r\n                            type=\"number\"\r\n                            value={this.state.startingRackNumber}\r\n                            onChange={this.changeStartingNum}\r\n                            InputProps={{ inputProps: { min: 1} }}\r\n                        />\r\n                        <FormHelperText>Starting Number</FormHelperText>\r\n                    </div>\r\n                </FormControl>\r\n                <FormControl>\r\n                    <div class=\"select-number\">\r\n                        <TextField\r\n                            id=\"ending-num-selector\"\r\n                            type=\"number\"\r\n                            value={this.state.endingRackNumber}\r\n                            onChange={this.changeEndingNum}\r\n                            InputProps={{ inputProps: { min: 1} }}\r\n                        />\r\n                        <FormHelperText>Ending Number</FormHelperText>\r\n                    </div>\r\n                </FormControl>\r\n                <div class=\"buttons\">\r\n                    <span class=\"button\">\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        onClick={this.viewRacks}\r\n                        disabled={this.state.showConfirmationBox}\r\n                    >\r\n                        View\r\n                    </Button>\r\n                    </span>\r\n                    <span class=\"button\">\r\n                        {(this.props.privilege === Privilege.ADMIN) ?\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            onClick={this.createRacks}\r\n                            disabled={this.state.showConfirmationBox}\r\n                        >\r\n                            Create\r\n                        </Button> : null}\r\n                    </span>\r\n                    <span class=\"button\">\r\n                        {(this.props.privilege === Privilege.ADMIN) ?\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            onClick={() => this.setState({ showConfirmationBox: true, })}\r\n                            disabled={this.state.showConfirmationBox}\r\n                        >\r\n                            Delete\r\n                        </Button> : null}\r\n                        </span>\r\n                    </div>\r\n                    {this.state.showConfirmationBox ? <div>\r\n                            Are you sure you wish to delete?\r\n                            <Button\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                onClick={this.deleteRacks}\r\n                            >\r\n                                Yes\r\n                            </Button>\r\n                            <Button\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                onClick={() => this.setState({ showConfirmationBox: false, })}\r\n                            >\r\n                                No\r\n                            </Button>\r\n                        </div>:null}\r\n\r\n                    </Paper>\r\n                </ErrorBoundray>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withStyles(useStyles)(RacksView);\r\n","export default function jsonToArr(incomingJSON) {\r\n    var json = {};\r\n    try {\r\n        json = JSON.parse(incomingJSON);\r\n    } catch (e) {\r\n        json = incomingJSON;\r\n    }\r\n\r\n    if (Object.entries(json).length === 0 && json.constructor === Object) {\r\n        return [];\r\n    }\r\n\r\n    const items = [];\r\n\r\n    Object.keys(json).map((key) => {\r\n        const row = [];\r\n        row.push(key);\r\n        row.push(json[key]);\r\n        items.push(row);\r\n\r\n        return key;\r\n    });\r\n    return items;\r\n}\r\n","import React from 'react';\r\nimport axios from 'axios';\r\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\r\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\r\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport getURL from '../../helpers/functions/GetURL';\r\nimport  Button from '@material-ui/core/Button';\r\nimport { StatsCommand } from \"../enums/StatsCommands.ts\";\r\nimport JSONtoArr from \"../../helpers/functions/JSONtoArr\";\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport StatusDisplay from '../../helpers/StatusDisplay';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport ErrorBoundray from '../../errors/ErrorBoundry';\r\n\r\n\r\nconst statsMainPath = 'stats/';\r\nconst tables = {\r\n    \"totalUsage\":\"Total Usage\",\r\n    \"spaceUsage\": \"Space Usage\",\r\n    \"vendorUsage\": \"Vendor Usage\",\r\n    \"modelUsage\": \"Model Usage\",\r\n    \"ownerUsage\": \"Owner Usage\",\r\n}\r\n\r\nconst tableCols = {\r\n    \"totalUsage\":[\"Total\", \"Usage\"],\r\n    \"spaceUsage\": [\"Rack\", \"Usage\"],\r\n    \"vendorUsage\": [\"Vendor\", \"Usage\"],\r\n    \"modelUsage\": [\"Model\", \"Usage\"],\r\n    \"ownerUsage\": [\"Ownder\", \"Usage\"],\r\n}\r\n\r\nexport default class StatisticsView extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            tableValues: {\r\n                \"totalUsage\":[],\r\n                \"spaceUsage\": [],\r\n                \"vendorUsage\": [],\r\n                \"modelUsage\": [],\r\n                \"ownerUsage\": [],\r\n            },\r\n            totalUsage:[],\r\n            spaceUsage:[],\r\n            vendorUsage:[],\r\n            modelUsage:[],\r\n            ownerUsage:[],\r\n\r\n            showStatus:false,\r\n            statusMessage:'',\r\n            statusSeverity:'',\r\n        };\r\n\r\n        this.closeShowStatus = this.closeShowStatus.bind(this);\r\n        this.generateReport = this.generateReport.bind(this);\r\n\r\n        axios.defaults.headers.common['token'] = this.props.token;\r\n        axios.defaults.headers.common['privilege'] = this.props.privilege;\r\n    }\r\n\r\n    generateReport() {\r\n        axios.get(getURL(statsMainPath, StatsCommand.GENERATE_REPORT)).then(response => {\r\n                try {\r\n                    var data = response.data;\r\n                    var totalUsage = [];\r\n                    var totalUsageRow = [\"Total Usage\"];\r\n                    totalUsageRow.push(data[\"totalUsage\"]);\r\n                    totalUsage.push(totalUsageRow);\r\n\r\n                    var spaceUsage = JSONtoArr(data[\"spaceUsage\"]);\r\n                    if (spaceUsage.length === 0) {\r\n                        spaceUsage.push([\"No space is currently being used\", []])\r\n                    }\r\n                    var vendorUsage = JSONtoArr(data[\"vendorUsage\"]);\r\n                    if (vendorUsage.length === 0) {\r\n                        vendorUsage.push([\"No vendors currently using space\", []])\r\n                    }\r\n                    var modelUsage = JSONtoArr(data[\"modelUsage\"]);\r\n                    if (modelUsage.length === 0) {\r\n                        modelUsage.push([\"No models currently using space\", []])\r\n                    }\r\n                    var ownerUsage = JSONtoArr(data[\"ownerUsage\"]);\r\n                    if (ownerUsage.length === 0) {\r\n                        ownerUsage.push([\"No owners currently using space\", []])\r\n                    }\r\n\r\n                    this.setState({\r\n                        showStatus: true,\r\n                        statusSeverity:\"success\",\r\n                        statusMessage: \"Success\",\r\n                        tableValues: {\r\n                            \"totalUsage\":totalUsage,\r\n                            \"spaceUsage\": spaceUsage,\r\n                            \"vendorUsage\": vendorUsage,\r\n                            \"modelUsage\": modelUsage,\r\n                            \"ownerUsage\": ownerUsage,\r\n                        },\r\n                     })\r\n                } catch {\r\n                    this.setState({ showStatus: true, statusMessage: response.data.message, statusSeverity:\"error\" })\r\n                }\r\n            });\r\n    }\r\n\r\n    closeShowStatus() {\r\n        this.setState({ showStatus: false })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <ErrorBoundray >\r\n                <StatusDisplay\r\n                    open={this.state.showStatus}\r\n                    severity={this.state.statusSeverity}\r\n                    closeStatus={this.closeShowStatus}\r\n                    message={this.state.statusMessage}\r\n                />\r\n                <div>\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        onClick={this.generateReport}\r\n                    >\r\n                        Generate New Report\r\n                    </Button>\r\n                </div>\r\n                {Object.keys(tables).map(key => (\r\n                <ExpansionPanel>\r\n                    <ExpansionPanelSummary\r\n                        expandIcon={<ExpandMoreIcon />}\r\n                    >\r\n                        <Typography>{tables[key]}</Typography>\r\n                    </ExpansionPanelSummary>\r\n                    <ExpansionPanelDetails>\r\n                        <TableContainer component={Paper}>\r\n                            <Table>\r\n                                <TableHead>\r\n                                    <TableRow >\r\n                                        {tableCols[key].map(column => (<TableCell><span id={column}>{column}</span></TableCell>))}\r\n                                    </TableRow>\r\n                                </TableHead>\r\n                                <TableBody>\r\n                                {this.state.tableValues[key].map(row => (\r\n                                    <TableRow>\r\n                                        {row.map(column => (<TableCell><span id={column}>{column + (isNaN(column) ? \"\" : \"%\")}</span></TableCell>))}\r\n                                    </TableRow>\r\n                                ))}\r\n                                </TableBody>\r\n                            </Table>\r\n                        </TableContainer>\r\n                    </ExpansionPanelDetails>\r\n                </ExpansionPanel>\r\n                ))}\r\n                </ErrorBoundray>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","export enum LogCommand {\r\n    TEST = \"test/\",\r\n    GET_LOGS = \"getlogs/\",\r\n}\r\n","import React from \"react\"\r\n\r\nimport axios from 'axios';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Button from '@material-ui/core/Button';\r\nimport { TextField } from '@material-ui/core';\r\n\r\nimport { LogCommand } from \"../enums/LogCommands.ts\";\r\nimport getURL from \"../../helpers/functions/GetURL\";\r\nimport * as Constants from \"../../Constants\";\r\n\r\nconst useStyles = {\r\n    table: {\r\n      minWidth: 650,\r\n    },\r\n    searchbar: {\r\n        minWidth: \"200px\",\r\n        flexGrow: 1,\r\n    },\r\n  };\r\n\r\nfunction makeTableData(index, timestamp, type, message) {\r\n    return { index, timestamp, type, message };\r\n}\r\n\r\nconst typeKey = \"type\";\r\nconst timestampKey = \"timestamp\";\r\nconst USER_KEY = \"user\";\r\nconst ASSET_KEY = \"asset\";\r\n\r\nclass LogsView extends React.Component  {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            logItems:[],\r\n            filteredLogs:[],\r\n            allLogs:null,\r\n            filterUser:\"\",\r\n            filterAsset:\"\",\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getLogs();\r\n    }\r\n\r\n    getLogs = () => {\r\n        axios.get(getURL(Constants.LOGS_MAIN_PATH, LogCommand.GET_LOGS)).then(response => this.parseLog(response.data.log));\r\n    }\r\n\r\n    parseLog = (logs) => {\r\n        var items = [];\r\n        logs.map((log, index) => {\r\n            var message = \"\";\r\n            Object.entries(log).map(([key, value]) => {\r\n                if (key === typeKey || key === timestampKey) {\r\n                    return;\r\n                }\r\n                message += value + \"\\n\";\r\n            });\r\n            items.push(makeTableData(index, log[timestampKey], log[typeKey], message));\r\n        });\r\n\r\n        this.setState({ logItems: items, filteredLogs:items, allLogs:logs });\r\n    }\r\n\r\n    filter = () => {\r\n        this.filterByUser();\r\n    }\r\n\r\n    filterByUser = () => {\r\n        var user = this.state.filterUser;\r\n        var filteredItems = [];\r\n\r\n        this.state.logItems.map((log) => {\r\n            var entry = this.state.allLogs[log.index];\r\n            if (USER_KEY in entry) {\r\n                if (entry[USER_KEY].includes(user)) {\r\n                    filteredItems.push(log);\r\n                }\r\n            }\r\n        });\r\n\r\n        let items = (user===\"\") ? this.state.logItems : filteredItems;\r\n        this.setState({ filteredLogs:items }, () => { this.filterByAsset() });\r\n    }\r\n\r\n    filterByAsset = () => {\r\n        var asset = this.state.filterAsset;\r\n        var filteredItems = [];\r\n\r\n        this.state.filteredLogs.map((log) => {\r\n            var entry = this.state.allLogs[log.index];\r\n            if (ASSET_KEY in entry) {\r\n                if (entry[ASSET_KEY].includes(asset)) {\r\n                    filteredItems.push(log);\r\n                }\r\n            }\r\n        });\r\n\r\n        let items = (asset===\"\") ? this.state.filteredLogs : filteredItems;\r\n        this.setState({ filteredLogs:items });\r\n    }\r\n\r\n    updateFilterUser = (event) => {\r\n        this.setState({ filterUser: event.target.value }, () => { this.filter() });\r\n    }\r\n\r\n    updateFilterAsset = (event) => {\r\n        this.setState({ filterAsset: event.target.value }, () => { this.filter() });\r\n    }\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    onClick={this.getLogs}\r\n                >\r\n                    Refresh Logs\r\n                </Button>\r\n                <TextField\r\n                    className={classes.searchbar}\r\n                    name={\"filter-users\"}\r\n                    placeholder=\"Search users\"\r\n                    fullWidth\r\n                    onChange={this.updateFilterUser}\r\n                />\r\n                <TextField\r\n                    className={classes.searchbar}\r\n                    name={\"filter-assets\"}\r\n                    placeholder=\"Search assets\"\r\n                    fullWidth\r\n                    onChange={this.updateFilterAsset}\r\n                />\r\n                <TableContainer component={Paper}>\r\n                    <Table className={classes.table} aria-label=\"simple table\">\r\n                        <TableHead>\r\n                        <TableRow>\r\n                            <TableCell align=\"left\">Timestamp</TableCell>\r\n                            <TableCell align=\"left\">type</TableCell>\r\n                            <TableCell align=\"left\">Message</TableCell>\r\n                        </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                        {this.state.filteredLogs.map(logItem => (\r\n                            <TableRow key={logItem.timestamp}>\r\n                                <TableCell aligh=\"left\">{logItem.timestamp}</TableCell>\r\n                                <TableCell align=\"left\">{logItem.type}</TableCell>\r\n                                <TableCell align=\"left\">{logItem.message}</TableCell>\r\n                            </TableRow>\r\n                        ))}\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withStyles(useStyles)(LogsView);\r\n","import React from 'react';\r\n\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport AccountCircle from '@material-ui/icons/AccountCircle';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\n\r\nimport ModelsView from './models/pages/ModelsView';\r\nimport UsersView from './users/pages/UsersView';\r\nimport AssetsView from './assets/pages/AssetsView';\r\nimport RacksView from './racks/pages/RacksView';\r\nimport StatisticsView from './statistics/pages/StatisticsView';\r\nimport LogsView from \"./logs/pages/LogsView\";\r\n\r\nimport { Privilege } from './enums/privilegeTypes.ts'\r\n\r\nimport ErrorBoundry from './errors/ErrorBoundry';\r\n\r\nimport '../stylesheets/TabStyles.css';\r\n\r\nconst useStyles = theme => ({\r\n    root: {\r\n      flexGrow: 1,\r\n    },\r\n    menuButton: {\r\n      marginRight: theme.spacing(2),\r\n    },\r\n    title: {\r\n      flexGrow: 1,\r\n    },\r\n    tab:{\r\n        flexGrow:'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        maxWidth: \"100%\",\r\n        width:\"100%\",\r\n        margin:\"0 auto\",\r\n    }\r\n  });\r\n\r\nclass TabViewer extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            currentTabID:0,\r\n            anchorEl: null,\r\n            isMenuOpen:false,\r\n        };\r\n        this.handleChange = this.handleChange.bind(this);\r\n    }\r\n\r\n    handleChange(event, newValue) {\r\n        this.setState({ currentTabID: newValue })\r\n    }\r\n\r\n    handleProfileMenuOpen = (event) => {\r\n        this.setState({ anchorEl: event.currentTarget, isMenuOpen:true });\r\n    }\r\n\r\n    handleMenuClose = () => {\r\n        this.setState({ anchorEl: null, isMenuOpen:false });\r\n    };\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n\r\n        return (\r\n        <div className={classes.root}>\r\n            <ErrorBoundry>\r\n            <AppBar position=\"static\">\r\n                <Toolbar>\r\n                    <Typography variant=\"h6\" className={classes.title}>\r\n                        Hyposoft Server Management\r\n                    </Typography>\r\n                    <div>\r\n                        <IconButton\r\n                            aria-label=\"account of current user\"\r\n                            aria-controls=\"menu-appbar\"\r\n                            aria-haspopup=\"true\"\r\n                            color=\"inherit\"\r\n                            onClick={this.handleProfileMenuOpen}\r\n                        >\r\n                            <AccountCircle />\r\n                        </IconButton>\r\n                        <Menu\r\n                            anchorEl={this.state.anchorEl}\r\n                            anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n                            id='primary-search-account-menu'\r\n                            keepMounted\r\n                            transformOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n                            open={this.state.isMenuOpen}\r\n                            onClose={this.handleMenuClose}\r\n                        >\r\n                            <MenuItem>{\"Username: \" + this.props.username}</MenuItem>\r\n                            <MenuItem>{\"Privilege: \" + this.props.privilege}</MenuItem>\r\n                            <MenuItem onClick={this.props.logout} >LOGOUT</MenuItem>\r\n                        </Menu>\r\n                    </div>\r\n                </Toolbar>\r\n            </AppBar>\r\n\r\n            <Tabs value={this.state.currentTabID} onChange={this.handleChange}\r\n                indicatorColor=\"primary\"\r\n                textColor=\"primary\"\r\n                centered\r\n            >\r\n                    <Tab value={0} style={{flexGrow: 1,}} label=\"Models\"> </Tab>\r\n                    <Tab value={1} style={{flexGrow: 1,}} label=\"Assets\" ></Tab>\r\n                    {(this.props.privilege === Privilege.ADMIN) ? <Tab value={2} style={{flexGrow: 1,}} label=\"Users\"></Tab> : null}\r\n                    <Tab value={3} style={{flexGrow: 1,}} label=\"Racks\" />\r\n                    <Tab value={4} style={{flexGrow: 1,}} label=\"Statistics\" />\r\n                    <Tab value={5} style={{flexGrow: 1,}} label=\"Logs\" />\r\n            </Tabs>\r\n            {this.state.currentTabID !== 0 ? null :\r\n            <Typography\r\n                component=\"div\"\r\n                role=\"tabpanel\"\r\n                id={`simple-tabpanel-0`}\r\n                aria-labelledby={`simple-tab-0`}\r\n            >\r\n                <Container className={classes.tab} ><ModelsView token={this.props.token} privilege={this.props.privilege} /></Container>\r\n            </Typography>}\r\n            {this.state.currentTabID !== 1 ? null :\r\n            <Typography\r\n                component=\"div\"\r\n                role=\"tabpanel\"\r\n                id={`simple-tabpanel-0`}\r\n                aria-labelledby={`simple-tab-0`}\r\n            >\r\n                <Container className={classes.tab} ><AssetsView token={this.props.token} privilege={this.props.privilege} /></Container>\r\n            </Typography>}\r\n            {this.state.currentTabID !== 2 ? null :\r\n            <Typography\r\n                component=\"div\"\r\n                role=\"tabpanel\"\r\n                id={`simple-tabpanel-0`}\r\n                aria-labelledby={`simple-tab-0`}\r\n            >\r\n                <Container className={classes.tab} ><UsersView token={this.props.token} privilege={this.props.privilege} /></Container>\r\n            </Typography>}\r\n            {this.state.currentTabID !== 3 ? null :\r\n            <Typography\r\n                component=\"div\"\r\n                role=\"tabpanel\"\r\n                id={`simple-tabpanel-0`}\r\n                aria-labelledby={`simple-tab-0`}\r\n            >\r\n                <Container className={classes.tab} ><RacksView token={this.props.token} privilege={this.props.privilege} /></Container>\r\n            </Typography>}\r\n            {this.state.currentTabID !== 4 ? null :\r\n            <Typography\r\n                component=\"div\"\r\n                role=\"tabpanel\"\r\n                hidden={this.state.currentTabID !== 4}\r\n                id={`simple-tabpanel-0`}\r\n                aria-labelledby={`simple-tab-0`}\r\n            >\r\n                <Container className={classes.tab} ><StatisticsView token={this.props.token} privilege={this.props.privilege} /></Container>\r\n            </Typography>}\r\n            {this.state.currentTabID !== 5 ? null :\r\n            <Typography\r\n                component=\"div\"\r\n                role=\"tabpanel\"\r\n                hidden={this.state.currentTabID !== 5}\r\n                id={`tab-panel-logs`}\r\n                aria-labelledby={`tab-panel-logs`}\r\n            >\r\n                <Container className={classes.tab} ><LogsView /></Container>\r\n            </Typography>}\r\n            </ErrorBoundry>\r\n        </div>);\r\n    }\r\n}\r\n\r\n\r\nexport default withStyles(useStyles)(TabViewer);\r\n","import React from \"react\";\r\n\r\nimport axios from 'axios';\r\n\r\nimport Login from \"./Login\";\r\nimport TabViewer from \"./Tabs\";\r\nimport getURL from './helpers/functions/GetURL';\r\nimport * as Constants from \"./Constants\";\r\n\r\nconst storedToken = 'token';\r\nconst storedPrivilege = 'privilege';\r\nconst storedLoggedIn = 'loggedIn';\r\nconst storedUsername = 'username';\r\n\r\nexport default class PageSelector extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      token:sessionStorage.getItem(storedToken) || '',\r\n      privilege:sessionStorage.getItem(storedPrivilege) || '',\r\n      loggedIn:sessionStorage.getItem(storedLoggedIn) || '',\r\n      username:sessionStorage.getItem(storedUsername) || '',\r\n    };\r\n\r\n  }\r\n\r\n  componentDidMount() {\r\n\taxios.defaults.headers.common['token'] = this.state.token;\r\n    axios.defaults.headers.common['privilege'] = this.state.privilege;\r\n  }\r\n\r\n  login = (token, username, privilege) => {\r\n    sessionStorage.setItem(storedToken, token);\r\n    sessionStorage.setItem(storedPrivilege, privilege);\r\n    sessionStorage.setItem(storedLoggedIn, true);\r\n    sessionStorage.setItem(storedUsername, username);\r\n\r\n    axios.defaults.headers.common['token'] = token;\r\n    axios.defaults.headers.common['privilege'] = privilege;\r\n\r\n    this.setState({\r\n      token:token,\r\n      privilege:privilege,\r\n      loggedIn:true,\r\n      username: username,\r\n    })\r\n  }\r\n\r\n  loginWithOAuth = (token, username, privilege) => {\r\n\tsessionStorage.setItem(storedToken, token);\r\n    sessionStorage.setItem(storedPrivilege, privilege);\r\n    sessionStorage.setItem(storedLoggedIn, true);\r\n\tsessionStorage.setItem(storedUsername, username);\r\n\r\n\taxios.defaults.headers.common['token'] = token;\r\n    axios.defaults.headers.common['privilege'] = privilege;\r\n\r\n    this.setState({\r\n      token:token,\r\n      privilege:privilege,\r\n      loggedIn:true,\r\n      username: username,\r\n    }, () => { window.history.replaceState({}, \"Hyposoft Asset Management\", \"/\") });\r\n\t//window.location.href = Constants.SHIB_REDIRECT_URI;\r\n  }\r\n\r\n  logout = () => {\r\n    axios.get(getURL('users/', 'logout'));\r\n\r\n    this.setState({\r\n      token:'',\r\n      privilege:'',\r\n      loggedIn:false,\r\n      username:'',\r\n    });\r\n\r\n    sessionStorage.removeItem(storedToken);\r\n    sessionStorage.removeItem(storedPrivilege);\r\n    sessionStorage.removeItem(storedLoggedIn);\r\n    sessionStorage.removeItem(storedUsername);\r\n\r\n    window.location = Constants.SHIB_REDIRECT_URI;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        {this.state.loggedIn ?\r\n          \t<TabViewer\r\n\t\t\t\ttoken={this.state.token}\r\n\t\t\t\tusername={this.state.username}\r\n\t\t\t\tprivilege={this.state.privilege}\r\n\t\t\t\tlogout={this.logout}\r\n          \t/> :\r\n\t\t  \t<Login\r\n\t\t\t\tloginFunc={this.login}\r\n\t\t\t\tshib={this.props.redirected}\r\n\t\t\t\tloginFuncOAuth={this.loginWithOAuth}\r\n\t\t\t/>}\r\n      </div>\r\n    );\r\n  }\r\n\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './stylesheets/index.css';\nimport PageSelector from './javascript/PageSelector';\n\nReactDOM.render(<PageSelector redirected={document.referrer}/>, document.getElementById('root'));\n"],"sourceRoot":""}
