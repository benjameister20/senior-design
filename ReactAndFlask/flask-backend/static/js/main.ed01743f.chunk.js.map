{"version":3,"sources":["javascript/enums/privilegeTypes.ts","javascript/Constants.jsx","javascript/helpers/functions/GetURL.jsx","javascript/models/enums/ModelCommands.ts","javascript/models/enums/ModelInputs.ts","javascript/helpers/StatusDisplay.jsx","javascript/errors/ErrorBoundry.jsx","javascript/ShibLogin.jsx","javascript/Login.jsx","javascript/models/helpers/ButtonsModel.jsx","javascript/models/helpers/FilterModel.jsx","javascript/models/helpers/DetailModel.jsx","javascript/models/helpers/CreateModel.jsx","javascript/users/enums/UserCommands.ts","javascript/users/enums/UserInputs.ts","javascript/helpers/UploadModal.jsx","javascript/helpers/TableView.jsx","javascript/models/ModelConstants.jsx","javascript/models/pages/ModelsView.jsx","javascript/assets/enums/AssetCommands.ts","javascript/assets/enums/AssetInputs.ts","javascript/users/helpers/FilterUser.jsx","javascript/users/helpers/DetailUser.jsx","javascript/users/helpers/CreateUser.jsx","javascript/users/UserConstants.jsx","javascript/users/pages/UsersView.jsx","javascript/assets/helpers/ButtonsAsset.jsx","javascript/assets/helpers/FilterAsset.jsx","javascript/assets/helpers/DetailsAsset.jsx","javascript/assets/helpers/CreateAsset.jsx","javascript/racks/enums/RackCommands.ts","javascript/assets/Asset.ts","javascript/assets/pages/AssetsView.jsx","javascript/statistics/enums/StatsCommands.ts","javascript/racks/pages/RacksView.jsx","javascript/helpers/functions/JSONtoArr.jsx","javascript/statistics/pages/StatisticsView.jsx","javascript/Tabs.jsx","javascript/PageSelector.jsx","index.jsx","images/logo.png"],"names":["Privilege","serverEndpoint","RackX","CLIENT_ID","SHIBBOLETH_LOGIN","encodeURIComponent","getURL","path","endpoint","Constants","ModelCommand","ModelInput","StatusDisplay","props","state","Snackbar","open","this","autoHideDuration","onClose","closeStatus","elevation","variant","severity","message","IconButton","aria-label","color","size","onClick","fontSize","React","Component","ErrorBoundary","hasError","error","errorInfo","children","ShibLogin","username","password","statusMessage","showStatus","statusSeverity","Grid","container","spacing","direction","justify","alignItems","onKeyDown","e","onKeyPressed","style","item","xs","src","logo","height","Card","minWidth","CardContent","Typography","fontWeight","gutterBottom","closeShowStatus","loginMainPath","queryString","require","Login","getDukeCredentials","token","axios","get","headers","then","response","console","log","post","data","netid","mail","displayName","setState","loginFunc","loginWithOAuth","window","location","initialize","shib","params","parse","hash","substring","access_token","oauth","initialized","bind","submitCredentials","ADMIN","event","target","value","key","preventDefault","stopPropagation","TextField","id","label","required","ref","onChange","updateUsername","type","updatePassword","Button","direciton","width","ButtonsModel","startIcon","openImportModal","downloadTable","FilterModel","filters","hasOwnProperty","forceUpdate","search","map","filter","index","InputBase","placeholder","inputProps","updateSearchText","createInputs","name","inputs","DetailModel","updateColor","updateModelColorDetails","hex","showConfirmationBox","closeModal","confirmDelete","deleteItem","delete","showDetailedView","ExpansionPanel","ExpansionPanelSummary","expandIcon","ExpansionPanelDetails","statusOpen","statusClose","loading","CircularProgress","Autocomplete","options","includeInputInList","freeSolo","defaultValue","defaultValues","vendor","renderInput","updateModelCreator","onBlur","fullWidth","disabled","modelNumber","powerPorts","cpu","memory","storage","comments","edit","UserCommand","UserInput","CreateModel","updateModelColor","createModel","UploadModal","Modal","top","left","transform","background","aria-labelledby","aria-describedby","showImportModal","closeImportModal","accept","chooseFile","uploadFile","textDescription","TableView","TableContainer","component","Paper","Table","className","TableHead","TableRow","columns","col","TableCell","TableBody","vals","row","keys","scope","GENERAL_MODEL_ERROR","modelsMainPath","ModelsView","create","createdModel","Vendor","model_number","Height","display_color","ethernet_ports","power_ports","CPU","Memory","Storage","Comment","showCreateModal","getVendorList","searchModels","createStatusOpen","createStatusMessage","createStatusSeverity","catch","ModelConstants","editModel","originalVendor","originalModelNumber","originalHeight","detailedValues","detailStatusOpen","detailStatusMessage","detailStatusSeverity","deleteModel","detailViewModel","modelNum","detailView","detailViewLoading","viewVendor","viewModel","searchVendor","searchModelNum","searchHeight","items","searchText","VENDOR_VALUES","vendorsList","results","madeVendorQuery","sendUploadedFile","UPLOAD_FILE","summary","EXPORT_FILE","csvData","csvLink","link","click","openCreateModal","closeCreateModal","closeDetailedView","updateModelEdited","reason","createStatusClose","detailStatusClose","FormData","append","importedFile","files","createdVendor","createdModelNum","createdHeight","createdDispClr","createdEthPorts","createdPwrPorts","createdCPU","createdMem","createdStorage","createdComments","deleteVendor","defaults","common","privilege","filename","r","useAutocomplete","USER","AssetCommand","AssetInput","Filters","DetailedView","input","CreateModal","class","GENERAL_USER_ERROR","usersMainPath","UsersView","createUser","createdUser","Username","Password","display_name","Email","searchUsers","UserConstants","editUser","originalUsername","deleteUser","deleteUsername","detailViewUser","viewUser","searchUsernm","searchEml","searchDspNm","searchPriv","updateUserCreator","updateUserEdited","createStatus","AssetButtons","showTooltip","description","DetailAsset","MODEL","HOSTNAME","RACK","RACK_U","OWNER","COMMENT","DATACENTER","MAC_ADDRESS","NETWORK_CONNECTIONS","POWER_CONNECTIONS","ASSET_NUMBER","Tooltip","placement","model","title","getModel","hostname","getHostname","datacenter","updateTooltip","getDatacenter","rack","getRack","rackU","getRackU","owner","getOwner","macAddress","getMacAddr","networkConnections","getNetworkConn","powerConnections","getPwrConn","assetNum","nextAssetNum","getAssetNum","comment","multiline","getComment","RackCommand","assetsMainPath","CreateAsset","getNextAssetNum","asset_number","createAsset","updateAssetCreator","Asset","datacenter_id","tags","mac_address","network_connections","power_connections","json","val","successToken","errorToken","AssetsView","createdAsset","getAssetAsJSON","showCreate","searchAssets","editAsset","body","RACK_ORIGINAL","originalRack","RACK_U_ORIGINAL","originalrack_position","deleteAsset","detailViewAsset","rack_position","viewAssetRack","searchedAsset","getModelList","madeModelQuery","GET_ALL_MODELS","modelList","getUserList","madeOwnerQuery","GET_ALL_OWNERS","ownerList","showImport","Object","updateVal","updateAssetEdited","deleteAssetRack","deleteAssetrack_position","viewAssetrack_position","StatsCommand","racksMainPath","RacksView","getAllRacks","GET_ALL_RACKS","racksList","racks","createRacks","updateRacks","CREATE_RACKS","deleteRacks","DELETE_RACKS","viewRacks","GET_RACK_DETAILS","changeStartingLetter","startingRackLetter","changeEndingLetter","endingRackLetter","changeStartingNum","startingRackNumber","changeEndingNum","endingRackNumber","madeRacksQuery","command","win","focus","FormControl","Select","MenuItem","FormHelperText","InputProps","min","jsonToArr","incomingJSON","JSON","entries","length","constructor","push","tables","tableCols","StatisticsView","tableValues","totalUsage","spaceUsage","vendorUsage","modelUsage","ownerUsage","generateReport","GENERATE_REPORT","totalUsageRow","JSONtoArr","column","isNaN","TabViewer","handleProfileMenuOpen","anchorEl","currentTarget","isMenuOpen","handleMenuClose","currentTabID","handleChange","newValue","AppBar","position","aria-controls","aria-haspopup","Menu","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","logout","Tabs","indicatorColor","textColor","centered","Tab","flexGrow","role","hidden","storedToken","storedPrivilege","storedLoggedIn","storedUsername","PageSelector","sessionStorage","getItem","loggedIn","login","setItem","removeItem","reload","redirected","ReactDOM","render","document","referrer","getElementById","module","exports"],"mappings":"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","file":"static/js/main.ed01743f.chunk.js","sourcesContent":["export enum Privilege  {\r\n    ADMIN = \"admin\",\r\n    USER = \"user\",\r\n};\r\n","/**\r\n * Constants file\r\n */\r\n\r\nexport const localServerEndpoint = 'http://localhost:4010/';\r\nexport const testServerEndpoint = ' https://parseltongue-finishinge-lfw68m.herokuapp.com/';\r\nexport const devServerEndpoint = 'https://parseltongue-dev.herokuapp.com/';\r\nexport const prodServerEndpoint = 'https://parseltongue-prod.herokuapp.com/';\r\n\r\nexport const serverEndpoint = localServerEndpoint;\r\n\r\n\r\nexport const RackX = [\r\n    'A', 'B', 'C', 'D', 'E',\r\n    'F', 'G', 'H', 'I', 'J',\r\n    'K', 'L', 'M', 'N', 'O',\r\n    'P', 'Q', 'R', 'S', 'T',\r\n    'W', 'X', 'Y', 'Z',\r\n]\r\n\r\n\r\nexport const CLIENT_ID = \"ParselTonguesUserAuth\";\r\nexport const CLIENT_SECRET = \"LpUwB*eiK4Iw#1gaCu5jYp1u5uRF3ERsdmuNUGoKYNzn7rHm7b\";\r\nexport const SCOPE = \"basic\";\r\n\r\nexport const SHIBBOLETH_LOGIN =\r\n    \"https://oauth.oit.duke.edu/oauth/authorize.php?\"\r\n     + \"client_id=\" + encodeURIComponent(CLIENT_ID)\r\n     + \"&client_secret=\" + encodeURIComponent(CLIENT_SECRET)\r\n     + \"&redirect_uri=\" + encodeURIComponent('http://localhost:3000/')\r\n     + \"&response_type=token\"\r\n     + \"&state=1129\"\r\n     + \"&scope=\" + encodeURIComponent(SCOPE);\r\n","import * as Constants from '../../Constants';\r\n\r\nexport default function getURL(path, endpoint) {\r\n    return Constants.serverEndpoint + path + endpoint;\r\n}\r\n","export enum ModelCommand {\r\n    create = 'create/',\r\n    delete = 'delete/',\r\n    edit = 'edit/',\r\n    view = 'view/',\r\n    detailView = 'detailView/',\r\n    search = 'search/',\r\n    VENDOR_VALUES = 'assistedvendor/',\r\n    UPLOAD_FILE = 'import/',\r\n    EXPORT_FILE = 'export/'\r\n}\r\n","export enum ModelInput {\r\n    Vendor = 'vendor',\r\n    model_number = 'model_number',\r\n    Height = 'height',\r\n    display_color = 'display_color',\r\n    ethernet_ports = 'ethernet_ports',\r\n    power_ports = 'power_ports',\r\n    CPU = 'cpu',\r\n    Memory = 'memory',\r\n    Storage = 'storage',\r\n    Comment = 'comment'\r\n}\r\n","import React from 'react';\r\n\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\n\r\n\r\nexport default class StatusDisplay extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n\r\n        };\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Snackbar open={this.props.open} autoHideDuration={12000} onClose={this.props.closeStatus}>\r\n                    <MuiAlert elevation={6} variant=\"filled\"\r\n                        severity={this.props.severity}\r\n                    >\r\n                        <div>\r\n                        {this.props.message}\r\n                        <IconButton\r\n                            aria-label=\"close\"\r\n                            color=\"inherit\"\r\n                            size=\"small\"\r\n                            onClick={this.props.closeStatus}\r\n                        >\r\n                            <CloseIcon fontSize=\"inherit\" />\r\n                        </IconButton>\r\n                        </div>\r\n                    </MuiAlert >\r\n                </Snackbar>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\r\n\r\nexport default class ErrorBoundary extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = { hasError: false };\r\n    }\r\n\r\n    static getDerivedStateFromError(error) {\r\n      // Update state so the next render will show the fallback UI.\r\n      return \"An unforseen error occurred. Please refresh the page and try again later.\";\r\n    }\r\n\r\n    componentDidCatch(error, errorInfo) {\r\n      // You can also log the error to an error reporting service\r\n      //logErrorToMyService(error, errorInfo);\r\n    }\r\n\r\n    render() {\r\n      if (this.state.hasError) {\r\n        // You can render any custom fallback UI\r\n        return <h1>Something went wrong.</h1>;\r\n      }\r\n\r\n      return this.props.children;\r\n    }\r\n}\r\n","import React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport StatusDisplay from './helpers/StatusDisplay';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport logo from '../images/logo.png';\r\n\r\n\r\n\r\nexport default class ShibLogin extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            username:'',\r\n            password:'',\r\n            statusMessage:'',\r\n            showStatus:false,\r\n            statusSeverity:'info',\r\n        };\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Grid\r\n                container\r\n                spacing={5}\r\n                direction=\"column\"\r\n                justify=\"flex-start\"\r\n                alignItems=\"center\"\r\n                onKeyDown={(e) => this.onKeyPressed(e)}\r\n                style={{\r\n                    \"minHeight\": \"102vh\",\r\n                    \"background\": \"#56ab2f\",\r\n                    \"background\": \"-webkit-linear-gradient(to top, #a8e063, #56ab2f)\",\r\n                    \"background\": \"linear-gradient(to top, #a8e063, #56ab2f)\",\r\n                }}\r\n            >\r\n                <Grid item xs={12}>\r\n                    <img src={logo} style={{height: \"200px\", \"marginTop\": \"50px\"}} />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <Card\r\n                        style={\r\n                            {\r\n                                minWidth: '20vw',\r\n                            }\r\n                        }\r\n                    >\r\n                        <CardContent>\r\n                            <Grid\r\n                                container\r\n                                spacing={1}\r\n                                direction=\"column\"\r\n                                justify=\"center\"\r\n                                alignItems=\"center\"\r\n                            >\r\n                                <Grid container item alignItems=\"flex-start\" xs={12}>\r\n                                    <Typography\r\n                                        variant=\"h6\"\r\n                                        color=\"textPrimary\"\r\n                                        fontWeight=\"fontWeightBold\"\r\n                                        gutterBottom\r\n                                    >\r\n                                        Please wait while we log you in...\r\n                                    </Typography>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </CardContent>\r\n                    </Card>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <StatusDisplay\r\n                        open={this.state.showStatus}\r\n                        severity={this.state.statusSeverity}\r\n                        closeStatus={this.closeShowStatus}\r\n                        message={this.state.statusMessage}\r\n                    />\r\n                </Grid>\r\n            </Grid>\r\n\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport axios from 'axios';\r\nimport getURL from './helpers/functions/GetURL';\r\nimport { Privilege } from './enums/privilegeTypes.ts'\r\nimport StatusDisplay from './helpers/StatusDisplay';\r\nimport ErrorBoundary from './errors/ErrorBoundry';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport logo from '../images/logo.png';\r\nimport ShibLogin from './ShibLogin';\r\nimport * as Constants from \"./Constants\";\r\n\r\nconst loginMainPath = 'users/';\r\nconst queryString = require('query-string');\r\n\r\nexport default class Login extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            username:'',\r\n            password:'',\r\n            statusMessage:'',\r\n            showStatus:false,\r\n            statusSeverity:'info',\r\n            initialized:false,\r\n            oauth:false,\r\n        };\r\n\r\n        this.closeShowStatus = this.closeShowStatus.bind(this);\r\n        this.submitCredentials = this.submitCredentials.bind(this);\r\n    }\r\n\r\n    submitCredentials() {\r\n        axios.post(\r\n            getURL(loginMainPath, 'authenticate'),\r\n            {\r\n                \"username\":this.state.username,\r\n                \"password\":this.state.password,\r\n            }\r\n            ).then(response => {\r\n                var valid = response.data['message'];\r\n                if (valid == 'success') {\r\n                    this.setState({ message: '' });\r\n                    this.props.loginFunc(response.data['token'], this.state.username, response.data['privilege']);\r\n                } else {\r\n                    this.setState({ showStatus:true, statusMessage:response.data['message'] });\r\n                }\r\n            });\r\n        this.props.loginFunc('token', \"Administrator\", Privilege.ADMIN);\r\n    }\r\n\r\n    updateUsername(event) {\r\n        this.setState({ username: event.target.value })\r\n    }\r\n\r\n    updatePassword(event) {\r\n        this.setState({ password: event.target.value })\r\n    }\r\n\r\n    closeShowStatus() {\r\n        this.setState({ showStatus: false })\r\n    }\r\n\r\n    onKeyPressed(event) {\r\n        console.log(\"key down\");\r\n        if (event.key === 'Enter') {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n            this.submitCredentials();\r\n        }\r\n    }\r\n\r\n    getDukeCredentials = (token) => {\r\n        axios.get('https://api.colab.duke.edu/identity/v1/', {\r\n            headers: {\r\n                'x-api-key': Constants.CLIENT_ID,\r\n                'Authorization': `Bearer ${token}`\r\n            }\r\n        }).then(response => {\r\n            console.log(response);\r\n            axios.post(\r\n                getURL(loginMainPath, 'oauth'),\r\n                {\r\n                    \"username\":response.data.netid,\r\n                    \"email\":response.data.mail,\r\n                    \"display_name\":response.data.displayName,\r\n                    \"client_id\":Constants.CLIENT_ID,\r\n                    \"token\":token,\r\n                }\r\n                ).then(response => {\r\n                    var valid = response.data['message'];\r\n                    if (valid == 'success') {\r\n                        this.setState({ message: '' });\r\n                        this.props.loginFunc(response.data['token'], this.state.username, response.data['privilege']);\r\n                    } else {\r\n                        this.setState({ showStatus:true, statusMessage:response.data['message'] });\r\n                    }\r\n            });\r\n        });\r\n    }\r\n\r\n    loginWithOAuth = () => {\r\n        window.location = Constants.SHIBBOLETH_LOGIN;\r\n    }\r\n\r\n    initialize = () => {\r\n        console.log(this.props.shib);\r\n        try {\r\n            var params = queryString.parse(window.location.hash.substring(1));\r\n            if (params.access_token != null) {\r\n                this.getDukeCredentials(params.access_token);\r\n                this.setState({ oauth: true });\r\n            }\r\n\r\n            console.log(params);\r\n        } catch(e) {\r\n            console.log(\"tried:\")\r\n        }\r\n        this.setState({ initialized: true });\r\n    }\r\n\r\n    render() {\r\n        if (!this.state.initialized) {\r\n            this.initialize();\r\n        }\r\n\r\n        return (\r\n\r\n            <div>\r\n                <ErrorBoundary>\r\n            { (this.state.oauth) ? <ShibLogin />:\r\n            <Grid\r\n                container\r\n                spacing={5}\r\n                direction=\"column\"\r\n                justify=\"flex-start\"\r\n                alignItems=\"center\"\r\n                onKeyDown={(e) => this.onKeyPressed(e)}\r\n                style={{\r\n                    \"minHeight\": \"102vh\",\r\n                    \"background\": \"#56ab2f\",\r\n                    \"background\": \"-webkit-linear-gradient(to top, #a8e063, #56ab2f)\",\r\n                    \"background\": \"linear-gradient(to top, #a8e063, #56ab2f)\",\r\n                }}\r\n            >\r\n                <Grid item xs={12}>\r\n                    <img src={logo} style={{height: \"200px\", \"marginTop\": \"50px\"}} />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <Card\r\n                        style={\r\n                            {\r\n                                minWidth: '20vw',\r\n                            }\r\n                        }\r\n                    >\r\n                        <CardContent>\r\n                            <Grid\r\n                                container\r\n                                spacing={1}\r\n                                direction=\"column\"\r\n                                justify=\"center\"\r\n                                alignItems=\"center\"\r\n                            >\r\n                                <Grid container item alignItems=\"flex-start\" xs={12}>\r\n                                    <Typography\r\n                                        variant=\"h4\"\r\n                                        color=\"textPrimary\"\r\n                                        fontWeight=\"fontWeightBold\"\r\n                                        gutterBottom\r\n                                    >\r\n                                        Login\r\n                                    </Typography>\r\n                                </Grid>\r\n                                <Grid item xs={12}>\r\n                                    <TextField\r\n                                        id=\"username-input\"\r\n                                        label=\"Username\"\r\n                                        variant=\"outlined\"\r\n                                        required={true}\r\n                                        ref='username'\r\n                                        onChange={this.updateUsername.bind(this)}\r\n                                        style={{minWidth: \"15vw\"}}\r\n                                    />\r\n                                </Grid>\r\n                                <Grid item xs={12}>\r\n                                    <TextField\r\n                                        id=\"password-input\"\r\n                                        label=\"Password\"\r\n                                        variant=\"outlined\"\r\n                                        required={true}\r\n                                        ref='password'\r\n                                        type=\"password\"\r\n                                        onChange={this.updatePassword.bind(this)}\r\n                                        style={{minWidth: \"15vw\"}}\r\n                                    />\r\n                                </Grid>\r\n                                <Grid item xs={12}>\r\n                                    <Button\r\n                                        onClick={this.submitCredentials}\r\n                                        variant=\"contained\"\r\n                                        color=\"primary\"\r\n                                        style={{minWidth: \"15vw\"}}\r\n                                    >\r\n                                        Sign In\r\n                                    </Button>\r\n                                </Grid>\r\n                                <Grid container item direciton=\"row\" justify=\"center\" alignItems=\"center\" xs={12}>\r\n                                        <hr style={{width: \"5vw\"}} />\r\n                                        <Typography color=\"textSecondary\">\r\n                                            Or\r\n                                        </Typography>\r\n                                        <hr style={{width: \"5vw\"}} />\r\n                                </Grid>\r\n                                <Grid item xs={12}>\r\n                                    <Button\r\n                                        onClick={this.loginWithOAuth}\r\n                                        variant=\"contained\"\r\n                                        color=\"primary\"\r\n                                    >\r\n                                        Sign In with NetID\r\n                                    </Button>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </CardContent>\r\n                    </Card>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <StatusDisplay\r\n                        open={this.state.showStatus}\r\n                        severity={this.state.statusSeverity}\r\n                        closeStatus={this.closeShowStatus}\r\n                        message={this.state.statusMessage}\r\n                    />\r\n                </Grid>\r\n            </Grid>\r\n            }\r\n            </ErrorBoundary>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\r\nimport CloudDownloadIcon from '@material-ui/icons/CloudDownload';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nexport default class ButtonsModel extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n\r\n        };\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div>\r\n                <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    startIcon={<CloudUploadIcon />}\r\n                    onClick={this.props.openImportModal}\r\n                >\r\n                    Import\r\n                </Button>\r\n                <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    startIcon={<CloudDownloadIcon />}\r\n                    onClick={this.props.downloadTable}\r\n                >\r\n                    Export\r\n                </Button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nexport default class FilterModel extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            filters:{},\r\n        };\r\n    }\r\n\r\n    updateSearchText(event) {\r\n        if (this.state.filters.hasOwnProperty(event.target.id)) {\r\n            this.state.filters[event.target.id] = event.target.value;\r\n            this.forceUpdate();\r\n        } else {\r\n            this.state.filters[event.target.id] = event.target.value;\r\n            this.forceUpdate();\r\n        }\r\n    }\r\n\r\n    search() {\r\n        this.props.search(this.state.filters);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.props.filters.map((filter, index) => (\r\n                    <div>\r\n                        <SearchIcon />\r\n                        <InputBase\r\n                            placeholder={filter+\" filter\"}\r\n                            inputProps={{ 'aria-label': 'search' }}\r\n                            onChange={this.updateSearchText.bind(this)}\r\n                            id={filter}\r\n                        />\r\n                    </div>\r\n                ))\r\n                }\r\n                <div>\r\n                    <Button\r\n                        onClick={this.search.bind(this)}\r\n                    >\r\n                        Search\r\n                    </Button>\r\n                </div>\r\n                Click the search button to populate table. Searching with empty filters searches over all values. Click on row values to see detailed view.\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from '@material-ui/core/Button';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\r\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\r\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport { CompactPicker } from 'react-color';\r\nimport StatusDisplay from '../../helpers/StatusDisplay';\r\n\r\nfunction createInputs(name, label) {\r\n    return {label, name};\r\n}\r\n\r\nconst inputs = {\r\n    \"vendor\":createInputs('vendor', \"Vendor\", ),\r\n    \"modelNumber\":createInputs('model_number', \"Model Number\"),\r\n    \"height\":createInputs('height', \"Height\"),\r\n    \"displayColor\":createInputs('display_color', \"Display Color\"),\r\n    \"powerPorts\":createInputs('power_ports', \"Power Ports\"),\r\n    \"cpu\":createInputs('cpu', \"CPU\"),\r\n    \"memory\":createInputs('memory', \"Memory\"),\r\n    \"storage\":createInputs('storage', \"Storage\"),\r\n    \"comments\":createInputs('comments', \"Comments\"),\r\n}\r\n\r\nexport default class DetailModel extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            showConfirmationBox:false,\r\n            color:null,\r\n        };\r\n\r\n        this.closeModal = this.closeModal.bind(this);\r\n        this.confirmDelete = this.confirmDelete.bind(this);\r\n        this.deleteItem = this.deleteItem.bind(this);\r\n    }\r\n\r\n    confirmDelete() {\r\n        this.setState({ showConfirmationBox: true });\r\n    }\r\n\r\n    closeModal() {\r\n        this.setState({showConfirmationBox:false,});\r\n    }\r\n\r\n    deleteItem() {\r\n        this.setState({ showConfirmationBox: false });\r\n        this.props.delete();\r\n    }\r\n\r\n    updateColor = (color) => {\r\n        this.setState({ color: color });\r\n        this.props.updateModelColorDetails(color.hex);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n        <div>\r\n            {!this.props.showDetailedView ? null:\r\n            <ExpansionPanel >\r\n                    <ExpansionPanelSummary\r\n                        expandIcon={<ExpandMoreIcon />}\r\n                    >\r\n                        <Typography>Model Details</Typography>\r\n                    </ExpansionPanelSummary>\r\n                    <ExpansionPanelDetails>\r\n                        <StatusDisplay\r\n                            open={this.props.statusOpen}\r\n                            severity={this.props.statusSeverity}\r\n                            closeStatus={this.props.statusClose}\r\n                            message={this.props.statusMessage}\r\n                            autoHideDuration={6000}\r\n                        />\r\n                    {\r\n                this.props.loading ? <CircularProgress /> :\r\n                <div>\r\n                    <Autocomplete\r\n                            id=\"select-vendor\"\r\n                            options={this.props.options}\r\n                            includeInputInList\r\n                            freeSolo\r\n                            defaultValue={this.props.defaultValues[inputs.vendor.name]}\r\n                            renderInput={params => (\r\n                            <TextField {...params}\r\n                                label={inputs.vendor.label}\r\n                                name={inputs.vendor.name}\r\n                                onChange={this.props.updateModelCreator}\r\n                                onBlur={this.props.updateModelCreator}\r\n                                variant=\"outlined\" fullWidth\r\n                                disabled={this.props.disabled}\r\n                            />\r\n                            )}\r\n                        />\r\n                        <TextField id=\"standard-basic\" variant=\"outlined\"\r\n                            label={inputs.modelNumber.label} name={inputs.modelNumber.name}\r\n                            onChange={this.props.updateModelCreator}\r\n                            disabled={this.props.disabled}\r\n                            defaultValue={this.props.defaultValues[inputs.modelNumber.name]}\r\n                        />\r\n                        <TextField id=\"standard-basic\" variant=\"outlined\"\r\n                            label={inputs.height.label} name={inputs.height.name}\r\n                            onChange={this.props.updateModelCreator}\r\n                            disabled={this.props.disabled}\r\n                            defaultValue={this.props.defaultValues[inputs.height.name]}\r\n                        />\r\n                        <CompactPicker\r\n                            color={this.state.color || this.props.defaultValues[\"display_color\"]}\r\n                            onChange={this.updateColor}\r\n\r\n                        />\r\n                        <TextField id=\"standard-basic\" variant=\"outlined\"\r\n                            label={inputs.powerPorts.label} name={inputs.powerPorts.name}\r\n                            onChange={this.props.updateModelCreator}\r\n                            disabled={this.props.disabled}\r\n                            defaultValue={this.props.defaultValues[inputs.powerPorts.name]}\r\n                        />\r\n                        <TextField id=\"standard-basic\" variant=\"outlined\"\r\n                            label={inputs.cpu.label} name={inputs.cpu.name}\r\n                            onChange={this.props.updateModelCreator}\r\n                            disabled={this.props.disabled}\r\n                            defaultValue={this.props.defaultValues[inputs.cpu.name]}\r\n                        />\r\n                        <TextField id=\"standard-basic\" variant=\"outlined\"\r\n                            label={inputs.memory.label} name={inputs.memory.name}\r\n                            onChange={this.props.updateModelCreator}\r\n                            disabled={this.props.disabled}\r\n                            defaultValue={this.props.defaultValues[inputs.memory.name]}\r\n                        />\r\n                        <TextField id=\"standard-basic\" variant=\"outlined\"\r\n                            label={inputs.storage.label} name={inputs.storage.name}\r\n                            onChange={this.props.updateModelCreator}\r\n                            disabled={this.props.disabled}\r\n                            defaultValue={this.props.defaultValues[inputs.storage.name]}\r\n                        />\r\n                        <TextField id=\"standard-basic\" variant=\"outlined\"\r\n                            label={inputs.comments.label} name={inputs.comments.name}\r\n                            onChange={this.props.updateModelCreator}\r\n                            disabled={this.props.disabled}\r\n                            defaultValue={this.props.defaultValues[inputs.comments.name]}\r\n                        />\r\n\r\n                    {this.props.disabled ? null:\r\n                    <div>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            onClick={this.props.edit}\r\n                            disabled={this.state.showConfirmationBox}\r\n                        >\r\n                            Save\r\n                        </Button>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            onClick={this.confirmDelete}\r\n                            disabled={this.state.showConfirmationBox}\r\n                        >\r\n                            Delete\r\n                        </Button>\r\n                    </div>}\r\n                    {this.state.showConfirmationBox ? <div>\r\n                        Are you sure you wish to delete?\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            onClick={this.deleteItem}\r\n                        >\r\n                            Yes\r\n                        </Button>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            onClick={this.closeModal}\r\n                        >\r\n                            No\r\n                        </Button>\r\n                    </div>:null}\r\n                </div>}\r\n                    </ExpansionPanelDetails>\r\n                </ExpansionPanel>}\r\n        </div>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\n\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from '@material-ui/core/Button';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\r\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\r\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport { CompactPicker } from 'react-color';\r\n\r\nimport '../stylesheets/ModelStyles.css';\r\nimport StatusDisplay from '../../helpers/StatusDisplay';\r\n\r\nfunction createInputs(name, label) {\r\n    return {label, name};\r\n}\r\n\r\nconst inputs = {\r\n    \"vendor\":createInputs('vendor', \"Vendor\", ),\r\n    \"modelNumber\":createInputs('model_number', \"Model Number\"),\r\n    \"height\":createInputs('height', \"Height\"),\r\n    \"displayColor\":createInputs('display_color', \"Display Color\"),\r\n    \"powerPorts\":createInputs('power_ports', \"Power Ports\"),\r\n    \"cpu\":createInputs('cpu', \"CPU\"),\r\n    \"memory\":createInputs('memory', \"Memory\"),\r\n    \"storage\":createInputs('storage', \"Storage\"),\r\n    \"comments\":createInputs('comments', \"Comments\"),\r\n}\r\n\r\nexport default class CreateModel extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            color:'#000',\r\n        };\r\n    }\r\n\r\n    updateColor = (color) => {\r\n        console.log(color);\r\n        this.setState({ color: color });\r\n        this.props.updateModelColor(color.hex);\r\n        console.log(\"state: \" + this.state.color);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n        <div>\r\n            <ExpansionPanel>\r\n                    <ExpansionPanelSummary\r\n                        expandIcon={<ExpandMoreIcon />}\r\n                    >\r\n                        <Typography>Create Model</Typography>\r\n                    </ExpansionPanelSummary>\r\n                    <ExpansionPanelDetails>\r\n                        <StatusDisplay\r\n                            open={this.props.statusOpen}\r\n                            severity={this.props.statusSeverity}\r\n                            closeStatus={this.props.statusClose}\r\n                            message={this.props.statusMessage}\r\n                        />\r\n                    <div>\r\n                        <Autocomplete\r\n                            id=\"select-vendor\"\r\n                            options={this.props.options}\r\n                            includeInputInList\r\n                            freeSolo\r\n                            renderInput={params => (\r\n                            <TextField {...params} label={inputs.vendor.label} name={inputs.vendor.name} onChange={this.props.updateModelCreator} onBlur={this.props.updateModelCreator} variant=\"outlined\" fullWidth />\r\n                            )}\r\n                        />\r\n                        <TextField id=\"standard-basic\" variant=\"outlined\" label={inputs.modelNumber.label} name={inputs.modelNumber.name} onChange={this.props.updateModelCreator}/>\r\n                        <TextField id=\"standard-basic\" variant=\"outlined\" label={inputs.height.label} name={inputs.height.name} onChange={this.props.updateModelCreator}/>\r\n                        <CompactPicker\r\n                            color={this.state.color}\r\n                            onChange={this.updateColor}\r\n\r\n                        />\r\n                        <TextField id=\"standard-basic\" variant=\"outlined\" label={inputs.powerPorts.label} name={inputs.powerPorts.name} onChange={this.props.updateModelCreator}/>\r\n                        <TextField id=\"standard-basic\" variant=\"outlined\" label={inputs.cpu.label} name={inputs.cpu.name} onChange={this.props.updateModelCreator}/>\r\n                        <TextField id=\"standard-basic\" variant=\"outlined\" label={inputs.memory.label} name={inputs.memory.name} onChange={this.props.updateModelCreator}/>\r\n                        <TextField id=\"standard-basic\" variant=\"outlined\" label={inputs.storage.label} name={inputs.storage.name} onChange={this.props.updateModelCreator}/>\r\n                        <TextField id=\"standard-basic\" variant=\"outlined\" label={inputs.comments.label} name={inputs.comments.name} onChange={this.props.updateModelCreator}/>\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        onClick={this.props.createModel}\r\n                    >\r\n                        Create\r\n                    </Button>\r\n                </div>\r\n                    </ExpansionPanelDetails>\r\n                </ExpansionPanel>\r\n        </div>\r\n        );\r\n    }\r\n}\r\n","export enum UserCommand {\r\n    create = 'create/',\r\n    delete = 'delete/',\r\n    edit = 'edit/',\r\n    view = 'view/',\r\n    detailView = 'detailView/',\r\n    search='search/',\r\n}\r\n","export enum UserInput {\r\n    Username='username',\r\n    Password='password',\r\n    Email='email',\r\n    display_name='display_name',\r\n    Privilege='privilege',\r\n}\r\n","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport { palette } from '@material-ui/system';\r\n\r\nexport default class UploadModal extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {};\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Modal\r\n                style={{top: `50%`,left: `50%`,transform: `translate(-50%, -50%)`, background:'#AAAAAA'}}\r\n                aria-labelledby=\"simple-modal-title\"\r\n                aria-describedby=\"simple-modal-description\"\r\n                open={this.props.showImportModal}\r\n                onClose={this.props.closeImportModal}\r\n            >\r\n                <div>\r\n                    <div>\r\n                    <input\r\n                        type='file'\r\n                        accept=\".csv\"\r\n                        onChange={this.props.chooseFile}\r\n                    />\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        onClick={this.props.uploadFile}\r\n                    >\r\n                        Upload\r\n                    </Button>\r\n                    </div>\r\n                    <p\r\n                        style={{color: `white`}}\r\n                    >\r\n                        {this.props.textDescription}\r\n                    </p>\r\n                </div>\r\n            </Modal>\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nexport default class TableView extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n\r\n    };\r\n  }\r\n\r\n  showDetailedView(event) {\r\n    this.props.showDetailedView(event.target.id);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <TableContainer component={Paper}>\r\n          <Table className={{minWidth: 650}} aria-label=\"simple table\">\r\n            <TableHead>\r\n              <TableRow >\r\n                {this.props.columns.map(col => (<TableCell><span id={col}>{col}</span></TableCell>))}\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {this.props.vals.map((row, index)=> (\r\n              <TableRow>\r\n                {this.props.keys.map(key => (<TableCell scope=\"row\"><span id={index} onClick={this.showDetailedView.bind(this)}>{row[key]}</span></TableCell>))}\r\n              </TableRow>\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","\r\n\r\n\r\nexport const GENERAL_MODEL_ERROR =  \"There was an error in the backend. Could not perform the given model operation at this time.\";\r\n","import React from 'react';\r\nimport axios from 'axios';\r\nimport { CSVLink } from \"react-csv\";\r\n\r\nimport { ModelCommand } from '../enums/ModelCommands.ts'\r\nimport { ModelInput } from '../enums/ModelInputs.ts'\r\n\r\nimport ButtonsModel from '../helpers/ButtonsModel';\r\nimport FilterModel from '../helpers/FilterModel';\r\nimport DetailModel from '../helpers/DetailModel';\r\nimport CreateModel from '../helpers/CreateModel';\r\n\r\nimport { Privilege } from '../../enums/privilegeTypes.ts'\r\n\r\nimport UploadModal from '../../helpers/UploadModal';\r\nimport getURL from '../../helpers/functions/GetURL';\r\nimport TableView from '../../helpers/TableView';\r\nimport StatusDisplay from '../../helpers/StatusDisplay';\r\n\r\nimport ErrorBoundray from '../../errors/ErrorBoundry';\r\nimport * as ModelConstants from \"../ModelConstants\";\r\n\r\nconst columns = [\r\n    'vendor',\r\n    'model_number',\r\n    'height',\r\n]\r\n\r\nconst modelsMainPath = 'models/';\r\nconst modelDownloadFileName = 'models.csv';\r\n\r\nexport default class ModelsView extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n\r\n            // modals\r\n            showCreateModal:false,\r\n            showImportModal:false,\r\n\r\n            // table items\r\n            items:[], //Constants.testModelArray,\r\n\r\n            // vals for creating a new model\r\n            createdModel : {\r\n                'vendor':'',\r\n                'model_number':'',\r\n                'height':'',\r\n                'display_color':'',\r\n                'ethernet_ports':'',\r\n                'power_ports':'',\r\n                'cpu':'',\r\n                'memory':'',\r\n                'storage':'',\r\n                'comment':'',\r\n            },\r\n            createdVendor:'',\r\n            createdModelNum:'',\r\n            createdHeight:'',\r\n            createdDispClr:'',\r\n            createdEthPorts:'',\r\n            createdPwrPorts:'',\r\n            createdCPU:'',\r\n            createdMem:'',\r\n            createdStorage:'',\r\n            createdComments:'',\r\n\r\n            // vals for deleting a model\r\n            deleteVendor:'',\r\n            deleteModel:'',\r\n\r\n            // vals for viewing a model\r\n            viewVendor:'',\r\n            viewModel:'',\r\n\r\n            // searching a model\r\n            searchText:\"\",\r\n            searchVendor:'',\r\n            searchModelNum:'',\r\n            searchHeight:'',\r\n\r\n            // csv data\r\n            csvData:'',\r\n            importedFile:null,\r\n\r\n            // detailed view\r\n            showDetailedView: false,\r\n            detailViewLoading:false,\r\n            detailedValues : {\r\n                'vendor':'',\r\n                'model_number':'',\r\n                'height':'',\r\n                'display_color':'',\r\n                'ethernet_ports':'',\r\n                'power_ports':'',\r\n                'cpu':'',\r\n                'memory':'',\r\n                'storage':'',\r\n                'comment':'',\r\n            },\r\n            originalVendor:'',\r\n            originalModelNumber:'',\r\n            originalHeight:'',\r\n\r\n            statusOpen:false,\r\n            statusSeverity:'',\r\n            statusMessage:'',\r\n            detailStatusOpen:false,\r\n            detailStatusSeverity:'',\r\n            detailStatusMessage:'',\r\n            createStatusOpen:false,\r\n            createStatusSeverity:'',\r\n            createStatusMessage:'',\r\n\r\n            vendorsList:[],\r\n            madeVendorQuery:false,\r\n\r\n        };\r\n\r\n        axios.defaults.headers.common['token'] = this.props.token;\r\n        axios.defaults.headers.common['privilege'] = this.props.privilege;\r\n    }\r\n\r\n    createModel = () => {\r\n        axios.post(\r\n            getURL(modelsMainPath, ModelCommand.create),\r\n            {\r\n                'vendor':this.state.createdModel[ModelInput.Vendor],\r\n                'model_number':this.state.createdModel[ModelInput.model_number],\r\n                'height':this.state.createdModel[ModelInput.Height],\r\n                'display_color':this.state.createdModel[ModelInput.display_color],\r\n                'ethernet_ports':this.state.createdModel[ModelInput.ethernet_ports],\r\n                'power_ports':this.state.createdModel[ModelInput.power_ports],\r\n                'cpu':this.state.createdModel[ModelInput.CPU],\r\n                'memory':this.state.createdModel[ModelInput.Memory],\r\n                'storage':this.state.createdModel[ModelInput.Storage],\r\n                'comment':this.state.createdModel[ModelInput.Comment],\r\n            }\r\n            ).then(\r\n                response => {\r\n                    if (response.data.message === 'success') {\r\n                        this.setState({\r\n                            showStatus: true,\r\n                            statusMessage: \"Successfully created model\",\r\n                            statusSeverity:\"success\",\r\n                            createdModel : {\r\n                                'vendor':'',\r\n                                'model_number':'',\r\n                                'height':'',\r\n                                'display_color':'',\r\n                                'ethernet_ports':'',\r\n                                'power_ports':'',\r\n                                'cpu':'',\r\n                                'memory':'',\r\n                                'storage':'',\r\n                                'comment':'',\r\n                            },\r\n                            showCreateModal:false,\r\n                        });\r\n                        this.getVendorList();\r\n                        this.searchModels();\r\n                    } else {\r\n                        this.setState({ createStatusOpen: true, createStatusMessage: response.data.message, createStatusSeverity:\"error\" })\r\n                    }\r\n                }).catch(\r\n                    this.setState({ createStatusOpen: true, createStatusMessage: ModelConstants.GENERAL_MODEL_ERROR, createStatusSeverity:\"error\" })\r\n                );\r\n    }\r\n\r\n    editModel = () => {\r\n        axios.post(\r\n            getURL(modelsMainPath, ModelCommand.edit),\r\n            {\r\n                'vendorOriginal':this.state.originalVendor,\r\n                'model_numberOriginal':this.state.originalModelNumber,\r\n                'heightOriginal':this.state.originalHeight,\r\n\r\n                'vendor':this.state.detailedValues[ModelInput.Vendor],\r\n                'model_number':this.state.detailedValues[ModelInput.model_number],\r\n                'height':this.state.detailedValues[ModelInput.Height],\r\n                'display_color':this.state.detailedValues[ModelInput.display_color],\r\n                'ethernet_ports':this.state.detailedValues[ModelInput.ethernet_ports],\r\n                'power_ports':this.state.detailedValues[ModelInput.power_ports],\r\n                'cpu':this.state.detailedValues[ModelInput.CPU],\r\n                'memory':this.state.detailedValues[ModelInput.Memory],\r\n                'storage':this.state.detailedValues[ModelInput.Storage],\r\n                'comment':this.state.detailedValues[ModelInput.Comment],\r\n            }\r\n            ).then(\r\n                response => {\r\n                    if (response.data.message === 'success') {\r\n                        this.setState({\r\n                            showStatus: true,\r\n                            statusSeverity:'success',\r\n                            statusMessage: \"Successfully edited model\",\r\n                            originalVendor:'',\r\n                            originalModelNumber:'',\r\n                            originalHeight:'',\r\n                            detailedValues : {\r\n                                'vendor':'',\r\n                                'model_number':'',\r\n                                'height':'',\r\n                                'display_color':'',\r\n                                'ethernet_ports':'',\r\n                                'power_ports':'',\r\n                                'cpu':'',\r\n                                'memory':'',\r\n                                'storage':'',\r\n                                'comment':'',\r\n                            },\r\n                            showDetailedView:false\r\n                        });\r\n                        this.getVendorList();\r\n                        this.searchModels();\r\n                    } else {\r\n                        this.setState({ detailStatusOpen: true, detailStatusMessage: response.data.message, detailStatusSeverity:\"error\" })\r\n                    }\r\n                }).catch(\r\n                    this.setState({ detailStatusOpen: true, detailStatusMessage: ModelConstants.GENERAL_MODEL_ERROR, detailStatusSeverity:\"error\" })\r\n                );\r\n    }\r\n\r\n\r\n    deleteModel = () => {\r\n        axios.post(\r\n            getURL(modelsMainPath, ModelCommand.delete),\r\n            {\r\n                'vendor':this.state.originalVendor,\r\n                'model_number':this.state.originalModelNumber,\r\n            }\r\n            ).then(\r\n                response => {\r\n                    if (response.data.message === 'success') {\r\n                        this.setState({\r\n                            showStatus: true,\r\n                            statusSeverity:'success',\r\n                            statusMessage: \"Successfully deleted model\",\r\n                            detailedValues : {\r\n                                'vendor':'',\r\n                                'model_number':'',\r\n                                'height':'',\r\n                                'display_color':'',\r\n                                'ethernet_ports':'',\r\n                                'power_ports':'',\r\n                                'cpu':'',\r\n                                'memory':'',\r\n                                'storage':'',\r\n                                'comment':'',\r\n                            },\r\n                            showDetailedView:false\r\n                        });\r\n                        this.getVendorList();\r\n                        this.searchModels();\r\n                    } else {\r\n                        this.setState({ showStatus: true, statusMessage: response.data.message, statusSeverity:\"error\" })\r\n                    }\r\n                }).catch(\r\n                    this.setState({ showStatus: true, statusMessage: ModelConstants.GENERAL_MODEL_ERROR, statusSeverity:\"error\" })\r\n                );\r\n    }\r\n\r\n    detailViewModel = (vendor, modelNum) => {\r\n        axios.post(\r\n            getURL(modelsMainPath, ModelCommand.detailView),\r\n            {\r\n                'vendor':vendor,\r\n                'model_number':modelNum,\r\n            }\r\n            ).then(response => {\r\n                this.setState({ detailedValues: response.data['models'][0], detailViewLoading:false});\r\n            }\r\n            ).catch(function(error) {\r\n                console.log(error);\r\n                this.setState({ showStatus: true, statusMessage: ModelConstants.GENERAL_MODEL_ERROR, statusSeverity:\"error\" });\r\n            });\r\n\r\n        this.setState({\r\n            viewVendor:'',\r\n            viewModel:'',\r\n        });\r\n    }\r\n\r\n    searchModels = () => {\r\n        axios.post(\r\n            getURL(modelsMainPath, ModelCommand.search),\r\n            {\r\n                'filter':{\r\n                    'vendor':this.state.searchVendor,\r\n                    'model_number':this.state.searchModelNum,\r\n                    'height':this.state.searchHeight,\r\n                }\r\n            }\r\n            ).then(response => {\r\n                this.setState({ items: response.data['models'] })\r\n            });\r\n\r\n        this.setState({\r\n            searchText:'',\r\n        });\r\n    }\r\n\r\n    getVendorList = () => {\r\n        axios.get(\r\n            getURL(modelsMainPath, ModelCommand.VENDOR_VALUES), {}\r\n            ).then(response => this.setState({ vendorsList: response.data.results }));\r\n\r\n        this.setState({ madeVendorQuery: true });\r\n    }\r\n\r\n    sendUploadedFile = (data) => {\r\n        axios.post(\r\n            getURL(modelsMainPath, ModelCommand.UPLOAD_FILE), data\r\n            ).then(response => {\r\n                if (response.data.message === 'success') {\r\n                    this.setState({ showStatus: true, statusMessage: response.data.summary, statusSeverity:'success', showImportModal: false,})\r\n                    this.searchModels();\r\n                } else {\r\n                    this.setState({ showStatus: true, statusMessage: response.data.message, statusSeverity:\"error\" })\r\n                }\r\n            });\r\n    }\r\n\r\n    downloadTable = () => {\r\n        axios.post(\r\n            getURL(modelsMainPath, ModelCommand.EXPORT_FILE),\r\n            {\r\n                'filter':{\r\n                    'vendor':this.state.searchVendor,\r\n                    'model_number':this.state.searchModelNum,\r\n                    'height':this.state.searchHeight,\r\n                }\r\n            }\r\n            ).then(response => {\r\n                this.setState({ csvData: response.data.csvData });\r\n                this.csvLink.link.click();\r\n            });\r\n    }\r\n\r\n    search = (filters) => {\r\n        this.setState({ searchVendor:filters['vendor'], searchModelNum:filters['model_number'], searchHeight:filters['height']}, this.searchModels);\r\n    }\r\n\r\n    openCreateModal = () => {\r\n        this.setState({showCreateModal: true});\r\n    }\r\n\r\n    openImportModal = () => {\r\n        this.setState({showImportModal: true});\r\n    }\r\n\r\n    showDetailedView = (id) => {\r\n        this.setState({\r\n            showDetailedView: true,\r\n            detailViewLoading:true,\r\n\r\n            originalHeight:this.state.items[id]['height'],\r\n            originalModelNumber:this.state.items[id]['model_number'],\r\n            originalVendor:this.state.items[id]['vendor'],\r\n         });\r\n\r\n        var vendor = this.state.items[id]['vendor'];\r\n        var modelNum = this.state.items[id]['model_number'];\r\n\r\n        this.detailViewModel(vendor, modelNum);\r\n    }\r\n\r\n    closeCreateModal = () => {\r\n        this.setState({showCreateModal: false});\r\n    }\r\n\r\n    closeImportModal = () => {\r\n        this.setState({showImportModal: false});\r\n    }\r\n\r\n    closeDetailedView = () => {\r\n        this.setState({ showDetailedView: false })\r\n    }\r\n\r\n    updateModelCreator = (event) => {\r\n        this.state.createdModel[event.target.name] = event.target.value;\r\n        this.forceUpdate();\r\n    }\r\n\r\n    updateModelColor = (color) => {\r\n        console.log(\"updating color to \" + color);\r\n        this.state.createdModel['display_color'] = color;\r\n        this.forceUpdate();\r\n    }\r\n\r\n    updateModelColorDetails = (color) => {\r\n        console.log(\"updating color to \" + color);\r\n        this.state.detailedValues['display_color'] = color;\r\n        this.forceUpdate();\r\n    }\r\n\r\n    updateModelEdited = (event) => {\r\n        this.state.detailedValues[event.target.name] = event.target.value;\r\n        this.forceUpdate()\r\n    }\r\n\r\n    updateSearchText = (event) => {\r\n        this.setState({ searchText: event.target.value})\r\n    }\r\n\r\n    closeShowStatus = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n        this.setState({ showStatus: false })\r\n    }\r\n\r\n    createStatusClose = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n        this.setState({ createStatusOpen: false })\r\n    }\r\n\r\n    detailStatusClose = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n        this.setState({ detailStatusOpen: false })\r\n    }\r\n\r\n    uploadFile = () => {\r\n        const data = new FormData();\r\n        data.append('file', this.state.importedFile);\r\n        this.sendUploadedFile(data);\r\n    }\r\n\r\n    chooseFile = (event) => {\r\n        this.setState({ importedFile: event.target.files[0] })\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.searchModels();\r\n        this.getVendorList();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <ErrorBoundray>\r\n                <StatusDisplay\r\n                    open={this.state.showStatus}\r\n                    severity={this.state.statusSeverity}\r\n                    closeStatus={this.closeShowStatus}\r\n                    message={this.state.statusMessage}\r\n                    autoHideDuration={6000}\r\n                />\r\n                {(this.props.privilege === Privilege.ADMIN) ?\r\n                    (<div><ButtonsModel\r\n                    openCreateModal={this.openCreateModal}\r\n                    openImportModal={this.openImportModal}\r\n                    downloadTable={this.downloadTable}\r\n                />\r\n                <CSVLink\r\n                    data={this.state.csvData}\r\n                    filename={modelDownloadFileName}\r\n                    className=\"hidden\"\r\n                    ref={(r) => this.csvLink = r}\r\n                    target=\"_blank\"\r\n                />\r\n                <CreateModel\r\n                    statusOpen={this.state.createStatusOpen}\r\n                    statusSeverity={this.state.createStatusSeverity}\r\n                    statusClose={this.createStatusClose}\r\n                    statusMessage={this.state.createStatusMessage}\r\n\r\n                    showCreateModal={this.state.showCreateModal}\r\n                    closeCreateModal={this.closeCreateModal}\r\n                    createModel={this.createModel}\r\n                    updateModelCreator={this.updateModelCreator}\r\n                    options={this.state.vendorsList}\r\n                    useAutocomplete={true}\r\n                    updateModelColor={this.updateModelColor}\r\n                />\r\n                <UploadModal\r\n                    showImportModal={this.state.showImportModal}\r\n                    closeImportModal={this.closeImportModal}\r\n                    uploadFile={this.uploadFile}\r\n                    chooseFile={this.chooseFile}\r\n                    textDescription=\"The following format should be used for each row: vendor,model_number,height,display_color,ethernet_ports,power_ports,cpu,memory,storage,comment\"\r\n                /></div>):null\r\n                }\r\n                <FilterModel\r\n                    updateSearchText={this.updateSearchText}\r\n                    search={this.search}\r\n                    filters={columns}\r\n                />\r\n                <TableView\r\n                    columns={columns}\r\n                    vals={this.state.items}\r\n                    keys={columns}\r\n                    showDetailedView={this.showDetailedView}\r\n                    filters={columns}\r\n                />\r\n                <DetailModel\r\n                    statusOpen={this.state.detailStatusOpen}\r\n                    statusSeverity={this.state.detailStatusSeverity}\r\n                    statusClose={this.detailStatusClose}\r\n                    statusMessage={this.state.detailStatusMessage}\r\n\r\n                    showDetailedView={this.state.showDetailedView}\r\n                    closeDetailedView={this.closeDetailedView}\r\n                    updateModelEdited={this.updateModelEdited}\r\n                    defaultValues={this.state.detailedValues}\r\n                    loading={this.state.detailViewLoading}\r\n                    edit={this.editModel}\r\n                    delete={this.deleteModel}\r\n                    disabled={this.props.privilege===Privilege.USER}\r\n                    options={this.state.vendorsList}\r\n                    useAutocomplete={true}\r\n                    updateModelColorDetails={this.updateModelColorDetails}\r\n                />\r\n            </ErrorBoundray>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","export enum AssetCommand {\r\n    create = 'create/',\r\n    delete = 'delete/',\r\n    edit = 'edit/',\r\n    view = 'view/',\r\n    detailView = 'detailView/',\r\n    search = 'search/',\r\n    GET_ALL_MODELS = 'assistedmodel/',\r\n    GET_ALL_OWNERS = 'assistedowner/',\r\n    UPLOAD_FILE = 'import/',\r\n    EXPORT_FILE = 'export/',\r\n    GET_NEXT_ASSET_NUM = 'nextAssetNumber/',\r\n}\r\n","export enum AssetInput {\r\n    MODEL = 'model',\r\n    HOSTNAME = 'hostname',\r\n    RACK = 'rack',\r\n    RACK_U = 'rack_position',\r\n    RACK_ORIGINAL = 'rackOriginal',\r\n    RACK_U_ORIGINAL = 'rack_positionOriginal',\r\n    OWNER = 'owner',\r\n    COMMENT = 'comment',\r\n    DATACENTER = 'datacenter_id',\r\n    TAGS = 'tags',\r\n    MAC_ADDRESS = 'mac_address',\r\n    NETWORK_CONNECTIONS = 'network_connections',\r\n    POWER_CONNECTIONS = 'power_connections',\r\n    ASSET_NUMBER = 'asset_number',\r\n}\r\n","import React from 'react';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nexport default class Filters extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            filters:{},\r\n        };\r\n    }\r\n\r\n    updateSearchText(event) {\r\n        if (this.state.filters.hasOwnProperty(event.target.id)) {\r\n            this.state.filters[event.target.id] = event.target.value;\r\n            this.forceUpdate();\r\n        } else {\r\n            this.state.filters[event.target.id] = event.target.value;\r\n            this.forceUpdate();\r\n        }\r\n    }\r\n\r\n    search() {\r\n        this.props.search(this.state.filters);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.props.filters.map((filter, index) => (\r\n                    <div>\r\n                        <SearchIcon />\r\n                        <InputBase\r\n                            placeholder={filter+\" filter\"}\r\n                            inputProps={{ 'aria-label': 'search' }}\r\n                            onChange={this.updateSearchText.bind(this)}\r\n                            id={filter}\r\n                        />\r\n                    </div>\r\n                ))\r\n                }\r\n                <div>\r\n                    <Button\r\n                        onClick={this.search.bind(this)}\r\n                    >\r\n                        Search\r\n                    </Button>\r\n                </div>\r\n                Click the search button to populate table. Searching with empty filters searches over all values. Click on row values to see detailed view.\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from '@material-ui/core/Button';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\r\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\r\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport StatusDisplay from '../../helpers/StatusDisplay';\r\n\r\nexport default class DetailedView extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            showConfirmationBox:false,\r\n        };\r\n\r\n        this.closeModal = this.closeModal.bind(this);\r\n        this.confirmDelete = this.confirmDelete.bind(this);\r\n        this.deleteItem = this.deleteItem.bind(this);\r\n    }\r\n\r\n    confirmDelete() {\r\n        this.setState({ showConfirmationBox: true });\r\n    }\r\n\r\n    closeModal() {\r\n        this.setState({showConfirmationBox:false,});\r\n    }\r\n\r\n    deleteItem() {\r\n        this.setState({ showConfirmationBox: false });\r\n        this.props.delete();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n        <div>\r\n            {!this.props.showDetailedView ? null:\r\n            <ExpansionPanel >\r\n                    <ExpansionPanelSummary\r\n                        expandIcon={<ExpandMoreIcon />}\r\n                    >\r\n                        <Typography>Create</Typography>\r\n                    </ExpansionPanelSummary>\r\n                    <ExpansionPanelDetails>\r\n                        <StatusDisplay\r\n                            open={this.props.statusOpen}\r\n                            severity={this.props.statusSeverity}\r\n                            closeStatus={this.props.statusClose}\r\n                            message={this.props.statusMessage}\r\n                        />\r\n                    {\r\n                this.props.loading ? <CircularProgress /> :\r\n                <div>\r\n                    {this.props.inputs.map(input => (\r\n                        <TextField name={input} disabled={this.props.disabled} id=\"standard-basic\" label={input} onChange={this.props.updateModelEdited} defaultValue={this.props.defaultValues[input]}/>\r\n                    ))}\r\n                    {this.props.disabled ? null:\r\n                    <div>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            onClick={this.props.edit}\r\n                            disabled={this.state.showConfirmationBox}\r\n                        >\r\n                            Save\r\n                        </Button>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            onClick={this.confirmDelete}\r\n                            disabled={this.state.showConfirmationBox}\r\n                        >\r\n                            Delete\r\n                        </Button>\r\n                    </div>}\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            onClick={this.props.closeDetailedView}\r\n                            disabled={this.state.showConfirmationBox}\r\n                        >\r\n                            Close\r\n                        </Button>\r\n\r\n                    {this.state.showConfirmationBox ? <div>\r\n                        Are you sure you wish to delete?\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            onClick={this.deleteItem}\r\n                        >\r\n                            Yes\r\n                        </Button>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            onClick={this.closeModal}\r\n                        >\r\n                            No\r\n                        </Button>\r\n                    </div>:null}\r\n                </div>}\r\n                    </ExpansionPanelDetails>\r\n                </ExpansionPanel>}\r\n        </div>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from '@material-ui/core/Button';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\r\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\r\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport '../../../stylesheets/Models.css';\r\nimport StatusDisplay from '../../helpers/StatusDisplay';\r\n\r\nexport default class CreateModal extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n\r\n        };\r\n    }\r\n\r\n    render() {\r\n        return (\r\n        <div>\r\n            <ExpansionPanel class=\"create-expansion-tab\">\r\n                    <ExpansionPanelSummary\r\n                        expandIcon={<ExpandMoreIcon />}\r\n                    >\r\n                        <Typography>Create User</Typography>\r\n                    </ExpansionPanelSummary>\r\n                    <ExpansionPanelDetails class=\"create-expansion-tab\">\r\n                    <div>\r\n                        <StatusDisplay\r\n                            open={this.props.statusOpen}\r\n                            severity={this.props.statusSeverity}\r\n                            closeStatus={this.props.statusClose}\r\n                            message={this.props.statusMessage}\r\n                        />\r\n                    {this.props.inputs.map((input, index) => (\r\n                        (index===0 && this.props.useAutocomplete) ? <Autocomplete\r\n                            id=\"combo-box-demo\"\r\n                            options={this.props.options}\r\n                            includeInputInList\r\n                            freeSolo\r\n                            renderInput={params => (\r\n                            <TextField {...params} label={input} name={input} onChange={this.props.updateModelCreator} onBlur={this.props.updateModelCreator} variant=\"outlined\" fullWidth />\r\n                            )}\r\n                        /> :\r\n                        <TextField id=\"standard-basic\" variant=\"outlined\" label={input} name={input} onChange={this.props.updateModelCreator}/>\r\n                    ))}\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        onClick={this.props.createModel}\r\n                    >\r\n                        Create\r\n                    </Button>\r\n                </div>\r\n                    </ExpansionPanelDetails>\r\n                </ExpansionPanel>\r\n        </div>\r\n        );\r\n    }\r\n}\r\n","\r\n\r\nexport const GENERAL_USER_ERROR =  \"There was an error in the backend. Could not perform the given user operation at this time.\";\r\n","import React from 'react';\r\nimport axios from 'axios';\r\n\r\nimport { UserCommand } from '../enums/UserCommands.ts'\r\nimport { UserInput } from '../enums/UserInputs.ts'\r\n\r\nimport FilterUser from '../helpers/FilterUser';\r\nimport DetailUser from '../helpers/DetailUser';\r\nimport CreateUser from '../helpers/CreateUser';\r\n\r\nimport UploadModal from '../../helpers/UploadModal';\r\nimport getURL from '../../helpers/functions/GetURL';\r\nimport TableView from '../../helpers/TableView';\r\nimport StatusDisplay from '../../helpers/StatusDisplay';\r\n\r\nimport { Privilege } from '../../enums/privilegeTypes.ts'\r\n\r\nimport ErrorBoundray from '../../errors/ErrorBoundry';\r\nimport * as UserConstants from \"../UserConstants\";\r\n\r\nconst inputs = [\r\n    'username',\r\n    'email',\r\n    'display_name',\r\n    'privilege',\r\n    'password',\r\n]\r\n\r\nconst columns = [\r\n    'username',\r\n    'email',\r\n    'display_name',\r\n    'privilege',\r\n]\r\n\r\nconst usersMainPath = 'users/';\r\nconst userDownloadFileName = 'users.csv';\r\n\r\nexport default class UsersView extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n\r\n            // modals\r\n            showCreateModal:false,\r\n            showImportModal:false,\r\n\r\n            // table items\r\n            items:[], //Constants.testUserArray,\r\n\r\n            // vals for creating a new user\r\n            createdUser : {\r\n                'username':'',\r\n                'password':'',\r\n                'display_name':'',\r\n                'email':'',\r\n                'privilege':'',\r\n            },\r\n\r\n            statusOpen:false,\r\n            statusSeverity:'',\r\n            statusMessage:'',\r\n            detailStatusOpen:false,\r\n            detailStatusSeverity:'',\r\n            detailStatusMessage:'',\r\n            createStatusOpen:false,\r\n            createStatusSeverity:'',\r\n            createStatusMessage:'',\r\n\r\n            searchUsernm:'',\r\n            searchEml:'',\r\n            searchDspNm:'',\r\n            searchPriv:'',\r\n\r\n            // vals for deleting a user\r\n            deleteUsername:'',\r\n\r\n            // vals for viewing a user\r\n            viewUser:'',\r\n\r\n            // csv data\r\n            csvData:[],\r\n\r\n            // detailed view\r\n            showDetailedView: false,\r\n            detailViewLoading:false,\r\n            detailedValues : {\r\n                'username':'',\r\n                'display_name':'',\r\n                'email':'',\r\n                'privilege':'',\r\n            },\r\n            originalUsername:'',\r\n\r\n            initialized:false,\r\n        };\r\n\r\n        axios.defaults.headers.common['token'] = this.props.token;\r\n        axios.defaults.headers.common['privilege'] = this.props.privilege;\r\n\r\n    }\r\n\r\n    createUser = () => {\r\n        axios.post(\r\n            getURL(usersMainPath, UserCommand.create),\r\n            {\r\n                'username':this.state.createdUser[UserInput.Username],\r\n                'password':this.state.createdUser[UserInput.Password],\r\n                'display_name':this.state.createdUser[UserInput.display_name],\r\n                'email':this.state.createdUser[UserInput.Email],\r\n                'privilege':this.state.createdUser[UserInput.Privilege],\r\n            }\r\n            ).then(response => {\r\n                if (response.data.message === 'success') {\r\n                    this.setState({\r\n                        createStatusOpen: true,\r\n                        createStatusMessage: \"Successfully created user\",\r\n                        createStatusSeverity:\"success\",\r\n                        createdUser : {\r\n                            'username':'',\r\n                            'password':'',\r\n                            'display_name':'',\r\n                            'email':'',\r\n                            'privilege':'',\r\n                        },\r\n                        showCreateModal:false,\r\n                    });\r\n                    this.searchUsers();\r\n                } else {\r\n                    this.setState({ createStatusOpen: true, createStatusMessage: response.data.message, createStatusSeverity:\"error\" })\r\n                }\r\n            }).catch(\r\n                this.setState({ createStatusOpen: true, createStatusMessage: UserConstants.GENERAL_USER_ERROR, createStatusSeverity:\"error\" })\r\n            );\r\n    }\r\n\r\n    editUser = () => {\r\n        axios.post(\r\n            getURL(usersMainPath, UserCommand.edit),\r\n            {\r\n                'username_original':this.state.originalUsername,\r\n                'username':this.state.detailedValues[UserInput.Username],\r\n                'display_name':this.state.detailedValues[UserInput.display_name],\r\n                'email':this.state.detailedValues[UserInput.Email],\r\n                'privilege':this.state.detailedValues[UserInput.Privilege],\r\n            }\r\n            ).then(response => {\r\n                if (response.data.message === 'success') {\r\n                    this.setState({\r\n                        detailStatusOpen: true,\r\n                        detailStatusMessage: \"Successfully edited user\",\r\n                        detailStatusSeverity:\"success\",\r\n                        originalUsername:'',\r\n                        detailedValues : {\r\n                            'username':'',\r\n                            'display_name':'',\r\n                            'email':'',\r\n                            'privilege':'',\r\n                        },\r\n                        showDetailedView:false,\r\n                    });\r\n                    this.searchUsers();\r\n                } else {\r\n                    this.setState({ detailStatusOpen: true, detailStatusMessage: response.data.message, detailStatusSeverity:\"error\" })\r\n                }\r\n            }).catch(\r\n                this.setState({ detailStatusOpen: true, detailStatusMessage: UserConstants.GENERAL_USER_ERROR, detailStatusSeverity:\"error\" })\r\n            );\r\n    }\r\n\r\n\r\n    deleteUser = () => {\r\n        axios.post(\r\n            getURL(usersMainPath, UserCommand.delete),\r\n            {\r\n                'username':this.state.originalUsername,\r\n            }\r\n            ).then(response => {\r\n                if (response.data.message === 'success') {\r\n                    this.setState({\r\n                        statusOpen: true,\r\n                        statusMessage: \"Successfully deleted user\",\r\n                        statusSeverity:\"success\",\r\n                        deleteUsername:'',\r\n                        showDetailedView:false,\r\n                    });\r\n                    this.searchUsers();\r\n                } else {\r\n                    this.setState({ showStatus: true, statusMessage: response.data.message, statusSeverity:\"error\" })\r\n                }\r\n            }).catch(\r\n                this.setState({ showStatus: true, statusMessage: UserConstants.GENERAL_USER_ERROR, statusSeverity:\"error\" })\r\n            );\r\n    }\r\n\r\n    detailViewUser = (username) => {\r\n        axios.post(\r\n            getURL(usersMainPath, UserCommand.detailView),\r\n            {\r\n                'username':username,\r\n            }\r\n            ).then(response => this.setState({ detailedValues: response.data['user'], detailViewLoading:false})\r\n            ).catch(\r\n                this.setState({ showStatus: true, statusMessage: UserConstants.GENERAL_USER_ERROR, statusSeverity:\"error\" })\r\n            );\r\n\r\n        this.setState({\r\n            viewUser:'',\r\n        });\r\n    }\r\n\r\n    searchUsers = () => {\r\n        axios.post(\r\n            getURL(usersMainPath, UserCommand.search),\r\n            {\r\n                'filter':{\r\n                    'username':this.state.searchUsernm,\r\n                    'email':this.state.searchEml,\r\n                    'display_name':this.state.searchDspNm,\r\n                    'privilege':this.state.searchPriv,\r\n                }\r\n            }\r\n            ).then(response => this.setState({ items: (response.data['users']==null) ? [] : response.data['users'] }));\r\n\r\n        this.setState({ initialized: true})\r\n    }\r\n\r\n    search = (filters) => {\r\n        this.setState({\r\n            searchUsernm:filters['username'],\r\n            searchEml:filters['email'],\r\n            searchDspNm: filters['display_name'],\r\n            searchPriv:filters['privilege'],\r\n        }, this.searchUsers);\r\n    }\r\n\r\n    downloadTable = () => {\r\n        this.csvLink.link.click();\r\n    }\r\n\r\n    openCreateModal = () => {\r\n        this.setState({showCreateModal: true});\r\n    }\r\n\r\n    openImportModal = () => {\r\n        this.setState({showImportModal: true});\r\n    }\r\n\r\n    showDetailedView = (id) => {\r\n        this.setState({\r\n            showDetailedView: true,\r\n            detailViewLoading:true,\r\n            originalUsername:this.state.items[id]['username'],\r\n         });\r\n\r\n        var username = this.state.items[id]['username'];\r\n\r\n        this.detailViewUser(username);\r\n        //this.setState({ detailedValues: Constants.testUserArray[id], detailViewLoading:false})\r\n    }\r\n\r\n    closeCreateModal = () => {\r\n        this.setState({showCreateModal: false});\r\n    }\r\n\r\n    closeImportModal = () => {\r\n        this.setState({showImportModal: false});\r\n    }\r\n\r\n    closeDetailedView = () => {\r\n        this.setState({ showDetailedView: false })\r\n    }\r\n\r\n    updateUserCreator = (event) => {\r\n        this.state.createdUser[event.target.name] = event.target.value;\r\n        this.forceUpdate()\r\n    }\r\n\r\n    updateUserEdited = (event) => {\r\n        this.state.detailedValues[event.target.name] = event.target.value;\r\n        this.forceUpdate()\r\n    }\r\n\r\n    closeShowStatus = () => {\r\n        this.setState({ showStatus: false })\r\n    }\r\n\r\n    createStatusClose = () => {\r\n        this.setState({ createStatusOpen: false })\r\n    }\r\n\r\n    detailStatusClose = () => {\r\n        this.setState({ detailStatusOpen: false })\r\n    }\r\n\r\n    initialized = () => {\r\n        this.searchUsers();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {(this.state.initialized) ? null: this.initialized()}\r\n                <ErrorBoundray>\r\n                <StatusDisplay\r\n                    open={this.state.showStatus}\r\n                    severity={this.state.statusSeverity}\r\n                    closeStatus={this.closeShowStatus}\r\n                    message={this.state.statusMessage}\r\n                />\r\n                {(this.props.privilege == Privilege.ADMIN) ?\r\n                    (<div>\r\n                <CreateUser\r\n                    statusOpen={this.state.createStatusOpen}\r\n                    statusSeverity={this.state.createStatusSeverity}\r\n                    statusClose={this.createStatusClose}\r\n                    statusMessage={this.state.createStatusMessage}\r\n\r\n                    showStatus={this.state.createStatus}\r\n                    showCreateModal={this.state.showCreateModal}\r\n                    closeCreateModal={this.closeCreateModal}\r\n                    createModel={this.createUser}\r\n                    updateModelCreator={this.updateUserCreator}\r\n                    inputs={inputs}\r\n                    options={[]}\r\n                    useAutocomplete={false}\r\n                />\r\n                <UploadModal\r\n                    showImportModal={this.state.showImportModal}\r\n                    closeImportModal={this.closeImportModal}\r\n                /></div>):null\r\n            }\r\n                <FilterUser\r\n                    updateSearchText={this.updateSearchText}\r\n                    search={this.search}\r\n                    filters={columns}\r\n                />\r\n                <TableView\r\n                    columns={columns}\r\n                    vals={this.state.items}\r\n                    keys={columns}\r\n                    showDetailedView={this.showDetailedView}\r\n                    filters={columns}\r\n                />\r\n                <DetailUser\r\n                    statusOpen={this.state.detailStatusOpen}\r\n                    statusSeverity={this.state.detailStatusSeverity}\r\n                    statusClose={this.detailStatusClose}\r\n                    statusMessage={this.state.detailStatusMessage}\r\n\r\n                    showDetailedView={this.state.showDetailedView}\r\n                    closeDetailedView={this.closeDetailedView}\r\n                    inputs={columns}\r\n                    updateModelEdited={this.updateUserEdited}\r\n                    defaultValues={this.state.detailedValues}\r\n                    loading={this.state.detailViewLoading}\r\n                    edit={this.editUser}\r\n                    delete={this.deleteUser}\r\n                    disabled={this.props.privilege==Privilege.USER}\r\n                />\r\n                </ErrorBoundray>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\r\nimport CloudDownloadIcon from '@material-ui/icons/CloudDownload';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nexport default class AssetButtons extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n\r\n        };\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div>\r\n                <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    startIcon={<CloudUploadIcon />}\r\n                    onClick={() => {this.props.openImportModal()} }\r\n                >\r\n                    Import\r\n                </Button>\r\n                <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    startIcon={<CloudDownloadIcon />}\r\n                    onClick={() => {this.props.downloadTable()}}\r\n                >\r\n                    Export\r\n                </Button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nexport default class FilterAsset extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            filters:{},\r\n        };\r\n    }\r\n\r\n    updateSearchText(event) {\r\n        if (this.state.filters.hasOwnProperty(event.target.id)) {\r\n            this.state.filters[event.target.id] = event.target.value;\r\n            this.forceUpdate();\r\n        } else {\r\n            var value = (event.target.value == null) ? '' : event.target.value;\r\n            this.state.filters[event.target.id] = event.target.value;\r\n            this.forceUpdate();\r\n        }\r\n        this.search();\r\n    }\r\n\r\n    search = () => {\r\n        this.props.search(this.state.filters);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.props.filters.map((filter, index) => (\r\n                    <div>\r\n                        <SearchIcon />\r\n                        <InputBase\r\n                            placeholder={filter+\" filter\"}\r\n                            inputProps={{ 'aria-label': 'search' }}\r\n                            onChange={this.updateSearchText.bind(this)}\r\n                            id={filter}\r\n                        />\r\n                    </div>\r\n                ))\r\n                }\r\n                Click the search button to populate table. Searching with empty filters searches over all values. Click on row values to see detailed view.\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\n\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from '@material-ui/core/Button';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\r\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\r\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\n\r\nimport StatusDisplay from '../../helpers/StatusDisplay';\r\nimport { AssetInput } from '../enums/AssetInputs.ts';\r\n\r\nfunction createInputs(name, label, showTooltip, description) {\r\n    return {label, name, showTooltip, description};\r\n}\r\n\r\nexport default class DetailAsset extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            showConfirmationBox:false,\r\n\r\n\r\n            inputs: {\r\n                \"model\":createInputs(AssetInput.MODEL, \"Model\", false, \"A reference to an existing model\"),\r\n                \"hostname\":createInputs(AssetInput.HOSTNAME, \"Hostname\", false, \"A short string compliant with RFC 1034’s definition of 'label'\"),\r\n                \"rack\":createInputs(AssetInput.RACK, \"Rack\", false, \"The rack the equipment is installed in, written as a row letter and rack number, e.g. 'B12'\"),\r\n                \"rackU\":createInputs(AssetInput.RACK_U, \"Rack U\", false, \"An integer indicating the vertical location of the bottom of the equipment (e.g. '5')\"),\r\n                \"owner\":createInputs(AssetInput.OWNER, \"Owner\", false, \"A reference to an existing user on the system who owns this equipment\"),\r\n                \"comment\":createInputs(AssetInput.COMMENT, \"Comment\", false, \"Any additional information associated with this asset\"),\r\n                \"datacenter\":createInputs(AssetInput.DATACENTER, \"Datacenter\", false, \"A reference to a datacenter in which the chosen rack resides\"),\r\n                \"macAddress\":createInputs(AssetInput.MAC_ADDRESS, \"Mac Address\", false, \"A 6-byte hexadecimal string per network port shown canonically in lower case with colon delimiters (e.g., '00:1e:c9:ac:78:aa')\"),\r\n                \"networkConnections\":createInputs(AssetInput.NETWORK_CONNECTIONS, \"Network Connections\", false, \"For each network port, a reference to another network port on another piece of gear\"),\r\n                \"powerConnections\":createInputs(AssetInput.POWER_CONNECTIONS, \"Power Connections\", false, \"For each power port, a choice of PDU in the rack (left or right) and a PDU port number (1..24)\"),\r\n                \"assetNum\":createInputs(AssetInput.ASSET_NUMBER, \"Asset Number\", false, \"A six-digit serial number unique associated with an asset.\"),\r\n            },\r\n        };\r\n    }\r\n\r\n    confirmDelete = () => {\r\n        this.setState({ showConfirmationBox: true });\r\n    }\r\n\r\n    closeModal = () => {\r\n        this.setState({showConfirmationBox:false,});\r\n    }\r\n\r\n    deleteItem = () => {\r\n        this.setState({ showConfirmationBox: false });\r\n        this.props.delete();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n        <div>\r\n            {!this.props.showDetailedView ? null:\r\n            <ExpansionPanel >\r\n                    <ExpansionPanelSummary\r\n                        expandIcon={<ExpandMoreIcon />}\r\n                    >\r\n                        <Typography>Asset Details</Typography>\r\n                    </ExpansionPanelSummary>\r\n                    <ExpansionPanelDetails>\r\n                        <StatusDisplay\r\n                            open={this.props.statusOpen}\r\n                            severity={this.props.statusSeverity}\r\n                            closeStatus={this.props.statusClose}\r\n                            message={this.props.statusMessage}\r\n                            autoHideDuration={6000}\r\n                        />\r\n                {this.props.loading ? <CircularProgress /> :\r\n                <div>\r\n                    <ExpansionPanel>\r\n                    <ExpansionPanelSummary\r\n                        expandIcon={<ExpandMoreIcon />}\r\n                    >\r\n                        <Typography>Create Asset</Typography>\r\n                    </ExpansionPanelSummary>\r\n                    <ExpansionPanelDetails>\r\n                    {(this.state.loading) ? <CircularProgress /> : <span>\r\n                        <StatusDisplay\r\n                            open={this.props.statusOpen}\r\n                            severity={this.props.statusSeverity}\r\n                            closeStatus={this.props.statusClose}\r\n                            message={this.props.statusMessage}\r\n                        />\r\n                            <Tooltip placement=\"top\" open={this.state.inputs.model.Tooltip} title={this.state.inputs.model.description}>\r\n                                <Autocomplete\r\n                                    id=\"select-model\"\r\n                                    options={this.props.options}\r\n                                    includeInputInList\r\n                                    defaultValue={this.props.defaultValues.getModel()}\r\n                                    renderInput={params => (\r\n                                    <TextField\r\n                                        {...params}\r\n                                        label={this.state.inputs.model.label}\r\n                                        name={this.state.inputs.model.name}\r\n                                        onChange={this.props.updateModelEdited}\r\n                                        onBlur={this.props.updateModelEdited}\r\n                                        variant=\"outlined\"\r\n                                        fullWidth\r\n                                        required\r\n                                    />\r\n                                    )}\r\n                                />\r\n                            </Tooltip>\r\n                            <Tooltip placement=\"top\" open={this.state.inputs.hostname.Tooltip} title={this.state.inputs.hostname.description}>\r\n                                <TextField\r\n                                    id=\"input-hostname\"\r\n                                    variant=\"outlined\"\r\n                                    label={this.state.inputs.hostname.label}\r\n                                    name={this.state.inputs.hostname.name}\r\n                                    onChange={this.props.updateModelEdited}\r\n                                    defaultValue={this.props.defaultValues.getHostname()}\r\n                                />\r\n                            </Tooltip>\r\n                            <Tooltip placement=\"top\" open={this.state.inputs.datacenter.Tooltip} title={this.state.inputs.datacenter.description}>\r\n                                <TextField\r\n                                    id=\"input-datacenter\"\r\n                                    variant=\"outlined\"\r\n                                    label={this.state.inputs.datacenter.label}\r\n                                    name={this.state.inputs.datacenter.name}\r\n                                    onChange={this.props.updateModelEdited}\r\n                                    onBlur={this.updateTooltip}\r\n                                    required\r\n                                    defaultValue={this.props.defaultValues.getDatacenter()}\r\n                                />\r\n                            </Tooltip>\r\n                            <Tooltip placement=\"top\" open={this.state.inputs.rack.Tooltip} title={this.state.inputs.rack.description}>\r\n                                <TextField\r\n                                    id=\"input-rack\"\r\n                                    variant=\"outlined\"\r\n                                    label={this.state.inputs.rack.label}\r\n                                    name={this.state.inputs.rack.name}\r\n                                    onChange={this.props.updateModelEdited}\r\n                                    required\r\n                                    defaultValue={this.props.defaultValues.getRack()}\r\n                                />\r\n                            </Tooltip>\r\n                            <Tooltip placement=\"top\" open={this.state.inputs.rackU.Tooltip} title={this.state.inputs.rackU.description}>\r\n                                <TextField\r\n                                    id=\"input-rackU\"\r\n                                    variant=\"outlined\"\r\n                                    label={this.state.inputs.rackU.label}\r\n                                    name={this.state.inputs.rackU.name}\r\n                                    onChange={this.props.updateModelEdited}\r\n                                    required\r\n                                    defaultValue={this.props.defaultValues.getRackU()}\r\n                                />\r\n                            </Tooltip>\r\n                            <Tooltip placement=\"top\" open={this.state.inputs.owner.Tooltip} title={this.state.inputs.owner.description}>\r\n                                <Autocomplete\r\n                                    id=\"select-owner\"\r\n                                    options={this.props.options}\r\n                                    includeInputInList\r\n                                    defaultValue={this.props.defaultValues.getOwner()}\r\n                                    renderInput={params => (\r\n                                    <TextField\r\n                                        {...params}\r\n                                        label={this.state.inputs.owner.label}\r\n                                        name={this.state.inputs.owner.name}\r\n                                        onChange={this.props.updateModelEdited}\r\n                                        onBlur={this.props.updateModelEdited}\r\n                                        variant=\"outlined\"\r\n                                        fullWidth\r\n                                        required\r\n                                    />\r\n                                    )}\r\n                                />\r\n                            </Tooltip>\r\n                            <Tooltip placement=\"top\" open={this.state.inputs.macAddress.Tooltip} title={this.state.inputs.macAddress.description}>\r\n                                <TextField\r\n                                    id=\"input-mac-address\"\r\n                                    variant=\"outlined\"\r\n                                    label={this.state.inputs.macAddress.label}\r\n                                    name={this.state.inputs.macAddress.name}\r\n                                    onChange={this.props.updateModelEdited}\r\n                                    defaultValue={this.props.defaultValues.getMacAddr()}\r\n                                />\r\n                            </Tooltip>\r\n                            <Tooltip placement=\"top\" open={this.state.inputs.networkConnections.Tooltip} title={this.state.inputs.networkConnections.description}>\r\n                                <TextField\r\n                                    id=\"input-network-ports\"\r\n                                    variant=\"outlined\"\r\n                                    label={this.state.inputs.networkConnections.label}\r\n                                    name={this.state.inputs.networkConnections.name}\r\n                                    onChange={this.props.updateModelEdited}\r\n                                    defaultValue={this.props.defaultValues.getNetworkConn()}\r\n                                />\r\n                            </Tooltip>\r\n                            <Tooltip placement=\"top\" open={this.state.inputs.powerConnections.Tooltip} title={this.state.inputs.powerConnections.description}>\r\n                                <TextField\r\n                                    id=\"input-power-ports\"\r\n                                    variant=\"outlined\"\r\n                                    label={this.state.inputs.powerConnections.label}\r\n                                    name={this.state.inputs.powerConnections.name}\r\n                                    onChange={this.props.updateModelEdited}\r\n                                    defaultValue={this.props.defaultValues.getPwrConn()}\r\n                                />\r\n                            </Tooltip>\r\n                            <Tooltip placement=\"top\" open={this.state.inputs.assetNum.Tooltip} title={this.state.inputs.assetNum.description}>\r\n                                <TextField\r\n                                    id=\"input-asset-number\"\r\n                                    variant=\"outlined\"\r\n                                    label={this.state.inputs.assetNum.label}\r\n                                    name={this.state.inputs.assetNum.name}\r\n                                    onChange={this.props.updateModelEdited}\r\n                                    value={this.state.nextAssetNum}\r\n                                    required\r\n                                    defaultValue={this.props.defaultValues.getAssetNum()}\r\n                                />\r\n                            </Tooltip>\r\n                            <Tooltip placement=\"top\" open={this.state.inputs.comment.Tooltip} title={this.state.inputs.comment.description}>\r\n                                <TextField\r\n                                    id=\"input-comment\"\r\n                                    variant=\"outlined\"\r\n                                    label={this.state.inputs.comment.label}\r\n                                    name={this.state.inputs.comment.name}\r\n                                    onChange={this.props.updateModelEdited}\r\n                                    multiline={true}\r\n                                    defaultValue={this.props.defaultValues.getComment()}\r\n                                />\r\n                            </Tooltip>\r\n                            <Button\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                onClick={() => this.create()}\r\n                            >\r\n                                Create\r\n                            </Button></span>}\r\n                    </ExpansionPanelDetails>\r\n                </ExpansionPanel>\r\n                    {this.props.disabled ? null:\r\n                    <div>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            onClick={this.props.edit}\r\n                            disabled={this.state.showConfirmationBox}\r\n                        >\r\n                            Save\r\n                        </Button>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            onClick={this.confirmDelete}\r\n                            disabled={this.state.showConfirmationBox}\r\n                        >\r\n                            Delete\r\n                        </Button>\r\n                    </div>}\r\n                    {this.state.showConfirmationBox ? <div>\r\n                        Are you sure you wish to delete?\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            onClick={this.deleteItem}\r\n                        >\r\n                            Yes\r\n                        </Button>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            onClick={this.closeModal}\r\n                        >\r\n                            No\r\n                        </Button>\r\n                    </div>:null}\r\n                </div>}\r\n                    </ExpansionPanelDetails>\r\n                </ExpansionPanel>}\r\n        </div>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\n\r\nimport axios from 'axios';\r\n\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from '@material-ui/core/Button';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\r\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\r\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nimport StatusDisplay from '../../helpers/StatusDisplay';\r\nimport { AssetInput } from '../enums/AssetInputs.ts';\r\nimport { AssetCommand } from '../enums/AssetCommands.ts'\r\nimport getURL from '../../helpers/functions/GetURL';\r\n\r\nfunction createInputs(name, label, showTooltip, description) {\r\n    return {label, name, showTooltip, description};\r\n}\r\n\r\nconst assetsMainPath = 'instances/';\r\n\r\nexport default class CreateAsset extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            loading:true,\r\n            nextAssetNum:null,\r\n\r\n            inputs: {\r\n                \"model\":createInputs(AssetInput.MODEL, \"Model\", false, \"A reference to an existing model\"),\r\n                \"hostname\":createInputs(AssetInput.HOSTNAME, \"Hostname\", false, \"A short string compliant with RFC 1034’s definition of 'label'\"),\r\n                \"rack\":createInputs(AssetInput.RACK, \"Rack\", false, \"The rack the equipment is installed in, written as a row letter and rack number, e.g. 'B12'\"),\r\n                \"rackU\":createInputs(AssetInput.RACK_U, \"Rack U\", false, \"An integer indicating the vertical location of the bottom of the equipment (e.g. '5')\"),\r\n                \"owner\":createInputs(AssetInput.OWNER, \"Owner\", false, \"A reference to an existing user on the system who owns this equipment\"),\r\n                \"comment\":createInputs(AssetInput.COMMENT, \"Comment\", false, \"Any additional information associated with this asset\"),\r\n                \"datacenter\":createInputs(AssetInput.DATACENTER, \"Datacenter\", false, \"A reference to a datacenter in which the chosen rack resides\"),\r\n                \"macAddress\":createInputs(AssetInput.MAC_ADDRESS, \"Mac Address\", false, \"A 6-byte hexadecimal string per network port shown canonically in lower case with colon delimiters (e.g., '00:1e:c9:ac:78:aa')\"),\r\n                \"networkConnections\":createInputs(AssetInput.NETWORK_CONNECTIONS, \"Network Connections\", false, \"For each network port, a reference to another network port on another piece of gear\"),\r\n                \"powerConnections\":createInputs(AssetInput.POWER_CONNECTIONS, \"Power Connections\", false, \"For each power port, a choice of PDU in the rack (left or right) and a PDU port number (1..24)\"),\r\n                \"assetNum\":createInputs(AssetInput.ASSET_NUMBER, \"Asset Number\", false, \"A six-digit serial number unique associated with an asset.\"),\r\n            },\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getNextAssetNum();\r\n    }\r\n\r\n    getNextAssetNum = () => {\r\n        axios.get(getURL(assetsMainPath, AssetCommand.ASSET_NUMBER)).then(response =>{\r\n            console.log(response);\r\n            this.setState({ loading: false, nextAssetNum: response.asset_number });\r\n        } ).catch( this.setState({ loading: false}));\r\n    }\r\n\r\n    updateTooltip = (event) => {\r\n        this.state.inputs.showTooltip = !(this.state.inputs.showTooltip);\r\n        this.forceUpdate();\r\n    }\r\n\r\n    create = () => {\r\n        this.props.createAsset();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n        <div>\r\n            {/*(this.state.loading) ? this.initialize() : null*/ }\r\n            <ExpansionPanel>\r\n                    <ExpansionPanelSummary\r\n                        expandIcon={<ExpandMoreIcon />}\r\n                    >\r\n                        <Typography>Create Asset</Typography>\r\n                    </ExpansionPanelSummary>\r\n                    <ExpansionPanelDetails>\r\n                    {(this.state.loading) ? <CircularProgress /> : <span>\r\n                        <StatusDisplay\r\n                            open={this.props.statusOpen}\r\n                            severity={this.props.statusSeverity}\r\n                            closeStatus={this.props.statusClose}\r\n                            message={this.props.statusMessage}\r\n                        />\r\n                            <Tooltip placement=\"top\" open={this.state.inputs.model.Tooltip} title={this.state.inputs.model.description}>\r\n                                <Autocomplete\r\n                                    id=\"select-model\"\r\n                                    options={this.props.options}\r\n                                    includeInputInList\r\n\r\n                                    renderInput={params => (\r\n                                    <TextField\r\n                                        {...params}\r\n                                        label={this.state.inputs.model.label}\r\n                                        name={this.state.inputs.model.name}\r\n                                        onChange={this.props.updateAssetCreator}\r\n                                        onBlur={this.props.updateAssetCreator}\r\n                                        variant=\"outlined\"\r\n                                        fullWidth\r\n                                        required\r\n                                    />\r\n                                    )}\r\n                                />\r\n                            </Tooltip>\r\n                            <Tooltip placement=\"top\" open={this.state.inputs.hostname.Tooltip} title={this.state.inputs.hostname.description}>\r\n                                <TextField\r\n                                    id=\"input-hostname\"\r\n                                    variant=\"outlined\"\r\n                                    label={this.state.inputs.hostname.label}\r\n                                    name={this.state.inputs.hostname.name}\r\n                                    onChange={this.props.updateAssetCreator}\r\n                                />\r\n                            </Tooltip>\r\n                            <Tooltip placement=\"top\" open={this.state.inputs.datacenter.Tooltip} title={this.state.inputs.datacenter.description}>\r\n                                <TextField\r\n                                    id=\"input-datacenter\"\r\n                                    variant=\"outlined\"\r\n                                    label={this.state.inputs.datacenter.label}\r\n                                    name={this.state.inputs.datacenter.name}\r\n                                    onChange={this.props.updateAssetCreator}\r\n                                    onBlur={this.updateTooltip}\r\n                                    required\r\n\r\n                                />\r\n                            </Tooltip>\r\n                            <Tooltip placement=\"top\" open={this.state.inputs.rack.Tooltip} title={this.state.inputs.rack.description}>\r\n                                <TextField\r\n                                    id=\"input-rack\"\r\n                                    variant=\"outlined\"\r\n                                    label={this.state.inputs.rack.label}\r\n                                    name={this.state.inputs.rack.name}\r\n                                    onChange={this.props.updateAssetCreator}\r\n                                    required\r\n\r\n                                />\r\n                            </Tooltip>\r\n                            <Tooltip placement=\"top\" open={this.state.inputs.rackU.Tooltip} title={this.state.inputs.rackU.description}>\r\n                                <TextField\r\n                                    id=\"input-rackU\"\r\n                                    variant=\"outlined\"\r\n                                    label={this.state.inputs.rackU.label}\r\n                                    name={this.state.inputs.rackU.name}\r\n                                    onChange={this.props.updateAssetCreator}\r\n                                    required\r\n\r\n                                />\r\n                            </Tooltip>\r\n                            <Tooltip placement=\"top\" open={this.state.inputs.owner.Tooltip} title={this.state.inputs.owner.description}>\r\n                                <Autocomplete\r\n                                    id=\"select-owner\"\r\n                                    options={this.props.options}\r\n                                    includeInputInList\r\n\r\n                                    renderInput={params => (\r\n                                    <TextField\r\n                                        {...params}\r\n                                        label={this.state.inputs.owner.label}\r\n                                        name={this.state.inputs.owner.name}\r\n                                        onChange={this.props.updateAssetCreator}\r\n                                        onBlur={this.props.updateAssetCreator}\r\n                                        variant=\"outlined\"\r\n                                        fullWidth\r\n                                        required\r\n                                    />\r\n                                    )}\r\n                                />\r\n                            </Tooltip>\r\n                            <Tooltip placement=\"top\" open={this.state.inputs.macAddress.Tooltip} title={this.state.inputs.macAddress.description}>\r\n                                <TextField\r\n                                    id=\"input-mac-address\"\r\n                                    variant=\"outlined\"\r\n                                    label={this.state.inputs.macAddress.label}\r\n                                    name={this.state.inputs.macAddress.name}\r\n                                    onChange={this.props.updateAssetCreator}\r\n\r\n                                />\r\n                            </Tooltip>\r\n                            <Tooltip placement=\"top\" open={this.state.inputs.networkConnections.Tooltip} title={this.state.inputs.networkConnections.description}>\r\n                                <TextField\r\n                                    id=\"input-network-ports\"\r\n                                    variant=\"outlined\"\r\n                                    label={this.state.inputs.networkConnections.label}\r\n                                    name={this.state.inputs.networkConnections.name}\r\n                                    onChange={this.props.updateAssetCreator}\r\n\r\n                                />\r\n                            </Tooltip>\r\n                            <Tooltip placement=\"top\" open={this.state.inputs.powerConnections.Tooltip} title={this.state.inputs.powerConnections.description}>\r\n                                <TextField\r\n                                    id=\"input-power-ports\"\r\n                                    variant=\"outlined\"\r\n                                    label={this.state.inputs.powerConnections.label}\r\n                                    name={this.state.inputs.powerConnections.name}\r\n                                    onChange={this.props.updateAssetCreator}\r\n\r\n                                />\r\n                            </Tooltip>\r\n                            <Tooltip placement=\"top\" open={this.state.inputs.assetNum.Tooltip} title={this.state.inputs.assetNum.description}>\r\n                                <TextField\r\n                                    id=\"input-asset-number\"\r\n                                    variant=\"outlined\"\r\n                                    label={this.state.inputs.assetNum.label}\r\n                                    name={this.state.inputs.assetNum.name}\r\n                                    onChange={this.props.updateAssetCreator}\r\n                                    value={this.state.nextAssetNum}\r\n                                    required\r\n\r\n                                />\r\n                            </Tooltip>\r\n                            <Tooltip placement=\"top\" open={this.state.inputs.comment.Tooltip} title={this.state.inputs.comment.description}>\r\n                                <TextField\r\n                                    id=\"input-comment\"\r\n                                    variant=\"outlined\"\r\n                                    label={this.state.inputs.comment.label}\r\n                                    name={this.state.inputs.comment.name}\r\n                                    onChange={this.props.updateAssetCreator}\r\n                                    multiline={true}\r\n\r\n                                />\r\n                            </Tooltip>\r\n                            <Button\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                onClick={() => this.create()}\r\n                            >\r\n                                Create\r\n                            </Button></span>}\r\n                    </ExpansionPanelDetails>\r\n                </ExpansionPanel>\r\n        </div>\r\n        );\r\n    }\r\n}\r\n","export enum RackCommand {\r\n    GET_ALL_RACKS = \"all\",\r\n    CREATE_RACKS = \"create\",\r\n    DELETE_RACKS = \"delete\",\r\n    GET_RACK_DETAILS = \"details\"\r\n}\r\n","import { Component} from 'react';\r\n\r\nexport default class Asset {\r\n\r\n\tmodel: string;\r\n\thostname: string;\r\n\track: string;\r\n\trackU: number;\r\n\towner: string;\r\n\tcomment: string;\r\n\tdatacenter_id: string;\r\n\ttags: any;\r\n\tmac_address: string;\r\n\tnetwork_connections: any;\r\n\tpower_connections: any;\r\n\tasset_number: number;\r\n\tjson: any;\r\n\r\n\tconstructor() {\r\n\t\tthis.model = \"\";\r\n\t\tthis.hostname = \"\";\r\n\t\tthis.rack = \"\";\r\n\t\tthis.rackU = -1;\r\n\t\tthis.owner = \"\";\r\n\t\tthis.comment = \"\";\r\n\t\tthis.datacenter_id = \"\";\r\n\t\tthis.tags = [];\r\n\t\tthis.mac_address = \"\";\r\n\t\tthis.network_connections = [];\r\n\t\tthis.power_connections = [];\r\n\t\tthis.asset_number = -1;\r\n\r\n\t\tthis.json = {\r\n\t\t\t\"model\":this.model,\r\n\t\t\t\"hostname\":this.hostname,\r\n\t\t\t\"rack\":this.rack,\r\n\t\t\t\"rackU\":this.rackU,\r\n\t\t\t\"owner\":this.owner,\r\n\t\t\t\"comment\":this.comment,\r\n\t\t\t\"datacenter_id\":this.datacenter_id,\r\n\t\t\t\"tags\":this.tags,\r\n\t\t\t\"mac_address\":this.mac_address,\r\n\t\t\t\"network_connections\":this.network_connections,\r\n\t\t\t\"power_connections\":this.power_connections,\r\n\t\t\t'asset_number':this.asset_number,\r\n\t\t}\r\n\t}\r\n\r\n\tupdateVal(key: any, val: any) {\r\n\t\tthis.json[key] = val;\r\n\t}\r\n\r\n\tgetAssetAsJSON() {\r\n\t\treturn this.json;\r\n\t}\r\n\r\n\tgetModel() {\r\n\t\treturn this.json.model;\r\n\t}\r\n\r\n\tgetHostname() {\r\n\t\treturn this.json.hostname;\r\n\t}\r\n\r\n\tgetRack() {\r\n\t\treturn this.json.rack;\r\n\t}\r\n\r\n\tgetRackU() {\r\n\t\treturn this.json.getRackU;\r\n\t}\r\n\r\n\tgetOwner() {\r\n\t\treturn this.json.owner;\r\n\t}\r\n\r\n\tgetComment() {\r\n\t\treturn this.json.comment;\r\n\t}\r\n\r\n\tgetDatacenter() {\r\n\t\treturn this.json.datacenter_id;\r\n\t}\r\n\r\n\tgetTags() {\r\n\t\treturn this.json.tags;\r\n\t}\r\n\r\n\tgetMacAddr() {\r\n\t\treturn this.json.mac_address;\r\n\t}\r\n\r\n\tgetNetworkConn() {\r\n\t\treturn this.json.network_connections;\r\n\t}\r\n\r\n\tgetPwrConn() {\r\n\t\treturn this.json.power_connections;\r\n\t}\r\n\r\n\tgetAssetNum() {\r\n\t\treturn this.json.asset_number;\r\n\t}\r\n\r\n}\r\n","import React from 'react';\r\n\r\nimport axios from 'axios';\r\nimport { CSVLink } from \"react-csv\";\r\n\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nimport { AssetCommand } from '../enums/AssetCommands.ts'\r\nimport { AssetInput } from '../enums/AssetInputs.ts'\r\nimport { Privilege } from '../../enums/privilegeTypes.ts'\r\nimport AssetButtons from '../helpers/ButtonsAsset';\r\nimport FilterAsset from '../helpers/FilterAsset';\r\nimport UploadModal from '../../helpers/UploadModal';\r\nimport getURL from '../../helpers/functions/GetURL';\r\nimport DetailAsset from '../helpers/DetailsAsset';\r\nimport CreateAsset from '../helpers/CreateAsset';\r\nimport StatusDisplay from '../../helpers/StatusDisplay';\r\nimport TableView from '../../helpers/TableView';\r\nimport ErrorBoundary from '../../errors/ErrorBoundry';\r\nimport Asset from \"../Asset.ts\";\r\n\r\nimport * as AssetConstants from \"../AssetConstants\";\r\nimport \"../stylesheets/AssetStyles.css\";\r\n\r\nconst columns = [\r\n    'model',\r\n    'hostname',\r\n    'rack',\r\n    'rack_position',\r\n]\r\n\r\nconst assetsMainPath = 'instances/';\r\nconst assetDownloadFileName = 'assets.csv';\r\nconst successToken = \"success\";\r\nconst errorToken = \"error\";\r\n\r\nexport default class AssetsView extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            showCreate:false,\r\n            showImport:false,\r\n            items:[],\r\n            createdAsset: new Asset(),\r\n            searchedAsset: new Asset(),\r\n            statusOpen:false,\r\n            statusSeverity:'',\r\n            statusMessage:'',\r\n            detailStatusOpen:false,\r\n            detailStatusSeverity:'',\r\n            detailStatusMessage:'',\r\n            createStatusOpen:false,\r\n            createStatusSeverity:'',\r\n            createStatusMessage:'',\r\n            deleteAssetRack:'',\r\n            deleteAssetrack_position:'',\r\n            viewAssetRack:'',\r\n            viewAssetrack_position:'',\r\n            csvData:'',\r\n            importedFile:null,\r\n            showDetailedView: false,\r\n            detailViewLoading:false,\r\n            detailedValues : new Asset(),\r\n            originalRack:'',\r\n            originalrack_position:'',\r\n\r\n            modelList:[],\r\n            madeModelQuery: false,\r\n            ownerList:[],\r\n            madeOwnerQuery: false,\r\n        };\r\n\r\n        axios.defaults.headers.common['token'] = this.props.token;\r\n        axios.defaults.headers.common['privilege'] = this.props.privilege;\r\n\r\n    }\r\n\r\n    createAsset = () => {\r\n        axios.post(\r\n            getURL(assetsMainPath, AssetCommand.create),this.state.createdAsset.getAssetAsJSON()\r\n            ).then(response => {\r\n                if (response.data.message === successToken) {\r\n                    this.setState({\r\n                        showStatus: true,\r\n                        statusMessage: \"Successfully created asset\",\r\n                        statusSeverity:successToken,\r\n                        createdAsset : new Asset(),\r\n                        showCreate:false,\r\n                    });\r\n                    this.searchAssets();\r\n                } else {\r\n                    this.setState({ createStatusOpen: true, createStatusMessage: response.data.message, createStatusSeverity:errorToken })\r\n                }\r\n            });\r\n    }\r\n\r\n    editAsset = () => {\r\n        let body = this.state.detailedValues.getAssetAsJSON();\r\n        body[AssetInput.RACK_ORIGINAL] = this.state.originalRack;\r\n        body[AssetInput.RACK_U_ORIGINAL] = this.state.originalrack_position;\r\n        axios.post(\r\n            getURL(assetsMainPath, AssetCommand.edit),body\r\n            ).then(response => {\r\n                if (response.data.message === successToken) {\r\n                    this.setState({\r\n                        showStatus: true,\r\n                        statusMessage: \"Successfully edited asset\",\r\n                        statusSeverity:successToken,\r\n                        detailedValues : new Asset(),\r\n                        showDetailedView:false,\r\n                    });\r\n                    this.searchAssets();\r\n\r\n                } else {\r\n                    this.setState({ detailStatusOpen: true, detailStatusMessage: response.data.message, detailStatusSeverity:errorToken })\r\n                }\r\n            });\r\n    }\r\n\r\n\r\n    deleteAsset = () => {\r\n        var body = {};\r\n        body[AssetInput.RACK] = this.state.originalRack;\r\n        body[AssetInput.RACK_U] = this.state.originalrack_position;\r\n\r\n        axios.post(\r\n            getURL(assetsMainPath, AssetCommand.delete), body\r\n            ).then(response => {\r\n                if (response.data.message === successToken) {\r\n                    this.setState({\r\n                        showStatus: true,\r\n                        statusMessage: \"Successfully deleted asset\",\r\n                        statusSeverity:successToken,\r\n                        originalRack:'',\r\n                        originalrack_position:'',\r\n                        showDetailedView:false\r\n                    });\r\n                    this.searchAssets();\r\n                } else {\r\n                    this.setState({ showStatus: true, statusMessage: response.data.message, statusSeverity:errorToken })\r\n                }\r\n            });\r\n    }\r\n\r\n    detailViewAsset = (rack, rack_position) => {\r\n        var body = {};\r\n        body[AssetInput.RACK] = rack;\r\n        body[AssetInput.RACK_U] = rack_position;\r\n\r\n        axios.post(\r\n            getURL(assetsMainPath, AssetCommand.detailView), body\r\n            ).then(response => this.setState({ detailedValues: response.data['assets'][0], detailViewLoading:false})\r\n            );\r\n\r\n        this.setState({\r\n            viewAssetRack:'',\r\n        });\r\n    }\r\n\r\n    searchAssets = () => {\r\n        axios.post(\r\n            getURL(assetsMainPath, AssetCommand.search),{ 'filter':this.state.searchedAsset.getAssetAsJSON() }\r\n            ).then(response => {\r\n                this.setState({ items: response.data['assets'] });\r\n            });\r\n    }\r\n\r\n    getModelList = () => {\r\n        this.setState({ madeModelQuery: true });\r\n        axios.get(\r\n            getURL(assetsMainPath, AssetCommand.GET_ALL_MODELS), {}\r\n            ).then(response => this.setState({ modelList: response.data.results }));\r\n\r\n    }\r\n\r\n    getUserList = () => {\r\n        this.setState({ madeOwnerQuery: true });\r\n        axios.get(\r\n            getURL(assetsMainPath, AssetCommand.GET_ALL_OWNERS)\r\n            ).then(response => this.setState({ ownerList: response.data.results }));\r\n\r\n    }\r\n\r\n    sendUploadedFile = (data) => {\r\n        axios.post(\r\n            getURL(assetsMainPath, AssetCommand.UPLOAD_FILE), data\r\n            ).then(response => {\r\n                if (response.data.message === successToken) {\r\n                    this.setState({ showStatus: true, statusMessage: response.data.summary, statusSeverity:successToken, showImport: false,})\r\n                    this.searchAssets();\r\n                } else {\r\n                    this.setState({ showStatus: true, statusMessage: response.data.message, statusSeverity:errorToken })\r\n                }\r\n            });\r\n    }\r\n\r\n    search = (filters) => {\r\n        Object.keys(filters).map(function(key) {\r\n            this.state.searchedAsset.updateVal(key, filters[key]);\r\n        });\r\n\r\n        this.searchAssets();\r\n    }\r\n\r\n    downloadTable = () => {\r\n        axios.post(\r\n            getURL(assetsMainPath, AssetCommand.EXPORT_FILE), { 'filter':this.state.searchedAsset.getAssetAsJSON() }\r\n            ).then(response => {\r\n                this.setState({ csvData: response.data.csvData });\r\n                this.csvLink.link.click();\r\n            });\r\n    }\r\n\r\n    openCreateModal = () => {\r\n        this.getModelList();\r\n        this.setState({showCreate: true});\r\n    }\r\n\r\n    openImportModal = () => {\r\n        this.setState({showImport: true});\r\n    }\r\n\r\n    showDetailedView = (id) => {\r\n        this.setState({\r\n            showDetailedView: true,\r\n            detailViewLoading:true,\r\n            originalRack: this.state.items[id][AssetInput.RACK],\r\n            originalrack_position: this.state.items[id][AssetInput.RACK_U],\r\n        });\r\n\r\n        var rack = this.state.items[id][AssetInput.RACK];\r\n        var rack_position = this.state.items[id][AssetInput.RACK_U];\r\n\r\n        this.detailViewAsset(rack, rack_position);\r\n    }\r\n\r\n    closeCreateModal = () => {\r\n        this.setState({showCreate: false});\r\n    }\r\n\r\n    closeImportModal = () => {\r\n        this.setState({showImport: false});\r\n    }\r\n\r\n    closeDetailedView = () => {\r\n        this.setState({ showDetailedView: false })\r\n    }\r\n\r\n    updateAssetCreator = (event) => {\r\n        this.state.createdAsset.updateVal(event.target.value);\r\n        this.forceUpdate();\r\n    }\r\n\r\n    updateAssetEdited = (event) => {\r\n        this.state.detailedValues.updateVal(event.target.value);\r\n        this.forceUpdate()\r\n    }\r\n\r\n    closeShowStatus = () => {\r\n        this.setState({ showStatus: false })\r\n    }\r\n\r\n    createStatusClose = () => {\r\n        this.setState({ createStatusOpen: false })\r\n    }\r\n\r\n    detailStatusClose = () => {\r\n        this.setState({ detailStatusOpen: false })\r\n    }\r\n\r\n    uploadFile = () => {\r\n        const data = new FormData();\r\n        data.append('file', this.state.importedFile);\r\n        this.sendUploadedFile(data);\r\n    }\r\n\r\n    chooseFile = (event) => {\r\n        this.setState({ importedFile: event.target.files[0] })\r\n    }\r\n\r\n    componentDidMount() {\r\n        console.log(this.state.madeModelQuery);\r\n        console.log(this.state.madeOwnerQuery)\r\n        this.searchAssets();\r\n        this.getModelList();\r\n        this.getUserList();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div class=\"root\">\r\n                <ErrorBoundary>\r\n                <Paper elevation={3}>\r\n                <StatusDisplay\r\n                    open={this.state.showStatus}\r\n                    severity={this.state.statusSeverity}\r\n                    closeStatus={this.closeShowStatus}\r\n                    message={this.state.statusMessage}\r\n                />\r\n                {(this.props.privilege === Privilege.ADMIN) ?\r\n                    (<div>\r\n                        <AssetButtons\r\n                            openCreateModal={this.openCreateModal}\r\n                            openImportModal={this.openImportModal}\r\n                            downloadTable={this.downloadTable}\r\n                        />\r\n                        <CSVLink\r\n                            data={this.state.csvData}\r\n                            filename={assetDownloadFileName}\r\n                            className=\"hidden\"\r\n                            ref={(r) => this.csvLink = r}\r\n                            target=\"_blank\"\r\n                        />\r\n                        <CreateAsset\r\n                            statusOpen={this.state.createStatusOpen}\r\n                            statusSeverity={this.state.createStatusSeverity}\r\n                            statusClose={this.createStatusClose}\r\n                            statusMessage={this.state.createStatusMessage}\r\n\r\n                            showCreate={this.state.showCreate}\r\n                            closeCreateModal={this.closeCreateModal}\r\n                            createAsset={this.createAsset}\r\n                            updateAssetCreator={this.updateAssetCreator}\r\n                            options={this.state.modelList}\r\n                            useAutocomplete={true}\r\n                        />\r\n                        <UploadModal\r\n                            showImport={this.state.showImport}\r\n                            closeImportModal={this.closeImportModal}\r\n                            uploadFile={this.uploadFile}\r\n                            chooseFile={this.chooseFile}\r\n                            textDescription=\"The following format should be used for each row: hostname,rack,rack_position,vendor,model_number,owner,comment\"\r\n                        />\r\n                        </div>):null}\r\n                {/*<FilterAsset\r\n                    search={this.search}\r\n                    filters={columns}\r\n                />*/}\r\n                <TableView\r\n                    columns={columns}\r\n                    vals={this.state.items}\r\n                    keys={columns}\r\n                    showDetailedView={this.showDetailedView}\r\n                    filters={columns}\r\n                />\r\n                <DetailAsset\r\n                    statusOpen={this.state.detailStatusOpen}\r\n                    statusSeverity={this.state.detailStatusSeverity}\r\n                    statusClose={this.detailStatusClose}\r\n                    statusMessage={this.state.detailStatusMessage}\r\n                    showDetailedView={this.state.showDetailedView}\r\n                    closeDetailedView={this.closeDetailedView}\r\n                    updateModelEdited={this.updateAssetEdited}\r\n                    defaultValues={this.state.detailedValues}\r\n                    loading={this.state.detailViewLoading}\r\n                    edit={this.editAsset}\r\n                    delete={this.deleteAsset}\r\n                    disabled={this.props.privilege===Privilege.USER}\r\n                />\r\n            </Paper>\r\n            </ErrorBoundary>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","export enum StatsCommand {\r\n    GENERATE_REPORT = \"generate-report\",\r\n    TEST = \"test\",\r\n}\r\n","import React from 'react';\r\n\r\nimport axios from 'axios';\r\n\r\nimport Select from '@material-ui/core/Select';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport { MenuItem, Button, TextField } from '@material-ui/core';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\n\r\nimport { RackCommand } from \"../enums/RackCommands.ts\";\r\nimport { Privilege } from '../../enums/privilegeTypes.ts';\r\nimport \"../stylesheets/RackStyles.css\";\r\n\r\nimport getURL from '../../helpers/functions/GetURL';\r\nimport * as Constants from '../../Constants';\r\nimport StatusDisplay from '../../helpers/StatusDisplay';\r\n\r\nimport ErrorBoundray from '../../errors/ErrorBoundry';\r\n\r\nconst racksMainPath = 'racks/';\r\n\r\nexport default class RacksView extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            items:[],\r\n            startingRackLetter:'A',\r\n            endingRackLetter:'A',\r\n            startingRackNumber:1,\r\n            endingRackNumber:1,\r\n\r\n            showStatus:false,\r\n            statusMessage:'',\r\n            statusSeverity:'',\r\n\r\n            showConfirmationBox:false,\r\n\r\n            racksList:[],\r\n            madeRacksQuery:false,\r\n        };\r\n\r\n        axios.defaults.headers.common['token'] = this.props.token;\r\n        axios.defaults.headers.common['privilege'] = this.props.privilege;\r\n\r\n    }\r\n\r\n    getAllRacks = () => {\r\n        axios.get(getURL(racksMainPath, RackCommand.GET_ALL_RACKS)).then(response => {\r\n                if (response.data.message === 'success') {\r\n                    this.setState({ showStatus: true, statusMessage: \"Success\", statusSeverity:\"success\", racksList:response.data.racks })\r\n                } else {\r\n                    this.setState({ showStatus: true, statusMessage: response.data.message, statusSeverity:\"error\" })\r\n                }\r\n            });\r\n    }\r\n\r\n    updateRacks(command) {\r\n        axios.post(\r\n            getURL(racksMainPath, command),\r\n            {\r\n                'start_letter':this.state.startingRackLetter,\r\n                'stop_letter':this.state.endingRackLetter,\r\n                'start_number':this.state.startingRackNumber,\r\n                'stop_number':this.state.endingRackNumber,\r\n            }\r\n            ).then(response => {\r\n                console.log(response);\r\n                if (response.data.message === 'success') {\r\n                    this.setState({ showStatus: true, statusMessage: \"Success\", statusSeverity:\"success\", showConfirmationBox:false });\r\n                    if (command === RackCommand.GET_RACK_DETAILS) {\r\n                        const win = window.open(response.data.link, '_blank');\r\n                        if (win != null) {\r\n                            win.focus();\r\n                        }\r\n                    }\r\n                } else {\r\n                    this.setState({ showStatus: true, statusMessage: response.data.message, statusSeverity:\"error\" })\r\n                }\r\n            });\r\n    }\r\n\r\n    createRacks = () => {\r\n        this.updateRacks(RackCommand.CREATE_RACKS);\r\n    }\r\n\r\n    deleteRacks = () => {\r\n        this.updateRacks(RackCommand.DELETE_RACKS);\r\n    }\r\n\r\n    viewRacks = () => {\r\n        this.updateRacks(RackCommand.GET_RACK_DETAILS);\r\n    }\r\n\r\n    changeStartingLetter = (event) => {\r\n        this.setState({ startingRackLetter: event.target.value })\r\n    }\r\n\r\n    changeEndingLetter = (event) => {\r\n        this.setState({ endingRackLetter: event.target.value })\r\n    }\r\n\r\n    changeStartingNum = (event) => {\r\n        this.setState({ startingRackNumber: event.target.value })\r\n    }\r\n\r\n    changeEndingNum = (event) => {\r\n        this.setState({ endingRackNumber: event.target.value })\r\n    }\r\n\r\n    closeShowStatus = () => {\r\n        this.setState({ showStatus: false })\r\n    }\r\n\r\n    initialize = () => {\r\n        this.getAllRacks();\r\n        this.setState({ madeRacksQuery: true });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div class=\"root\">\r\n                <ErrorBoundray>\r\n                <Paper elevation={3}>\r\n                {(this.state.madeRacksQuery) ? null : this.initialize()}\r\n                <StatusDisplay\r\n                    open={this.state.showStatus}\r\n                    severity={this.state.statusSeverity}\r\n                    closeStatus={this.closeShowStatus}\r\n                    message={this.state.statusMessage}\r\n                />\r\n                <FormControl>\r\n                    <div class=\"select-letter\">\r\n                        <Select id=\"starting-letter-selector\" value={this.state.startingRackLetter} onChange={this.changeStartingLetter}>\r\n                            {Constants.RackX.map(val => (<MenuItem value={val}>{val}</MenuItem>))}\r\n                        </Select>\r\n                        <FormHelperText>Starting Letter</FormHelperText>\r\n                    </div>\r\n                </FormControl>\r\n                <FormControl>\r\n                    <div class=\"select-letter\">\r\n                        <Select id=\"ending-letter-selector\" value={this.state.endingRackLetter} onChange={this.changeEndingLetter}>\r\n                            {Constants.RackX.map(val => (<MenuItem value={val}>{val}</MenuItem>))}\r\n                        </Select>\r\n                        <FormHelperText>Ending Letter</FormHelperText>\r\n                    </div>\r\n                </FormControl>\r\n                <FormControl>\r\n                    <div class=\"select-number\">\r\n                        <TextField\r\n                            id=\"starting-num-selector\"\r\n                            type=\"number\"\r\n                            value={this.state.startingRackNumber}\r\n                            onChange={this.changeStartingNum}\r\n                            InputProps={{ inputProps: { min: 1} }}\r\n                        />\r\n                        <FormHelperText>Starting Number</FormHelperText>\r\n                    </div>\r\n                </FormControl>\r\n                <FormControl>\r\n                    <div class=\"select-number\">\r\n                        <TextField\r\n                            id=\"ending-num-selector\"\r\n                            type=\"number\"\r\n                            value={this.state.endingRackNumber}\r\n                            onChange={this.changeEndingNum}\r\n                            InputProps={{ inputProps: { min: 1} }}\r\n                        />\r\n                        <FormHelperText>Ending Number</FormHelperText>\r\n                    </div>\r\n                </FormControl>\r\n                <div class=\"buttons\">\r\n                    <span class=\"button\">\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        onClick={this.viewRacks}\r\n                        disabled={this.state.showConfirmationBox}\r\n                    >\r\n                        View\r\n                    </Button>\r\n                    </span>\r\n                    <span class=\"button\">\r\n                        {(this.props.privilege === Privilege.ADMIN) ?\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            onClick={this.createRacks}\r\n                            disabled={this.state.showConfirmationBox}\r\n                        >\r\n                            Create\r\n                        </Button> : null}\r\n                    </span>\r\n                    <span class=\"button\">\r\n                        {(this.props.privilege === Privilege.ADMIN) ?\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            onClick={() => this.setState({ showConfirmationBox: true, })}\r\n                            disabled={this.state.showConfirmationBox}\r\n                        >\r\n                            Delete\r\n                        </Button> : null}\r\n                        </span>\r\n                    </div>\r\n                    {this.state.showConfirmationBox ? <div>\r\n                            Are you sure you wish to delete?\r\n                            <Button\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                onClick={this.deleteRacks}\r\n                            >\r\n                                Yes\r\n                            </Button>\r\n                            <Button\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                onClick={() => this.setState({ showConfirmationBox: false, })}\r\n                            >\r\n                                No\r\n                            </Button>\r\n                        </div>:null}\r\n\r\n                    </Paper>\r\n                </ErrorBoundray>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","export default function jsonToArr(incomingJSON) {\r\n    var json = {};\r\n    try {\r\n        json = JSON.parse(incomingJSON);\r\n    } catch (e) {\r\n        json = incomingJSON;\r\n    }\r\n\r\n    if (Object.entries(json).length === 0 && json.constructor === Object) {\r\n        return [];\r\n    }\r\n\r\n    const items = [];\r\n\r\n    Object.keys(json).map(function(key) {\r\n        const row = [];\r\n        row.push(key);\r\n        row.push(json[key]);\r\n        items.push(row);\r\n    });\r\n    return items;\r\n}\r\n","import React from 'react';\r\nimport axios from 'axios';\r\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\r\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\r\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport getURL from '../../helpers/functions/GetURL';\r\nimport  Button from '@material-ui/core/Button';\r\nimport { StatsCommand } from \"../enums/StatsCommands.ts\";\r\nimport JSONtoArr from \"../../helpers/functions/JSONtoArr\";\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport StatusDisplay from '../../helpers/StatusDisplay';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport ErrorBoundray from '../../errors/ErrorBoundry';\r\n\r\n\r\nconst statsMainPath = 'stats/';\r\nconst tables = {\r\n    \"totalUsage\":\"Total Usage\",\r\n    \"spaceUsage\": \"Space Usage\",\r\n    \"vendorUsage\": \"Vendor Usage\",\r\n    \"modelUsage\": \"Model Usage\",\r\n    \"ownerUsage\": \"Owner Usage\",\r\n}\r\n\r\nconst tableCols = {\r\n    \"totalUsage\":[\"Total\", \"Usage\"],\r\n    \"spaceUsage\": [\"Rack\", \"Usage\"],\r\n    \"vendorUsage\": [\"Vendor\", \"Usage\"],\r\n    \"modelUsage\": [\"Model\", \"Usage\"],\r\n    \"ownerUsage\": [\"Ownder\", \"Usage\"],\r\n}\r\n\r\nexport default class StatisticsView extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            tableValues: {\r\n                \"totalUsage\":[],\r\n                \"spaceUsage\": [],\r\n                \"vendorUsage\": [],\r\n                \"modelUsage\": [],\r\n                \"ownerUsage\": [],\r\n            },\r\n            totalUsage:[],\r\n            spaceUsage:[],\r\n            vendorUsage:[],\r\n            modelUsage:[],\r\n            ownerUsage:[],\r\n\r\n            showStatus:false,\r\n            statusMessage:'',\r\n            statusSeverity:'',\r\n        };\r\n\r\n        this.closeShowStatus = this.closeShowStatus.bind(this);\r\n        this.generateReport = this.generateReport.bind(this);\r\n\r\n        axios.defaults.headers.common['token'] = this.props.token;\r\n        axios.defaults.headers.common['privilege'] = this.props.privilege;\r\n    }\r\n\r\n    generateReport() {\r\n        axios.get(getURL(statsMainPath, StatsCommand.GENERATE_REPORT)).then(response => {\r\n                try {\r\n                    var data = response.data;\r\n                    var totalUsage = [];\r\n                    var totalUsageRow = [\"Total Usage\"];\r\n                    totalUsageRow.push(data[\"totalUsage\"]);\r\n                    totalUsage.push(totalUsageRow);\r\n\r\n                    var spaceUsage = JSONtoArr(data[\"spaceUsage\"]);\r\n                    if (spaceUsage.length == 0) {\r\n                        spaceUsage.push([\"No space is currently being used\", []])\r\n                    }\r\n                    var vendorUsage = JSONtoArr(data[\"vendorUsage\"]);\r\n                    if (vendorUsage.length == 0) {\r\n                        vendorUsage.push([\"No vendors currently using space\", []])\r\n                    }\r\n                    var modelUsage = JSONtoArr(data[\"modelUsage\"]);\r\n                    if (modelUsage.length == 0) {\r\n                        modelUsage.push([\"No models currently using space\", []])\r\n                    }\r\n                    var ownerUsage = JSONtoArr(data[\"ownerUsage\"]);\r\n                    if (ownerUsage.length == 0) {\r\n                        ownerUsage.push([\"No owners currently using space\", []])\r\n                    }\r\n\r\n                    this.setState({\r\n                        showStatus: true,\r\n                        statusSeverity:\"success\",\r\n                        statusMessage: \"Success\",\r\n                        tableValues: {\r\n                            \"totalUsage\":totalUsage,\r\n                            \"spaceUsage\": spaceUsage,\r\n                            \"vendorUsage\": vendorUsage,\r\n                            \"modelUsage\": modelUsage,\r\n                            \"ownerUsage\": ownerUsage,\r\n                        },\r\n                     })\r\n                } catch {\r\n                    this.setState({ showStatus: true, statusMessage: response.data.message, statusSeverity:\"error\" })\r\n                }\r\n            });\r\n    }\r\n\r\n    closeShowStatus() {\r\n        this.setState({ showStatus: false })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <ErrorBoundray >\r\n                <StatusDisplay\r\n                    open={this.state.showStatus}\r\n                    severity={this.state.statusSeverity}\r\n                    closeStatus={this.closeShowStatus}\r\n                    message={this.state.statusMessage}\r\n                />\r\n                <div>\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        onClick={this.generateReport}\r\n                    >\r\n                        Generate New Report\r\n                    </Button>\r\n                </div>\r\n                {Object.keys(tables).map(key => (\r\n                <ExpansionPanel>\r\n                    <ExpansionPanelSummary\r\n                        expandIcon={<ExpandMoreIcon />}\r\n                    >\r\n                        <Typography>{tables[key]}</Typography>\r\n                    </ExpansionPanelSummary>\r\n                    <ExpansionPanelDetails>\r\n                        <TableContainer component={Paper}>\r\n                            <Table>\r\n                                <TableHead>\r\n                                    <TableRow >\r\n                                        {tableCols[key].map(column => (<TableCell><span id={column}>{column}</span></TableCell>))}\r\n                                    </TableRow>\r\n                                </TableHead>\r\n                                <TableBody>\r\n                                {this.state.tableValues[key].map(row => (\r\n                                    <TableRow>\r\n                                        {row.map(column => (<TableCell><span id={column}>{column + (isNaN(column) ? \"\" : \"%\")}</span></TableCell>))}\r\n                                    </TableRow>\r\n                                ))}\r\n                                </TableBody>\r\n                            </Table>\r\n                        </TableContainer>\r\n                    </ExpansionPanelDetails>\r\n                </ExpansionPanel>\r\n                ))}\r\n                </ErrorBoundray>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport AccountCircle from '@material-ui/icons/AccountCircle';\r\n\r\nimport ModelsView from './models/pages/ModelsView';\r\nimport UsersView from './users/pages/UsersView';\r\nimport AssetsView from './assets/pages/AssetsView';\r\nimport RacksView from './racks/pages/RacksView';\r\nimport StatisticsView from './statistics/pages/StatisticsView';\r\n\r\nimport { Privilege } from './enums/privilegeTypes.ts'\r\n\r\nimport ErrorBoundry from './errors/ErrorBoundry';\r\n\r\nimport '../stylesheets/TabStyles.css';\r\n\r\nexport default class TabViewer extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            currentTabID:0,\r\n            anchorEl: null,\r\n            isMenuOpen:false,\r\n        };\r\n        this.handleChange = this.handleChange.bind(this);\r\n    }\r\n\r\n    handleChange(event, newValue) {\r\n        this.setState({ currentTabID: newValue })\r\n    }\r\n\r\n    handleProfileMenuOpen = (event) => {\r\n        this.setState({ anchorEl: event.currentTarget, isMenuOpen:true });\r\n    }\r\n\r\n    handleMenuClose = () => {\r\n        this.setState({ anchorEl: null, isMenuOpen:false });\r\n    };\r\n\r\n    render() {\r\n        return (\r\n        <div>\r\n            <ErrorBoundry>\r\n            <AppBar position=\"static\">\r\n                <div class=\"root\">\r\n                    <Typography class=\"title\" variant=\"h3\">\r\n                        Hyposoft Server Management\r\n                    </Typography>\r\n                    <span class=\"grow\"/>\r\n                    <IconButton\r\n                        aria-label=\"account of current user\"\r\n                        aria-controls=\"menu-appbar\"\r\n                        aria-haspopup=\"true\"\r\n                        color=\"inherit\"\r\n                        onClick={this.handleProfileMenuOpen}\r\n                    >\r\n                        <AccountCircle />\r\n                    </IconButton>\r\n                    <Menu\r\n                        anchorEl={this.state.anchorEl}\r\n                        anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n                        id='primary-search-account-menu'\r\n                        keepMounted\r\n                        transformOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n                        open={this.state.isMenuOpen}\r\n                        onClose={this.handleMenuClose}\r\n                    >\r\n                        <MenuItem>{\"Username: \" + this.props.username}</MenuItem>\r\n                        <MenuItem>{\"Privilege: \" + this.props.privilege}</MenuItem>\r\n                        <MenuItem onClick={this.props.logout} >LOGOUT</MenuItem>\r\n                    </Menu>\r\n                </div>\r\n            </AppBar>\r\n\r\n            <Tabs value={this.state.currentTabID} onChange={this.handleChange}\r\n                indicatorColor=\"primary\"\r\n                textColor=\"primary\"\r\n                centered\r\n            >\r\n                    <Tab value={0} style={{flexGrow: 1,}} label=\"Models\"> </Tab>\r\n                    <Tab value={1} style={{flexGrow: 1,}} label=\"Assets\" ></Tab>\r\n                    {(this.props.privilege === Privilege.ADMIN) ? <Tab value={2} style={{flexGrow: 1,}} label=\"Users\"></Tab> : null}\r\n                    <Tab value={3} style={{flexGrow: 1,}} label=\"Racks\" />\r\n                    <Tab value={4} style={{flexGrow: 1,}} label=\"Statistics\" />\r\n            </Tabs>\r\n            <Typography\r\n                component=\"div\"\r\n                role=\"tabpanel\"\r\n                hidden={this.state.currentTabID !== 0}\r\n                id={`simple-tabpanel-0`}\r\n                aria-labelledby={`simple-tab-0`}\r\n            >\r\n                <ModelsView token={this.props.token} privilege={this.props.privilege} />\r\n            </Typography>\r\n            <Typography\r\n                component=\"div\"\r\n                role=\"tabpanel\"\r\n                hidden={this.state.currentTabID !== 1}\r\n                id={`simple-tabpanel-0`}\r\n                aria-labelledby={`simple-tab-0`}\r\n            >\r\n                <AssetsView token={this.props.token} privilege={this.props.privilege} />\r\n            </Typography>\r\n            <Typography\r\n                component=\"div\"\r\n                role=\"tabpanel\"\r\n                hidden={this.state.currentTabID !== 2}\r\n                id={`simple-tabpanel-0`}\r\n                aria-labelledby={`simple-tab-0`}\r\n            >\r\n                <UsersView token={this.props.token} privilege={this.props.privilege} />\r\n            </Typography>\r\n            <Typography\r\n                component=\"div\"\r\n                role=\"tabpanel\"\r\n                hidden={this.state.currentTabID !== 3}\r\n                id={`simple-tabpanel-0`}\r\n                aria-labelledby={`simple-tab-0`}\r\n            >\r\n                <RacksView token={this.props.token} privilege={this.props.privilege} />\r\n            </Typography>\r\n            <Typography\r\n                component=\"div\"\r\n                role=\"tabpanel\"\r\n                hidden={this.state.currentTabID !== 4}\r\n                id={`simple-tabpanel-0`}\r\n                aria-labelledby={`simple-tab-0`}\r\n            >\r\n                <StatisticsView token={this.props.token} privilege={this.props.privilege} />\r\n            </Typography>\r\n            </ErrorBoundry>\r\n        </div>);\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport Login from \"./Login\";\r\nimport ShibLogin from \"./ShibLogin\";\r\nimport TabViewer from \"./Tabs\";\r\nimport axios from 'axios';\r\nimport getURL from './helpers/functions/GetURL';\r\n\r\nconst storedToken = 'token';\r\nconst storedPrivilege = 'privilege';\r\nconst storedLoggedIn = 'loggedIn';\r\nconst storedUsername = 'username';\r\n\r\nexport default class PageSelector extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      token:sessionStorage.getItem(storedToken) || '',\r\n      privilege:sessionStorage.getItem(storedPrivilege) || '',\r\n      loggedIn:sessionStorage.getItem(storedLoggedIn) || '',\r\n      username:sessionStorage.getItem(storedUsername) || '',\r\n    };\r\n\r\n    this.login = this.login.bind(this);\r\n    this.logout = this.logout.bind(this);\r\n  }\r\n\r\n  login(token, username, privilege) {\r\n    sessionStorage.setItem(storedToken, token);\r\n    sessionStorage.setItem(storedPrivilege, privilege);\r\n    sessionStorage.setItem(storedLoggedIn, true);\r\n    sessionStorage.setItem(storedUsername, username);\r\n\r\n    this.setState({\r\n      token:token,\r\n      privilege:privilege,\r\n      loggedIn:true,\r\n      username: username,\r\n    })\r\n  }\r\n\r\n  logout() {\r\n    axios.get(getURL('users/', 'logout'));\r\n\r\n    this.setState({\r\n      token:'',\r\n      privilege:'',\r\n      loggedIn:false,\r\n      username:'',\r\n    });\r\n\r\n    sessionStorage.removeItem(storedToken);\r\n    sessionStorage.removeItem(storedPrivilege);\r\n    sessionStorage.removeItem(storedLoggedIn);\r\n    sessionStorage.removeItem(storedUsername);\r\n\r\n    window.location.reload();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        {this.state.loggedIn ?  <TabViewer token={this.state.token} username={this.state.username} privilege={this.state.privilege} logout={this.logout} /> : <Login loginFunc={this.login} shib={this.props.redirected}/>}\r\n      </div>\r\n    );\r\n  }\r\n\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './stylesheets/index.css';\nimport PageSelector from './javascript/PageSelector';\n\nReactDOM.render(<PageSelector redirected={document.referrer}/>, document.getElementById('root'));\n","module.exports = __webpack_public_path__ + \"static/media/logo.df79d0ea.png\";"],"sourceRoot":""}
