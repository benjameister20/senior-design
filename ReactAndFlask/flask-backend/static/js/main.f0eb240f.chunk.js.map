{"version":3,"sources":["javascript/enums/privilegeTypes.ts","javascript/Constants.jsx","javascript/helpers/functions/GetURL.jsx","javascript/enums/modelCommands.ts","javascript/enums/modelInputs.ts","javascript/helpers/StatusDisplay.jsx","javascript/errors/ErrorBoundry.jsx","javascript/Login.jsx","javascript/enums/userCommands.ts","javascript/enums/userInputs.ts","javascript/helpers/TableView.jsx","javascript/helpers/ButtonMenu.jsx","javascript/helpers/Filters.jsx","javascript/helpers/UploadModal.jsx","javascript/helpers/DetailedView.jsx","javascript/helpers/CreateModal.jsx","javascript/pages/ModelsView.jsx","javascript/pages/UsersView.jsx","javascript/enums/instanceCommands.ts","javascript/enums/instanceInputs.ts","javascript/pages/InstancesView.jsx","javascript/enums/rackCommands.ts","javascript/pages/RacksView.jsx","javascript/enums/statsCommands.ts","javascript/helpers/functions/JSONtoArr.jsx","javascript/pages/StatisticsView.jsx","javascript/Tabs.jsx","javascript/PageSelector.jsx","index.jsx"],"names":["Privilege","serverEndpoint","RackX","RackY","getURL","path","endpoint","Constants","ModelCommand","ModelInput","StatusDisplay","props","state","Collapse","in","this","open","Alert","severity","action","IconButton","aria-label","color","size","onClick","closeStatus","fontSize","message","React","Component","ErrorBoundary","hasError","error","errorInfo","children","Login","username","password","statusMessage","showStatus","statusSeverity","closeShowStatus","bind","submitCredentials","axios","post","then","response","data","setState","loginFunc","ADMIN","event","target","value","TextField","id","label","variant","required","ref","onChange","updateUsername","type","updatePassword","Button","UserCommand","UserInput","TableView","showDetailedView","TableContainer","component","Paper","Table","className","minWidth","TableHead","TableRow","columns","map","col","TableCell","TableBody","vals","row","index","keys","key","scope","ButtonMenu","startIcon","openImportModal","downloadTable","Filters","filters","hasOwnProperty","forceUpdate","search","filter","InputBase","placeholder","inputProps","updateSearchText","UploadModal","Modal","style","top","left","transform","background","aria-labelledby","aria-describedby","showImportModal","onClose","closeImportModal","accept","chooseFile","uploadFile","textDescription","DetailedView","showConfirmationBox","closeModal","confirmDelete","deleteItem","delete","ExpansionPanel","ExpansionPanelSummary","expandIcon","Typography","ExpansionPanelDetails","loading","CircularProgress","inputs","input","name","disabled","updateModelEdited","defaultValue","defaultValues","edit","closeDetailedView","CreateModal","class","useAutocomplete","Autocomplete","options","includeInputInList","freeSolo","renderInput","params","updateModelCreator","onBlur","fullWidth","createModel","ModelsView","showCreateModal","items","createdModel","createdVendor","createdModelNum","createdHeight","createdDispClr","createdEthPorts","createdPwrPorts","createdCPU","createdMem","createdStorage","createdComments","deleteVendor","deleteModel","viewVendor","viewModel","searchText","searchVendor","searchModelNum","searchHeight","csvData","importedFile","detailViewLoading","detailedValues","originalVendor","originalModelNumber","originalHeight","vendorsList","madeVendorQuery","openCreateModal","closeCreateModal","editModel","getVendorList","sendUploadedFile","initialize","defaults","headers","common","token","privilege","create","Vendor","model_number","Height","display_color","ethernet_ports","power_ports","CPU","Memory","Storage","Comment","searchModels","vendor","modelNum","detailView","get","VENDOR_VALUES","results","UPLOAD_FILE","summary","EXPORT_FILE","csvLink","link","click","detailViewModel","FormData","append","files","filename","r","USER","InstanceCommand","InstanceInput","UsersView","createdUser","searchUsernm","searchEml","searchDspNm","searchPriv","deleteUsername","viewUser","originalUsername","initialized","createUser","editUser","deleteUser","detailViewUser","searchUsers","updateUserCreator","updateUserEdited","Username","Password","display_name","Email","RackCommand","InstancesView","createdInstance","deleteInstanceRack","deleteInstancerack_position","viewInstanceRack","viewInstancerack_position","searchModel","searchHostname","searchRack","searchRackU","originalRack","originalrack_position","modelList","madeModelQuery","createInstance","editInstance","deleteInstance","detailViewInstance","searchInstances","updateInstanceCreator","updateInstanceEdited","getModelList","Model","Hostname","Rack","RackU","Owner","rack","rack_position","GET_ALL_MODELS","StatsCommand","RacksView","startingRackLetter","endingRackLetter","startingRackNumber","endingRackNumber","getAllRacks","updateRacks","createRacks","deleteRacks","viewRacks","changeStartingLetter","changeEndingLetter","changeStartingNum","changeEndingNum","GET_ALL_RACKS","command","console","log","GET_RACK_DETAILS","win","window","focus","CREATE_RACKS","DELETE_RACKS","FormControl","Select","val","MenuItem","FormHelperText","jsonToArr","incomingJSON","json","JSON","parse","e","Object","entries","length","constructor","push","tables","tableCols","StatisticsView","tableValues","totalUsage","spaceUsage","vendorUsage","modelUsage","ownerUsage","generateReport","GENERATE_REPORT","totalUsageRow","JSONtoArr","column","isNaN","TabViewer","currentTabID","handleChange","newValue","AppBar","position","Tabs","Tab","flexGrow","logout","role","hidden","storedToken","storedPrivilege","storedLoggedIn","PageSelector","sessionStorage","getItem","loggedIn","login","setItem","removeItem","location","reload","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f0eb240f.chunk.js","sourcesContent":["export enum Privilege  {\r\n    ADMIN = \"admin\",\r\n    USER = \"user\",\r\n};\r\n","/**\r\n * Constants file\r\n */\r\n\r\nexport const localServerEndpoint = 'http://localhost:4010/';\r\nexport const testServerEndpoint = ' https://parseltongue-finishinge-lfw68m.herokuapp.com/';\r\nexport const devServerEndpoint = 'https://parseltongue-dev.herokuapp.com/';\r\nexport const prodServerEndpoint = 'https://parseltongue-prod.herokuapp.com/';\r\n\r\nexport const serverEndpoint = devServerEndpoint;\r\n\r\n\r\nexport const RackX = [\r\n    'A', 'B', 'C', 'D', 'E',\r\n    'F', 'G', 'H', 'I', 'J',\r\n    'K', 'L', 'M', 'N', 'O',\r\n    'P', 'Q', 'R', 'S', 'T',\r\n    'W', 'X', 'Y', 'Z',\r\n]\r\n\r\nexport const RackY = [\r\n    1, 2, 3, 4, 5, 6, 7, 8, 9, 10,\r\n    11, 12, 13, 14, 15, 16, 17, 18, 19 , 20,\r\n    21, 22, 23, 24, 25, 26, 27, 28, 29, 30,\r\n    31, 32, 33, 34, 35, 36, 37, 38, 39, 40,\r\n    41, 42, 43, 44, 45, 46, 47, 48, 49, 50,\r\n    51, 52, 53, 54, 55, 56, 57, 58, 59, 60,\r\n]\r\n\r\nexport const testModelArray = [\r\n    {\r\n        'vendor':'a',\r\n        'model_number':'a',\r\n        'height':'a',\r\n        'display_color':'a',\r\n        'ethernet_ports':'a',\r\n        'power_ports':'a',\r\n        'cpu':'a',\r\n        'memory':'a',\r\n        'storage':'a',\r\n        'comments':'a',\r\n    },{\r\n        'vendor':'b',\r\n        'model_number':'b',\r\n        'height':'b',\r\n        'display_color':'b',\r\n        'ethernet_ports':'b',\r\n        'power_ports':'b',\r\n        'cpu':'b',\r\n        'memory':'b',\r\n        'storage':'b',\r\n        'comments':'b',\r\n    },{\r\n        'vendor':'c',\r\n        'model_number':'c',\r\n        'height':'c',\r\n        'display_color':'c',\r\n        'ethernet_ports':'c',\r\n        'power_ports':'c',\r\n        'cpu':'c',\r\n        'memory':'c',\r\n        'storage':'c',\r\n        'comments':'c',\r\n    },\r\n];\r\n\r\nexport const testUserArray = [\r\n    {\r\n        'username':'a',\r\n        'password':'a',\r\n        'display_name':'a',\r\n        'email':'a',\r\n        'privilege':'a',\r\n    },{\r\n        'username':'b',\r\n        'password':'b',\r\n        'display_name':'b',\r\n        'email':'b',\r\n        'privilege':'b',\r\n    },{\r\n        'username':'c',\r\n        'password':'c',\r\n        'display_name':'c',\r\n        'email':'c',\r\n        'privilege':'c',\r\n    },\r\n];\r\n\r\nexport const testInstanceArray = [\r\n    {\r\n        'model':'a',\r\n        'hostname':'a',\r\n        'rack':'a',\r\n        'rack_position':'a',\r\n        'owner':'a',\r\n        'comment':'a',\r\n    },{\r\n        'model':'b',\r\n        'hostname':'b',\r\n        'rack':'b',\r\n        'rack_position':'b',\r\n        'owner':'b',\r\n        'comment':'b',\r\n    },{\r\n        'model':'c',\r\n        'hostname':'c',\r\n        'rack':'c',\r\n        'rack_position':'c',\r\n        'owner':'c',\r\n        'comment':'c',\r\n    },\r\n];\r\n","import * as Constants from '../../Constants';\r\n\r\nexport default function getURL(path, endpoint) {\r\n    return Constants.serverEndpoint + path + endpoint;\r\n}\r\n","export enum ModelCommand {\r\n    create = 'create/',\r\n    delete = 'delete/',\r\n    edit = 'edit/',\r\n    view = 'view/',\r\n    detailView = 'detailView/',\r\n    search = 'search/',\r\n    VENDOR_VALUES = 'assistedvendor/',\r\n    UPLOAD_FILE = 'import/',\r\n    EXPORT_FILE = 'export/'\r\n}\r\n","export enum ModelInput {\r\n    Vendor = 'vendor',\r\n    model_number = 'model_number',\r\n    Height = 'height',\r\n    display_color = 'display_color',\r\n    ethernet_ports = 'ethernet_ports',\r\n    power_ports = 'power_ports',\r\n    CPU = 'cpu',\r\n    Memory = 'memory',\r\n    Storage = 'storage',\r\n    Comment = 'comment'\r\n}\r\n","import React from 'react';\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport Button from '@material-ui/core/Button';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\n\r\nexport default class StatusDisplay extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n\r\n        };\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Collapse in={this.props.open}>\r\n                    <Alert\r\n                        severity={this.props.severity}\r\n                        action={\r\n                        <IconButton\r\n                            aria-label=\"close\"\r\n                            color=\"inherit\"\r\n                            size=\"small\"\r\n                            onClick={this.props.closeStatus}\r\n                        >\r\n                            <CloseIcon fontSize=\"inherit\" />\r\n                        </IconButton>\r\n                        }\r\n                    >\r\n                        {this.props.message}\r\n                    </Alert>\r\n                </Collapse>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\r\n\r\nexport default class ErrorBoundary extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = { hasError: false };\r\n    }\r\n\r\n    static getDerivedStateFromError(error) {\r\n      // Update state so the next render will show the fallback UI.\r\n      return \"An unforseen error occurred. Please refresh the page and try again later.\";\r\n    }\r\n\r\n    componentDidCatch(error, errorInfo) {\r\n      // You can also log the error to an error reporting service\r\n      //logErrorToMyService(error, errorInfo);\r\n    }\r\n\r\n    render() {\r\n      if (this.state.hasError) {\r\n        // You can render any custom fallback UI\r\n        return <h1>Something went wrong.</h1>;\r\n      }\r\n\r\n      return this.props.children;\r\n    }\r\n}\r\n","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport axios from 'axios';\r\nimport getURL from './helpers/functions/GetURL';\r\nimport * as Constants from './Constants';\r\nimport { Privilege } from './enums/privilegeTypes.ts'\r\nimport StatusDisplay from './helpers/StatusDisplay';\r\nimport ErrorBoundry from './errors/ErrorBoundry';\r\n\r\nconst loginMainPath = 'users/';\r\n\r\nexport default class Login extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            username:'',\r\n            password:'',\r\n            statusMessage:'',\r\n            showStatus:false,\r\n            statusSeverity:'',\r\n        };\r\n\r\n        this.closeShowStatus = this.closeShowStatus.bind(this);\r\n        this.submitCredentials = this.submitCredentials.bind(this);\r\n    }\r\n\r\n    submitCredentials() {\r\n        axios.post(\r\n            getURL(loginMainPath, 'authenticate'),\r\n            {\r\n                \"username\":this.state.username,\r\n                \"password\":this.state.password,\r\n            }\r\n            ).then(response => {\r\n                var valid = response.data['message'];\r\n                if (valid == 'success') {\r\n                    this.setState({ message: '' });\r\n                    this.props.loginFunc(response.data['token'], response.data['privilege']);\r\n                } else {\r\n                    this.setState({ showStatus:true, statusMessage:response.data['message'] });\r\n                }\r\n            });\r\n        this.props.loginFunc('token', Privilege.ADMIN);\r\n    }\r\n\r\n    updateUsername(event) {\r\n        this.setState({ username: event.target.value })\r\n    }\r\n\r\n    updatePassword(event) {\r\n        this.setState({ password: event.target.value })\r\n    }\r\n\r\n    closeShowStatus() {\r\n        this.setState({ showStatus: false })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <ErrorBoundry>\r\n                <StatusDisplay\r\n                    open={this.state.showStatus}\r\n                    severity={this.state.statusSeverity}\r\n                    closeStatus={this.closeShowStatus}\r\n                    message={this.state.statusMessage}\r\n                />\r\n                <TextField\r\n                    id=\"outlined-basic\"\r\n                    label=\"Username\"\r\n                    variant=\"outlined\"\r\n                    required=\"true\"\r\n                    ref='username'\r\n                    onChange={this.updateUsername.bind(this)}\r\n                />\r\n                <TextField\r\n                    id=\"outlined-basic\"\r\n                    label=\"Password\"\r\n                    variant=\"outlined\"\r\n                    required=\"true\"\r\n                    ref='password'\r\n                    type=\"password\"\r\n                    onChange={this.updatePassword.bind(this)}\r\n                />\r\n                <Button\r\n                    onClick={this.submitCredentials}\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                >\r\n                    Sign In\r\n                </Button>\r\n                </ErrorBoundry>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","export enum UserCommand {\r\n    create = 'create/',\r\n    delete = 'delete/',\r\n    edit = 'edit/',\r\n    view = 'view/',\r\n    detailView = 'detailView/',\r\n    search='search/',\r\n}\r\n","export enum UserInput {\r\n    Username='username',\r\n    Password='password',\r\n    Email='email',\r\n    display_name='display_name',\r\n    Privilege='privilege',\r\n}\r\n","import React from 'react';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nexport default class TableView extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n\r\n    };\r\n  }\r\n\r\n  showDetailedView(event) {\r\n    this.props.showDetailedView(event.target.id);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <TableContainer component={Paper}>\r\n          <Table className={{minWidth: 650}} aria-label=\"simple table\">\r\n            <TableHead>\r\n              <TableRow >\r\n                {this.props.columns.map(col => (<TableCell><span id={col}>{col}</span></TableCell>))}\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {this.props.vals.map((row, index)=> (\r\n              <TableRow>\r\n                {this.props.keys.map(key => (<TableCell scope=\"row\"><span id={index} onClick={this.showDetailedView.bind(this)}>{row[key]}</span></TableCell>))}\r\n              </TableRow>\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\r\nimport CloudDownloadIcon from '@material-ui/icons/CloudDownload';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nexport default class ButtonMenu extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n\r\n        };\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div>\r\n                <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    startIcon={<CloudUploadIcon />}\r\n                    onClick={this.props.openImportModal}\r\n                >\r\n                    Import\r\n                </Button>\r\n                <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    startIcon={<CloudDownloadIcon />}\r\n                    onClick={this.props.downloadTable}\r\n                >\r\n                    Export\r\n                </Button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nexport default class Filters extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            filters:{},\r\n        };\r\n    }\r\n\r\n    updateSearchText(event) {\r\n        if (this.state.filters.hasOwnProperty(event.target.id)) {\r\n            this.state.filters[event.target.id] = event.target.value;\r\n            this.forceUpdate();\r\n        } else {\r\n            var value = (event.target.value == null) ? '' : event.target.value;\r\n            this.state.filters[event.target.id] = event.target.value;\r\n            //this.state.filters.push({ key:event.target.id, value: value});\r\n            this.forceUpdate();\r\n        }\r\n    }\r\n\r\n    search() {\r\n        this.props.search(this.state.filters);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.props.filters.map((filter, index) => (\r\n                    <div>\r\n                        <SearchIcon />\r\n                        <InputBase\r\n                            placeholder={filter+\" filter\"}\r\n                            inputProps={{ 'aria-label': 'search' }}\r\n                            onChange={this.updateSearchText.bind(this)}\r\n                            id={filter}\r\n                        />\r\n                    </div>\r\n                ))\r\n                }\r\n                <div>\r\n                    <Button\r\n                        onClick={this.search.bind(this)}\r\n                    >\r\n                        Search\r\n                    </Button>\r\n                </div>\r\n                Click the search button to populate table. Searching with empty filters searches over all values. Click on row values to see detailed view.\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport { palette } from '@material-ui/system';\r\n\r\nexport default class UploadModal extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {};\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Modal\r\n                style={{top: `50%`,left: `50%`,transform: `translate(-50%, -50%)`, background:'#AAAAAA'}}\r\n                aria-labelledby=\"simple-modal-title\"\r\n                aria-describedby=\"simple-modal-description\"\r\n                open={this.props.showImportModal}\r\n                onClose={this.props.closeImportModal}\r\n            >\r\n                <div>\r\n                    <div>\r\n                    <input\r\n                        type='file'\r\n                        accept=\".csv\"\r\n                        onChange={this.props.chooseFile}\r\n                    />\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        onClick={this.props.uploadFile}\r\n                    >\r\n                        Upload\r\n                    </Button>\r\n                    </div>\r\n                    <p\r\n                        style={{color: `white`}}\r\n                    >\r\n                        {this.props.textDescription}\r\n                    </p>\r\n                </div>\r\n            </Modal>\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from '@material-ui/core/Button';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport { palette } from '@material-ui/system';\r\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\r\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\r\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\n\r\nexport default class DetailedView extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            showConfirmationBox:false,\r\n        };\r\n\r\n        this.closeModal = this.closeModal.bind(this);\r\n        this.confirmDelete = this.confirmDelete.bind(this);\r\n        this.deleteItem = this.deleteItem.bind(this);\r\n    }\r\n\r\n    confirmDelete() {\r\n        this.setState({ showConfirmationBox: true });\r\n    }\r\n\r\n    closeModal() {\r\n        this.setState({showConfirmationBox:false,});\r\n    }\r\n\r\n    deleteItem() {\r\n        this.setState({ showConfirmationBox: false });\r\n        this.props.delete();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n        <div>\r\n            {!this.props.showDetailedView ? null:\r\n            <ExpansionPanel >\r\n                    <ExpansionPanelSummary\r\n                        expandIcon={<ExpandMoreIcon />}\r\n                    >\r\n                        <Typography>Create</Typography>\r\n                    </ExpansionPanelSummary>\r\n                    <ExpansionPanelDetails>\r\n                    {\r\n                this.props.loading ? <CircularProgress /> :\r\n                <div>\r\n                    {this.props.inputs.map(input => (\r\n                        <TextField name={input} disabled={this.props.disabled} id=\"standard-basic\" label={input} onChange={this.props.updateModelEdited} defaultValue={this.props.defaultValues[input]}/>\r\n                    ))}\r\n                    {this.props.disabled ? null:\r\n                    <div>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            onClick={this.props.edit}\r\n                            disabled={this.state.showConfirmationBox}\r\n                        >\r\n                            Save\r\n                        </Button>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            onClick={this.confirmDelete}\r\n                            disabled={this.state.showConfirmationBox}\r\n                        >\r\n                            Delete\r\n                        </Button>\r\n                    </div>}\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            onClick={this.props.closeDetailedView}\r\n                            disabled={this.state.showConfirmationBox}\r\n                        >\r\n                            Close\r\n                        </Button>\r\n\r\n                    {this.state.showConfirmationBox ? <div>\r\n                        Are you sure you wish to delete?\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            onClick={this.deleteItem}\r\n                        >\r\n                            Yes\r\n                        </Button>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            onClick={this.closeModal}\r\n                        >\r\n                            No\r\n                        </Button>\r\n                    </div>:null}\r\n                </div>}\r\n                    </ExpansionPanelDetails>\r\n                </ExpansionPanel>}\r\n        </div>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from '@material-ui/core/Button';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\r\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\r\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport '../../stylesheets/Models.css';\r\n\r\nexport default class CreateModal extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n\r\n        };\r\n    }\r\n\r\n    render() {\r\n        return (\r\n        <div>\r\n            <ExpansionPanel class=\"create-expansion-tab\">\r\n                    <ExpansionPanelSummary\r\n                        expandIcon={<ExpandMoreIcon />}\r\n                    >\r\n                        <Typography>Create</Typography>\r\n                    </ExpansionPanelSummary>\r\n                    <ExpansionPanelDetails class=\"create-expansion-tab\">\r\n                    <div>\r\n                    {this.props.inputs.map((input, index) => (\r\n                        (index===0 && this.props.useAutocomplete) ? <Autocomplete\r\n                            id=\"combo-box-demo\"\r\n                            options={this.props.options}\r\n                            includeInputInList\r\n                            freeSolo\r\n                            renderInput={params => (\r\n                            <TextField {...params} label={input} name={input} onChange={this.props.updateModelCreator} onBlur={this.props.updateModelCreator} variant=\"outlined\" fullWidth />\r\n                            )}\r\n                        /> :\r\n                        <TextField id=\"standard-basic\" variant=\"outlined\" label={input} name={input} onChange={this.props.updateModelCreator}/>\r\n                    ))}\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        onClick={this.props.createModel}\r\n                    >\r\n                        Create\r\n                    </Button>\r\n                </div>\r\n                    </ExpansionPanelDetails>\r\n                </ExpansionPanel>\r\n        </div>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\nimport axios from 'axios';\r\nimport { ModelCommand } from '../enums/modelCommands.ts'\r\nimport { ModelInput } from '../enums/modelInputs.ts'\r\nimport { Privilege } from '../enums/privilegeTypes.ts'\r\nimport TableView from '../helpers/TableView';\r\nimport { CSVLink } from \"react-csv\";\r\nimport ButtonMenu from '../helpers/ButtonMenu';\r\nimport Filters from '../helpers/Filters';\r\nimport UploadModal from '../helpers/UploadModal';\r\nimport getURL from '../helpers/functions/GetURL';\r\nimport DetailedView from '../helpers/DetailedView';\r\nimport CreateModal from '../helpers/CreateModal';\r\nimport StatusDisplay from '../helpers/StatusDisplay';\r\nimport ErrorBoundray from '../errors/ErrorBoundry';\r\n\r\nconst inputs = [\r\n    'vendor',\r\n    'model_number',\r\n    'height',\r\n    'display_color',\r\n    'ethernet_ports',\r\n    'power_ports',\r\n    'cpu',\r\n    'memory',\r\n    'storage',\r\n    'comments',\r\n]\r\n\r\nconst columns = [\r\n    'vendor',\r\n    'model_number',\r\n    'height',\r\n]\r\n\r\nconst modelsMainPath = 'models/';\r\nconst modelDownloadFileName = 'models.csv';\r\n\r\nexport default class ModelsView extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n\r\n            // modals\r\n            showCreateModal:false,\r\n            showImportModal:false,\r\n\r\n            // table items\r\n            items:[], //Constants.testModelArray,\r\n\r\n            // vals for creating a new model\r\n            createdModel : {\r\n                'vendor':'',\r\n                'model_number':'',\r\n                'height':'',\r\n                'display_color':'',\r\n                'ethernet_ports':'',\r\n                'power_ports':'',\r\n                'cpu':'',\r\n                'memory':'',\r\n                'storage':'',\r\n                'comment':'',\r\n            },\r\n            createdVendor:'',\r\n            createdModelNum:'',\r\n            createdHeight:'',\r\n            createdDispClr:'',\r\n            createdEthPorts:'',\r\n            createdPwrPorts:'',\r\n            createdCPU:'',\r\n            createdMem:'',\r\n            createdStorage:'',\r\n            createdComments:'',\r\n\r\n            // vals for deleting a model\r\n            deleteVendor:'',\r\n            deleteModel:'',\r\n\r\n            // vals for viewing a model\r\n            viewVendor:'',\r\n            viewModel:'',\r\n\r\n            // searching a model\r\n            searchText:\"\",\r\n            searchVendor:'',\r\n            searchModelNum:'',\r\n            searchHeight:'',\r\n\r\n            // csv data\r\n            csvData:'',\r\n            importedFile:null,\r\n\r\n            // detailed view\r\n            showDetailedView: false,\r\n            detailViewLoading:false,\r\n            detailedValues : {\r\n                'vendor':'',\r\n                'model_number':'',\r\n                'height':'',\r\n                'display_color':'',\r\n                'ethernet_ports':'',\r\n                'power_ports':'',\r\n                'cpu':'',\r\n                'memory':'',\r\n                'storage':'',\r\n                'comment':'',\r\n            },\r\n            originalVendor:'',\r\n            originalModelNumber:'',\r\n            originalHeight:'',\r\n\r\n            showStatus:false,\r\n            statusSeverity:'',\r\n            statusMessage:'',\r\n\r\n            vendorsList:[],\r\n            madeVendorQuery:false,\r\n\r\n        };\r\n\r\n        this.openCreateModal = this.openCreateModal.bind(this);\r\n        this.openImportModal = this.openImportModal.bind(this);\r\n        this.downloadTable = this.downloadTable.bind(this);\r\n        this.updateSearchText = this.updateSearchText.bind(this);\r\n        this.search = this.search.bind(this);\r\n        this.closeImportModal = this.closeImportModal.bind(this);\r\n        this.closeCreateModal = this.closeCreateModal.bind(this);\r\n        this.showDetailedView = this.showDetailedView.bind(this);\r\n        this.editModel = this.editModel.bind(this);\r\n        this.closeDetailedView = this.closeDetailedView.bind(this);\r\n        this.updateModelEdited = this.updateModelEdited.bind(this);\r\n        this.closeCreateModal = this.closeCreateModal.bind(this);\r\n        this.createModel = this.createModel.bind(this);\r\n        this.updateModelCreator = this.updateModelCreator.bind(this);\r\n        this.deleteModel = this.deleteModel.bind(this);\r\n        this.closeShowStatus = this.closeShowStatus.bind(this);\r\n        this.getVendorList = this.getVendorList.bind(this);\r\n        this.chooseFile = this.chooseFile.bind(this);\r\n        this.uploadFile = this.uploadFile.bind(this);\r\n        this.sendUploadedFile = this.sendUploadedFile.bind(this);\r\n        this.initialize = this.initialize.bind(this);\r\n\r\n        axios.defaults.headers.common['token'] = this.props.token;\r\n        axios.defaults.headers.common['privilege'] = this.props.privilege;\r\n    }\r\n\r\n    createModel() {\r\n        axios.post(\r\n            getURL(modelsMainPath, ModelCommand.create),\r\n            {\r\n                'vendor':this.state.createdModel[ModelInput.Vendor],\r\n                'model_number':this.state.createdModel[ModelInput.model_number],\r\n                'height':this.state.createdModel[ModelInput.Height],\r\n                'display_color':this.state.createdModel[ModelInput.display_color],\r\n                'ethernet_ports':this.state.createdModel[ModelInput.ethernet_ports],\r\n                'power_ports':this.state.createdModel[ModelInput.power_ports],\r\n                'cpu':this.state.createdModel[ModelInput.CPU],\r\n                'memory':this.state.createdModel[ModelInput.Memory],\r\n                'storage':this.state.createdModel[ModelInput.Storage],\r\n                'comment':this.state.createdModel[ModelInput.Comment],\r\n            }\r\n            ).then(\r\n                response => {\r\n                    if (response.data.message === 'success') {\r\n                        this.setState({\r\n                            showStatus: true,\r\n                            statusMessage:'success',\r\n                            statusMessage: \"Successfully created model\",\r\n                            statusSeverity:\"success\",\r\n                            createdModel : {\r\n                                'vendor':'',\r\n                                'model_number':'',\r\n                                'height':'',\r\n                                'display_color':'',\r\n                                'ethernet_ports':'',\r\n                                'power_ports':'',\r\n                                'cpu':'',\r\n                                'memory':'',\r\n                                'storage':'',\r\n                                'comment':'',\r\n                            },\r\n                            showCreateModal:false,\r\n                        });\r\n                        this.getVendorList();\r\n                        this.searchModels();\r\n                    } else {\r\n                        this.setState({ showStatus: true, statusMessage: response.data.message, statusSeverity:\"error\" })\r\n                    }\r\n                });\r\n    }\r\n\r\n    editModel() {\r\n        axios.post(\r\n            getURL(modelsMainPath, ModelCommand.edit),\r\n            {\r\n                'vendorOriginal':this.state.originalVendor,\r\n                'model_numberOriginal':this.state.originalModelNumber,\r\n                'heightOriginal':this.state.originalHeight,\r\n\r\n                'vendor':this.state.detailedValues[ModelInput.Vendor],\r\n                'model_number':this.state.detailedValues[ModelInput.model_number],\r\n                'height':this.state.detailedValues[ModelInput.Height],\r\n                'display_color':this.state.detailedValues[ModelInput.display_color],\r\n                'ethernet_ports':this.state.detailedValues[ModelInput.ethernet_ports],\r\n                'power_ports':this.state.detailedValues[ModelInput.power_ports],\r\n                'cpu':this.state.detailedValues[ModelInput.CPU],\r\n                'memory':this.state.detailedValues[ModelInput.Memory],\r\n                'storage':this.state.detailedValues[ModelInput.Storage],\r\n                'comment':this.state.detailedValues[ModelInput.Comment],\r\n            }\r\n            ).then(\r\n                response => {\r\n                    if (response.data.message === 'success') {\r\n                        this.setState({\r\n                            showStatus: true,\r\n                            statusSeverity:'success',\r\n                            statusMessage: \"Successfully edited model\",\r\n                            originalVendor:'',\r\n                            originalModelNumber:'',\r\n                            originalHeight:'',\r\n                            detailedValues : {\r\n                                'vendor':'',\r\n                                'model_number':'',\r\n                                'height':'',\r\n                                'display_color':'',\r\n                                'ethernet_ports':'',\r\n                                'power_ports':'',\r\n                                'cpu':'',\r\n                                'memory':'',\r\n                                'storage':'',\r\n                                'comment':'',\r\n                            },\r\n                            showDetailedView:false\r\n                        });\r\n                        this.getVendorList();\r\n                        this.searchModels();\r\n                    } else {\r\n                        this.setState({ showStatus: true, statusMessage: response.data.message, statusSeverity:\"error\" })\r\n                    }\r\n                });\r\n    }\r\n\r\n\r\n    deleteModel() {\r\n        axios.post(\r\n            getURL(modelsMainPath, ModelCommand.delete),\r\n            {\r\n                'vendor':this.state.originalVendor,\r\n                'model_number':this.state.originalModelNumber,\r\n            }\r\n            ).then(\r\n                response => {\r\n                    if (response.data.message === 'success') {\r\n                        this.setState({\r\n                            showStatus: true,\r\n                            statusSeverity:'success',\r\n                            statusMessage: \"Successfully deleted model\",\r\n                            detailedValues : {\r\n                                'vendor':'',\r\n                                'model_number':'',\r\n                                'height':'',\r\n                                'display_color':'',\r\n                                'ethernet_ports':'',\r\n                                'power_ports':'',\r\n                                'cpu':'',\r\n                                'memory':'',\r\n                                'storage':'',\r\n                                'comment':'',\r\n                            },\r\n                            showDetailedView:false\r\n                        });\r\n                        this.getVendorList();\r\n                        this.searchModels();\r\n                    } else {\r\n                        this.setState({ showStatus: true, statusMessage: response.data.message, statusSeverity:\"error\" })\r\n                    }\r\n                });\r\n    }\r\n\r\n    detailViewModel(vendor, modelNum) {\r\n        axios.post(\r\n            getURL(modelsMainPath, ModelCommand.detailView),\r\n            {\r\n                'vendor':vendor,\r\n                'model_number':modelNum,\r\n            }, this.props.headers\r\n            ).then(response => this.setState({ detailedValues: response.data['models'][0], detailViewLoading:false}));\r\n\r\n        this.setState({\r\n            viewVendor:'',\r\n            viewModel:'',\r\n        });\r\n    }\r\n\r\n    searchModels() {\r\n        axios.post(\r\n            getURL(modelsMainPath, ModelCommand.search),\r\n            {\r\n                'filter':{\r\n                    'vendor':this.state.searchVendor,\r\n                    'model_number':this.state.searchModelNum,\r\n                    'height':this.state.searchHeight,\r\n                }\r\n            }\r\n            ).then(response => {\r\n                this.setState({ items: response.data['models'] })\r\n            });\r\n\r\n        this.setState({\r\n            searchText:'',\r\n        });\r\n    }\r\n\r\n    getVendorList() {\r\n        axios.get(\r\n            getURL(modelsMainPath, ModelCommand.VENDOR_VALUES), {}\r\n            ).then(response => this.setState({ vendorsList: response.data.results }));\r\n\r\n        this.setState({ madeVendorQuery: true });\r\n    }\r\n\r\n    sendUploadedFile(data) {\r\n        axios.post(\r\n            getURL(modelsMainPath, ModelCommand.UPLOAD_FILE), data\r\n            ).then(response => {\r\n                if (response.data.message === 'success') {\r\n                    this.setState({ showStatus: true, statusMessage: response.data.summary, statusSeverity:'success', showImportModal: false,})\r\n                    this.searchModels();\r\n                } else {\r\n                    this.setState({ showStatus: true, statusMessage: response.data.message, statusSeverity:\"error\" })\r\n                }\r\n            });\r\n    }\r\n\r\n    downloadTable() {\r\n        axios.post(\r\n            getURL(modelsMainPath, ModelCommand.EXPORT_FILE),\r\n            {\r\n                'filter':{\r\n                    'vendor':this.state.searchVendor,\r\n                    'model_number':this.state.searchModelNum,\r\n                    'height':this.state.searchHeight,\r\n                }\r\n            }\r\n            ).then(response => {\r\n                this.setState({ csvData: response.data.csvData });\r\n                this.csvLink.link.click();\r\n            });\r\n    }\r\n\r\n    search(filters) {\r\n        this.setState({ searchVendor:filters['vendor'], searchModelNum:filters['model_number'], searchHeight:filters['height']}, this.searchModels);\r\n    }\r\n\r\n    openCreateModal() {\r\n        this.setState({showCreateModal: true});\r\n    }\r\n\r\n    openImportModal() {\r\n        this.setState({showImportModal: true});\r\n    }\r\n\r\n    showDetailedView(id) {\r\n        this.setState({\r\n            showDetailedView: true,\r\n            detailViewLoading:true,\r\n\r\n            originalHeight:this.state.items[id]['height'],\r\n            originalModelNumber:this.state.items[id]['model_number'],\r\n            originalVendor:this.state.items[id]['vendor'],\r\n         });\r\n\r\n        var vendor = this.state.items[id]['vendor'];\r\n        var modelNum = this.state.items[id]['model_number'];\r\n\r\n        this.detailViewModel(vendor, modelNum);\r\n    }\r\n\r\n    closeCreateModal() {\r\n        this.setState({showCreateModal: false});\r\n    }\r\n\r\n    closeImportModal() {\r\n        this.setState({showImportModal: false});\r\n    }\r\n\r\n    closeDetailedView() {\r\n        this.setState({ showDetailedView: false })\r\n    }\r\n\r\n    updateModelCreator(event) {\r\n        this.state.createdModel[event.target.name] = event.target.value;\r\n        this.forceUpdate()\r\n    }\r\n\r\n    updateModelEdited(event) {\r\n        this.state.detailedValues[event.target.name] = event.target.value;\r\n        this.forceUpdate()\r\n    }\r\n\r\n    updateSearchText(event) {\r\n        this.setState({ searchText: event.target.value})\r\n    }\r\n\r\n    closeShowStatus() {\r\n        this.setState({ showStatus: false })\r\n    }\r\n\r\n    uploadFile() {\r\n        const data = new FormData();\r\n        data.append('file', this.state.importedFile);\r\n        this.sendUploadedFile(data);\r\n    }\r\n\r\n    chooseFile(event) {\r\n        this.setState({ importedFile: event.target.files[0] })\r\n    }\r\n\r\n    initialize() {\r\n        this.searchModels();\r\n        this.getVendorList();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <ErrorBoundray>\r\n                {(this.state.madeVendorQuery) ? null: this.initialize()}\r\n                <StatusDisplay\r\n                    open={this.state.showStatus}\r\n                    severity={this.state.statusSeverity}\r\n                    closeStatus={this.closeShowStatus}\r\n                    message={this.state.statusMessage}\r\n                />\r\n                {(this.props.privilege == Privilege.ADMIN) ?\r\n                    (<div><ButtonMenu\r\n                    openCreateModal={this.openCreateModal}\r\n                    openImportModal={this.openImportModal}\r\n                    downloadTable={this.downloadTable}\r\n                />\r\n                <CSVLink\r\n                    data={this.state.csvData}\r\n                    filename={modelDownloadFileName}\r\n                    className=\"hidden\"\r\n                    ref={(r) => this.csvLink = r}\r\n                    target=\"_blank\"\r\n                />\r\n                <CreateModal\r\n                    showCreateModal={this.state.showCreateModal}\r\n                    closeCreateModal={this.closeCreateModal}\r\n                    createModel={this.createModel}\r\n                    updateModelCreator={this.updateModelCreator}\r\n                    inputs={inputs}\r\n                    options={this.state.vendorsList}\r\n                    useAutocomplete={true}\r\n                />\r\n                <UploadModal\r\n                    showImportModal={this.state.showImportModal}\r\n                    closeImportModal={this.closeImportModal}\r\n                    uploadFile={this.uploadFile}\r\n                    chooseFile={this.chooseFile}\r\n                    textDescription=\"The following format should be used for each row: vendor,model_number,height,display_color,ethernet_ports,power_ports,cpu,memory,storage,comment\"\r\n                /></div>):null\r\n                }\r\n                <Filters\r\n                    updateSearchText={this.updateSearchText}\r\n                    search={this.search}\r\n                    filters={columns}\r\n                />\r\n                <TableView\r\n                    columns={columns}\r\n                    vals={this.state.items}\r\n                    keys={columns}\r\n                    showDetailedView={this.showDetailedView}\r\n                    filters={columns}\r\n                />\r\n                <DetailedView\r\n                    showDetailedView={this.state.showDetailedView}\r\n                    closeDetailedView={this.closeDetailedView}\r\n                    inputs={inputs}\r\n                    updateModelEdited={this.updateModelEdited}\r\n                    defaultValues={this.state.detailedValues}\r\n                    loading={this.state.detailViewLoading}\r\n                    edit={this.editModel}\r\n                    delete={this.deleteModel}\r\n                    disabled={this.props.privilege==Privilege.USER}\r\n                />\r\n            </ErrorBoundray>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\nimport axios from 'axios';\r\nimport { UserCommand } from '../enums/userCommands.ts'\r\nimport { UserInput } from '../enums/userInputs.ts'\r\nimport { Privilege } from '../enums/privilegeTypes.ts'\r\nimport TableView from '../helpers/TableView';\r\nimport { CSVLink } from \"react-csv\";\r\nimport ButtonMenu from '../helpers/ButtonMenu';\r\nimport Filters from '../helpers/Filters';\r\nimport UploadModal from '../helpers/UploadModal';\r\nimport getURL from '../helpers/functions/GetURL';\r\nimport DetailedView from '../helpers/DetailedView';\r\nimport CreateModal from '../helpers/CreateModal';\r\nimport * as Constants from '../Constants';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport StatusDisplay from '../helpers/StatusDisplay';\r\nimport Button from '@material-ui/core/Button';\r\nimport ErrorBoundray from '../errors/ErrorBoundry';\r\n\r\n\r\nconst inputs = [\r\n    'username',\r\n    'email',\r\n    'display_name',\r\n    'privilege',\r\n    'password',\r\n]\r\n\r\nconst columns = [\r\n    'username',\r\n    'email',\r\n    'display_name',\r\n    'privilege',\r\n]\r\n\r\nconst usersMainPath = 'users/';\r\nconst userDownloadFileName = 'users.csv';\r\n\r\nexport default class UsersView extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n\r\n            // modals\r\n            showCreateModal:false,\r\n            showImportModal:false,\r\n\r\n            // table items\r\n            items:[], //Constants.testUserArray,\r\n\r\n            // vals for creating a new user\r\n            createdUser : {\r\n                'username':'',\r\n                'password':'',\r\n                'display_name':'',\r\n                'email':'',\r\n                'privilege':'',\r\n            },\r\n\r\n            showStatus:false,\r\n            statusMessage:'',\r\n            statusSeverity:'',\r\n\r\n            searchUsernm:'',\r\n            searchEml:'',\r\n            searchDspNm:'',\r\n            searchPriv:'',\r\n\r\n            // vals for deleting a user\r\n            deleteUsername:'',\r\n\r\n            // vals for viewing a user\r\n            viewUser:'',\r\n\r\n            // csv data\r\n            csvData:[],\r\n\r\n            // detailed view\r\n            showDetailedView: false,\r\n            detailViewLoading:false,\r\n            detailedValues : {\r\n                'username':'',\r\n                'display_name':'',\r\n                'email':'',\r\n                'privilege':'',\r\n            },\r\n            originalUsername:'',\r\n\r\n            initialized:false,\r\n        };\r\n\r\n        this.createUser = this.createUser.bind(this);\r\n        this.editUser = this.editUser.bind(this);\r\n        this.deleteUser = this.deleteUser.bind(this);\r\n        this.detailViewUser = this.detailViewUser.bind(this);\r\n        this.searchUsers = this.searchUsers.bind(this);\r\n        this.search = this.search.bind(this);\r\n        this.openCreateModal = this.openCreateModal.bind(this);\r\n        this.openImportModal = this.openImportModal.bind(this);\r\n        this.showDetailedView = this.showDetailedView.bind(this);\r\n        this.closeCreateModal = this.closeCreateModal.bind(this);\r\n        this.closeImportModal = this.closeImportModal.bind(this);\r\n        this.closeDetailedView = this.closeDetailedView.bind(this);\r\n        this.updateUserCreator = this.updateUserCreator.bind(this);\r\n        this.updateUserEdited = this.updateUserEdited.bind(this);\r\n        this.closeShowStatus = this.closeShowStatus.bind(this);\r\n        this.initialized = this.initialized.bind(this);\r\n\r\n        axios.defaults.headers.common['token'] = this.props.token;\r\n        axios.defaults.headers.common['privilege'] = this.props.privilege;\r\n\r\n    }\r\n\r\n    createUser() {\r\n        axios.post(\r\n            getURL(usersMainPath, UserCommand.create),\r\n            {\r\n                'username':this.state.createdUser[UserInput.Username],\r\n                'password':this.state.createdUser[UserInput.Password],\r\n                'display_name':this.state.createdUser[UserInput.display_name],\r\n                'email':this.state.createdUser[UserInput.Email],\r\n                'privilege':this.state.createdUser[UserInput.Privilege],\r\n            }\r\n            ).then(response => {\r\n                if (response.data.message === 'success') {\r\n                    this.setState({\r\n                        showStatus: true,\r\n                        statusMessage: \"Successfully created user\",\r\n                        statusSeverity:\"success\",\r\n                        createdUser : {\r\n                            'username':'',\r\n                            'password':'',\r\n                            'display_name':'',\r\n                            'email':'',\r\n                            'privilege':'',\r\n                        },\r\n                        showCreateModal:false,\r\n                    });\r\n                    this.searchUsers();\r\n                } else {\r\n                    this.setState({ showStatus: true, statusMessage: response.data.message, statusSeverity:\"error\" })\r\n                }\r\n            });\r\n    }\r\n\r\n    editUser() {\r\n        axios.post(\r\n            getURL(usersMainPath, UserCommand.edit),\r\n            {\r\n                'username_original':this.state.originalUsername,\r\n                'username':this.state.detailedValues[UserInput.Username],\r\n                'display_name':this.state.detailedValues[UserInput.display_name],\r\n                'email':this.state.detailedValues[UserInput.Email],\r\n                'privilege':this.state.detailedValues[UserInput.Privilege],\r\n            }\r\n            ).then(response => {\r\n                if (response.data.message === 'success') {\r\n                    this.setState({\r\n                        showStatus: true,\r\n                        statusMessage: \"Successfully edited user\",\r\n                        statusSeverity:\"success\",\r\n                        originalUsername:'',\r\n                        detailedValues : {\r\n                            'username':'',\r\n                            'display_name':'',\r\n                            'email':'',\r\n                            'privilege':'',\r\n                        },\r\n                        showDetailedView:false,\r\n                    });\r\n                    this.searchUsers();\r\n                } else {\r\n                    this.setState({ showStatus: true, statusMessage: response.data.message, statusSeverity:\"error\" })\r\n                }\r\n            });\r\n    }\r\n\r\n\r\n    deleteUser() {\r\n        axios.post(\r\n            getURL(usersMainPath, UserCommand.delete),\r\n            {\r\n                'username':this.state.originalUsername,\r\n            }\r\n            ).then(response => {\r\n                if (response.data.message === 'success') {\r\n                    this.setState({\r\n                        showStatus: true,\r\n                        statusMessage: \"Successfully deleted user\",\r\n                        statusSeverity:\"success\",\r\n                        deleteUsername:'',\r\n                        showDetailedView:false,\r\n                    });\r\n                    this.searchUsers();\r\n                } else {\r\n                    this.setState({ showStatus: true, statusMessage: response.data.message, statusSeverity:\"error\" })\r\n                }\r\n            });\r\n    }\r\n\r\n    detailViewUser(username) {\r\n        axios.post(\r\n            getURL(usersMainPath, UserCommand.detailView),\r\n            {\r\n                'username':username,\r\n            }\r\n            ).then(response => this.setState({ detailedValues: response.data['user'], detailViewLoading:false}));\r\n\r\n        this.setState({\r\n            viewUser:'',\r\n        });\r\n    }\r\n\r\n    searchUsers() {\r\n        axios.post(\r\n            getURL(usersMainPath, UserCommand.search),\r\n            {\r\n                'filter':{\r\n                    'username':this.state.searchUsernm,\r\n                    'email':this.state.searchEml,\r\n                    'display_name':this.state.searchDspNm,\r\n                    'privilege':this.state.searchPriv,\r\n                }\r\n            }\r\n            ).then(response => this.setState({ items: (response.data['users']==null) ? [] : response.data['users'] }));\r\n\r\n        this.setState({ initialized: true})\r\n    }\r\n\r\n    search(filters) {\r\n        this.setState({\r\n            searchUsernm:filters['username'],\r\n            searchEml:filters['email'],\r\n            searchDspNm: filters['display_name'],\r\n            searchPriv:filters['privilege'],\r\n        }, this.searchUsers);\r\n    }\r\n\r\n    downloadTable() {\r\n        this.csvLink.link.click();\r\n    }\r\n\r\n    openCreateModal() {\r\n        this.setState({showCreateModal: true});\r\n    }\r\n\r\n    openImportModal() {\r\n        this.setState({showImportModal: true});\r\n    }\r\n\r\n    showDetailedView(id) {\r\n        this.setState({\r\n            showDetailedView: true,\r\n            detailViewLoading:true,\r\n            originalUsername:this.state.items[id]['username'],\r\n         });\r\n\r\n        var username = this.state.items[id]['username'];\r\n\r\n        this.detailViewUser(username);\r\n        //this.setState({ detailedValues: Constants.testUserArray[id], detailViewLoading:false})\r\n    }\r\n\r\n    closeCreateModal() {\r\n        this.setState({showCreateModal: false});\r\n    }\r\n\r\n    closeImportModal() {\r\n        this.setState({showImportModal: false});\r\n    }\r\n\r\n    closeDetailedView() {\r\n        this.setState({ showDetailedView: false })\r\n    }\r\n\r\n    updateUserCreator(event) {\r\n        this.state.createdUser[event.target.name] = event.target.value;\r\n        this.forceUpdate()\r\n    }\r\n\r\n    updateUserEdited(event) {\r\n        this.state.detailedValues[event.target.name] = event.target.value;\r\n        this.forceUpdate()\r\n    }\r\n\r\n    closeShowStatus() {\r\n        this.setState({ showStatus: false })\r\n    }\r\n\r\n    initialized() {\r\n        this.searchUsers();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {(this.state.initialized) ? null: this.initialized()}\r\n                <ErrorBoundray>\r\n                <StatusDisplay\r\n                    open={this.state.showStatus}\r\n                    severity={this.state.statusSeverity}\r\n                    closeStatus={this.closeShowStatus}\r\n                    message={this.state.statusMessage}\r\n                />\r\n                {(this.props.privilege == Privilege.ADMIN) ?\r\n                    (<div>\r\n                <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    onClick={this.openCreateModal}\r\n                >\r\n                    Create\r\n                </Button>\r\n                <CreateModal\r\n                    showCreateModal={this.state.showCreateModal}\r\n                    closeCreateModal={this.closeCreateModal}\r\n                    createModel={this.createUser}\r\n                    updateModelCreator={this.updateUserCreator}\r\n                    inputs={inputs}\r\n                    options={[]}\r\n                    useAutocomplete={false}\r\n                />\r\n                <UploadModal\r\n                    showImportModal={this.state.showImportModal}\r\n                    closeImportModal={this.closeImportModal}\r\n                /></div>):null\r\n            }\r\n                <Filters\r\n                    updateSearchText={this.updateSearchText}\r\n                    search={this.search}\r\n                    filters={columns}\r\n                />\r\n                <TableView\r\n                    columns={columns}\r\n                    vals={this.state.items}\r\n                    keys={columns}\r\n                    showDetailedView={this.showDetailedView}\r\n                    filters={columns}\r\n                />\r\n                <DetailedView\r\n                    showDetailedView={this.state.showDetailedView}\r\n                    closeDetailedView={this.closeDetailedView}\r\n                    inputs={columns}\r\n                    updateModelEdited={this.updateUserEdited}\r\n                    defaultValues={this.state.detailedValues}\r\n                    loading={this.state.detailViewLoading}\r\n                    edit={this.editUser}\r\n                    delete={this.deleteUser}\r\n                    disabled={this.props.privilege==Privilege.USER}\r\n                />\r\n                </ErrorBoundray>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","export enum InstanceCommand {\r\n    create = 'create/',\r\n    delete = 'delete/',\r\n    edit = 'edit/',\r\n    view = 'view/',\r\n    detailView = 'detailView/',\r\n    search = 'search/',\r\n    GET_ALL_MODELS = 'assistedmodel/',\r\n    UPLOAD_FILE = 'import/',\r\n    EXPORT_FILE = 'export/',\r\n}\r\n","export enum InstanceInput {\r\n    Model = 'model',\r\n    Hostname = 'hostname',\r\n    Rack = 'rack',\r\n    RackU = 'rack_position',\r\n    Owner = 'owner',\r\n    Comment = 'comment',\r\n}\r\n","import React from 'react';\r\nimport axios from 'axios';\r\nimport { InstanceCommand } from '../enums/instanceCommands.ts'\r\nimport { InstanceInput } from '../enums/instanceInputs.ts'\r\nimport { Privilege } from '../enums/privilegeTypes.ts'\r\nimport TableView from '../helpers/TableView';\r\nimport { CSVLink } from \"react-csv\";\r\nimport ButtonMenu from '../helpers/ButtonMenu';\r\nimport Filters from '../helpers/Filters';\r\nimport UploadModal from '../helpers/UploadModal';\r\nimport getURL from '../helpers/functions/GetURL';\r\nimport DetailedView from '../helpers/DetailedView';\r\nimport CreateModal from '../helpers/CreateModal';\r\nimport * as Constants from '../Constants';\r\nimport StatusDisplay from '../helpers/StatusDisplay';\r\nimport ErrorBoundray from '../errors/ErrorBoundry';\r\n\r\nconst inputs = [\r\n    'model',\r\n    'hostname',\r\n    'rack',\r\n    'rack_position',\r\n    'owner',\r\n    'comment',\r\n]\r\n\r\nconst columns = [\r\n    'model',\r\n    'hostname',\r\n    'rack',\r\n    'rack_position',\r\n]\r\n\r\nconst instancesMainPath = 'instances/';\r\nconst instanceDownloadFileName = 'instances.csv';\r\n\r\n\r\n\r\nexport default class InstancesView extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n\r\n            // modals\r\n            showCreateModal:false,\r\n            showImportModal:false,\r\n\r\n            // table items\r\n            items:[], //Constants.testInstanceArray,\r\n\r\n            // vals for creating a new instance\r\n            createdInstance : {\r\n                'model':'',\r\n                'hostname':'',\r\n                'rack':'',\r\n                'rack_position':'',\r\n                'owner':'',\r\n                'comment':'',\r\n            },\r\n\r\n            showStatus:false,\r\n            statusMessage:'',\r\n            statusSeverity:'',\r\n\r\n            // vals for deleting an instance\r\n            deleteInstanceRack:'',\r\n            deleteInstancerack_position:'',\r\n\r\n            // vals for viewing an instance\r\n            viewInstanceRack:'',\r\n            viewInstancerack_position:'',\r\n\r\n            searchModel:'',\r\n            searchHostname:'',\r\n            searchRack:'',\r\n            searchRackU:'',\r\n\r\n            // csv data\r\n            csvData:'',\r\n            importedFile:null,\r\n\r\n            // detailed view\r\n            showDetailedView: false,\r\n            detailViewLoading:false,\r\n            detailedValues : {\r\n                'model':'',\r\n                'hostname':'',\r\n                'rack':'',\r\n                'rack_position':'',\r\n                'owner':'',\r\n                'comment':'',\r\n            },\r\n            originalRack:'',\r\n            originalrack_position:'',\r\n            modelList:[],\r\n            madeModelQuery: false,\r\n        };\r\n\r\n        this.createInstance = this.createInstance.bind(this);\r\n        this.editInstance = this.editInstance.bind(this);\r\n        this.deleteInstance = this.deleteInstance.bind(this);\r\n        this.detailViewInstance = this.detailViewInstance.bind(this);\r\n        this.searchInstances = this.searchInstances.bind(this);\r\n        this.search = this.search.bind(this);\r\n        this.openCreateModal = this.openCreateModal.bind(this);\r\n        this.openImportModal = this.openImportModal.bind(this);\r\n        this.showDetailedView = this.showDetailedView.bind(this);\r\n        this.closeCreateModal = this.closeCreateModal.bind(this);\r\n        this.closeImportModal = this.closeImportModal.bind(this);\r\n        this.closeDetailedView = this.closeDetailedView.bind(this);\r\n        this.updateInstanceCreator = this.updateInstanceCreator.bind(this);\r\n        this.updateInstanceEdited = this.updateInstanceEdited.bind(this);\r\n        this.closeShowStatus = this.closeShowStatus.bind(this);\r\n        this.getModelList = this.getModelList.bind(this);\r\n        this.chooseFile = this.chooseFile.bind(this);\r\n        this.uploadFile = this.uploadFile.bind(this);\r\n        this.sendUploadedFile = this.sendUploadedFile.bind(this);\r\n        this.downloadTable = this.downloadTable.bind(this);\r\n        this.initialize = this.initialize.bind(this);\r\n\r\n        axios.defaults.headers.common['token'] = this.props.token;\r\n        axios.defaults.headers.common['privilege'] = this.props.privilege;\r\n\r\n    }\r\n\r\n    createInstance() {\r\n        axios.post(\r\n            getURL(instancesMainPath, InstanceCommand.create),\r\n            {\r\n                'model':this.state.createdInstance[InstanceInput.Model],\r\n                'hostname':this.state.createdInstance[InstanceInput.Hostname],\r\n                'rack':this.state.createdInstance[InstanceInput.Rack],\r\n                'rack_position':this.state.createdInstance[InstanceInput.RackU],\r\n                'owner':this.state.createdInstance[InstanceInput.Owner],\r\n                'comment':this.state.createdInstance[InstanceInput.Comment],\r\n            }\r\n            ).then(response => {\r\n                if (response.data.message === 'success') {\r\n                    this.setState({\r\n                        showStatus: true,\r\n                        statusMessage: \"Successfully created instance\",\r\n                        statusSeverity:\"success\",\r\n                        createdInstance : {\r\n                            'model':'',\r\n                            'hostname':'',\r\n                            'rack':'',\r\n                            'rack_position':'',\r\n                            'owner':'',\r\n                            'comment':'',\r\n                        },\r\n                        showCreateModal:false,\r\n                    });\r\n                    this.searchInstances();\r\n                } else {\r\n                    this.setState({ showStatus: true, statusMessage: response.data.message, statusSeverity:\"error\" })\r\n                }\r\n            });\r\n    }\r\n\r\n    editInstance() {\r\n        axios.post(\r\n            getURL(instancesMainPath, InstanceCommand.edit),\r\n            {\r\n                'rackOriginal':this.state.originalRack,\r\n                'rack_positionOriginal':this.state.originalrack_position,\r\n                'model':this.state.detailedValues[InstanceInput.Model],\r\n                'hostname':this.state.detailedValues[InstanceInput.Hostname],\r\n                'rack':this.state.detailedValues[InstanceInput.Rack],\r\n                'rack_position':this.state.detailedValues[InstanceInput.RackU],\r\n                'owner':this.state.detailedValues[InstanceInput.Owner],\r\n                'comment':this.state.detailedValues[InstanceInput.Comment],\r\n            }\r\n            ).then(response => {\r\n                if (response.data.message === 'success') {\r\n                    this.setState({\r\n                        showStatus: true,\r\n                        statusMessage: \"Successfully edited instance\",\r\n                        statusSeverity:\"success\",\r\n                        detailedValues : {\r\n                            'model':'',\r\n                            'hostname':'',\r\n                            'rack':'',\r\n                            'rack_position':'',\r\n                            'owner':'',\r\n                            'comment':'',\r\n                        },\r\n                        showDetailedView:false,\r\n                    });\r\n                    this.searchInstances();\r\n\r\n                } else {\r\n                    this.setState({ showStatus: true, statusMessage: response.data.message, statusSeverity:\"error\" })\r\n                }\r\n            });\r\n    }\r\n\r\n\r\n    deleteInstance() {\r\n        axios.post(\r\n            getURL(instancesMainPath, InstanceCommand.delete),\r\n            {\r\n                'rack':this.state.originalRack,\r\n                'rack_position':this.state.originalrack_position,\r\n            }\r\n            ).then(response => {\r\n                if (response.data.message === 'success') {\r\n                    this.setState({\r\n                        showStatus: true,\r\n                        statusMessage: \"Successfully deleted instance\",\r\n                        statusSeverity:\"success\",\r\n                        originalRack:'',\r\n                        originalrack_position:'',\r\n                        showDetailedView:false\r\n                    });\r\n                    this.searchInstances();\r\n                } else {\r\n                    this.setState({ showStatus: true, statusMessage: response.data.message, statusSeverity:\"error\" })\r\n                }\r\n            });\r\n    }\r\n\r\n    detailViewInstance(rack, rack_position) {\r\n        axios.post(\r\n            getURL(instancesMainPath, InstanceCommand.detailView),\r\n            {\r\n                'rack':rack,\r\n                'rack_position':rack_position,\r\n            }\r\n            ).then(response => this.setState({ detailedValues: response.data['instances'][0], detailViewLoading:false}));\r\n\r\n        this.setState({\r\n            viewInstanceRack:'',\r\n        });\r\n    }\r\n\r\n    searchInstances() {\r\n        axios.post(\r\n            getURL(instancesMainPath, InstanceCommand.search),\r\n            {\r\n                'filter':{\r\n                    'model':this.state.searchModel,\r\n                    'hostname':this.state.searchHostname,\r\n                    'rack':this.state.searchRack,\r\n                    'rack_position':this.state.searchRackU,\r\n                }\r\n            }\r\n            ).then(response => {\r\n                this.setState({ items: response.data['instances'] });\r\n            });\r\n    }\r\n\r\n    getModelList() {\r\n        axios.get(\r\n            getURL(instancesMainPath, InstanceCommand.GET_ALL_MODELS), {}\r\n            ).then(response => this.setState({ modelList: response.data.results }));\r\n        this.setState({ madeModelQuery: true });\r\n    }\r\n\r\n    sendUploadedFile(data) {\r\n        axios.post(\r\n            getURL(instancesMainPath, InstanceCommand.UPLOAD_FILE), data\r\n            ).then(response => {\r\n                if (response.data.message === 'success') {\r\n                    this.setState({ showStatus: true, statusMessage: response.data.summary, statusSeverity:'success', showImportModal: false,})\r\n                    this.searchInstances();\r\n                } else {\r\n                    this.setState({ showStatus: true, statusMessage: response.data.message, statusSeverity:\"error\" })\r\n                }\r\n            });\r\n    }\r\n\r\n    search(filters) {\r\n        this.setState({\r\n            searchModel:filters['model'],\r\n            searchHostname:filters['hostname'],\r\n            searchRack:filters['rack'],\r\n            searchRackU:filters['rack_position'],\r\n        }, this.searchInstances);\r\n    }\r\n\r\n    downloadTable() {\r\n        axios.post(\r\n            getURL(instancesMainPath, InstanceCommand.EXPORT_FILE),\r\n            {\r\n                'filter':{\r\n                    'model':this.state.searchModel,\r\n                    'hostname':this.state.searchHostname,\r\n                    'rack':this.state.searchRack,\r\n                    'rack_position':this.state.searchRackU,\r\n                }\r\n            }\r\n            ).then(response => {\r\n                this.setState({ csvData: response.data.csvData });\r\n                this.csvLink.link.click();\r\n            });\r\n    }\r\n\r\n    openCreateModal() {\r\n        this.getModelList();\r\n        this.setState({showCreateModal: true});\r\n    }\r\n\r\n    openImportModal() {\r\n        this.setState({showImportModal: true});\r\n    }\r\n\r\n    showDetailedView(id) {\r\n        this.setState({\r\n            showDetailedView: true,\r\n            detailViewLoading:true,\r\n            originalRack: this.state.items[id]['rack'],\r\n            originalrack_position: this.state.items[id]['rack_position'],\r\n        });\r\n\r\n        var model = this.state.items[id]['model'];\r\n        var hostname = this.state.items[id]['hostname'];\r\n        var rack = this.state.items[id]['rack'];\r\n        var rack_position = this.state.items[id]['rack_position'];\r\n\r\n        this.detailViewInstance(rack, rack_position);\r\n    }\r\n\r\n    closeCreateModal() {\r\n        this.setState({showCreateModal: false});\r\n    }\r\n\r\n    closeImportModal() {\r\n        this.setState({showImportModal: false});\r\n    }\r\n\r\n    closeDetailedView() {\r\n        this.setState({ showDetailedView: false })\r\n    }\r\n\r\n    updateInstanceCreator(event) {\r\n        this.state.createdInstance[event.target.name] = event.target.value;\r\n        this.forceUpdate()\r\n    }\r\n\r\n    updateInstanceEdited(event) {\r\n        this.state.detailedValues[event.target.name] = event.target.value;\r\n        this.forceUpdate()\r\n    }\r\n    closeShowStatus() {\r\n        this.setState({ showStatus: false })\r\n    }\r\n\r\n    uploadFile() {\r\n        const data = new FormData();\r\n        data.append('file', this.state.importedFile);\r\n        this.sendUploadedFile(data);\r\n    }\r\n\r\n    chooseFile(event) {\r\n        this.setState({ importedFile: event.target.files[0] })\r\n    }\r\n\r\n    initialize() {\r\n        this.searchInstances();\r\n        this.getModelList();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <ErrorBoundray>\r\n                {(this.state.madeModelQuery) ? null: this.initialize()}\r\n                <StatusDisplay\r\n                    open={this.state.showStatus}\r\n                    severity={this.state.statusSeverity}\r\n                    closeStatus={this.closeShowStatus}\r\n                    message={this.state.statusMessage}\r\n                />\r\n                {(this.props.privilege == Privilege.ADMIN) ?\r\n                    (<div>\r\n                <ButtonMenu\r\n                    openCreateModal={this.openCreateModal}\r\n                    openImportModal={this.openImportModal}\r\n                    downloadTable={this.downloadTable}\r\n                />\r\n                <CSVLink\r\n                    data={this.state.csvData}\r\n                    filename={instanceDownloadFileName}\r\n                    className=\"hidden\"\r\n                    ref={(r) => this.csvLink = r}\r\n                    target=\"_blank\"\r\n                />\r\n                <CreateModal\r\n                    showCreateModal={this.state.showCreateModal}\r\n                    closeCreateModal={this.closeCreateModal}\r\n                    createModel={this.createInstance}\r\n                    updateModelCreator={this.updateInstanceCreator}\r\n                    inputs={inputs}\r\n                    options={this.state.modelList}\r\n                    useAutocomplete={true}\r\n                />\r\n                <UploadModal\r\n                    showImportModal={this.state.showImportModal}\r\n                    closeImportModal={this.closeImportModal}\r\n                    uploadFile={this.uploadFile}\r\n                    chooseFile={this.chooseFile}\r\n                    textDescription=\"The following format should be used for each row: hostname,rack,rack_position,vendor,model_number,owner,comment\"\r\n                /></div>):null\r\n            }\r\n                <Filters\r\n                    updateSearchText={this.updateSearchText}\r\n                    search={this.search}\r\n                    filters={columns}\r\n                />\r\n                <TableView\r\n                    columns={columns}\r\n                    vals={this.state.items}\r\n                    keys={columns}\r\n                    showDetailedView={this.showDetailedView}\r\n                    filters={columns}\r\n                />\r\n                <DetailedView\r\n                    showDetailedView={this.state.showDetailedView}\r\n                    closeDetailedView={this.closeDetailedView}\r\n                    inputs={inputs}\r\n                    updateModelEdited={this.updateInstanceEdited}\r\n                    defaultValues={this.state.detailedValues}\r\n                    loading={this.state.detailViewLoading}\r\n                    edit={this.editInstance}\r\n                    delete={this.deleteInstance}\r\n                    disabled={this.props.privilege==Privilege.USER}\r\n                />\r\n            </ErrorBoundray>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","export enum RackCommand {\r\n    GET_ALL_RACKS = \"all\",\r\n    CREATE_RACKS = \"create\",\r\n    DELETE_RACKS = \"delete\",\r\n    GET_RACK_DETAILS = \"details\"\r\n}\r\n","import React from 'react';\r\nimport axios from 'axios';\r\nimport { Privilege } from '../enums/privilegeTypes.ts';\r\nimport TableView from '../helpers/TableView';\r\nimport getURL from '../helpers/functions/GetURL';\r\nimport * as Constants from '../Constants';\r\nimport StatusDisplay from '../helpers/StatusDisplay';\r\nimport Select from '@material-ui/core/Select';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport { MenuItem, Button } from '@material-ui/core';\r\nimport { RackCommand } from \"../enums/rackCommands.ts\";\r\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\r\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\r\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport ErrorBoundray from '../errors/ErrorBoundry';\r\n\r\nconst racksMainPath = 'racks/';\r\n\r\nexport default class RacksView extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            items:[],\r\n            startingRackLetter:'',\r\n            endingRackLetter:'',\r\n            startingRackNumber:-1,\r\n            endingRackNumber:-1,\r\n\r\n            showStatus:false,\r\n            statusMessage:'',\r\n            statusSeverity:'',\r\n\r\n            showConfirmationBox:false,\r\n        };\r\n\r\n        this.getAllRacks = this.getAllRacks.bind(this);\r\n        this.updateRacks = this.updateRacks.bind(this);\r\n        this.createRacks = this.createRacks.bind(this);\r\n        this.deleteRacks = this.deleteRacks.bind(this);\r\n        this.viewRacks = this.viewRacks.bind(this);\r\n        this.changeStartingLetter = this.changeStartingLetter.bind(this);\r\n        this.changeEndingLetter = this.changeEndingLetter.bind(this);\r\n        this.changeStartingNum = this.changeStartingNum.bind(this);\r\n        this.changeEndingNum = this.changeEndingNum.bind(this);\r\n        this.closeShowStatus = this.closeShowStatus.bind(this);\r\n\r\n        axios.defaults.headers.common['token'] = this.props.token;\r\n        axios.defaults.headers.common['privilege'] = this.props.privilege;\r\n\r\n    }\r\n\r\n    getAllRacks() {\r\n        axios.get(getURL(racksMainPath, RackCommand.GET_ALL_RACKS)).then(response => {\r\n                if (response.data.message === 'success') {\r\n                    this.setState({ showStatus: true, statusMessage: \"Success\" })\r\n                } else {\r\n                    this.setState({ showStatus: true, statusMessage: response.data.message, statusSeverity:\"error\" })\r\n                }\r\n            });\r\n    }\r\n\r\n    updateRacks(command) {\r\n        axios.post(\r\n            getURL(racksMainPath, command),\r\n            {\r\n                'start_letter':this.state.startingRackLetter,\r\n                'stop_letter':this.state.endingRackLetter,\r\n                'start_number':this.state.startingRackNumber,\r\n                'stop_number':this.state.endingRackNumber,\r\n            }\r\n            ).then(response => {\r\n                console.log(response);\r\n                if (response.data.message === 'success') {\r\n                    this.setState({ showStatus: true, statusMessage: \"Success\", statusSeverity:\"success\", showConfirmationBox:false });\r\n                    if (command == RackCommand.GET_RACK_DETAILS) {\r\n                        const win = window.open(response.data.link, '_blank');\r\n                        if (win != null) {\r\n                            win.focus();\r\n                        }\r\n                    }\r\n                } else {\r\n                    this.setState({ showStatus: true, statusMessage: response.data.message, statusSeverity:\"error\" })\r\n                }\r\n            });\r\n    }\r\n\r\n    createRacks() {\r\n        this.updateRacks(RackCommand.CREATE_RACKS);\r\n    }\r\n\r\n    deleteRacks() {\r\n        this.updateRacks(RackCommand.DELETE_RACKS);\r\n    }\r\n\r\n    viewRacks() {\r\n        this.updateRacks(RackCommand.GET_RACK_DETAILS);\r\n    }\r\n\r\n    changeStartingLetter(event) {\r\n        this.setState({ startingRackLetter: event.target.value })\r\n    }\r\n\r\n    changeEndingLetter(event) {\r\n        this.setState({ endingRackLetter: event.target.value })\r\n    }\r\n\r\n    changeStartingNum(event) {\r\n        this.setState({ startingRackNumber: event.target.value })\r\n    }\r\n\r\n    changeEndingNum(event) {\r\n        this.setState({ endingRackNumber: event.target.value })\r\n    }\r\n\r\n    closeShowStatus() {\r\n        this.setState({ showStatus: false })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <ErrorBoundray>\r\n                <StatusDisplay\r\n                    open={this.state.showStatus}\r\n                    severity={this.state.statusSeverity}\r\n                    closeStatus={this.closeShowStatus}\r\n                    message={this.state.statusMessage}\r\n                />\r\n                <FormControl>\r\n                    <Select id=\"starting-letter-selector\" value={this.state.startingRackLetter} onChange={this.changeStartingLetter}>\r\n                        {Constants.RackX.map(val => (<MenuItem value={val}>{val}</MenuItem>))}\r\n                    </Select>\r\n                    <FormHelperText>Starting Letter</FormHelperText>\r\n                </FormControl>\r\n                <FormControl>\r\n                    <Select id=\"ending-letter-selector\" value={this.state.endingRackLetter} onChange={this.changeEndingLetter}>\r\n                        {Constants.RackX.map(val => (<MenuItem value={val}>{val}</MenuItem>))}\r\n                    </Select>\r\n                    <FormHelperText>Ending Letter</FormHelperText>\r\n                </FormControl>\r\n                <FormControl>\r\n                    <Select id=\"starting-num-selector\" value={this.state.startingRackNumber} onChange={this.changeStartingNum}>\r\n                        {Constants.RackY.map(val => (<MenuItem value={val}>{val}</MenuItem>))}\r\n                    </Select>\r\n                    <FormHelperText>Starting Number</FormHelperText>\r\n                </FormControl>\r\n                <FormControl>\r\n                    <Select id=\"ending-num-selector\" value={this.state.endingRackNumber} onChange={this.changeEndingNum}>\r\n                        {Constants.RackY.map(val => (<MenuItem value={val}>{val}</MenuItem>))}\r\n                    </Select>\r\n                    <FormHelperText>Ending Number</FormHelperText>\r\n                </FormControl>\r\n                <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    onClick={this.viewRacks}\r\n                    disabled={this.state.showConfirmationBox}\r\n                >\r\n                    View\r\n                </Button>\r\n                {(this.props.privilege == Privilege.ADMIN) ?\r\n                (<div>\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        onClick={this.createRacks}\r\n                        disabled={this.state.showConfirmationBox}\r\n                    >\r\n                        Create\r\n                    </Button>\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        onClick={() => this.setState({ showConfirmationBox: true, })}\r\n                        disabled={this.state.showConfirmationBox}\r\n                    >\r\n                        Delete\r\n                    </Button>\r\n                </div>):null}\r\n\r\n                {this.state.showConfirmationBox ? <div>\r\n                        Are you sure you wish to delete?\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            onClick={this.deleteRacks}\r\n                        >\r\n                            Yes\r\n                        </Button>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            onClick={() => this.setState({ showConfirmationBox: false, })}\r\n                        >\r\n                            No\r\n                        </Button>\r\n                    </div>:null}\r\n\r\n                    {this.state.items.map(rack => (\r\n                    <ExpansionPanel>\r\n                        <ExpansionPanelSummary\r\n                            expandIcon={<ExpandMoreIcon />}\r\n                        >\r\n                            <Typography>{rack.label}</Typography>\r\n                        </ExpansionPanelSummary>\r\n                        <ExpansionPanelDetails>\r\n                            {rack}\r\n                            {/*<TableContainer component={Paper}>\r\n                                <Table>\r\n                                    <TableHead>\r\n                                        <TableRow >\r\n                                            {tableCols[key].map(column => (<TableCell><span id={column}>{column}</span></TableCell>))}\r\n                                        </TableRow>\r\n                                    </TableHead>\r\n                                    <TableBody>\r\n                                    {this.state.tableValues[key].map(row => (\r\n                                        <TableRow>\r\n                                            {row.map(column => (<TableCell><span id={column}>{column}</span></TableCell>))}\r\n                                        </TableRow>\r\n                                    ))}\r\n                                    </TableBody>\r\n                                </Table>\r\n                            </TableContainer>*/}\r\n                        </ExpansionPanelDetails>\r\n                    </ExpansionPanel>\r\n                    ))}\r\n                </ErrorBoundray>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","export enum StatsCommand {\r\n    GENERATE_REPORT = \"generate-report\",\r\n    TEST = \"test\",\r\n}\r\n","import { ModelInput } from '../../enums/modelInputs.ts'\r\n\r\nexport default function jsonToArr(incomingJSON) {\r\n    try {\r\n        var json = JSON.parse(incomingJSON);\r\n    } catch (e) {\r\n        var json = incomingJSON;\r\n    }\r\n\r\n    if (Object.entries(json).length === 0 && json.constructor === Object) {\r\n        return [];\r\n    }\r\n\r\n    const items = [];\r\n\r\n    Object.keys(json).map(function(key) {\r\n        const row = [];\r\n        row.push(key);\r\n        row.push(json[key]);\r\n        items.push(row);\r\n    });\r\n    return items;\r\n}\r\n","import React from 'react';\r\nimport axios from 'axios';\r\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\r\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\r\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport getURL from '../helpers/functions/GetURL';\r\nimport  Button from '@material-ui/core/Button';\r\nimport { StatsCommand } from \"../enums/statsCommands.ts\";\r\nimport JSONtoArr from \"../helpers/functions/JSONtoArr\";\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport StatusDisplay from '../helpers/StatusDisplay';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport ErrorBoundray from '../errors/ErrorBoundry';\r\n\r\n\r\nconst statsMainPath = 'stats/';\r\nconst tables = {\r\n    \"totalUsage\":\"Total Usage\",\r\n    \"spaceUsage\": \"Space Usage\",\r\n    \"vendorUsage\": \"Vendor Usage\",\r\n    \"modelUsage\": \"Model Usage\",\r\n    \"ownerUsage\": \"Owner Usage\",\r\n}\r\n\r\nconst tableCols = {\r\n    \"totalUsage\":[\"Total\", \"Usage\"],\r\n    \"spaceUsage\": [\"Rack\", \"Usage\"],\r\n    \"vendorUsage\": [\"Vendor\", \"Usage\"],\r\n    \"modelUsage\": [\"Model\", \"Usage\"],\r\n    \"ownerUsage\": [\"Ownder\", \"Usage\"],\r\n}\r\n\r\nexport default class StatisticsView extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            tableValues: {\r\n                \"totalUsage\":[],\r\n                \"spaceUsage\": [],\r\n                \"vendorUsage\": [],\r\n                \"modelUsage\": [],\r\n                \"ownerUsage\": [],\r\n            },\r\n            totalUsage:[],\r\n            spaceUsage:[],\r\n            vendorUsage:[],\r\n            modelUsage:[],\r\n            ownerUsage:[],\r\n\r\n            showStatus:false,\r\n            statusMessage:'',\r\n            statusSeverity:'',\r\n        };\r\n\r\n        this.closeShowStatus = this.closeShowStatus.bind(this);\r\n        this.generateReport = this.generateReport.bind(this);\r\n\r\n        axios.defaults.headers.common['token'] = this.props.token;\r\n        axios.defaults.headers.common['privilege'] = this.props.privilege;\r\n    }\r\n\r\n    generateReport() {\r\n        axios.get(getURL(statsMainPath, StatsCommand.GENERATE_REPORT)).then(response => {\r\n                try {\r\n                    var data = response.data;\r\n                    var totalUsage = [];\r\n                    var totalUsageRow = [\"Total Usage\"];\r\n                    totalUsageRow.push(data[\"totalUsage\"]);\r\n                    totalUsage.push(totalUsageRow);\r\n\r\n                    var spaceUsage = JSONtoArr(data[\"spaceUsage\"]);\r\n                    if (spaceUsage.length == 0) {\r\n                        spaceUsage.push([\"No space is currently being used\", []])\r\n                    }\r\n                    var vendorUsage = JSONtoArr(data[\"vendorUsage\"]);\r\n                    if (vendorUsage.length == 0) {\r\n                        vendorUsage.push([\"No vendors currently using space\", []])\r\n                    }\r\n                    var modelUsage = JSONtoArr(data[\"modelUsage\"]);\r\n                    if (modelUsage.length == 0) {\r\n                        modelUsage.push([\"No models currently using space\", []])\r\n                    }\r\n                    var ownerUsage = JSONtoArr(data[\"ownerUsage\"]);\r\n                    if (ownerUsage.length == 0) {\r\n                        ownerUsage.push([\"No owners currently using space\", []])\r\n                    }\r\n\r\n                    this.setState({\r\n                        showStatus: true,\r\n                        statusSeverity:\"success\",\r\n                        statusMessage: \"Success\",\r\n                        tableValues: {\r\n                            \"totalUsage\":totalUsage,\r\n                            \"spaceUsage\": spaceUsage,\r\n                            \"vendorUsage\": vendorUsage,\r\n                            \"modelUsage\": modelUsage,\r\n                            \"ownerUsage\": ownerUsage,\r\n                        },\r\n                     })\r\n                } catch {\r\n                    this.setState({ showStatus: true, statusMessage: response.data.message, statusSeverity:\"error\" })\r\n                }\r\n            });\r\n    }\r\n\r\n    closeShowStatus() {\r\n        this.setState({ showStatus: false })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <ErrorBoundray >\r\n                <StatusDisplay\r\n                    open={this.state.showStatus}\r\n                    severity={this.state.statusSeverity}\r\n                    closeStatus={this.closeShowStatus}\r\n                    message={this.state.statusMessage}\r\n                />\r\n                <div>\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        onClick={this.generateReport}\r\n                    >\r\n                        Generate New Report\r\n                    </Button>\r\n                </div>\r\n                {Object.keys(tables).map(key => (\r\n                <ExpansionPanel>\r\n                    <ExpansionPanelSummary\r\n                        expandIcon={<ExpandMoreIcon />}\r\n                    >\r\n                        <Typography>{tables[key]}</Typography>\r\n                    </ExpansionPanelSummary>\r\n                    <ExpansionPanelDetails>\r\n                        <TableContainer component={Paper}>\r\n                            <Table>\r\n                                <TableHead>\r\n                                    <TableRow >\r\n                                        {tableCols[key].map(column => (<TableCell><span id={column}>{column}</span></TableCell>))}\r\n                                    </TableRow>\r\n                                </TableHead>\r\n                                <TableBody>\r\n                                {this.state.tableValues[key].map(row => (\r\n                                    <TableRow>\r\n                                        {row.map(column => (<TableCell><span id={column}>{column + (isNaN(column) ? \"\" : \"%\")}</span></TableCell>))}\r\n                                    </TableRow>\r\n                                ))}\r\n                                </TableBody>\r\n                            </Table>\r\n                        </TableContainer>\r\n                    </ExpansionPanelDetails>\r\n                </ExpansionPanel>\r\n                ))}\r\n                </ErrorBoundray>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Button from '@material-ui/core/Button';\r\nimport ModelsView from './pages/ModelsView';\r\nimport UsersView from './pages/UsersView';\r\nimport InstancesView from './pages/InstancesView';\r\nimport RacksView from './pages/RacksView';\r\nimport StatisticsView from './pages/StatisticsView';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { Privilege } from './enums/privilegeTypes.ts'\r\nimport ErrorBoundry from './errors/ErrorBoundry';\r\n\r\nexport default class TabViewer extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            currentTabID:0,\r\n        };\r\n        this.handleChange = this.handleChange.bind(this);\r\n    }\r\n\r\n    handleChange(event, newValue) {\r\n        this.setState({ currentTabID: newValue })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n        <div>\r\n            <ErrorBoundry>\r\n            <AppBar position=\"static\">\r\n                <Tabs value={this.state.currentTabID} onChange={this.handleChange}>\r\n                    <Tab value={0} style={{flexGrow: 1,}} label=\"Models\"> </Tab>\r\n                    <Tab value={1} style={{flexGrow: 1,}} label=\"Instances\" ></Tab>\r\n                    {(this.props.privilege == Privilege.ADMIN) ? <Tab value={2} style={{flexGrow: 1,}} label=\"Users\"></Tab> : null}\r\n                    <Tab value={3} style={{flexGrow: 1,}} label=\"Racks\" />\r\n                    <Tab value={4} style={{flexGrow: 1,}} label=\"Statistics\" />\r\n                    <Button\r\n                        style={{flexGrow: 1,}}\r\n                        variant=\"contained\"\r\n                        color=\"secondary\"\r\n                        onClick={this.props.logout}\r\n                    >\r\n                        Logout\r\n                    </Button>\r\n                </Tabs>\r\n            </AppBar>\r\n            <Typography\r\n                component=\"div\"\r\n                role=\"tabpanel\"\r\n                hidden={this.state.currentTabID !== 0}\r\n                id={`simple-tabpanel-0`}\r\n                aria-labelledby={`simple-tab-0`}\r\n            >\r\n                <ModelsView token={this.props.token} privilege={this.props.privilege} />\r\n            </Typography>\r\n            <Typography\r\n                component=\"div\"\r\n                role=\"tabpanel\"\r\n                hidden={this.state.currentTabID !== 1}\r\n                id={`simple-tabpanel-0`}\r\n                aria-labelledby={`simple-tab-0`}\r\n            >\r\n                <InstancesView token={this.props.token} privilege={this.props.privilege} />\r\n            </Typography>\r\n            <Typography\r\n                component=\"div\"\r\n                role=\"tabpanel\"\r\n                hidden={this.state.currentTabID !== 2}\r\n                id={`simple-tabpanel-0`}\r\n                aria-labelledby={`simple-tab-0`}\r\n            >\r\n                <UsersView token={this.props.token} privilege={this.props.privilege} />\r\n            </Typography>\r\n            <Typography\r\n                component=\"div\"\r\n                role=\"tabpanel\"\r\n                hidden={this.state.currentTabID !== 3}\r\n                id={`simple-tabpanel-0`}\r\n                aria-labelledby={`simple-tab-0`}\r\n            >\r\n                <RacksView token={this.props.token} privilege={this.props.privilege} />\r\n            </Typography>\r\n            <Typography\r\n                component=\"div\"\r\n                role=\"tabpanel\"\r\n                hidden={this.state.currentTabID !== 4}\r\n                id={`simple-tabpanel-0`}\r\n                aria-labelledby={`simple-tab-0`}\r\n            >\r\n                <StatisticsView token={this.props.token} privilege={this.props.privilege} />\r\n            </Typography>\r\n            </ErrorBoundry>\r\n        </div>);\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport Login from \"./Login\";\r\nimport TabViewer from \"./Tabs\";\r\nimport axios from 'axios';\r\nimport getURL from './helpers/functions/GetURL';\r\n\r\nconst storedToken = 'token';\r\nconst storedPrivilege = 'privilege';\r\nconst storedLoggedIn = 'loggedIn';\r\n\r\nexport default class PageSelector extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      token:sessionStorage.getItem(storedToken) || '',\r\n      privilege:sessionStorage.getItem(storedPrivilege) || '',\r\n      loggedIn:sessionStorage.getItem(storedLoggedIn) || '',\r\n    };\r\n\r\n    this.login = this.login.bind(this);\r\n    this.logout = this.logout.bind(this);\r\n  }\r\n\r\n  login(token, privilege) {\r\n    sessionStorage.setItem(storedToken, token);\r\n    sessionStorage.setItem(storedPrivilege, privilege);\r\n    sessionStorage.setItem(storedLoggedIn, true);\r\n\r\n    this.setState({\r\n      token:token,\r\n      privilege:privilege,\r\n      loggedIn:true,\r\n    })\r\n  }\r\n\r\n  logout() {\r\n    axios.get(getURL('users/', 'logout'));\r\n\r\n    this.setState({\r\n      token:'',\r\n      privilege:'',\r\n      loggedIn:false,\r\n    });\r\n\r\n    sessionStorage.removeItem(storedToken);\r\n    sessionStorage.removeItem(storedPrivilege);\r\n    sessionStorage.removeItem(storedLoggedIn);\r\n\r\n    window.location.reload();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        {this.state.loggedIn ?  <TabViewer token={this.state.token} privilege={this.state.privilege} logout={this.logout} /> : <Login loginFunc={this.login} />}\r\n      </div>\r\n    );\r\n  }\r\n\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './stylesheets/index.css';\nimport PageSelector from './javascript/PageSelector';\n\nReactDOM.render(<PageSelector />, document.getElementById('root'));\n"],"sourceRoot":""}
