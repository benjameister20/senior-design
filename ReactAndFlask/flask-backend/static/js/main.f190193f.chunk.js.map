{"version":3,"sources":["images/logo.png","javascript/enums/privilegeTypes.ts","javascript/Constants.jsx","javascript/helpers/functions/GetURL.jsx","javascript/models/enums/ModelCommands.ts","javascript/models/enums/ModelInputs.ts","javascript/helpers/StatusDisplay.jsx","javascript/ShibLogin.jsx","javascript/Login.jsx","javascript/models/helpers/ButtonsModel.jsx","javascript/models/helpers/FilterModel.jsx","javascript/models/helpers/DetailModel.jsx","javascript/models/helpers/CreateModel.jsx","javascript/users/enums/UserCommands.ts","javascript/users/enums/UserInputs.ts","javascript/helpers/UploadModal.jsx","javascript/helpers/TableView.jsx","javascript/models/ModelConstants.jsx","javascript/models/pages/ModelsView.jsx","javascript/assets/enums/AssetCommands.ts","javascript/users/helpers/FilterUser.jsx","javascript/users/helpers/DetailUser.jsx","javascript/users/helpers/CreateUser.jsx","javascript/users/UserConstants.jsx","javascript/users/pages/UsersView.jsx","javascript/assets/AssetConstants.jsx","javascript/assets/enums/AssetInputs.ts","javascript/assets/helpers/ImpExpAsset.jsx","javascript/assets/helpers/CreateAsset.jsx","javascript/assets/helpers/DetailsAsset.jsx","javascript/assets/helpers/FilterAsset.jsx","javascript/assets/helpers/functions/createAssetJSON.jsx","javascript/assets/helpers/TableAssets.jsx","javascript/racks/enums/RackCommands.ts","javascript/errors/ErrorBoundry.jsx","javascript/assets/pages/AssetsView.jsx","javascript/statistics/enums/StatsCommands.ts","javascript/racks/pages/RacksView.jsx","javascript/helpers/functions/JSONtoArr.jsx","javascript/statistics/pages/StatisticsView.jsx","javascript/Tabs.jsx","javascript/PageSelector.jsx","index.jsx"],"names":["module","exports","Privilege","serverEndpoint","RackX","ASSETS_MAIN_PATH","MODELS_MAIN_PATH","USERS_MAIN_PATH","DATACENTERS_MAIN_PATH","CLIENT_ID","SHIBBOLETH_LOGIN","encodeURIComponent","getURL","path","endpoint","Constants","ModelCommand","ModelInput","StatusDisplay","props","state","Snackbar","open","this","autoHideDuration","onClose","closeStatus","elevation","variant","severity","message","IconButton","aria-label","color","size","onClick","fontSize","React","Component","ShibLogin","username","password","statusMessage","showStatus","statusSeverity","Grid","container","spacing","direction","justify","alignItems","onKeyDown","e","onKeyPressed","style","item","xs","src","logo","alt","height","Card","minWidth","CardContent","Typography","fontWeight","gutterBottom","closeShowStatus","loginMainPath","queryString","require","Login","getDukeCredentials","token","axios","get","headers","then","response","console","log","post","data","netid","mail","displayName","setState","loginFunc","loginWithOAuth","window","location","initialized","oauth","bind","submitCredentials","shib","params","parse","hash","substring","access_token","usernameKey","passwordKey","ADMIN","event","target","value","key","preventDefault","stopPropagation","TextField","id","label","required","ref","onChange","updateUsername","type","updatePassword","Button","direciton","width","ButtonsModel","startIcon","openImportModal","downloadTable","FilterModel","filters","hasOwnProperty","newFilters","forceUpdate","search","map","filter","index","InputBase","placeholder","inputProps","updateSearchText","createInputs","name","inputs","DetailModel","updateColor","updateModelColorDetails","hex","showConfirmationBox","closeModal","confirmDelete","deleteItem","delete","showDetailedView","ExpansionPanel","ExpansionPanelSummary","expandIcon","ExpansionPanelDetails","statusOpen","statusClose","loading","CircularProgress","Autocomplete","options","includeInputInList","freeSolo","defaultValue","defaultValues","vendor","renderInput","updateModelCreator","onBlur","fullWidth","disabled","modelNumber","powerPorts","cpu","memory","storage","comments","edit","UserCommand","UserInput","CreateModel","updateModelColor","showModal","Paper","Modal","aria-labelledby","aria-describedby","display","justifyContent","maxWidth","margin","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","timeout","Fade","in","createModel","UploadModal","top","left","transform","background","showImportModal","closeImportModal","accept","chooseFile","uploadFile","textDescription","TableView","TableContainer","component","Table","TableHead","TableRow","columns","col","TableCell","TableBody","vals","row","keys","scope","GENERAL_MODEL_ERROR","modelsMainPath","ModelsView","create","createdModel","Vendor","model_number","Height","display_color","ethernet_ports","power_ports","CPU","Memory","Storage","Comment","showCreateModal","getVendorList","searchModels","createStatusOpen","createStatusMessage","createStatusSeverity","catch","ModelConstants","editModel","originalVendor","originalModelNumber","originalHeight","detailedValues","detailStatusOpen","detailStatusMessage","detailStatusSeverity","deleteModel","detailViewModel","modelNum","detailView","detailViewLoading","error","viewVendor","viewModel","searchVendor","searchModelNum","searchHeight","models","undefined","items","searchText","VENDOR_VALUES","vendorsList","results","madeVendorQuery","sendUploadedFile","UPLOAD_FILE","summary","EXPORT_FILE","csvData","csvLink","link","click","openCreateModal","closeCreateModal","closeDetailedView","updateModelEdited","reason","createStatusClose","detailStatusClose","FormData","append","importedFile","files","createdVendor","createdModelNum","createdHeight","createdDispClr","createdEthPorts","createdPwrPorts","createdCPU","createdMem","createdStorage","createdComments","deleteVendor","defaults","common","privilege","sm","md","lg","useAutocomplete","filename","className","r","USER","AssetCommand","Filters","FormControl","InputLabel","Select","MenuItem","DetailedView","input","CreateModal","gutterbottom","GENERAL_USER_ERROR","usersMainPath","UsersView","createUser","createdUser","Username","Password","display_name","Email","searchUsers","UserConstants","editUser","originalUsername","deleteUser","deleteUsername","detailViewUser","viewUser","searchUsernm","searchEml","searchDspNm","searchPriv","updateUserCreator","newUser","updateUserEdited","newDetails","AssetInput","SUCCESS_TOKEN","ERROR_TOKEN","ImpExpAsset","AssetConstants","showImport","classes","modal","paper","button","withStyles","theme","backgroundColor","palette","border","boxShadow","shadows","padding","showTooltip","description","emptySearch","searchPath","CreateAsset","getModelList","modelNames","networkNames","powerPortNames","model","modelKey","push","parseInt","loadingModels","modelList","networkList","powerPortList","getOwnerList","loadingOwners","ownerList","getDatacenterList","loadingDatacenters","datacenterList","getNextAssetNum","GET_NEXT_ASSET_NUM","loadingAssetNumber","asset_number","getAssetList","instances","assetNums","assetNumToModel","instance","loadingHostnames","assetNumList","assetNumToModelList","createAsset","createJSON","hostname","rack","rackU","owner","comment","datacenter_id","tags","network_connections","power_connections","updateModel","newValue","updateHostname","updateRack","updateRackU","updateOwner","updateComment","updateDatacenter","updateTags","updateNetworkMac","port","Object","assign","mac_address","updateNetworkPort","connection_port","updateNetworkHostname","connection_hostname","updatePowerConnections","updateAssetNumber","selectedConnection","MODEL","HOSTNAME","RACK","RACK_U","OWNER","COMMENT","DATACENTER","MAC_ADDRESS","NETWORK_CONNECTIONS","POWER_CONNECTIONS","ASSET_NUMBER","Tooltip","placement","title","datacenter","InputProps","min","max","assetNum","nextAssetNum","networkPort","macAddress","networkConnections","Array","from","length","_","k","Switch","checked","multiline","cancelCreation","root","flexGrow","progress","marginLeft","DetailAsset","GET_ALL_MODELS","GET_ALL_OWNERS","GET_ALL_DATACENTERS","getHostnameList","GET_ALL_HOSTNAME","hostnameList","updateNetworkConnections","close","updateAssetCreator","FormHelperText","FilterAsset","updateSearchItems","assets","startingRackNumber","endingRackNumber","Fragment","inputRoot","inputInput","startingRackLetter","changeStartingLetter","val","endingRackLetter","changeEndingLetter","changeStartingNum","changeEndingNum","grow","menuButton","marginRight","breakpoints","up","position","borderRadius","shape","fade","white","searchIcon","pointerEvents","transition","transitions","sectionDesktop","sectionMobile","createData","RackCommand","rows","TableAsset","editAsset","body","getAssetAsJSON","RACK_ORIGINAL","originalRack","RACK_U_ORIGINAL","originalrack_position","deleteAsset","getAssetDetails","rack_position","tableItems","deleteAssetRack","deleteAssetrack_position","order","orderBy","table","styledTableRow","tableCellHead","align","default","primary","main","styledTableCell","marginBottom","ErrorBoundary","hasError","errorInfo","children","AssetsView","StatsCommand","racksMainPath","RacksView","handleFormat","newFormats","formats","getAllRacks","GET_ALL_RACKS","racksList","racks","createRacks","updateRacks","CREATE_RACKS","deleteRacks","DELETE_RACKS","viewRacks","GET_RACK_DETAILS","changeStartingRack","firstRack","changeEndingRack","secondRack","changeRackType","rackType","command","win","focus","ToggleButtonGroup","exclusive","ToggleButton","class","jsonToArr","incomingJSON","json","JSON","entries","constructor","tables","tableCols","StatisticsView","tableValues","totalUsage","spaceUsage","vendorUsage","modelUsage","ownerUsage","generateReport","GENERATE_REPORT","totalUsageRow","JSONtoArr","column","isNaN","TabViewer","handleProfileMenuOpen","anchorEl","currentTarget","isMenuOpen","handleMenuClose","currentTabID","handleChange","AppBar","Toolbar","aria-controls","aria-haspopup","Menu","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","logout","Tabs","indicatorColor","textColor","centered","Tab","role","hidden","Container","tab","storedToken","storedPrivilege","storedLoggedIn","storedUsername","PageSelector","sessionStorage","getItem","loggedIn","login","setItem","removeItem","reload","redirected","ReactDOM","render","document","referrer","getElementById"],"mappings":"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","file":"static/js/main.f190193f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.df79d0ea.png\";","export enum Privilege  {\r\n    ADMIN = \"admin\",\r\n    USER = \"user\",\r\n};\r\n","/**\r\n * Constants file\r\n */\r\n\r\nexport const localServerEndpoint = 'http://localhost:4010/';\r\nexport const testServerEndpoint = ' https://parseltongue-finishinge-lfw68m.herokuapp.com/';\r\nexport const devServerEndpoint = 'https://parseltongue-dev.herokuapp.com/';\r\nexport const prodServerEndpoint = 'https://parseltongue-prod.herokuapp.com/';\r\n\r\nexport const serverEndpoint = localServerEndpoint;\r\n\r\n\r\nexport const RackX = [\r\n    'A', 'B', 'C', 'D', 'E',\r\n    'F', 'G', 'H', 'I', 'J',\r\n    'K', 'L', 'M', 'N', 'O',\r\n    'P', 'Q', 'R', 'S', 'T',\r\n    'W', 'X', 'Y', 'Z',\r\n]\r\n\r\nexport const ASSETS_MAIN_PATH = 'instances/';\r\nexport const MODELS_MAIN_PATH = \"models/\";\r\nexport const USERS_MAIN_PATH = \"users/\";\r\nexport const RACKS_MAIN_PATH = \"racks/\";\r\nexport const DATACENTERS_MAIN_PATH = \"datacenters/\";\r\n\r\nexport const CLIENT_ID = \"ParselTonguesUserAuth\";\r\nexport const CLIENT_SECRET = \"LpUwB*eiK4Iw#1gaCu5jYp1u5uRF3ERsdmuNUGoKYNzn7rHm7b\";\r\nexport const SCOPE = \"basic\";\r\n\r\nexport const SHIBBOLETH_LOGIN =\r\n    \"https://oauth.oit.duke.edu/oauth/authorize.php?\"\r\n     + \"client_id=\" + encodeURIComponent(CLIENT_ID)\r\n     + \"&client_secret=\" + encodeURIComponent(CLIENT_SECRET)\r\n     + \"&redirect_uri=\" + encodeURIComponent('http://localhost:3000/')\r\n     + \"&response_type=token\"\r\n     + \"&state=1129\"\r\n     + \"&scope=\" + encodeURIComponent(SCOPE);\r\n","import * as Constants from '../../Constants';\r\n\r\nexport default function getURL(path, endpoint) {\r\n    return Constants.serverEndpoint + path + endpoint;\r\n}\r\n","export enum ModelCommand {\r\n    create = 'create/',\r\n    delete = 'delete/',\r\n    edit = 'edit/',\r\n    view = 'view/',\r\n    detailView = 'detailView/',\r\n    search = 'search/',\r\n    VENDOR_VALUES = 'assistedvendor/',\r\n    UPLOAD_FILE = 'import/',\r\n    EXPORT_FILE = 'export/'\r\n}\r\n","export enum ModelInput {\r\n    Vendor = 'vendor',\r\n    model_number = 'model_number',\r\n    Height = 'height',\r\n    display_color = 'display_color',\r\n    ethernet_ports = 'ethernet_ports',\r\n    power_ports = 'power_ports',\r\n    CPU = 'cpu',\r\n    Memory = 'memory',\r\n    Storage = 'storage',\r\n    Comment = 'comment'\r\n}\r\n","import React from 'react';\r\n\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\n\r\n\r\nexport default class StatusDisplay extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n\r\n        };\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Snackbar open={this.props.open} autoHideDuration={12000} onClose={this.props.closeStatus}>\r\n                    <MuiAlert elevation={6} variant=\"filled\"\r\n                        severity={this.props.severity}\r\n                    >\r\n                        <div>\r\n                        {this.props.message}\r\n                        <IconButton\r\n                            aria-label=\"close\"\r\n                            color=\"inherit\"\r\n                            size=\"small\"\r\n                            onClick={this.props.closeStatus}\r\n                        >\r\n                            <CloseIcon fontSize=\"inherit\" />\r\n                        </IconButton>\r\n                        </div>\r\n                    </MuiAlert >\r\n                </Snackbar>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport StatusDisplay from './helpers/StatusDisplay';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport logo from '../images/logo.png';\r\n\r\n\r\n\r\nexport default class ShibLogin extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            username:'',\r\n            password:'',\r\n            statusMessage:'',\r\n            showStatus:false,\r\n            statusSeverity:'info',\r\n        };\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Grid\r\n                container\r\n                spacing={5}\r\n                direction=\"column\"\r\n                justify=\"flex-start\"\r\n                alignItems=\"center\"\r\n                onKeyDown={(e) => this.onKeyPressed(e)}\r\n                style={{\r\n                    \"minHeight\": \"102vh\",\r\n                    \"background\": \"linear-gradient(to top, #a8e063, #56ab2f)\",\r\n                }}\r\n            >\r\n                <Grid item xs={12}>\r\n                    <img src={logo} alt=\"\" style={{height: \"200px\", \"marginTop\": \"50px\"}} />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <Card\r\n                        style={\r\n                            {\r\n                                minWidth: '20vw',\r\n                            }\r\n                        }\r\n                    >\r\n                        <CardContent>\r\n                            <Grid\r\n                                container\r\n                                spacing={1}\r\n                                direction=\"column\"\r\n                                justify=\"center\"\r\n                                alignItems=\"center\"\r\n                            >\r\n                                <Grid container item alignItems=\"flex-start\" xs={12}>\r\n                                    <Typography\r\n                                        variant=\"h6\"\r\n                                        color=\"textPrimary\"\r\n                                        fontWeight=\"fontWeightBold\"\r\n                                        gutterBottom\r\n                                    >\r\n                                        Please wait while we log you in...\r\n                                    </Typography>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </CardContent>\r\n                    </Card>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <StatusDisplay\r\n                        open={this.state.showStatus}\r\n                        severity={this.state.statusSeverity}\r\n                        closeStatus={this.closeShowStatus}\r\n                        message={this.state.statusMessage}\r\n                    />\r\n                </Grid>\r\n            </Grid>\r\n\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport axios from 'axios';\r\nimport getURL from './helpers/functions/GetURL';\r\nimport { Privilege } from './enums/privilegeTypes.ts'\r\nimport StatusDisplay from './helpers/StatusDisplay';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport logo from '../images/logo.png';\r\nimport { loginKeys } from './JSONKeys';\r\nimport ShibLogin from './ShibLogin';\r\nimport * as Constants from \"./Constants\";\r\n\r\nconst loginMainPath = 'users/';\r\nconst queryString = require('query-string');\r\n\r\nexport default class Login extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            username:'',\r\n            password:'',\r\n            statusMessage:'',\r\n            showStatus:false,\r\n            statusSeverity:'info',\r\n            initialized:false,\r\n            oauth:false,\r\n        };\r\n\r\n        this.closeShowStatus = this.closeShowStatus.bind(this);\r\n        this.submitCredentials = this.submitCredentials.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        console.log(this.props.shib);\r\n        try {\r\n            var params = queryString.parse(window.location.hash.substring(1));\r\n            if (params.access_token != null) {\r\n                this.getDukeCredentials(params.access_token);\r\n                this.setState({ oauth: true });\r\n            }\r\n\r\n            console.log(params);\r\n        } catch(e) {\r\n            console.log(\"tried:\")\r\n        }\r\n        this.setState({ initialized: true });\r\n    }\r\n\r\n    submitCredentials() {\r\n        const usernameKey = loginKeys.username;\r\n        const passwordKey = loginKeys.password;\r\n        \r\n        axios.post(\r\n            getURL(loginMainPath, 'authenticate'), {\r\n                usernameKey: this.state.username,\r\n                passwordKey: this.state.password,\r\n            }).then(response => {\r\n                var valid = response.data['message'];\r\n                if (valid === 'success') {\r\n                    this.setState({ message: '' });\r\n                    this.props.loginFunc(response.data['token'], this.state.username, response.data['privilege']);\r\n                } else {\r\n                    this.setState({ showStatus:true, statusMessage:response.data['message'] });\r\n                }\r\n            });\r\n        this.props.loginFunc('token', \"Administrator\", Privilege.ADMIN);\r\n    }\r\n\r\n    updateUsername(event) {\r\n        this.setState({ username: event.target.value })\r\n    }\r\n\r\n    updatePassword(event) {\r\n        this.setState({ password: event.target.value })\r\n    }\r\n\r\n    closeShowStatus() {\r\n        this.setState({ showStatus: false })\r\n    }\r\n\r\n    onKeyPressed(event) {\r\n        if (event.key === 'Enter') {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n            this.submitCredentials();\r\n        }\r\n    }\r\n\r\n    getDukeCredentials = (token) => {\r\n        axios.get('https://api.colab.duke.edu/identity/v1/', {\r\n            headers: {\r\n                'x-api-key': Constants.CLIENT_ID,\r\n                'Authorization': `Bearer ${token}`\r\n            }\r\n        }).then(response => {\r\n            console.log(response);\r\n            axios.post(\r\n                getURL(loginMainPath, 'oauth'),\r\n                {\r\n                    \"username\":response.data.netid,\r\n                    \"email\":response.data.mail,\r\n                    \"display_name\":response.data.displayName,\r\n                    \"client_id\":Constants.CLIENT_ID,\r\n                    \"token\":token,\r\n                }\r\n                ).then(response => {\r\n                    var valid = response.data['message'];\r\n                    if (valid === 'success') {\r\n                        this.setState({ message: '' });\r\n                        this.props.loginFunc(response.data['token'], this.state.username, response.data['privilege']);\r\n                    } else {\r\n                        this.setState({ showStatus:true, statusMessage:response.data['message'] });\r\n                    }\r\n            });\r\n        });\r\n    }\r\n\r\n    loginWithOAuth = () => {\r\n        window.location = Constants.SHIBBOLETH_LOGIN;\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                { (this.state.oauth) ? <ShibLogin /> :\r\n                <Grid\r\n                    container\r\n                    spacing={5}\r\n                    direction=\"column\"\r\n                    justify=\"flex-start\"\r\n                    alignItems=\"center\"\r\n                    onKeyDown={(e) => this.onKeyPressed(e)}\r\n                    style={{\r\n                        \"minHeight\": \"102vh\",\r\n                        \"background\": \"#56ab2f\",\r\n                        \"background\": \"-webkit-linear-gradient(to top, #a8e063, #56ab2f)\",\r\n                        \"background\": \"linear-gradient(to top, #a8e063, #56ab2f)\",\r\n                    }}\r\n                >\r\n                    <Grid item xs={12}>\r\n                        <img src={logo} style={{height: \"200px\", \"marginTop\": \"50px\"}} alt=\"Hyposoft\" />\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <Card\r\n                            style={\r\n                                {\r\n                                    minWidth: '20vw',\r\n                                }\r\n                            }\r\n                        >\r\n                            <CardContent>\r\n                                <Grid\r\n                                    container\r\n                                    spacing={1}\r\n                                    direction=\"column\"\r\n                                    justify=\"center\"\r\n                                    alignItems=\"center\"\r\n                                >\r\n                                    <Grid container item alignItems=\"flex-start\" xs={12}>\r\n                                        <Typography\r\n                                            variant=\"h4\"\r\n                                            color=\"textPrimary\"\r\n                                            fontWeight=\"fontWeightBold\"\r\n                                            gutterBottom\r\n                                        >\r\n                                            Login\r\n                                        </Typography>\r\n                                    </Grid>\r\n                                    <Grid item xs={12}>\r\n                                        <TextField\r\n                                            id=\"username-input\"\r\n                                            label=\"Username\"\r\n                                            variant=\"outlined\"\r\n                                            required={true}\r\n                                            ref='username'\r\n                                            onChange={this.updateUsername.bind(this)}\r\n                                            style={{minWidth: \"15vw\"}}\r\n                                        />\r\n                                    </Grid>\r\n                                    <Grid item xs={12}>\r\n                                        <TextField\r\n                                            id=\"password-input\"\r\n                                            label=\"Password\"\r\n                                            variant=\"outlined\"\r\n                                            required={true}\r\n                                            ref='password'\r\n                                            type=\"password\"\r\n                                            onChange={this.updatePassword.bind(this)}\r\n                                            style={{minWidth: \"15vw\"}}\r\n                                        />\r\n                                    </Grid>\r\n                                    <Grid item xs={12}>\r\n                                        <Button\r\n                                            onClick={this.submitCredentials}\r\n                                            variant=\"contained\"\r\n                                            color=\"primary\"\r\n                                            style={{minWidth: \"15vw\"}}\r\n                                        >\r\n                                            Sign In\r\n                                        </Button>\r\n                                    </Grid>\r\n                                    <Grid container item direciton=\"row\" justify=\"center\" alignItems=\"center\" xs={12}>\r\n                                            <hr style={{width: \"5vw\"}} />\r\n                                            <Typography color=\"textSecondary\">\r\n                                                Or\r\n                                            </Typography>\r\n                                            <hr style={{width: \"5vw\"}} />\r\n                                    </Grid>\r\n                                    <Grid item xs={12}>\r\n                                        <Button\r\n                                            onClick={this.loginWithOAuth}\r\n                                            variant=\"contained\"\r\n                                            color=\"primary\"\r\n                                        >\r\n                                            Sign In with NetID\r\n                                        </Button>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </CardContent>\r\n                        </Card>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <StatusDisplay\r\n                            open={this.state.showStatus}\r\n                            severity={this.state.statusSeverity}\r\n                            closeStatus={this.closeShowStatus}\r\n                            message={this.state.statusMessage}\r\n                        />\r\n                    </Grid>\r\n                </Grid>}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\r\nimport CloudDownloadIcon from '@material-ui/icons/CloudDownload';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nexport default class ButtonsModel extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n\r\n        };\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div>\r\n                <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    startIcon={<CloudUploadIcon />}\r\n                    onClick={this.props.openImportModal}\r\n                >\r\n                    Import\r\n                </Button>\r\n                <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    startIcon={<CloudDownloadIcon />}\r\n                    onClick={this.props.downloadTable}\r\n                >\r\n                    Export\r\n                </Button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nexport default class FilterModel extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            filters: {},\r\n        };\r\n    }\r\n\r\n    updateSearchText(event) {\r\n        if (this.state.filters.hasOwnProperty(event.target.id)) {\r\n            const newFilters = this.state.filters;\r\n            newFilters[event.target.id] = event.target.value;\r\n            this.setState({ filters: newFilters });\r\n            this.forceUpdate();\r\n        } else {\r\n            const newFilters = this.state.filters;\r\n            newFilters[event.target.id] = event.target.value;\r\n            this.setState({ filters: newFilters });\r\n            this.forceUpdate();\r\n        }\r\n    }\r\n\r\n    search() {\r\n        this.props.search(this.state.filters);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.props.filters.map((filter, index) => (\r\n                    <div>\r\n                        <SearchIcon />\r\n                        <InputBase\r\n                            placeholder={filter+\" filter\"}\r\n                            inputProps={{ 'aria-label': 'search' }}\r\n                            onChange={this.updateSearchText.bind(this)}\r\n                            id={filter}\r\n                        />\r\n                    </div>\r\n                ))\r\n                }\r\n                <div>\r\n                    <Button\r\n                        onClick={this.search.bind(this)}\r\n                    >\r\n                        Search\r\n                    </Button>\r\n                </div>\r\n                Click the search button to populate table. Searching with empty filters searches over all values. Click on row values to see detailed view.\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from '@material-ui/core/Button';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\r\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\r\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport { CompactPicker } from 'react-color';\r\nimport StatusDisplay from '../../helpers/StatusDisplay';\r\n\r\nfunction createInputs(name, label) {\r\n    return {label, name};\r\n}\r\n\r\nconst inputs = {\r\n    \"vendor\":createInputs('vendor', \"Vendor\", ),\r\n    \"modelNumber\":createInputs('model_number', \"Model Number\"),\r\n    \"height\":createInputs('height', \"Height\"),\r\n    \"displayColor\":createInputs('display_color', \"Display Color\"),\r\n    \"powerPorts\":createInputs('power_ports', \"Power Ports\"),\r\n    \"cpu\":createInputs('cpu', \"CPU\"),\r\n    \"memory\":createInputs('memory', \"Memory\"),\r\n    \"storage\":createInputs('storage', \"Storage\"),\r\n    \"comments\":createInputs('comments', \"Comments\"),\r\n}\r\n\r\nexport default class DetailModel extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            showConfirmationBox:false,\r\n            color:null,\r\n        };\r\n\r\n        this.closeModal = this.closeModal.bind(this);\r\n        this.confirmDelete = this.confirmDelete.bind(this);\r\n        this.deleteItem = this.deleteItem.bind(this);\r\n    }\r\n\r\n    confirmDelete() {\r\n        this.setState({ showConfirmationBox: true });\r\n    }\r\n\r\n    closeModal() {\r\n        this.setState({showConfirmationBox:false,});\r\n    }\r\n\r\n    deleteItem() {\r\n        this.setState({ showConfirmationBox: false });\r\n        this.props.delete();\r\n    }\r\n\r\n    updateColor = (color) => {\r\n        this.setState({ color: color });\r\n        this.props.updateModelColorDetails(color.hex);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n        <div>\r\n            {!this.props.showDetailedView ? null:\r\n            <ExpansionPanel >\r\n                    <ExpansionPanelSummary\r\n                        expandIcon={<ExpandMoreIcon />}\r\n                    >\r\n                        <Typography>Model Details</Typography>\r\n                    </ExpansionPanelSummary>\r\n                    <ExpansionPanelDetails>\r\n                        <StatusDisplay\r\n                            open={this.props.statusOpen}\r\n                            severity={this.props.statusSeverity}\r\n                            closeStatus={this.props.statusClose}\r\n                            message={this.props.statusMessage}\r\n                            autoHideDuration={6000}\r\n                        />\r\n                    {\r\n                this.props.loading ? <CircularProgress /> :\r\n                <div>\r\n                    <Autocomplete\r\n                            id=\"select-vendor\"\r\n                            options={this.props.options}\r\n                            includeInputInList\r\n                            freeSolo\r\n                            defaultValue={this.props.defaultValues[inputs.vendor.name]}\r\n                            renderInput={params => (\r\n                            <TextField {...params}\r\n                                label={inputs.vendor.label}\r\n                                name={inputs.vendor.name}\r\n                                onChange={this.props.updateModelCreator}\r\n                                onBlur={this.props.updateModelCreator}\r\n                                variant=\"outlined\" fullWidth\r\n                                disabled={this.props.disabled}\r\n                            />\r\n                            )}\r\n                        />\r\n                        <TextField id=\"standard-basic\" variant=\"outlined\"\r\n                            label={inputs.modelNumber.label} name={inputs.modelNumber.name}\r\n                            onChange={this.props.updateModelCreator}\r\n                            disabled={this.props.disabled}\r\n                            defaultValue={this.props.defaultValues[inputs.modelNumber.name]}\r\n                        />\r\n                        <TextField id=\"standard-basic\" variant=\"outlined\"\r\n                            label={inputs.height.label} name={inputs.height.name}\r\n                            onChange={this.props.updateModelCreator}\r\n                            disabled={this.props.disabled}\r\n                            defaultValue={this.props.defaultValues[inputs.height.name]}\r\n                        />\r\n                        <CompactPicker\r\n                            color={this.state.color || this.props.defaultValues[\"display_color\"]}\r\n                            onChange={this.updateColor}\r\n\r\n                        />\r\n                        <TextField id=\"standard-basic\" variant=\"outlined\"\r\n                            label={inputs.powerPorts.label} name={inputs.powerPorts.name}\r\n                            onChange={this.props.updateModelCreator}\r\n                            disabled={this.props.disabled}\r\n                            defaultValue={this.props.defaultValues[inputs.powerPorts.name]}\r\n                        />\r\n                        <TextField id=\"standard-basic\" variant=\"outlined\"\r\n                            label={inputs.cpu.label} name={inputs.cpu.name}\r\n                            onChange={this.props.updateModelCreator}\r\n                            disabled={this.props.disabled}\r\n                            defaultValue={this.props.defaultValues[inputs.cpu.name]}\r\n                        />\r\n                        <TextField id=\"standard-basic\" variant=\"outlined\"\r\n                            label={inputs.memory.label} name={inputs.memory.name}\r\n                            onChange={this.props.updateModelCreator}\r\n                            disabled={this.props.disabled}\r\n                            defaultValue={this.props.defaultValues[inputs.memory.name]}\r\n                        />\r\n                        <TextField id=\"standard-basic\" variant=\"outlined\"\r\n                            label={inputs.storage.label} name={inputs.storage.name}\r\n                            onChange={this.props.updateModelCreator}\r\n                            disabled={this.props.disabled}\r\n                            defaultValue={this.props.defaultValues[inputs.storage.name]}\r\n                        />\r\n                        <TextField id=\"standard-basic\" variant=\"outlined\"\r\n                            label={inputs.comments.label} name={inputs.comments.name}\r\n                            onChange={this.props.updateModelCreator}\r\n                            disabled={this.props.disabled}\r\n                            defaultValue={this.props.defaultValues[inputs.comments.name]}\r\n                        />\r\n\r\n                    {this.props.disabled ? null:\r\n                    <div>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            onClick={this.props.edit}\r\n                            disabled={this.state.showConfirmationBox}\r\n                        >\r\n                            Save\r\n                        </Button>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            onClick={this.confirmDelete}\r\n                            disabled={this.state.showConfirmationBox}\r\n                        >\r\n                            Delete\r\n                        </Button>\r\n                    </div>}\r\n                    {this.state.showConfirmationBox ? <div>\r\n                        Are you sure you wish to delete?\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            onClick={this.deleteItem}\r\n                        >\r\n                            Yes\r\n                        </Button>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            onClick={this.closeModal}\r\n                        >\r\n                            No\r\n                        </Button>\r\n                    </div>:null}\r\n                </div>}\r\n                    </ExpansionPanelDetails>\r\n                </ExpansionPanel>}\r\n        </div>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\n\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from '@material-ui/core/Button';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { CompactPicker } from 'react-color';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport '../stylesheets/ModelStyles.css';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport Fade from '@material-ui/core/Fade';\r\n\r\nfunction createInputs(name, label) {\r\n    return {label, name};\r\n}\r\n\r\nconst inputs = {\r\n    \"vendor\": createInputs('vendor', \"Vendor\"),\r\n    \"modelNumber\": createInputs('model_number', \"Model Number\"),\r\n    \"height\": createInputs('height', \"Height\"),\r\n    \"displayColor\": createInputs('display_color', \"Display Color\"),\r\n    \"powerPorts\": createInputs('power_ports', \"Power Ports\"),\r\n    \"cpu\": createInputs('cpu', \"CPU\"),\r\n    \"memory\": createInputs('memory', \"Memory\"),\r\n    \"storage\": createInputs('storage', \"Storage\"),\r\n    \"comments\": createInputs('comments', \"Comments\"),\r\n}\r\n\r\nexport default class CreateModel extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            color: '#000',\r\n            showModal: false,\r\n        };\r\n    }\r\n\r\n    updateColor = (color) => {\r\n        console.log(color);\r\n        this.setState({ color: color });\r\n        this.props.updateModelColor(color.hex);\r\n        console.log(\"state: \" + this.state.color);\r\n    }\r\n\r\n    showModal = () => {\r\n        this.setState({ showModal: true });\r\n    }\r\n\r\n    closeModal = () => {\r\n        this.setState({ showModal: false });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n        <div>\r\n            <Paper elevation={3}>\r\n                <Grid\r\n                    container\r\n                    spacing={2}\r\n                    direction=\"row\"\r\n                    justify=\"flex-start\"\r\n                    alignItems=\"center\"\r\n                    style={{\"margin\": \"0px\"}}\r\n                >\r\n                    <Grid item xs={12}>\r\n                        <Typography variant=\"h6\">Add new model</Typography>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            onClick={() => {this.showModal()} }\r\n                        >\r\n                            Create\r\n                        </Button>\r\n                    </Grid>\r\n                </Grid>\r\n            </Paper>\r\n            <Modal\r\n                aria-labelledby=\"transition-modal-title\"\r\n                aria-describedby=\"transition-modal-description\"\r\n                style={{\r\n                    display: 'flex',\r\n                    alignItems: 'center',\r\n                    justifyContent: 'center',\r\n                    maxWidth: \"80%\",\r\n                    margin: \"0 auto\"\r\n                }}\r\n                open={this.state.showModal}\r\n                onClose={this.closeModal}\r\n                closeAfterTransition\r\n                BackdropComponent={Backdrop}\r\n                BackdropProps={{\r\n                    timeout: 500,\r\n                }}\r\n            >\r\n                <Fade in={this.state.showModal}>\r\n                <Autocomplete\r\n                    id=\"select-vendor\"\r\n                    options={this.props.options}\r\n                    includeInputInList\r\n                    freeSolo\r\n                    renderInput={params => (\r\n                    <TextField {...params} label={inputs.vendor.label} name={inputs.vendor.name} onChange={this.props.updateModelCreator} onBlur={this.props.updateModelCreator} variant=\"outlined\" fullWidth />\r\n                    )}\r\n                />\r\n                <TextField id=\"standard-basic\" variant=\"outlined\" label={inputs.modelNumber.label} name={inputs.modelNumber.name} onChange={this.props.updateModelCreator}/>\r\n                <TextField id=\"standard-basic\" variant=\"outlined\" label={inputs.height.label} name={inputs.height.name} onChange={this.props.updateModelCreator}/>\r\n                <CompactPicker\r\n                    color={this.state.color}\r\n                    onChange={this.updateColor}\r\n\r\n                />\r\n                <TextField id=\"standard-basic\" variant=\"outlined\" label={inputs.powerPorts.label} name={inputs.powerPorts.name} onChange={this.props.updateModelCreator}/>\r\n                <TextField id=\"standard-basic\" variant=\"outlined\" label={inputs.cpu.label} name={inputs.cpu.name} onChange={this.props.updateModelCreator}/>\r\n                <TextField id=\"standard-basic\" variant=\"outlined\" label={inputs.memory.label} name={inputs.memory.name} onChange={this.props.updateModelCreator}/>\r\n                <TextField id=\"standard-basic\" variant=\"outlined\" label={inputs.storage.label} name={inputs.storage.name} onChange={this.props.updateModelCreator}/>\r\n                <TextField id=\"standard-basic\" variant=\"outlined\" label={inputs.comments.label} name={inputs.comments.name} onChange={this.props.updateModelCreator}/>\r\n                <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    onClick={this.props.createModel}\r\n                >\r\n                    Create\r\n                </Button>\r\n                </Fade>\r\n            </Modal>\r\n        </div>\r\n        );\r\n    }\r\n}\r\n","export enum UserCommand {\r\n    create = 'create/',\r\n    delete = 'delete/',\r\n    edit = 'edit/',\r\n    view = 'view/',\r\n    detailView = 'detailView/',\r\n    search='search/',\r\n}\r\n","export enum UserInput {\r\n    Username='username',\r\n    Password='password',\r\n    Email='email',\r\n    display_name='display_name',\r\n    Privilege='privilege',\r\n}\r\n","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Modal from '@material-ui/core/Modal';\r\n\r\nexport default class UploadModal extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {};\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Modal\r\n                style={{top: `50%`,left: `50%`,transform: `translate(-50%, -50%)`, background:'#AAAAAA'}}\r\n                aria-labelledby=\"simple-modal-title\"\r\n                aria-describedby=\"simple-modal-description\"\r\n                open={this.props.showImportModal}\r\n                onClose={this.props.closeImportModal}\r\n            >\r\n                <div>\r\n                    <div>\r\n                    <input\r\n                        type='file'\r\n                        accept=\".csv\"\r\n                        onChange={this.props.chooseFile}\r\n                    />\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        onClick={this.props.uploadFile}\r\n                    >\r\n                        Upload\r\n                    </Button>\r\n                    </div>\r\n                    <p\r\n                        style={{color: `white`}}\r\n                    >\r\n                        {this.props.textDescription}\r\n                    </p>\r\n                </div>\r\n            </Modal>\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nexport default class TableView extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n\r\n    };\r\n  }\r\n\r\n  showDetailedView(event) {\r\n    this.props.showDetailedView(event.target.id);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <TableContainer component={Paper}>\r\n          <Table style={{minWidth: 650}} aria-label=\"simple table\">\r\n            <TableHead>\r\n              <TableRow >\r\n                {this.props.columns.map(col => (<TableCell><span id={col}>{col}</span></TableCell>))}\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {this.props.vals.map((row, index)=> (\r\n              <TableRow>\r\n                {this.props.keys.map(key => (<TableCell scope=\"row\"><span id={index} onClick={this.showDetailedView.bind(this)}>{row[key]}</span></TableCell>))}\r\n              </TableRow>\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","\r\n\r\n\r\nexport const GENERAL_MODEL_ERROR =  \"There was an error in the backend. Could not perform the given model operation at this time.\";\r\n","import React from 'react';\r\nimport axios from 'axios';\r\nimport { CSVLink } from \"react-csv\";\r\n\r\nimport { ModelCommand } from '../enums/ModelCommands.ts'\r\nimport { ModelInput } from '../enums/ModelInputs.ts'\r\n\r\nimport ButtonsModel from '../helpers/ButtonsModel';\r\nimport FilterModel from '../helpers/FilterModel';\r\nimport DetailModel from '../helpers/DetailModel';\r\nimport CreateModel from '../helpers/CreateModel';\r\n\r\nimport { Privilege } from '../../enums/privilegeTypes.ts'\r\n\r\nimport UploadModal from '../../helpers/UploadModal';\r\nimport getURL from '../../helpers/functions/GetURL';\r\nimport TableView from '../../helpers/TableView';\r\nimport { Typography } from '@material-ui/core';\r\n\r\nimport * as ModelConstants from \"../ModelConstants\";\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nconst columns = [\r\n    'Vendor',\r\n    'Model Number',\r\n    'Height',\r\n]\r\n\r\nconst modelsMainPath = 'models/';\r\nconst modelDownloadFileName = 'models.csv';\r\n\r\nexport default class ModelsView extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            // modals\r\n            showCreateModal: false,\r\n            showImportModal: false,\r\n\r\n            // table items\r\n            items: [],\r\n\r\n            // vals for creating a new model\r\n            createdModel : {\r\n                'vendor':'',\r\n                'model_number':'',\r\n                'height':'',\r\n                'display_color':'',\r\n                'ethernet_ports':'',\r\n                'power_ports':'',\r\n                'cpu':'',\r\n                'memory':'',\r\n                'storage':'',\r\n                'comment':'',\r\n            },\r\n            createdVendor:'',\r\n            createdModelNum:'',\r\n            createdHeight:'',\r\n            createdDispClr:'',\r\n            createdEthPorts:'',\r\n            createdPwrPorts:'',\r\n            createdCPU:'',\r\n            createdMem:'',\r\n            createdStorage:'',\r\n            createdComments:'',\r\n\r\n            // vals for deleting a model\r\n            deleteVendor:'',\r\n            deleteModel:'',\r\n\r\n            // vals for viewing a model\r\n            viewVendor:'',\r\n            viewModel:'',\r\n\r\n            // searching a model\r\n            searchText:\"\",\r\n            searchVendor:'',\r\n            searchModelNum:'',\r\n            searchHeight:'',\r\n\r\n            // csv data\r\n            csvData:'',\r\n            importedFile:null,\r\n\r\n            // detailed view\r\n            showDetailedView: false,\r\n            detailViewLoading:false,\r\n            detailedValues : {\r\n                'vendor':'',\r\n                'model_number':'',\r\n                'height':'',\r\n                'display_color':'',\r\n                'ethernet_ports':'',\r\n                'power_ports':'',\r\n                'cpu':'',\r\n                'memory':'',\r\n                'storage':'',\r\n                'comment':'',\r\n            },\r\n            originalVendor:'',\r\n            originalModelNumber:'',\r\n            originalHeight:'',\r\n\r\n            statusOpen:false,\r\n            statusSeverity:'',\r\n            statusMessage:'',\r\n            detailStatusOpen:false,\r\n            detailStatusSeverity:'',\r\n            detailStatusMessage:'',\r\n            createStatusOpen:false,\r\n            createStatusSeverity:'',\r\n            createStatusMessage:'',\r\n\r\n            vendorsList:[],\r\n            madeVendorQuery:false,\r\n\r\n        };\r\n\r\n        axios.defaults.headers.common['token'] = this.props.token;\r\n        axios.defaults.headers.common['privilege'] = this.props.privilege;\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.searchModels();\r\n        this.getVendorList();\r\n    }\r\n\r\n    createModel = () => {\r\n        axios.post(\r\n            getURL(modelsMainPath, ModelCommand.create),\r\n            {\r\n                'vendor':this.state.createdModel[ModelInput.Vendor],\r\n                'model_number':this.state.createdModel[ModelInput.model_number],\r\n                'height':this.state.createdModel[ModelInput.Height],\r\n                'display_color':this.state.createdModel[ModelInput.display_color],\r\n                'ethernet_ports':this.state.createdModel[ModelInput.ethernet_ports],\r\n                'power_ports':this.state.createdModel[ModelInput.power_ports],\r\n                'cpu':this.state.createdModel[ModelInput.CPU],\r\n                'memory':this.state.createdModel[ModelInput.Memory],\r\n                'storage':this.state.createdModel[ModelInput.Storage],\r\n                'comment':this.state.createdModel[ModelInput.Comment],\r\n            }\r\n            ).then(\r\n                response => {\r\n                    if (response.data.message === 'success') {\r\n                        this.setState({\r\n                            showStatus: true,\r\n                            statusMessage: \"Successfully created model\",\r\n                            statusSeverity:\"success\",\r\n                            createdModel : {\r\n                                'vendor':'',\r\n                                'model_number':'',\r\n                                'height':'',\r\n                                'display_color':'',\r\n                                'ethernet_ports':'',\r\n                                'power_ports':'',\r\n                                'cpu':'',\r\n                                'memory':'',\r\n                                'storage':'',\r\n                                'comment':'',\r\n                            },\r\n                            showCreateModal:false,\r\n                        });\r\n                        this.getVendorList();\r\n                        this.searchModels();\r\n                    } else {\r\n                        this.setState({ createStatusOpen: true, createStatusMessage: response.data.message, createStatusSeverity:\"error\" })\r\n                    }\r\n                }).catch(\r\n                    this.setState({ createStatusOpen: true, createStatusMessage: ModelConstants.GENERAL_MODEL_ERROR, createStatusSeverity:\"error\" })\r\n                );\r\n    }\r\n\r\n    editModel = () => {\r\n        axios.post(\r\n            getURL(modelsMainPath, ModelCommand.edit),\r\n            {\r\n                'vendorOriginal':this.state.originalVendor,\r\n                'model_numberOriginal':this.state.originalModelNumber,\r\n                'heightOriginal':this.state.originalHeight,\r\n\r\n                'vendor':this.state.detailedValues[ModelInput.Vendor],\r\n                'model_number':this.state.detailedValues[ModelInput.model_number],\r\n                'height':this.state.detailedValues[ModelInput.Height],\r\n                'display_color':this.state.detailedValues[ModelInput.display_color],\r\n                'ethernet_ports':this.state.detailedValues[ModelInput.ethernet_ports],\r\n                'power_ports':this.state.detailedValues[ModelInput.power_ports],\r\n                'cpu':this.state.detailedValues[ModelInput.CPU],\r\n                'memory':this.state.detailedValues[ModelInput.Memory],\r\n                'storage':this.state.detailedValues[ModelInput.Storage],\r\n                'comment':this.state.detailedValues[ModelInput.Comment],\r\n            }\r\n            ).then(\r\n                response => {\r\n                    if (response.data.message === 'success') {\r\n                        this.setState({\r\n                            showStatus: true,\r\n                            statusSeverity:'success',\r\n                            statusMessage: \"Successfully edited model\",\r\n                            originalVendor:'',\r\n                            originalModelNumber:'',\r\n                            originalHeight:'',\r\n                            detailedValues : {\r\n                                'vendor':'',\r\n                                'model_number':'',\r\n                                'height':'',\r\n                                'display_color':'',\r\n                                'ethernet_ports':'',\r\n                                'power_ports':'',\r\n                                'cpu':'',\r\n                                'memory':'',\r\n                                'storage':'',\r\n                                'comment':'',\r\n                            },\r\n                            showDetailedView:false\r\n                        });\r\n                        this.getVendorList();\r\n                        this.searchModels();\r\n                    } else {\r\n                        this.setState({ detailStatusOpen: true, detailStatusMessage: response.data.message, detailStatusSeverity:\"error\" })\r\n                    }\r\n                }).catch(\r\n                    this.setState({ detailStatusOpen: true, detailStatusMessage: ModelConstants.GENERAL_MODEL_ERROR, detailStatusSeverity:\"error\" })\r\n                );\r\n    }\r\n\r\n\r\n    deleteModel = () => {\r\n        axios.post(\r\n            getURL(modelsMainPath, ModelCommand.delete),\r\n            {\r\n                'vendor':this.state.originalVendor,\r\n                'model_number':this.state.originalModelNumber,\r\n            }\r\n            ).then(\r\n                response => {\r\n                    if (response.data.message === 'success') {\r\n                        this.setState({\r\n                            showStatus: true,\r\n                            statusSeverity:'success',\r\n                            statusMessage: \"Successfully deleted model\",\r\n                            detailedValues : {\r\n                                'vendor':'',\r\n                                'model_number':'',\r\n                                'height':'',\r\n                                'display_color':'',\r\n                                'ethernet_ports':'',\r\n                                'power_ports':'',\r\n                                'cpu':'',\r\n                                'memory':'',\r\n                                'storage':'',\r\n                                'comment':'',\r\n                            },\r\n                            showDetailedView:false\r\n                        });\r\n                        this.getVendorList();\r\n                        this.searchModels();\r\n                    } else {\r\n                        this.setState({ showStatus: true, statusMessage: response.data.message, statusSeverity:\"error\" })\r\n                    }\r\n                }).catch(\r\n                    this.setState({ showStatus: true, statusMessage: ModelConstants.GENERAL_MODEL_ERROR, statusSeverity:\"error\" })\r\n                );\r\n    }\r\n\r\n    detailViewModel = (vendor, modelNum) => {\r\n        axios.post(\r\n            getURL(modelsMainPath, ModelCommand.detailView),\r\n            {\r\n                'vendor':vendor,\r\n                'model_number':modelNum,\r\n            }\r\n            ).then(response => {\r\n                this.setState({ detailedValues: response.data['models'][0], detailViewLoading:false});\r\n            }\r\n            ).catch(function(error) {\r\n                console.log(error);\r\n                this.setState({ showStatus: true, statusMessage: ModelConstants.GENERAL_MODEL_ERROR, statusSeverity:\"error\" });\r\n            });\r\n\r\n        this.setState({\r\n            viewVendor:'',\r\n            viewModel:'',\r\n        });\r\n    }\r\n\r\n    searchModels = () => {\r\n        axios.post(\r\n            getURL(modelsMainPath, ModelCommand.search),\r\n            {\r\n                'filter': {\r\n                    'vendor':this.state.searchVendor,\r\n                    'model_number':this.state.searchModelNum,\r\n                    'height':this.state.searchHeight,\r\n                }\r\n            }\r\n            ).then(response => {\r\n                const models = response.data['models'] === undefined ? [] : response.data['models'];\r\n                console.log(models);\r\n                this.setState({ items: models })\r\n            });\r\n\r\n        this.setState({\r\n            searchText:'',\r\n        });\r\n    }\r\n\r\n    getVendorList = () => {\r\n        axios.get(\r\n            getURL(modelsMainPath, ModelCommand.VENDOR_VALUES), {}\r\n            ).then(response => this.setState({ vendorsList: response.data.results }));\r\n\r\n        this.setState({ madeVendorQuery: true });\r\n    }\r\n\r\n    sendUploadedFile = (data) => {\r\n        axios.post(\r\n            getURL(modelsMainPath, ModelCommand.UPLOAD_FILE), data\r\n            ).then(response => {\r\n                if (response.data.message === 'success') {\r\n                    this.setState({ showStatus: true, statusMessage: response.data.summary, statusSeverity:'success', showImportModal: false,})\r\n                    this.searchModels();\r\n                } else {\r\n                    this.setState({ showStatus: true, statusMessage: response.data.message, statusSeverity:\"error\" })\r\n                }\r\n            });\r\n    }\r\n\r\n    downloadTable = () => {\r\n        axios.post(\r\n            getURL(modelsMainPath, ModelCommand.EXPORT_FILE),\r\n            {\r\n                'filter':{\r\n                    'vendor':this.state.searchVendor,\r\n                    'model_number':this.state.searchModelNum,\r\n                    'height':this.state.searchHeight,\r\n                }\r\n            }\r\n            ).then(response => {\r\n                this.setState({ csvData: response.data.csvData });\r\n                this.csvLink.link.click();\r\n            });\r\n    }\r\n\r\n    search = (filters) => {\r\n        this.setState({ searchVendor: filters['vendor'], searchModelNum: filters['model_number'], searchHeight: filters['height']}, this.searchModels);\r\n    }\r\n\r\n    openCreateModal = () => {\r\n        this.setState({showCreateModal: true});\r\n    }\r\n\r\n    openImportModal = () => {\r\n        this.setState({showImportModal: true});\r\n    }\r\n\r\n    showDetailedView = (id) => {\r\n        this.setState({\r\n            showDetailedView: true,\r\n            detailViewLoading:true,\r\n\r\n            originalHeight:this.state.items[id]['height'],\r\n            originalModelNumber:this.state.items[id]['model_number'],\r\n            originalVendor:this.state.items[id]['vendor'],\r\n         });\r\n\r\n        var vendor = this.state.items[id]['vendor'];\r\n        var modelNum = this.state.items[id]['model_number'];\r\n\r\n        this.detailViewModel(vendor, modelNum);\r\n    }\r\n\r\n    closeCreateModal = () => {\r\n        this.setState({showCreateModal: false});\r\n    }\r\n\r\n    closeImportModal = () => {\r\n        this.setState({showImportModal: false});\r\n    }\r\n\r\n    closeDetailedView = () => {\r\n        this.setState({ showDetailedView: false })\r\n    }\r\n\r\n    updateModelCreator = (event) => {\r\n        this.state.createdModel[event.target.name] = event.target.value;\r\n        this.forceUpdate();\r\n    }\r\n\r\n    updateModelColor = (color) => {\r\n        console.log(\"updating color to \" + color);\r\n        this.state.createdModel['display_color'] = color;\r\n        this.forceUpdate();\r\n    }\r\n\r\n    updateModelColorDetails = (color) => {\r\n        console.log(\"updating color to \" + color);\r\n        this.state.detailedValues['display_color'] = color;\r\n        this.forceUpdate();\r\n    }\r\n\r\n    updateModelEdited = (event) => {\r\n        this.state.detailedValues[event.target.name] = event.target.value;\r\n        this.forceUpdate()\r\n    }\r\n\r\n    updateSearchText = (event) => {\r\n        this.setState({ searchText: event.target.value})\r\n    }\r\n\r\n    closeShowStatus = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n        this.setState({ showStatus: false })\r\n    }\r\n\r\n    createStatusClose = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n        this.setState({ createStatusOpen: false })\r\n    }\r\n\r\n    detailStatusClose = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n        this.setState({ detailStatusOpen: false })\r\n    }\r\n\r\n    uploadFile = () => {\r\n        const data = new FormData();\r\n        data.append('file', this.state.importedFile);\r\n        this.sendUploadedFile(data);\r\n    }\r\n\r\n    chooseFile = (event) => {\r\n        this.setState({ importedFile: event.target.files[0] })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Grid\r\n                    container\r\n                    spacing={5}\r\n                    direction=\"row\"\r\n                    justify=\"flex-start\"\r\n                    alignItems=\"center\"\r\n                    style={{margin: \"0px\", maxWidth: \"95vw\"}}\r\n                >\r\n                    <Grid item xs={12}>\r\n                        <Typography variant=\"h4\">\r\n                            Models\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6} md={4} lg={3}>\r\n                        {(this.props.privilege == Privilege.ADMIN) ?\r\n                        (<div>\r\n                            <CreateModel\r\n                                statusOpen={this.state.createStatusOpen}\r\n                                statusSeverity={this.state.createStatusSeverity}\r\n                                statusClose={this.createStatusClose}\r\n                                statusMessage={this.state.createStatusMessage}\r\n                                showCreateModal={this.state.showCreateModal}\r\n                                closeCreateModal={this.closeCreateModal}\r\n                                createModel={this.createModel}\r\n                                updateModelCreator={this.updateModelCreator}\r\n                                options={this.state.vendorsList}\r\n                                useAutocomplete={true}\r\n                                updateModelColor={this.updateModelColor}\r\n                            />\r\n                        </div>) : null}\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6} md={4} lg={3}>\r\n                        <FilterModel\r\n                            updateSearchText={this.updateSearchText}\r\n                            search={this.search}\r\n                            filters={columns}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6} md={4} lg={3}>\r\n                        {(this.props.privilege === Privilege.ADMIN) ?\r\n                        (<div><ButtonsModel\r\n                            openCreateModal={this.openCreateModal}\r\n                            openImportModal={this.openImportModal}\r\n                            downloadTable={this.downloadTable}\r\n                        />\r\n\r\n                        <CSVLink\r\n                            data={this.state.csvData}\r\n                            filename={modelDownloadFileName}\r\n                            className=\"hidden\"\r\n                            ref={(r) => this.csvLink = r}\r\n                            target=\"_blank\"\r\n                        />\r\n\r\n                        <UploadModal\r\n                            showImportModal={this.state.showImportModal}\r\n                            closeImportModal={this.closeImportModal}\r\n                            uploadFile={this.uploadFile}\r\n                            chooseFile={this.chooseFile}\r\n                            textDescription=\"The following format should be used for each row: vendor,model_number,height,display_color,ethernet_ports,power_ports,cpu,memory,storage,comment\"\r\n                        /></div>):null\r\n                        }\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <TableView\r\n                            columns={columns}\r\n                            vals={this.state.items}\r\n                            keys={columns}\r\n                            showDetailedView={this.showDetailedView}\r\n                            filters={columns}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <DetailModel\r\n                            statusOpen={this.state.detailStatusOpen}\r\n                            statusSeverity={this.state.detailStatusSeverity}\r\n                            statusClose={this.detailStatusClose}\r\n                            statusMessage={this.state.detailStatusMessage}\r\n\r\n                            showDetailedView={this.state.showDetailedView}\r\n                            closeDetailedView={this.closeDetailedView}\r\n                            updateModelEdited={this.updateModelEdited}\r\n                            defaultValues={this.state.detailedValues}\r\n                            loading={this.state.detailViewLoading}\r\n                            edit={this.editModel}\r\n                            delete={this.deleteModel}\r\n                            disabled={this.props.privilege===Privilege.USER}\r\n                            options={this.state.vendorsList}\r\n                            useAutocomplete={true}\r\n                            updateModelColorDetails={this.updateModelColorDetails}\r\n                        />\r\n                    </Grid>\r\n                </Grid>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","export enum AssetCommand {\r\n    create = 'create/',\r\n    delete = 'delete/',\r\n    edit = 'edit/',\r\n    view = 'view/',\r\n    detailView = 'detailView/',\r\n    search = 'search/',\r\n    GET_ALL_MODELS = 'assistedmodel/',\r\n    GET_ALL_OWNERS = 'assistedowner/',\r\n    GET_ALL_DATACENTERS = 'assisteddatacenter/',\r\n    GET_ALL_HOSTNAME = 'assistedhostname/',\r\n    UPLOAD_FILE = 'import/',\r\n    EXPORT_FILE = 'export/',\r\n    GET_NEXT_ASSET_NUM = 'nextAssetNumber/',\r\n}\r\n","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\r\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\r\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nexport default class Filters extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            filters:{},\r\n        };\r\n    }\r\n\r\n    updateSearchText(event) {\r\n        if (this.state.filters.hasOwnProperty(event.target.id)) {\r\n            this.state.filters[event.target.id] = event.target.value;\r\n            this.forceUpdate();\r\n        } else {\r\n            this.state.filters[event.target.id] = event.target.value;\r\n            this.forceUpdate();\r\n        }\r\n    }\r\n\r\n    search() {\r\n        this.props.search(this.state.filters);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <ExpansionPanel>\r\n                    <ExpansionPanelSummary\r\n                        expandIcon={<ExpandMoreIcon />}\r\n                    >\r\n                        <Typography>Filter</Typography>\r\n                    </ExpansionPanelSummary>\r\n                    <ExpansionPanelDetails>\r\n                        <Grid\r\n                            container\r\n                            spacing={1}\r\n                            direction=\"row\"\r\n                            justify=\"flex-start\"\r\n                            alignItems=\"center\"\r\n                        >\r\n                            <Grid item xs={6}>\r\n                                <TextField\r\n                                    id={\"username\"}\r\n                                    inputProps={{ 'aria-label': 'search' }}\r\n                                    variant=\"outlined\"\r\n                                    label=\"Username\"\r\n                                    placeholder={\"Username\"}\r\n                                    name=\"username\"\r\n                                    onChange={this.updateSearchText.bind(this)}\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={6}>\r\n                                <TextField id=\"standard-basic\" variant=\"outlined\" label=\"Display Name\" name=\"display_name\" onChange={this.props.updateModelCreator}/>\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                                <TextField\r\n                                    id=\"standard-basic\"\r\n                                    variant=\"outlined\"\r\n                                    label=\"Email\"\r\n                                    name=\"email\"\r\n                                    onChange={this.props.updateModelCreator}\r\n                                    style={{\"width\": \"100%\"}}\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={6}>\r\n                                <FormControl\r\n                                    style={{\"minWidth\": \"200px\"}}\r\n                                >\r\n                                    <InputLabel id=\"privilege-select\">Privilege</InputLabel>\r\n                                    <Select\r\n                                        id=\"privilege-select\"\r\n                                        onChange={this.props.updateModelCreator}>\r\n                                        <MenuItem value=\"admin\">Administrator</MenuItem>\r\n                                        <MenuItem value=\"user\">User</MenuItem>\r\n                                    </Select>\r\n                                </FormControl>\r\n                            </Grid>\r\n                            <Grid\r\n                                container\r\n                                item\r\n                                direction=\"column\"\r\n                                justify=\"center\"\r\n                                alignItems=\"center\"\r\n                                xs={12}\r\n                            >\r\n                                <Button\r\n                                    variant=\"contained\"\r\n                                    color=\"primary\"\r\n                                    onClick={this.search.bind(this)}\r\n                                    style={{\"width\": \"100%\", \"marginTop\": \"20px\"}}\r\n                                >\r\n                                    Search\r\n                                </Button>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </ExpansionPanelDetails>\r\n                </ExpansionPanel>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from '@material-ui/core/Button';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\r\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\r\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport StatusDisplay from '../../helpers/StatusDisplay';\r\n\r\nexport default class DetailedView extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            showConfirmationBox:false,\r\n        };\r\n\r\n        this.closeModal = this.closeModal.bind(this);\r\n        this.confirmDelete = this.confirmDelete.bind(this);\r\n        this.deleteItem = this.deleteItem.bind(this);\r\n    }\r\n\r\n    confirmDelete() {\r\n        this.setState({ showConfirmationBox: true });\r\n    }\r\n\r\n    closeModal() {\r\n        this.setState({showConfirmationBox:false,});\r\n    }\r\n\r\n    deleteItem() {\r\n        this.setState({ showConfirmationBox: false });\r\n        this.props.delete();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n        <div>\r\n            {!this.props.showDetailedView ? null:\r\n            <ExpansionPanel >\r\n                    <ExpansionPanelSummary\r\n                        expandIcon={<ExpandMoreIcon />}\r\n                    >\r\n                        <Typography>Create</Typography>\r\n                    </ExpansionPanelSummary>\r\n                    <ExpansionPanelDetails>\r\n                        <StatusDisplay\r\n                            open={this.props.statusOpen}\r\n                            severity={this.props.statusSeverity}\r\n                            closeStatus={this.props.statusClose}\r\n                            message={this.props.statusMessage}\r\n                        />\r\n                    {\r\n                this.props.loading ? <CircularProgress /> :\r\n                <div>\r\n                    {this.props.inputs.map(input => (\r\n                        <TextField name={input} disabled={this.props.disabled} id=\"standard-basic\" label={input} onChange={this.props.updateModelEdited} defaultValue={this.props.defaultValues[input]}/>\r\n                    ))}\r\n                    {this.props.disabled ? null:\r\n                    <div>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            onClick={this.props.edit}\r\n                            disabled={this.state.showConfirmationBox}\r\n                        >\r\n                            Save\r\n                        </Button>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            onClick={this.confirmDelete}\r\n                            disabled={this.state.showConfirmationBox}\r\n                        >\r\n                            Delete\r\n                        </Button>\r\n                    </div>}\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            onClick={this.props.closeDetailedView}\r\n                            disabled={this.state.showConfirmationBox}\r\n                        >\r\n                            Close\r\n                        </Button>\r\n\r\n                    {this.state.showConfirmationBox ? <div>\r\n                        Are you sure you wish to delete?\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            onClick={this.deleteItem}\r\n                        >\r\n                            Yes\r\n                        </Button>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            onClick={this.closeModal}\r\n                        >\r\n                            No\r\n                        </Button>\r\n                    </div>:null}\r\n                </div>}\r\n                    </ExpansionPanelDetails>\r\n                </ExpansionPanel>}\r\n        </div>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from '@material-ui/core/Button';\r\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\r\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\r\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport '../../../stylesheets/Models.css';\r\n\r\nexport default class CreateModal extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {};\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <ExpansionPanel>\r\n                    <ExpansionPanelSummary\r\n                        expandIcon={<ExpandMoreIcon />}\r\n                    >\r\n                        <Typography>Create User</Typography>\r\n                    </ExpansionPanelSummary>\r\n                    <ExpansionPanelDetails>\r\n                        <Grid\r\n                            container\r\n                            spacing={1}\r\n                            direction=\"row\"\r\n                            justify=\"flex-start\"\r\n                            alignItems=\"center\"\r\n                        >\r\n                            <Grid item xs={6}>\r\n                                <TextField id=\"standard-basic\" variant=\"outlined\" label=\"Username\" name=\"username\" onChange={this.props.updateModelCreator}/>\r\n                            </Grid>\r\n                            <Grid item xs={6}>\r\n                                <TextField id=\"standard-basic\" variant=\"outlined\" label=\"Display Name\" name=\"display_name\" onChange={this.props.updateModelCreator}/>\r\n                            </Grid>\r\n                            <Grid item xs={6}>\r\n                                <TextField id=\"standard-basic\" variant=\"outlined\" label=\"Password\" name=\"password\" type=\"password\" onChange={this.props.updateModelCreator}/>\r\n                            </Grid>\r\n                            <Grid item xs={6}>\r\n                                <TextField id=\"standard-basic\" variant=\"outlined\" label=\"Email\" name=\"email\" type=\"email\" onChange={this.props.updateModelCreator}/>\r\n                            </Grid>\r\n                            <Grid item xs={6}>\r\n                                <FormControl\r\n                                    style={{\"minWidth\": \"200px\"}}\r\n                                    gutterbottom=\"true\"\r\n                                >\r\n                                    <InputLabel id=\"privilege-select\">Privilege</InputLabel>\r\n                                    <Select\r\n                                        id=\"privilege-select\"\r\n                                        onChange={this.props.updateModelCreator}>\r\n                                        <MenuItem value=\"admin\">Administrator</MenuItem>\r\n                                        <MenuItem value=\"user\">User</MenuItem>\r\n                                    </Select>\r\n                                </FormControl>\r\n                            </Grid>\r\n                            <Grid\r\n                                container\r\n                                item\r\n                                direction=\"column\"\r\n                                justify=\"center\"\r\n                                alignItems=\"center\"\r\n                                xs={12}\r\n                            >\r\n                                <Button\r\n                                    variant=\"contained\"\r\n                                    onClick={this.props.createModel}\r\n                                    style={{\r\n                                        \"width\": \"100%\",\r\n                                        \"marginTop\": \"20px\",\r\n                                        \"backgroundColor\": \"green\",\r\n                                        \"color\": \"white\"\r\n                                    }}\r\n                                >\r\n                                    Create\r\n                                </Button>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </ExpansionPanelDetails>\r\n                </ExpansionPanel>\r\n        );\r\n    }\r\n}\r\n","\r\n\r\nexport const GENERAL_USER_ERROR =  \"There was an error in the backend. Could not perform the given user operation at this time.\";\r\n","import React from 'react';\r\nimport axios from 'axios';\r\n\r\nimport { UserCommand } from '../enums/UserCommands.ts'\r\nimport { UserInput } from '../enums/UserInputs.ts'\r\n\r\nimport FilterUser from '../helpers/FilterUser';\r\nimport DetailUser from '../helpers/DetailUser';\r\nimport CreateUser from '../helpers/CreateUser';\r\n\r\nimport getURL from '../../helpers/functions/GetURL';\r\nimport TableView from '../../helpers/TableView';\r\nimport StatusDisplay from '../../helpers/StatusDisplay';\r\n\r\nimport { Privilege } from '../../enums/privilegeTypes.ts'\r\n\r\nimport { Typography } from '@material-ui/core';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport * as UserConstants from \"../UserConstants\";\r\n\r\nconst inputs = [\r\n    'username',\r\n    'email',\r\n    'display_name',\r\n    'privilege',\r\n    'password',\r\n]\r\n\r\nconst columns = [\r\n    'Username',\r\n    'Email',\r\n    'Display Name',\r\n    'Privilege',\r\n]\r\n\r\nconst usersMainPath = 'users/';\r\n\r\nexport default class UsersView extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n\r\n            // modals\r\n            showCreateModal:false,\r\n            showImportModal:false,\r\n\r\n            // table items\r\n            items:[], //Constants.testUserArray,\r\n\r\n            // vals for creating a new user\r\n            createdUser : {\r\n                'username':'',\r\n                'password':'',\r\n                'display_name':'',\r\n                'email':'',\r\n                'privilege':'',\r\n            },\r\n\r\n            statusOpen:false,\r\n            statusSeverity:'',\r\n            statusMessage:'',\r\n            detailStatusOpen:false,\r\n            detailStatusSeverity:'',\r\n            detailStatusMessage:'',\r\n            createStatusOpen:false,\r\n            createStatusSeverity:'',\r\n            createStatusMessage:'',\r\n\r\n            searchUsernm:'',\r\n            searchEml:'',\r\n            searchDspNm:'',\r\n            searchPriv:'',\r\n\r\n            // vals for deleting a user\r\n            deleteUsername:'',\r\n\r\n            // vals for viewing a user\r\n            viewUser:'',\r\n\r\n            // csv data\r\n            csvData:[],\r\n\r\n            // detailed view\r\n            showDetailedView: false,\r\n            detailViewLoading:false,\r\n            detailedValues : {\r\n                'username':'',\r\n                'display_name':'',\r\n                'email':'',\r\n                'privilege':'',\r\n            },\r\n            originalUsername:'',\r\n\r\n            initialized:false,\r\n        };\r\n\r\n        axios.defaults.headers.common['token'] = this.props.token;\r\n        axios.defaults.headers.common['privilege'] = this.props.privilege;\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.searchUsers();\r\n    }\r\n\r\n    createUser = () => {\r\n        axios.post(\r\n            getURL(usersMainPath, UserCommand.create),\r\n            {\r\n                'username':this.state.createdUser[UserInput.Username],\r\n                'password':this.state.createdUser[UserInput.Password],\r\n                'display_name':this.state.createdUser[UserInput.display_name],\r\n                'email':this.state.createdUser[UserInput.Email],\r\n                'privilege':this.state.createdUser[UserInput.Privilege],\r\n            }\r\n            ).then(response => {\r\n                if (response.data.message === 'success') {\r\n                    this.setState({\r\n                        createStatusOpen: true,\r\n                        createStatusMessage: \"Successfully created user\",\r\n                        createStatusSeverity:\"success\",\r\n                        createdUser : {\r\n                            'username':'',\r\n                            'password':'',\r\n                            'display_name':'',\r\n                            'email':'',\r\n                            'privilege':'',\r\n                        },\r\n                        showCreateModal:false,\r\n                    });\r\n                    this.searchUsers();\r\n                } else {\r\n                    this.setState({ createStatusOpen: true, createStatusMessage: response.data.message, createStatusSeverity:\"error\" })\r\n                }\r\n            }).catch(\r\n                this.setState({ createStatusOpen: true, createStatusMessage: UserConstants.GENERAL_USER_ERROR, createStatusSeverity:\"error\" })\r\n            );\r\n    }\r\n\r\n    editUser = () => {\r\n        axios.post(\r\n            getURL(usersMainPath, UserCommand.edit),\r\n            {\r\n                'username_original':this.state.originalUsername,\r\n                'username':this.state.detailedValues[UserInput.Username],\r\n                'display_name':this.state.detailedValues[UserInput.display_name],\r\n                'email':this.state.detailedValues[UserInput.Email],\r\n                'privilege':this.state.detailedValues[UserInput.Privilege],\r\n            }\r\n            ).then(response => {\r\n                if (response.data.message === 'success') {\r\n                    this.setState({\r\n                        detailStatusOpen: true,\r\n                        detailStatusMessage: \"Successfully edited user\",\r\n                        detailStatusSeverity:\"success\",\r\n                        originalUsername:'',\r\n                        detailedValues : {\r\n                            'username':'',\r\n                            'display_name':'',\r\n                            'email':'',\r\n                            'privilege':'',\r\n                        },\r\n                        showDetailedView:false,\r\n                    });\r\n                    this.searchUsers();\r\n                } else {\r\n                    this.setState({ detailStatusOpen: true, detailStatusMessage: response.data.message, detailStatusSeverity:\"error\" })\r\n                }\r\n            }).catch(\r\n                this.setState({ detailStatusOpen: true, detailStatusMessage: UserConstants.GENERAL_USER_ERROR, detailStatusSeverity:\"error\" })\r\n            );\r\n    }\r\n\r\n\r\n    deleteUser = () => {\r\n        axios.post(\r\n            getURL(usersMainPath, UserCommand.delete),\r\n            {\r\n                'username':this.state.originalUsername,\r\n            }\r\n            ).then(response => {\r\n                if (response.data.message === 'success') {\r\n                    this.setState({\r\n                        statusOpen: true,\r\n                        statusMessage: \"Successfully deleted user\",\r\n                        statusSeverity:\"success\",\r\n                        deleteUsername:'',\r\n                        showDetailedView:false,\r\n                    });\r\n                    this.searchUsers();\r\n                } else {\r\n                    this.setState({ showStatus: true, statusMessage: response.data.message, statusSeverity:\"error\" })\r\n                }\r\n            }).catch(\r\n                this.setState({ showStatus: true, statusMessage: UserConstants.GENERAL_USER_ERROR, statusSeverity:\"error\" })\r\n            );\r\n    }\r\n\r\n    detailViewUser = (username) => {\r\n        axios.post(\r\n            getURL(usersMainPath, UserCommand.detailView),\r\n            {\r\n                'username':username,\r\n            }\r\n            ).then(response => this.setState({ detailedValues: response.data['user'], detailViewLoading:false})\r\n            ).catch(\r\n                this.setState({ showStatus: true, statusMessage: UserConstants.GENERAL_USER_ERROR, statusSeverity:\"error\" })\r\n            );\r\n\r\n        this.setState({\r\n            viewUser:'',\r\n        });\r\n    }\r\n\r\n    searchUsers = () => {\r\n        axios.post(\r\n            getURL(usersMainPath, UserCommand.search),\r\n            {\r\n                'filter':{\r\n                    'username':this.state.searchUsernm,\r\n                    'email':this.state.searchEml,\r\n                    'display_name':this.state.searchDspNm,\r\n                    'privilege':this.state.searchPriv,\r\n                }\r\n            }\r\n            ).then(response => this.setState({ items: (response.data['users']===null) ? [] : response.data['users'] }));\r\n\r\n        this.setState({ initialized: true})\r\n    }\r\n\r\n    search = (filters) => {\r\n        this.setState({\r\n            searchUsernm:filters['username'],\r\n            searchEml:filters['email'],\r\n            searchDspNm: filters['display_name'],\r\n            searchPriv:filters['privilege'],\r\n        }, this.searchUsers);\r\n    }\r\n\r\n    downloadTable = () => {\r\n        this.csvLink.link.click();\r\n    }\r\n\r\n    openCreateModal = () => {\r\n        this.setState({showCreateModal: true});\r\n    }\r\n\r\n    openImportModal = () => {\r\n        this.setState({showImportModal: true});\r\n    }\r\n\r\n    showDetailedView = (id) => {\r\n        this.setState({\r\n            showDetailedView: true,\r\n            detailViewLoading:true,\r\n            originalUsername:this.state.items[id]['username'],\r\n         });\r\n\r\n        var username = this.state.items[id]['username'];\r\n\r\n        this.detailViewUser(username);\r\n        //this.setState({ detailedValues: Constants.testUserArray[id], detailViewLoading:false})\r\n    }\r\n\r\n    closeCreateModal = () => {\r\n        this.setState({showCreateModal: false});\r\n    }\r\n\r\n    closeImportModal = () => {\r\n        this.setState({showImportModal: false});\r\n    }\r\n\r\n    closeDetailedView = () => {\r\n        this.setState({ showDetailedView: false })\r\n    }\r\n\r\n    updateUserCreator = (event) => {\r\n        const newUser = this.state.createdUser;\r\n        newUser[event.target.name] = event.target.value;\r\n        this.setState({ createdUser: newUser });\r\n        this.forceUpdate();\r\n    }\r\n\r\n    updateUserEdited = (event) => {\r\n        const newDetails = this.state.detailedValues;\r\n        newDetails[event.target.name] = event.target.value;\r\n        this.setState({ detailedValues: newDetails });\r\n        this.forceUpdate()\r\n    }\r\n\r\n    closeShowStatus = () => {\r\n        this.setState({ showStatus: false })\r\n    }\r\n\r\n    createStatusClose = () => {\r\n        this.setState({ createStatusOpen: false })\r\n    }\r\n\r\n    detailStatusClose = () => {\r\n        this.setState({ detailStatusOpen: false })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <StatusDisplay\r\n                    open={this.state.showStatus}\r\n                    severity={this.state.statusSeverity}\r\n                    closeStatus={this.closeShowStatus}\r\n                    message={this.state.statusMessage}\r\n                />\r\n                <Grid\r\n                    container\r\n                    spacing={5}\r\n                    direction=\"row\"\r\n                    justify=\"flex-start\"\r\n                    alignItems=\"center\"\r\n                    style={{margin: \"0px\", maxWidth: \"95vw\"}}\r\n                >\r\n                    <Grid item xs={12}>\r\n                        <Typography variant=\"h4\">\r\n                            Users\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6} md={4} lg={3}>\r\n                        {(this.props.privilege === Privilege.ADMIN) ?\r\n                        (<div>\r\n                            <CreateUser\r\n                                showCreateModal={this.state.showCreateModal}\r\n                                closeCreateModal={this.closeCreateModal}\r\n                                createModel={this.createUser}\r\n                                updateModelCreator={this.updateUserCreator}\r\n                                inputs={inputs}\r\n                                options={[]}\r\n                                useAutocomplete={false}\r\n                            />\r\n                        </div>) : null}\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6} md={4} lg={3}>\r\n                        <FilterUser\r\n                            updateSearchText={this.updateSearchText}\r\n                            search={this.search}\r\n                            filters={columns}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <TableView\r\n                            columns={columns}\r\n                            vals={this.state.items}\r\n                            keys={columns}\r\n                            showDetailedView={this.showDetailedView}\r\n                            filters={columns}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <DetailUser\r\n                            showDetailedView={this.state.showDetailedView}\r\n                            closeDetailedView={this.closeDetailedView}\r\n                            inputs={columns}\r\n                            updateModelEdited={this.updateUserEdited}\r\n                            defaultValues={this.state.detailedValues}\r\n                            loading={this.state.detailViewLoading}\r\n                            edit={this.editUser}\r\n                            delete={this.deleteUser}\r\n                            disabled={this.props.privilege === Privilege.USER}\r\n                        />\r\n                    </Grid>\r\n                </Grid>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","\r\n\r\n\r\nexport const GENERAL_ASSET_ERROR =  \"There was an error in the backend. Could not perform the given asset operation at this time.\";\r\n\r\n\r\nexport const ASSETS_MAIN_PATH = 'instances/';\r\nexport const ASSET_DOWNLOAD_FILE_NAME = 'assets.csv';\r\nexport const SUCCESS_TOKEN = \"success\";\r\nexport const ERROR_TOKEN = \"error\";\r\n","export enum AssetInput {\r\n    MODEL = 'model',\r\n    HOSTNAME = 'hostname',\r\n    RACK = 'rack',\r\n    RACK_U = 'rack_position',\r\n    RACK_ORIGINAL = 'rackOriginal',\r\n    RACK_U_ORIGINAL = 'rack_positionOriginal',\r\n    OWNER = 'owner',\r\n    COMMENT = 'comment',\r\n    DATACENTER = 'datacenter_id',\r\n    TAGS = 'tags',\r\n    MAC_ADDRESS = 'mac_address',\r\n    NETWORK_CONNECTIONS = 'network_connections',\r\n    POWER_CONNECTIONS = 'power_connections',\r\n    ASSET_NUMBER = 'asset_number',\r\n}\r\n","import React from 'react';\r\n\r\nimport axios from 'axios';\r\nimport { CSVLink } from \"react-csv\";\r\n\r\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\r\nimport CloudDownloadIcon from '@material-ui/icons/CloudDownload';\r\nimport Button from '@material-ui/core/Button';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport Fade from '@material-ui/core/Fade';\r\n\r\nimport { AssetCommand } from '../enums/AssetCommands.ts'\r\nimport getURL from '../../helpers/functions/GetURL';\r\nimport * as AssetConstants from \"../AssetConstants\";\r\n\r\nconst useStyles = theme => ({\r\n    modal: {\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n    },\r\n    paper: {\r\n      backgroundColor: theme.palette.background.paper,\r\n      border: '2px solid #000',\r\n      boxShadow: theme.shadows[5],\r\n      padding: theme.spacing(2, 4, 3),\r\n    },\r\n    button: {\r\n        margin: theme.spacing(2, 4, 3),\r\n    }\r\n  });\r\n\r\nclass ImpExpAsset extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            csvData:'',\r\n            importedFile:null,\r\n\r\n            showImport:false,\r\n        };\r\n    }\r\n\r\n    sendUploadedFile = (data) => {\r\n        axios.post(\r\n            getURL(AssetConstants.ASSETS_MAIN_PATH, AssetCommand.UPLOAD_FILE), data\r\n            ).then(response => {\r\n                if (response.data.message === AssetConstants.SUCCESS_TOKEN) {\r\n                    this.setState({ showStatus: true, statusMessage: response.data.summary, statusSeverity:AssetConstants.SUCCESS_TOKEN, showImport: false,})\r\n                } else {\r\n                    this.setState({ showStatus: true, statusMessage: response.data.message, statusSeverity:AssetConstants.ERROR_TOKEN })\r\n                }\r\n            });\r\n        }\r\n\r\n    downloadTable = () => {\r\n        axios.post(\r\n            getURL(AssetConstants.ASSETS_MAIN_PATH, AssetCommand.EXPORT_FILE), { 'filter':this.props.filters }\r\n            ).then(response => {\r\n                this.setState({ csvData: response.data.csvData });\r\n                this.csvLink.link.click();\r\n            });\r\n    }\r\n\r\n    openImportModal = () => {\r\n        this.setState({showImport: true});\r\n    }\r\n\r\n    closeImportModal = () => {\r\n        this.setState({showImport: false});\r\n    }\r\n\r\n    uploadFile = () => {\r\n        const data = new FormData();\r\n        data.append('file', this.state.importedFile);\r\n        this.sendUploadedFile(data);\r\n        this.setState({ showImport: false });\r\n    }\r\n\r\n    chooseFile = (event) => {\r\n        this.setState({ importedFile: event.target.files[0] })\r\n    }\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n\r\n        return(\r\n            <span>\r\n                <Grid container spacing={3}>\r\n                    <Grid item xs={2}>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            startIcon={<CloudUploadIcon />}\r\n                            onClick={() => {this.openImportModal()} }\r\n                        >\r\n                            Import\r\n                        </Button>\r\n                    </Grid>\r\n                    <Grid item xs={2}>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            startIcon={<CloudDownloadIcon />}\r\n                            onClick={() => {this.downloadTable()}}\r\n                        >\r\n                            Export\r\n                        </Button>\r\n                    </Grid>\r\n                </Grid>\r\n\r\n                <CSVLink\r\n                    data={this.state.csvData}\r\n                    filename={AssetConstants.ASSET_DOWNLOAD_FILE_NAME}\r\n                    className=\"hidden\"\r\n                    ref={(r) => this.csvLink = r}\r\n                    target=\"_blank\"\r\n                />\r\n\r\n                <Modal\r\n                    aria-labelledby=\"transition-modal-title\"\r\n                    aria-describedby=\"transition-modal-description\"\r\n                    className={classes.modal}\r\n                    open={this.state.showImport}\r\n                    onClose={this.closeImportModal}\r\n                    closeAfterTransition\r\n                    BackdropComponent={Backdrop}\r\n                    BackdropProps={{\r\n                    timeout: 500,\r\n                    }}\r\n                >\r\n                    <Fade in={this.state.showImport}>\r\n                    <div className={classes.paper}>\r\n                        <input\r\n                            type='file'\r\n                            accept=\".csv\"\r\n                            onChange={this.chooseFile}\r\n                        />\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            onClick={() => {this.uploadFile()}}\r\n                            className={classes.button}\r\n                        >\r\n                            Upload\r\n                        </Button>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            onClick={() => {this.uploadFile()}}\r\n                        >\r\n                            Cancel\r\n                        </Button>\r\n                    </div>\r\n                    </Fade>\r\n                </Modal>\r\n            </span>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withStyles(useStyles)(ImpExpAsset);\r\n","import React from 'react';\r\n\r\nimport axios from 'axios';\r\n\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from '@material-ui/core/Button';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Switch from '@material-ui/core/Switch';\r\n\r\nimport StatusDisplay from '../../helpers/StatusDisplay';\r\nimport { AssetInput } from '../enums/AssetInputs.ts';\r\nimport { AssetCommand } from '../enums/AssetCommands.ts'\r\nimport getURL from '../../helpers/functions/GetURL';\r\nimport * as AssetConstants from \"../AssetConstants\";\r\nimport * as Constants from \"../../Constants\";\r\nimport { Typography } from '@material-ui/core';\r\n\r\nfunction createInputs(name, label, showTooltip, description) {\r\n    return {label, name, showTooltip, description};\r\n}\r\n\r\nconst emptySearch = {\r\n    \"filters\":{\r\n\r\n    }\r\n}\r\n\r\nconst searchPath = \"search/\";\r\n\r\nconst useStyles = theme => ({\r\n    root: {\r\n      flexGrow: 1,\r\n    },\r\n    modal: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        maxWidth: \"80%\",\r\n        margin:\"0 auto\",\r\n      },\r\n      paper: {\r\n        backgroundColor: theme.palette.background.paper,\r\n        border: '2px solid #000',\r\n        boxShadow: theme.shadows[5],\r\n        padding: theme.spacing(2, 4, 3),\r\n      },\r\n      progress: {\r\n        display: 'flex',\r\n        '& > * + *': {\r\n          marginLeft: theme.spacing(2),\r\n        },\r\n      },\r\n});\r\n\r\nclass CreateAsset extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            // next available asset number\r\n            loadingAssetNumber:true,\r\n\r\n            // model information\r\n            loadingModels:true,\r\n            modelList:[],\r\n            networkList:null,\r\n            powerPortList:null,\r\n\r\n            // owner information\r\n            loadingOwners:true,\r\n            ownerList:[],\r\n\r\n            // datacenter information\r\n            loadingDatacenters:true,\r\n            datacenterList:[],\r\n\r\n            // hostname information\r\n            loadingHostnames:true,\r\n            assetNumList:[],\r\n            assetNumToModelList:null,\r\n\r\n            model:\"\",\r\n            hostname:\"\",\r\n            rack:\"\",\r\n            rackU:-1,\r\n            owner:\"\",\r\n            comment:\"\",\r\n            datacenter_id:\"\",\r\n            tags:[],\r\n            network_connections:null,\r\n            power_connections:[],\r\n            asset_number:1,\r\n\r\n            selectedConnection:null,\r\n\r\n            statusOpen: false,\r\n            statusMessage: \"\",\r\n            statusSeverity:\"\",\r\n\r\n            showModal:false,\r\n\r\n            inputs: {\r\n                \"model\":createInputs(AssetInput.MODEL, \"Model\", false, \"A reference to an existing model\"),\r\n                \"hostname\":createInputs(AssetInput.HOSTNAME, \"Hostname\", false, \"A short string compliant with RFC 1034’s definition of 'label'\"),\r\n                \"rack\":createInputs(AssetInput.RACK, \"Rack\", false, \"The rack the equipment is installed in, written as a row letter and rack number, e.g. 'B12'\"),\r\n                \"rackU\":createInputs(AssetInput.RACK_U, \"Rack U\", false, \"An integer indicating the vertical location of the bottom of the equipment (e.g. '5')\"),\r\n                \"owner\":createInputs(AssetInput.OWNER, \"Owner\", false, \"A reference to an existing user on the system who owns this equipment\"),\r\n                \"comment\":createInputs(AssetInput.COMMENT, \"Comment\", false, \"Any additional information associated with this asset\"),\r\n                \"datacenter\":createInputs(AssetInput.DATACENTER, \"Datacenter\", false, \"A reference to an existing datacenter\"),\r\n                \"macAddress\":createInputs(AssetInput.MAC_ADDRESS, \"Mac Address\", false, \"A 6-byte hexadecimal string per network port shown canonically in lower case with colon delimiters (e.g., '00:1e:c9:ac:78:aa')\"),\r\n                \"networkConnections\":createInputs(AssetInput.NETWORK_CONNECTIONS, \"Port Name\", false, \"For each network port, a reference to another network port on another piece of gear\"),\r\n                \"powerConnections\":createInputs(AssetInput.POWER_CONNECTIONS, \"Power Connections\", false, \"Choice of PDU port number (0 means not plugged in)\"),\r\n                \"assetNum\":createInputs(AssetInput.ASSET_NUMBER, \"Asset Number\", false, \"A six-digit serial number unique associated with an asset.\"),\r\n            },\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getModelList();\r\n        this.getOwnerList();\r\n        this.getDatacenterList();\r\n        this.getNextAssetNum();\r\n        this.getAssetList();\r\n    }\r\n\r\n    getModelList = () => {\r\n        axios.get(\r\n            getURL(Constants.MODELS_MAIN_PATH, searchPath), emptySearch).then(\r\n            response => {\r\n                var models = response.data.results;\r\n\r\n                var modelNames = [];\r\n                var networkNames = {};\r\n                var powerPortNames = {};\r\n\r\n                models.map(model => {\r\n                    var modelKey = model.vendor + \" \" + model.model_number;\r\n                    modelNames.push(modelKey);\r\n                    networkNames[modelKey] = model.ethernet_ports;\r\n                    powerPortNames[modelKey] = parseInt(model.power_ports);\r\n                });\r\n\r\n                this.setState({ loadingModels: false, modelList: modelNames, networkList: networkNames, powerPortList: powerPortNames })\r\n            });\r\n    }\r\n\r\n    getOwnerList = () => {\r\n        axios.get(\r\n            getURL(Constants.USERS_MAIN_PATH, searchPath), emptySearch).then(\r\n            response => {\r\n                this.setState({ loadingOwners: false, ownerList: response.data.results })\r\n            });\r\n    }\r\n\r\n    getDatacenterList = () => {\r\n        axios.get(\r\n            getURL(Constants.DATACENTERS_MAIN_PATH, \"all/\")).then(\r\n            response => this.setState({ loadingDatacenters: false, datacenterList: response.data.results }));\r\n    }\r\n\r\n    getNextAssetNum = () => {\r\n        axios.get(\r\n            getURL(Constants.ASSETS_MAIN_PATH, AssetCommand.GET_NEXT_ASSET_NUM)).then(\r\n            response => this.setState({ loadingAssetNumber: false, asset_number: response.data.asset_number }));\r\n    }\r\n\r\n    getAssetList = () => {\r\n        axios.get(\r\n            getURL(Constants.ASSETS_MAIN_PATH, searchPath), emptySearch).then(\r\n            response => {\r\n                var instances = response.data.results;\r\n\r\n                var assetNums = [];\r\n                var assetNumToModel = {};\r\n                instances.map(instance => {\r\n                    assetNums.push(instance.asset_number);\r\n                    assetNumToModel[instance.asset_number] = instance.model;\r\n                })\r\n\r\n                this.setState({ loadingHostnames: false, assetNumList: assetNums, assetNumToModelList: assetNumToModel });\r\n            });\r\n    }\r\n\r\n    createAsset = () => {\r\n        axios.post(\r\n            getURL(AssetConstants.ASSETS_MAIN_PATH, AssetCommand.create),\r\n            this.createJSON()).then(\r\n                response => {\r\n                if (response.data.message === AssetConstants.SUCCESS_TOKEN) {\r\n                    this.setState({\r\n                        statusOpen: true,\r\n                        statusMessage: \"Successfully created asset\",\r\n                        statusSeverity:AssetConstants.SUCCESS_TOKEN,\r\n                        showModal:false,\r\n\r\n                        model:\"\",\r\n                        hostname:\"\",\r\n                        rack:\"\",\r\n                        rackU:-1,\r\n                        owner:\"\",\r\n                        comment:\"\",\r\n                        datacenter_id:\"\",\r\n                        tags:[],\r\n                        network_connections:[],\r\n                        power_connections:[],\r\n                        asset_number:-1,\r\n                    }, this.props.search());\r\n                } else {\r\n                    this.setState({ statusOpen: true, statusMessage: response.data.message, statusSeverity:AssetConstants.ERROR_TOKEN })\r\n                }\r\n            });\r\n    }\r\n\r\n    updateModel = (event, newValue) => {\r\n        this.setState({ model: newValue });\r\n    }\r\n\r\n    updateHostname = (event, newValue) => {\r\n        this.setState({ hostname: newValue})\r\n    }\r\n\r\n    updateRack = (event, newValue) => {\r\n        this.setState({ rack: newValue });\r\n    }\r\n\r\n    updateRackU = (event, newValue) => {\r\n        this.setState({ rackU: newValue });\r\n    }\r\n\r\n    updateOwner = (event, newValue) => {\r\n        this.setState({ owner: newValue });\r\n    }\r\n\r\n    updateComment = (event, newValue) => {\r\n        this.setState({ comment: newValue });\r\n    }\r\n\r\n    updateDatacenter = (event, newValue) => {\r\n        this.setState({ datacenter_id: newValue });\r\n    }\r\n\r\n    updateTags = (event, newValue) => {\r\n        this.setState({ tags: newValue });\r\n    }\r\n\r\n    updateNetworkMac = (event, port) => {\r\n        this.setState(network_connections => {\r\n            let port = Object.assign({}, network_connections.port);\r\n            port.mac_address = event.target.value;\r\n            return { port };\r\n          });\r\n    }\r\n\r\n    updateNetworkPort = (event, port) => {\r\n        this.setState(network_connections => {\r\n            let port = Object.assign({}, network_connections.port);\r\n            port.connection_port = event.target.value;\r\n            return { port };\r\n          });\r\n    }\r\n\r\n    updateNetworkHostname = (event, port) => {\r\n        this.setState(network_connections => {\r\n            let port = Object.assign({}, network_connections.port);\r\n            port.connection_hostname = event.target.value;\r\n            return { port };\r\n          });\r\n    }\r\n\r\n    updatePowerConnections = (event, newValue) => {\r\n        this.setState({ power_connections: newValue });\r\n    }\r\n\r\n    updateAssetNumber = (event, newValue) => {\r\n        this.setState({ asset_number: newValue });\r\n    }\r\n\r\n    createJSON = () => {\r\n        return {\r\n            \"model\":this.state.model,\r\n            \"hostname\":this.state.hostname,\r\n            \"rack\":this.state.rack,\r\n            \"rackU\":this.state.rackU,\r\n            \"owner\":this.state.owner,\r\n            \"comment\":this.state.comment,\r\n            \"datacenter_id\":this.state.datacenter_id,\r\n            \"tags\":this.state.tags,\r\n            \"network_connections\":this.state.network_connections,\r\n            \"power_connections\":this.state.power_connections,\r\n            'asset_number':this.state.asset_number,\r\n        }\r\n    }\r\n\r\n\r\n\r\n    showModal = () => {\r\n        this.setState({ showModal: true });\r\n    }\r\n\r\n    closeModal = () => {\r\n        this.setState({ showModal: false });\r\n    }\r\n\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n\r\n        return (\r\n        <span>\r\n            <StatusDisplay\r\n                open={this.statusOpen}\r\n                severity={this.statusSeverity}\r\n                closeStatus={this.statusClose}\r\n                message={this.statusMessage}\r\n            />\r\n            <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                onClick={() => {this.showModal()} }\r\n            >\r\n                Create Asset\r\n            </Button>\r\n            <Modal\r\n                    aria-labelledby=\"transition-modal-title\"\r\n                    aria-describedby=\"transition-modal-description\"\r\n                    className={classes.modal}\r\n                    open={this.state.showModal}\r\n                    onClose={this.closeModal}\r\n                    closeAfterTransition\r\n                    BackdropComponent={Backdrop}\r\n                    BackdropProps={{\r\n                    timeout: 500,\r\n                    }}\r\n                >\r\n                    <Fade in={this.state.showModal}>\r\n                    <div className={classes.paper}>\r\n                    {(\r\n                    (this.state.loadingAssetNumber\r\n                    || this.state.loadingDatacenters\r\n                    || this.state.loadingModels\r\n                    || this.state.loadingHostnames\r\n                    || this.state.loadingOwners)\r\n                    && false\r\n                    ) ? <div className={classes.progress}><CircularProgress /></div> :\r\n                        <form>\r\n                        <Grid container spacing={3}>\r\n                            <Grid item xs={3}>\r\n                                <Tooltip placement=\"top\" open={this.state.inputs.model.Tooltip} title={this.state.inputs.model.description}>\r\n                                    <Autocomplete\r\n                                        id=\"select-model\"\r\n                                        options={this.state.modelList}\r\n                                        includeInputInList\r\n\r\n                                        renderInput={params => (\r\n                                        <TextField\r\n                                            {...params}\r\n                                            label={this.state.inputs.model.label}\r\n                                            name={this.state.inputs.model.name}\r\n                                            onBlur={() => this.updateModel}\r\n                                            variant=\"outlined\"\r\n                                            fullWidth\r\n                                            required\r\n                                        />\r\n                                        )}\r\n                                    />\r\n                                </Tooltip>\r\n                            </Grid>\r\n                            <Grid item xs={3}>\r\n                                <Tooltip placement=\"top\" open={this.state.inputs.owner.Tooltip} title={this.state.inputs.owner.description}>\r\n                                    <Autocomplete\r\n                                        id=\"select-owner\"\r\n                                        options={this.state.ownerList}\r\n                                        includeInputInList\r\n                                        renderInput={params => (\r\n                                        <TextField\r\n                                            {...params}\r\n                                            label={this.state.inputs.owner.label}\r\n                                            name={this.state.inputs.owner.name}\r\n                                            onBlur={() => this.updateOwner}\r\n                                            variant=\"outlined\"\r\n                                            fullWidth\r\n                                            required\r\n                                        />\r\n                                        )}\r\n                                    />\r\n                                </Tooltip>\r\n                            </Grid>\r\n                            <Grid item xs={3}>\r\n                                <Tooltip placement=\"top\" open={this.state.inputs.datacenter.Tooltip} title={this.state.inputs.datacenter.description}>\r\n                                    <Autocomplete\r\n                                        id=\"input-datacenter\"\r\n                                        options={this.state.datacenterList}\r\n                                        includeInputInList\r\n\r\n                                        renderInput={params => (\r\n                                        <TextField\r\n                                            {...params}\r\n                                            label={this.state.inputs.datacenter.label}\r\n                                            name={this.state.inputs.datacenter.name}\r\n                                            onChange={this.updateDatacenter}\r\n                                            onBlur={this.updateDatacenter}\r\n                                            required\r\n                                            variant=\"outlined\"\r\n                                            fullWidth\r\n                                        />\r\n                                        )}\r\n                                    />\r\n                                </Tooltip>\r\n                            </Grid>\r\n                            <Grid item xs={3}>\r\n                                <Tooltip placement=\"top\" open={this.state.inputs.rack.Tooltip} title={this.state.inputs.rack.description}>\r\n                                    <TextField\r\n                                        id=\"input-rack\"\r\n                                        variant=\"outlined\"\r\n                                        label={this.state.inputs.rack.label}\r\n                                        name={this.state.inputs.rack.name}\r\n                                        onChange={() => this.updateRack}\r\n                                        required\r\n                                        fullWidth\r\n                                    />\r\n                                </Tooltip>\r\n                            </Grid>\r\n                            <Grid item xs={3}>\r\n                                <Tooltip placement=\"top\" open={this.state.inputs.rackU.Tooltip} title={this.state.inputs.rackU.description}>\r\n                                    <TextField\r\n                                        id=\"input-rackU\"\r\n                                        variant=\"outlined\"\r\n                                        type=\"number\"\r\n                                        InputProps={{ inputProps: { min: 1, max:42} }}\r\n                                        label={this.state.inputs.rackU.label}\r\n                                        name={this.state.inputs.rackU.name}\r\n                                        onChange={this.updateRackU}\r\n                                        required\r\n                                        fullWidth\r\n                                    />\r\n                                </Tooltip>\r\n                            </Grid>\r\n                            <Grid item xs={3}>\r\n                                <Tooltip placement=\"top\" open={this.state.inputs.assetNum.Tooltip} title={this.state.inputs.assetNum.description}>\r\n                                    <TextField\r\n                                        id=\"input-asset-number\"\r\n                                        variant=\"outlined\"\r\n                                        type=\"number\"\r\n                                        InputProps={{ inputProps: { min: 100000, max:999999} }}\r\n                                        label={this.state.inputs.assetNum.label}\r\n                                        name={this.state.inputs.assetNum.name}\r\n                                        onChange={this.updateAssetNumber}\r\n                                        value={this.state.nextAssetNum}\r\n                                        required\r\n                                        fullWidth\r\n                                    />\r\n                                </Tooltip>\r\n                            </Grid>\r\n                            <Grid item xs={3}>\r\n                                <Tooltip placement=\"top\" open={this.state.inputs.hostname.Tooltip} title={this.state.inputs.hostname.description}>\r\n                                    <TextField\r\n                                        id=\"input-hostname\"\r\n                                        variant=\"outlined\"\r\n                                        label={this.state.inputs.hostname.label}\r\n                                        name={this.state.inputs.hostname.name}\r\n                                        onChange={this.updateHostname}\r\n                                        fullWidth\r\n                                    />\r\n                                </Tooltip>\r\n                            </Grid>\r\n\r\n                            <Grid item xs={12}>\r\n                                {(!(this.state.networkList && this.state.networkList[this.state.model]) || (this.state.hostname===\"\")) ? null:\r\n                                this.state.networkList[this.state.model].map(networkPort => (\r\n                                <Grid container spacing={3}>\r\n                                    <Grid item xs={3}>\r\n                                        <Typography>{networkPort + \": \"}</Typography>\r\n                                    </Grid>\r\n                                    <Grid item xs={3}>\r\n                                        <TextField\r\n                                            id=\"input-mac-address\"\r\n                                            variant=\"outlined\"\r\n                                            label={this.state.inputs.macAddress.label}\r\n                                            name={this.state.inputs.macAddress.name}\r\n                                            onChange={() => this.updateNetworkMac(networkPort)}\r\n                                            fullWidth\r\n                                        />\r\n                                    </Grid>\r\n                                    <Grid item xs={3}>\r\n                                        <Autocomplete\r\n                                            id=\"input-network-ports\"\r\n                                            options={this.state.assetNumList}\r\n                                            includeInputInList\r\n                                            renderInput={params => (\r\n                                                <TextField\r\n                                                    {...params}\r\n                                                    label={\"Connection Hostname\"}\r\n                                                    name={\"Connection Hostname\"}\r\n                                                    onBlur={() => this.updateNetworkHostname(networkPort)}\r\n                                                    variant=\"outlined\"\r\n                                                    fullWidth\r\n                                                />\r\n                                            )}\r\n                                        />\r\n                                    </Grid>\r\n                                    <Grid item xs={3}>\r\n                                        <Tooltip placement=\"top\" open={this.state.inputs.networkConnections.Tooltip} title={this.state.inputs.networkConnections.description}>\r\n                                            <Autocomplete\r\n                                                id=\"input-network-ports\"\r\n                                                options={this.state.networkList[this.state.assetNumToModel[this.state.selectedConnection[networkPort]]]}\r\n                                                includeInputInList\r\n                                                renderInput={params => (\r\n                                                    <TextField\r\n                                                        {...params}\r\n                                                        label={\"Connection Port\"}\r\n                                                        name={\"Connection Port\"}\r\n                                                        onBlur={() => this.updateNetworkPort(networkPort)}\r\n                                                        variant=\"outlined\"\r\n                                                        fullWidth\r\n                                                    />\r\n                                                )}\r\n                                            />\r\n                                        </Tooltip>\r\n                                    </Grid>\r\n                                </Grid>\r\n                                ))}\r\n                            </Grid>\r\n\r\n                            <Grid item xs={12}>\r\n                                <Grid container spacing={3}>\r\n                                    {(!(this.state.powerPortList && this.state.powerPortList[this.state.model])) ? null :\r\n                                        Array.from( { length: this.state.powerPortList[this.state.model] }, (_, k) => (\r\n                                            <Grid item xs={3}>\r\n                                                <Tooltip placement=\"top\" open={this.state.inputs.networkConnections.Tooltip} title={this.state.inputs.networkConnections.description}>\r\n                                                    <TextField\r\n                                                        id=\"starting-num-selector\"\r\n                                                        type=\"number\"\r\n                                                        value={1}\r\n                                                        InputProps={{ inputProps: { min: 0, max: 24} }}\r\n                                                    />\r\n                                                    <Switch\r\n                                                        checked={true}\r\n                                                        value=\"checkedB\"\r\n                                                        color=\"primary\"\r\n                                                        inputProps={{ 'aria-label': 'primary checkbox' }}\r\n                                                    />\r\n                                                </Tooltip>\r\n                                            </Grid>\r\n                                        ))\r\n                                    }\r\n                                </Grid>\r\n                            </Grid>\r\n                            <Grid item xs={6}>\r\n                                <Tooltip placement=\"top\" open={this.state.inputs.comment.Tooltip} title={this.state.inputs.comment.description}>\r\n                                    <TextField\r\n                                        id=\"input-comment\"\r\n                                        variant=\"outlined\"\r\n                                        label={this.state.inputs.comment.label}\r\n                                        name={this.state.inputs.comment.name}\r\n                                        onChange={this.updateComment}\r\n                                        multiline={true}\r\n                                        fullWidth\r\n                                    />\r\n                                </Tooltip>\r\n                            </Grid>\r\n                            <Grid item xs={6} />\r\n\r\n                            <Grid item xs={1}>\r\n                                <Button\r\n                                    variant=\"contained\"\r\n                                    color=\"primary\"\r\n                                    type=\"submit\"\r\n                                    onClick={() => this.createAsset()}\r\n                                >\r\n                                    Create\r\n                                </Button>\r\n                            </Grid>\r\n                            <Grid item xs={9}>\r\n                                <Button\r\n                                    variant=\"contained\"\r\n                                    color=\"primary\"\r\n                                    type=\"submit\"\r\n                                    onClick={() => this.cancelCreation()}\r\n                                >\r\n                                    Cancel\r\n                                </Button>\r\n                            </Grid>\r\n                        </Grid></form>}\r\n                    </div>\r\n                    </Fade>\r\n                </Modal>\r\n        </span>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default withStyles(useStyles)(CreateAsset);\r\n","import React from 'react';\r\n\r\nimport axios from 'axios';\r\n\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from '@material-ui/core/Button';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport FormControl from '@material-ui/core/FormControl';\r\n\r\nimport StatusDisplay from '../../helpers/StatusDisplay';\r\nimport { AssetInput } from '../enums/AssetInputs.ts';\r\nimport { AssetCommand } from '../enums/AssetCommands.ts'\r\nimport getURL from '../../helpers/functions/GetURL';\r\nimport * as AssetConstants from \"../AssetConstants\";\r\n\r\nfunction createInputs(name, label, showTooltip, description) {\r\n    return {label, name, showTooltip, description};\r\n}\r\n\r\nconst useStyles = theme => ({\r\n    root: {\r\n      flexGrow: 1,\r\n    },\r\n    modal: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        maxWidth: \"80%\",\r\n        margin:\"0 auto\",\r\n      },\r\n      paper: {\r\n        backgroundColor: theme.palette.background.paper,\r\n        border: '2px solid #000',\r\n        boxShadow: theme.shadows[5],\r\n        padding: theme.spacing(2, 4, 3),\r\n      },\r\n});\r\n\r\nclass DetailAsset extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            loadingAssetNumber:true,\r\n            loadingModels:true,\r\n            modelList:[],\r\n            loadingOwners:true,\r\n            ownerList:[],\r\n            loadingDatacenters:true,\r\n            datacenterList:[],\r\n            loadingHostnames:true,\r\n            hostnameList:[],\r\n\r\n            model:\"\",\r\n            hostname:\"\",\r\n            rack:\"\",\r\n            rackU:-1,\r\n            owner:\"\",\r\n            comment:\"\",\r\n            datacenter_id:\"\",\r\n            tags:[],\r\n            network_connections:[],\r\n            power_connections:[],\r\n            asset_number:1,\r\n\r\n            statusOpen: false,\r\n            statusMessage: \"\",\r\n            statusSeverity:\"\",\r\n\r\n            showModal:false,\r\n\r\n            inputs: {\r\n                \"model\":createInputs(AssetInput.MODEL, \"Model\", false, \"A reference to an existing model\"),\r\n                \"hostname\":createInputs(AssetInput.HOSTNAME, \"Hostname\", false, \"A short string compliant with RFC 1034’s definition of 'label'\"),\r\n                \"rack\":createInputs(AssetInput.RACK, \"Rack\", false, \"The rack the equipment is installed in, written as a row letter and rack number, e.g. 'B12'\"),\r\n                \"rackU\":createInputs(AssetInput.RACK_U, \"Rack U\", false, \"An integer indicating the vertical location of the bottom of the equipment (e.g. '5')\"),\r\n                \"owner\":createInputs(AssetInput.OWNER, \"Owner\", false, \"A reference to an existing user on the system who owns this equipment\"),\r\n                \"comment\":createInputs(AssetInput.COMMENT, \"Comment\", false, \"Any additional information associated with this asset\"),\r\n                \"datacenter\":createInputs(AssetInput.DATACENTER, \"Datacenter\", false, \"A reference to an existing datacenter\"),\r\n                \"macAddress\":createInputs(AssetInput.MAC_ADDRESS, \"Mac Address\", false, \"A 6-byte hexadecimal string per network port shown canonically in lower case with colon delimiters (e.g., '00:1e:c9:ac:78:aa')\"),\r\n                \"networkConnections\":createInputs(AssetInput.NETWORK_CONNECTIONS, \"Port Name\", false, \"For each network port, a reference to another network port on another piece of gear\"),\r\n                \"powerConnections\":createInputs(AssetInput.POWER_CONNECTIONS, \"Power Connections\", false, \"Choice of PDU port number (0 means not plugged in)\"),\r\n                \"assetNum\":createInputs(AssetInput.ASSET_NUMBER, \"Asset Number\", false, \"A six-digit serial number unique associated with an asset.\"),\r\n            },\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getNextAssetNum();\r\n        this.getModelList();\r\n        this.getOwnerList();\r\n    }\r\n\r\n    getNextAssetNum = () => {\r\n        axios.get(\r\n            getURL(AssetConstants.ASSETS_MAIN_PATH, AssetCommand.GET_NEXT_ASSET_NUM)).then(\r\n            response => this.setState({ loadingAssetNumber: false, asset_number: response.asset_number }));\r\n    }\r\n\r\n    getModelList = () => {\r\n        axios.get(\r\n            getURL(AssetConstants.ASSETS_MAIN_PATH, AssetCommand.GET_ALL_MODELS)).then(\r\n            response => this.setState({ loadingModels: false, modelList: response.data.results }));\r\n    }\r\n\r\n    getOwnerList = () => {\r\n        axios.get(\r\n            getURL(AssetConstants.ASSETS_MAIN_PATH, AssetCommand.GET_ALL_OWNERS)).then(\r\n            response => this.setState({ loadingOwners: false, ownerList: response.data.results }));\r\n    }\r\n\r\n    getDatacenterList = () => {\r\n        axios.get(\r\n            getURL(AssetConstants.ASSETS_MAIN_PATH, AssetCommand.GET_ALL_DATACENTERS)).then(\r\n            response => this.setState({ loadingDatacenters: false, datacenterList: response.data.results }));\r\n    }\r\n\r\n    getHostnameList = () => {\r\n        axios.get(\r\n            getURL(AssetConstants.ASSETS_MAIN_PATH, AssetCommand.GET_ALL_HOSTNAME)).then(\r\n            response => this.setState({ loadingHostnames: false, hostnameList: response.data.results }));\r\n    }\r\n\r\n    updateModel = (event, newValue) => {\r\n        this.setState({ model: newValue });\r\n    }\r\n\r\n    updateHostname = (event, newValue) => {\r\n        this.setState({ hostname: newValue})\r\n    }\r\n\r\n    updateRack = (event, newValue) => {\r\n        this.setState({ rack: newValue });\r\n    }\r\n\r\n    updateRackU = (event, newValue) => {\r\n        this.setState({ rackU: newValue });\r\n    }\r\n\r\n    updateOwner = (event, newValue) => {\r\n        this.setState({ owner: newValue });\r\n    }\r\n\r\n    updateComment = (event, newValue) => {\r\n        this.setState({ comment: newValue });\r\n    }\r\n\r\n    updateDatacenter = (event, newValue) => {\r\n        this.setState({ datacenter_id: newValue });\r\n    }\r\n\r\n    updateTags = (event, newValue) => {\r\n        this.setState({ tags: newValue });\r\n    }\r\n\r\n    updateNetworkConnections = (event, newValue) => {\r\n        this.setState({ network_connections: newValue });\r\n    }\r\n\r\n    updatePowerConnections = (event, newValue) => {\r\n        this.setState({ power_connections: newValue });\r\n    }\r\n\r\n    updateAssetNumber = (event, newValue) => {\r\n        this.setState({ asset_number: newValue });\r\n    }\r\n\r\n    createJSON = () => {\r\n        return {\r\n            \"model\":this.state.model,\r\n            \"hostname\":this.state.hostname,\r\n            \"rack\":this.state.rack,\r\n            \"rackU\":this.state.rackU,\r\n            \"owner\":this.state.owner,\r\n            \"comment\":this.state.comment,\r\n            \"datacenter_id\":this.state.datacenter_id,\r\n            \"tags\":this.state.tags,\r\n            \"network_connections\":this.state.network_connections,\r\n            \"power_connections\":this.state.power_connections,\r\n            'asset_number':this.state.asset_number,\r\n        }\r\n    }\r\n\r\n    createAsset = () => {\r\n        axios.post(\r\n            getURL(AssetConstants.ASSETS_MAIN_PATH, AssetCommand.create),\r\n            this.createJSON()).then(\r\n                response => {\r\n                if (response.data.message === AssetConstants.SUCCESS_TOKEN) {\r\n                    this.setState({\r\n                        statusOpen: true,\r\n                        statusMessage: \"Successfully created asset\",\r\n                        statusSeverity:AssetConstants.SUCCESS_TOKEN,\r\n                        showModal:false,\r\n\r\n                        model:\"\",\r\n                        hostname:\"\",\r\n                        rack:\"\",\r\n                        rackU:-1,\r\n                        owner:\"\",\r\n                        comment:\"\",\r\n                        datacenter_id:\"\",\r\n                        tags:[],\r\n                        network_connections:[],\r\n                        power_connections:[],\r\n                        asset_number:-1,\r\n                    }, this.props.search());\r\n                } else {\r\n                    this.setState({ statusOpen: true, statusMessage: response.data.message, statusSeverity:AssetConstants.ERROR_TOKEN })\r\n                }\r\n            });\r\n    }\r\n\r\n    showModal = () => {\r\n        this.setState({ showModal: true });\r\n    }\r\n\r\n    closeModal = () => {\r\n        this.setState({ showModal: false });\r\n    }\r\n\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n\r\n        return (\r\n        <span>\r\n            <StatusDisplay\r\n                open={this.statusOpen}\r\n                severity={this.statusSeverity}\r\n                closeStatus={this.statusClose}\r\n                message={this.statusMessage}\r\n            />\r\n            <Modal\r\n                    aria-labelledby=\"transition-modal-title\"\r\n                    aria-describedby=\"transition-modal-description\"\r\n                    className={classes.modal}\r\n                    open={this.props.open}\r\n                    onClose={this.props.close}\r\n                    closeAfterTransition\r\n                    BackdropComponent={Backdrop}\r\n                    BackdropProps={{\r\n                    timeout: 500,\r\n                    }}\r\n                >\r\n                    <Fade in={this.props.open}>\r\n                    <div className={classes.paper}>\r\n                    {(false) ? <CircularProgress /> :\r\n                        <form>\r\n                        <Grid container spacing={3}>\r\n                            <Grid item xs={3}>\r\n                                <Tooltip placement=\"top\" open={this.state.inputs.model.Tooltip} title={this.state.inputs.model.description}>\r\n                                    <Autocomplete\r\n                                        id=\"select-model\"\r\n                                        options={this.state.modelList}\r\n                                        includeInputInList\r\n\r\n                                        renderInput={params => (\r\n                                        <TextField\r\n                                            {...params}\r\n                                            label={this.state.inputs.model.label}\r\n                                            name={this.state.inputs.model.name}\r\n                                            onChange={this.updateModel}\r\n                                            onBlur={this.updateModel}\r\n                                            variant=\"outlined\"\r\n                                            fullWidth\r\n                                            required\r\n                                        />\r\n                                        )}\r\n                                    />\r\n                                </Tooltip>\r\n                            </Grid>\r\n                            <Grid item xs={3}>\r\n                                <Tooltip placement=\"top\" open={this.state.inputs.owner.Tooltip} title={this.state.inputs.owner.description}>\r\n                                    <Autocomplete\r\n                                        id=\"select-owner\"\r\n                                        options={this.state.ownerList}\r\n                                        includeInputInList\r\n                                        renderInput={params => (\r\n                                        <TextField\r\n                                            {...params}\r\n                                            label={this.state.inputs.owner.label}\r\n                                            name={this.state.inputs.owner.name}\r\n                                            onChange={this.updateOwner}\r\n                                            onBlur={this.updateOwner}\r\n                                            variant=\"outlined\"\r\n                                            fullWidth\r\n                                            required\r\n                                        />\r\n                                        )}\r\n                                    />\r\n                                </Tooltip>\r\n                            </Grid>\r\n                            <Grid item xs={3}>\r\n                                <Tooltip placement=\"top\" open={this.state.inputs.datacenter.Tooltip} title={this.state.inputs.datacenter.description}>\r\n                                    <Autocomplete\r\n                                        id=\"input-datacenter\"\r\n                                        options={this.state.datacenterList}\r\n                                        includeInputInList\r\n\r\n                                        renderInput={params => (\r\n                                        <TextField\r\n                                            {...params}\r\n                                            label={this.state.inputs.datacenter.label}\r\n                                            name={this.state.inputs.datacenter.name}\r\n                                            onChange={this.updateDatacenter}\r\n                                            onBlur={this.updateDatacenter}\r\n                                            required\r\n                                            variant=\"outlined\"\r\n                                            fullWidth\r\n                                        />\r\n                                        )}\r\n                                    />\r\n                                </Tooltip>\r\n                            </Grid>\r\n                            <Grid item xs={3}>\r\n                                <Tooltip placement=\"top\" open={this.state.inputs.rack.Tooltip} title={this.state.inputs.rack.description}>\r\n                                    <TextField\r\n                                        id=\"input-rack\"\r\n                                        variant=\"outlined\"\r\n                                        label={this.state.inputs.rack.label}\r\n                                        name={this.state.inputs.rack.name}\r\n                                        onChange={this.updateRack}\r\n                                        required\r\n                                        fullWidth\r\n                                    />\r\n                                </Tooltip>\r\n                            </Grid>\r\n                            <Grid item xs={3}>\r\n                                <Tooltip placement=\"top\" open={this.state.inputs.rackU.Tooltip} title={this.state.inputs.rackU.description}>\r\n                                    <TextField\r\n                                        id=\"input-rackU\"\r\n                                        variant=\"outlined\"\r\n                                        label={this.state.inputs.rackU.label}\r\n                                        name={this.state.inputs.rackU.name}\r\n                                        onChange={this.updateRackU}\r\n                                        required\r\n                                        fullWidth\r\n                                    />\r\n                                </Tooltip>\r\n                            </Grid>\r\n                            <Grid item xs={3}>\r\n                                <Tooltip placement=\"top\" open={this.state.inputs.assetNum.Tooltip} title={this.state.inputs.assetNum.description}>\r\n                                    <TextField\r\n                                        id=\"input-asset-number\"\r\n                                        variant=\"outlined\"\r\n                                        label={this.state.inputs.assetNum.label}\r\n                                        name={this.state.inputs.assetNum.name}\r\n                                        onChange={this.updateAssetNumber}\r\n                                        value={this.state.nextAssetNum}\r\n                                        required\r\n                                        fullWidth\r\n                                    />\r\n                                </Tooltip>\r\n                            </Grid>\r\n                            <Grid item xs={3}>\r\n                                <Tooltip placement=\"top\" open={this.state.inputs.hostname.Tooltip} title={this.state.inputs.hostname.description}>\r\n                                    <TextField\r\n                                        id=\"input-hostname\"\r\n                                        variant=\"outlined\"\r\n                                        label={this.state.inputs.hostname.label}\r\n                                        name={this.state.inputs.hostname.name}\r\n                                        onChange={this.updateHostname}\r\n                                        fullWidth\r\n                                    />\r\n                                </Tooltip>\r\n                            </Grid>\r\n\r\n                            <Grid item xs={12}>\r\n                                <Grid container spacing={3}>\r\n                                    <Grid item xs={3}>\r\n                                        <Tooltip placement=\"top\" open={this.state.inputs.networkConnections.Tooltip} title={this.state.inputs.networkConnections.description}>\r\n                                            <TextField\r\n                                                id=\"input-network-ports\"\r\n                                                variant=\"outlined\"\r\n                                                label={\"Network Port Name\"}\r\n                                                name={\"Network Port Name\"}\r\n                                                onChange={this.props.updateAssetCreator}\r\n                                                fullWidth\r\n                                            />\r\n                                        </Tooltip>\r\n                                    </Grid>\r\n                                    <Grid item xs={3}>\r\n                                        <Tooltip placement=\"top\" open={this.state.inputs.macAddress.Tooltip} title={this.state.inputs.macAddress.description}>\r\n                                            <TextField\r\n                                                id=\"input-mac-address\"\r\n                                                variant=\"outlined\"\r\n                                                label={this.state.inputs.macAddress.label}\r\n                                                name={this.state.inputs.macAddress.name}\r\n                                                onChange={this.props.updateAssetCreator}\r\n                                                fullWidth\r\n                                            />\r\n                                        </Tooltip>\r\n                                    </Grid>\r\n                                    <Grid item xs={3}>\r\n                                        <Tooltip placement=\"top\" open={this.state.inputs.networkConnections.Tooltip} title={this.state.inputs.networkConnections.description}>\r\n                                            <TextField\r\n                                                id=\"input-network-ports\"\r\n                                                variant=\"outlined\"\r\n                                                label={\"Connection Hostname\"}\r\n                                                name={\"Connection Hostname\"}\r\n                                                onChange={this.props.updateAssetCreator}\r\n                                                fullWidth\r\n                                            />\r\n                                        </Tooltip>\r\n                                    </Grid>\r\n                                    <Grid item xs={3}>\r\n                                        <Tooltip placement=\"top\" open={this.state.inputs.networkConnections.Tooltip} title={this.state.inputs.networkConnections.description}>\r\n                                            <TextField\r\n                                                id=\"input-network-ports\"\r\n                                                variant=\"outlined\"\r\n                                                label={\"Connection Port\"}\r\n                                                name={\"Connection Port\"}\r\n                                                onChange={this.props.updateAssetCreator}\r\n                                                fullWidth\r\n                                            />\r\n                                        </Tooltip>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Grid>\r\n                            <Grid item xs={3}>\r\n                                <Tooltip placement=\"top\" open={this.state.inputs.networkConnections.Tooltip} title={this.state.inputs.networkConnections.description}>\r\n                                    <FormControl>\r\n                                            <TextField\r\n                                                id=\"starting-num-selector\"\r\n                                                type=\"number\"\r\n                                                value={1}\r\n                                                InputProps={{ inputProps: { min: 0} }}\r\n                                            />\r\n                                            <FormHelperText>Left Power Port</FormHelperText>\r\n                                    </FormControl>\r\n                                </Tooltip>\r\n                            </Grid>\r\n                            <Grid item xs={9}>\r\n                                <Tooltip placement=\"top\" open={this.state.inputs.macAddress.Tooltip} title={this.state.inputs.macAddress.description}>\r\n                                    <FormControl>\r\n                                            <TextField\r\n                                                id=\"starting-num-selector\"\r\n                                                type=\"number\"\r\n                                                value={1}\r\n                                                InputProps={{ inputProps: { min: 0} }}\r\n                                            />\r\n                                            <FormHelperText>Right Power Port</FormHelperText>\r\n                                    </FormControl>\r\n                                </Tooltip>\r\n                            </Grid>\r\n                            <Grid item xs={6}>\r\n                                <Tooltip placement=\"top\" open={this.state.inputs.comment.Tooltip} title={this.state.inputs.comment.description}>\r\n                                    <TextField\r\n                                        id=\"input-comment\"\r\n                                        variant=\"outlined\"\r\n                                        label={this.state.inputs.comment.label}\r\n                                        name={this.state.inputs.comment.name}\r\n                                        onChange={this.updateComment}\r\n                                        multiline={true}\r\n                                        fullWidth\r\n                                    />\r\n                                </Tooltip>\r\n                            </Grid>\r\n\r\n                            <Grid item xs={12}>\r\n                                <Button\r\n                                    variant=\"contained\"\r\n                                    color=\"primary\"\r\n                                    type=\"submit\"\r\n                                    onClick={() => this.createAsset()}\r\n                                >\r\n                                    Create\r\n                                </Button>\r\n                            </Grid>\r\n                        </Grid></form>}\r\n                    </div>\r\n                    </Fade>\r\n                </Modal>\r\n        </span>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default withStyles(useStyles)(DetailAsset);\r\n","import React from 'react';\r\n\r\nimport axios from 'axios';\r\n\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { fade, withStyles } from '@material-ui/core/styles';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport { MenuItem, Button, TextField } from '@material-ui/core';\r\n\r\nimport createAssetJSON from \"./functions/createAssetJSON\";\r\nimport { AssetCommand } from '../enums/AssetCommands.ts'\r\nimport getURL from '../../helpers/functions/GetURL';\r\nimport * as AssetConstants from \"../AssetConstants\";\r\nimport * as Constants from '../../Constants';\r\n\r\nconst useStyles = theme => ({\r\n    grow: {\r\n      flexGrow: 1,\r\n    },\r\n    menuButton: {\r\n      marginRight: theme.spacing(2),\r\n    },\r\n    title: {\r\n      display: 'none',\r\n      [theme.breakpoints.up('sm')]: {\r\n        display: 'block',\r\n      },\r\n    },\r\n    search: {\r\n      position: 'relative',\r\n      borderRadius: theme.shape.borderRadius,\r\n      backgroundColor: fade(theme.palette.common.white, 0.15),\r\n      '&:hover': {\r\n        backgroundColor: fade(theme.palette.common.white, 0.25),\r\n      },\r\n      marginRight: theme.spacing(2),\r\n      marginLeft: 0,\r\n      width: '100%',\r\n      [theme.breakpoints.up('sm')]: {\r\n        marginLeft: theme.spacing(3),\r\n        width: 'auto',\r\n      },\r\n    },\r\n    searchIcon: {\r\n      width: theme.spacing(7),\r\n      height: '100%',\r\n      position: 'absolute',\r\n      pointerEvents: 'none',\r\n      display: 'flex',\r\n      alignItems: 'left',\r\n      justifyContent: 'left',\r\n    },\r\n    inputRoot: {\r\n      color: 'inherit',\r\n    },\r\n    inputInput: {\r\n      padding: theme.spacing(1, 1, 1, 7),\r\n      transition: theme.transitions.create('width'),\r\n      width: '100%',\r\n      [theme.breakpoints.up('md')]: {\r\n        width: 200,\r\n      },\r\n    },\r\n    sectionDesktop: {\r\n      display: 'none',\r\n      [theme.breakpoints.up('md')]: {\r\n        display: 'flex',\r\n      },\r\n    },\r\n    sectionMobile: {\r\n      display: 'flex',\r\n      [theme.breakpoints.up('md')]: {\r\n        display: 'none',\r\n      },\r\n    },\r\n  });\r\n\r\nclass FilterAsset extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            model:\"\",\r\n            hostname:\"\",\r\n            rack:\"\",\r\n            rackU:-1,\r\n            owner:\"\",\r\n            comment:\"\",\r\n            datacenter_id:\"\",\r\n            tags:[],\r\n            network_connections:\"\",\r\n            power_connections:\"\",\r\n            asset_number:-1,\r\n\r\n            startingRackNumber:1,\r\n            endingRackNumber:1,\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.search();\r\n    }\r\n\r\n    updateModel = (event, newValue) => {\r\n        this.setState({ model: newValue });\r\n    }\r\n\r\n    updateHostname = (event, newValue) => {\r\n        this.setState({ hostname: newValue})\r\n    }\r\n\r\n    updateRack = (event, newValue) => {\r\n        this.setState({ rack: newValue });\r\n    }\r\n\r\n    updateRackU = (event, newValue) => {\r\n        this.setState({ rackU: newValue });\r\n    }\r\n\r\n    updateOwner = (event, newValue) => {\r\n        this.setState({ owner: newValue });\r\n    }\r\n\r\n    updateComment = (event, newValue) => {\r\n        this.setState({ comment: newValue });\r\n    }\r\n\r\n    updateDatacenter = (event, newValue) => {\r\n        this.setState({ datacenter_id: newValue });\r\n    }\r\n\r\n    updateTags = (event, newValue) => {\r\n        this.setState({ tags: newValue });\r\n    }\r\n\r\n    updateNetworkConnections = (event, newValue) => {\r\n        this.setState({ network_connections: newValue });\r\n    }\r\n\r\n    updatePowerConnections = (event, newValue) => {\r\n        this.setState({ power_connections: newValue });\r\n    }\r\n\r\n    updateAssetNumber = (event, newValue) => {\r\n        this.setState({ asset_number: newValue });\r\n    }\r\n\r\n    search = () => {\r\n        axios.post(\r\n            getURL(AssetConstants.ASSETS_MAIN_PATH, AssetCommand.search),{ 'filter':createAssetJSON() }\r\n            ).then(response => {\r\n                this.props.updateSearchItems(response.data.assets);\r\n            });\r\n    }\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <Grid container spacing={3}>\r\n                    <Grid item xs={3}>\r\n                        <FormControl>\r\n                            <div>\r\n                                <TextField\r\n                                    placeholder=\"Search…\"\r\n                                    classes={{\r\n                                        root: classes.inputRoot,\r\n                                        input: classes.inputInput,\r\n                                    }}\r\n                                    inputProps={{ 'aria-label': 'search' }}\r\n                                />\r\n                            </div>\r\n                            <FormHelperText>Filter by Datacenter</FormHelperText>\r\n                        </FormControl>\r\n                    </Grid>\r\n                    <Grid item xs={3}>\r\n                        <FormControl>\r\n                            <div>\r\n                                <TextField\r\n                                    placeholder=\"Search…\"\r\n                                    classes={{\r\n                                        root: classes.inputRoot,\r\n                                        input: classes.inputInput,\r\n                                    }}\r\n                                    inputProps={{ 'aria-label': 'search' }}\r\n                                />\r\n                            </div>\r\n                            <FormHelperText>Filter by model</FormHelperText>\r\n                        </FormControl>\r\n                    </Grid>\r\n                    <Grid item xs={6}>\r\n                        <FormControl>\r\n                            <div>\r\n                                <TextField\r\n                                    placeholder=\"Search…\"\r\n                                    classes={{\r\n                                        root: classes.inputRoot,\r\n                                        input: classes.inputInput,\r\n                                    }}\r\n                                    inputProps={{ 'aria-label': 'search' }}\r\n                                />\r\n                            </div>\r\n                            <FormHelperText>Filter by hostname</FormHelperText>\r\n                        </FormControl>\r\n                    </Grid>\r\n                    <Grid item xs={1}>\r\n                        <FormControl>\r\n                                <Select\r\n                                    id=\"starting-letter-selector\"\r\n                                    value={this.state.startingRackLetter}\r\n                                    onChange={this.changeStartingLetter}\r\n                                    defaultValue={Constants.RackX[0]}\r\n                                >\r\n                                    {Constants.RackX.map(val => (<MenuItem value={val}>{val}</MenuItem>))}\r\n                                </Select>\r\n                                <FormHelperText>Starting Letter</FormHelperText>\r\n                        </FormControl>\r\n                    </Grid>\r\n                    <Grid item xs={1}>\r\n                        <FormControl>\r\n                                <Select\r\n                                    id=\"ending-letter-selector\"\r\n                                    value={this.state.endingRackLetter}\r\n                                    onChange={this.changeEndingLetter}\r\n                                    defaultValue={Constants.RackX[0]}\r\n                                >\r\n                                    {Constants.RackX.map(val => (<MenuItem value={val}>{val}</MenuItem>))}\r\n                                </Select>\r\n                                <FormHelperText>Ending Letter</FormHelperText>\r\n                        </FormControl>\r\n                    </Grid>\r\n                    <Grid item xs={1}>\r\n                        <FormControl>\r\n                                <TextField\r\n                                    id=\"starting-num-selector\"\r\n                                    type=\"number\"\r\n                                    value={this.state.startingRackNumber}\r\n                                    onChange={this.changeStartingNum}\r\n                                    InputProps={{ inputProps: { min: 1} }}\r\n                                />\r\n                                <FormHelperText>Starting Number</FormHelperText>\r\n                        </FormControl>\r\n                    </Grid>\r\n                    <Grid item xs={1}>\r\n                        <FormControl>\r\n                                <TextField\r\n                                    id=\"ending-num-selector\"\r\n                                    type=\"number\"\r\n                                    value={this.state.endingRackNumber}\r\n                                    onChange={this.changeEndingNum}\r\n                                    InputProps={{ inputProps: { min: 1} }}\r\n                                />\r\n                                <FormHelperText>Ending Number</FormHelperText>\r\n                        </FormControl>\r\n                    </Grid>\r\n                </Grid>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withStyles(useStyles)(FilterAsset);\r\n","export default function createAssetJSON(model, hostname, rack, rackU, owner, comment, datacenter_id, tags, network_connections, power_connections, asset_number) {\r\n    return {\r\n        \"model\":model,\r\n        \"hostname\":hostname,\r\n        \"rack\":rack,\r\n        \"rackU\":rackU,\r\n        \"owner\":owner,\r\n        \"comment\":comment,\r\n        \"datacenter_id\":datacenter_id,\r\n        \"tags\":tags,\r\n        \"network_connections\":network_connections,\r\n        \"power_connections\":power_connections,\r\n        'asset_number':asset_number,\r\n    }\r\n}\r\n","import React from 'react';\r\n\r\nimport axios from 'axios';\r\n\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport { Button } from '@material-ui/core';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nimport { AssetInput } from '../enums/AssetInputs.ts';\r\nimport { AssetCommand } from '../enums/AssetCommands.ts';\r\nimport getURL from '../../helpers/functions/GetURL';\r\nimport * as AssetConstants from \"../AssetConstants\";\r\nimport DetailAsset from \"./DetailsAsset\";\r\nimport FilterAsset from './FilterAsset';\r\nimport stableSort from \"../../helpers/functions/StableSort\";\r\nimport getComparator from \"../../helpers/functions/GetComparator\";\r\n\r\n\r\nconst useStyles = theme => ({\r\n  styledTableRow: {\r\n    '&:nth-of-type(odd)': {\r\n      backgroundColor: theme.palette.background.default,\r\n    },\r\n  },\r\n  tableCellHead: {\r\n\tbackgroundColor: theme.palette.primary.main,\r\n\tcolor: theme.palette.common.white,\r\n  },\r\n  styledTableCell:{\r\n      fontSize: 14,\r\n  },\r\n  table: {\r\n    minWidth: 700,\r\n  },\r\n  \tpaper: {\r\n\t\twidth: '100%',\r\n\t\tmarginBottom: theme.spacing(2),\r\n\t},\r\n});\r\n\r\nfunction createData(model, hostname, datacenter, rack, rackU, owner, assetNum) {\r\n  return { model, hostname, datacenter, rack, rackU, owner, assetNum };\r\n}\r\n\r\nconst rows = [\r\n\tcreateData('Frozen yoghurt', 159, 6.0, 24, 4.0),\r\n\tcreateData('Ice cream sandwich', 237, 9.0, 37, 4.3),\r\n\tcreateData('Eclair', 262, 16.0, 24, 6.0),\r\n\tcreateData('Cupcake', 305, 3.7, 67, 4.3),\r\n\tcreateData('Gingerbread', 356, 16.0, 49, 3.9),\r\n  ];\r\n\r\nconst columns = [\r\n    'model',\r\n    'hostname',\r\n    'rack',\r\n    'rack_position',\r\n]\r\n\r\nclass TableAsset extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n\t  tableItems:[],\r\n\r\n\t  detailStatusOpen:false,\r\n\t  detailStatusSeverity:'',\r\n\t  detailStatusMessage:'',\r\n\r\n\t  deleteAssetRack:'',\r\n\t  deleteAssetrack_position:'',\r\n\r\n\t  showDetailedView: false,\r\n\t  detailViewLoading:false,\r\n\t  originalRack:'',\r\n\t  originalrack_position:'',\r\n\r\n\t  order:\"asc\",\r\n\t  orderBy:\"model\",\r\n    };\r\n  }\r\n\r\n  editAsset = () => {\r\n\tlet body = this.state.detailedValues.getAssetAsJSON();\r\n\tbody[AssetInput.RACK_ORIGINAL] = this.state.originalRack;\r\n\tbody[AssetInput.RACK_U_ORIGINAL] = this.state.originalrack_position;\r\n\taxios.post(\r\n\t\tgetURL(AssetConstants.ASSETS_MAIN_PATH, AssetCommand.edit),body\r\n\t\t).then(response => {\r\n\t\t\tif (response.data.message === AssetConstants.SUCCESS_TOKEN) {\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\tshowStatus: true,\r\n\t\t\t\t\tstatusMessage: \"Successfully edited asset\",\r\n\t\t\t\t\tstatusSeverity:AssetConstants.SUCCESS_TOKEN,\r\n\t\t\t\t\tdetailedValues : null,\r\n\t\t\t\t\tshowDetailedView:false,\r\n\t\t\t\t});\r\n\t\t\t} else {\r\n\t\t\t\tthis.setState({ detailStatusOpen: true, detailStatusMessage: response.data.message, detailStatusSeverity:AssetConstants.ERROR_TOKEN })\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\r\n\tdeleteAsset = () => {\r\n\t\tvar body = {};\r\n\t\tbody[AssetInput.RACK] = this.state.originalRack;\r\n\t\tbody[AssetInput.RACK_U] = this.state.originalrack_position;\r\n\r\n\t\taxios.post(\r\n\t\t\tgetURL(AssetConstants.ASSETS_MAIN_PATH, AssetCommand.delete), body\r\n\t\t\t).then(response => {\r\n\t\t\t\tif (response.data.message === AssetConstants.SUCCESS_TOKEN) {\r\n\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\tshowStatus: true,\r\n\t\t\t\t\t\tstatusMessage: \"Successfully deleted asset\",\r\n\t\t\t\t\t\tstatusSeverity:AssetConstants.SUCCESS_TOKEN,\r\n\t\t\t\t\t\toriginalRack:'',\r\n\t\t\t\t\t\toriginalrack_position:'',\r\n\t\t\t\t\t\tshowDetailedView:false\r\n\t\t\t\t\t});\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.setState({ showStatus: true, statusMessage: response.data.message, statusSeverity:AssetConstants.ERROR_TOKEN })\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t}\r\n\r\n\tgetAssetDetails = (rack, rack_position) => {\r\n\t\tthis.setState({ detailViewLoading: true });\r\n\r\n\t\tvar body = {};\r\n\t\tbody[AssetInput.RACK] = rack;\r\n\t\tbody[AssetInput.RACK_U] = rack_position;\r\n\r\n\t\taxios.post(\r\n\t\t\tgetURL(AssetConstants.ASSETS_MAIN_PATH, AssetCommand.detailView), body\r\n\t\t\t).then(response => this.setState({ detailedValues: response.data['assets'][0], detailViewLoading:false}));\r\n\t}\r\n\r\n\tcloseDetailedView = () => {\r\n\t\tthis.setState({ showDetailedView: false })\r\n\t}\r\n\r\n\tcloseShowStatus = () => {\r\n\t\tthis.setState({ showStatus: false })\r\n\t}\r\n\r\n\r\n\r\n\trender() {\r\n\tconst { classes } = this.props;\r\n\r\n\treturn (\r\n\t\t<React.Fragment>\r\n\t\t\t<Grid container spacing={3}>\r\n\t\t\t\t<Grid item xs={6}>\r\n\t\t\t\t\t<FilterAsset />\r\n\t\t\t\t</Grid>\r\n\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t<TableContainer component={Paper}>\r\n\t\t\t\t\t\t<Table className={classes.table} aria-label=\"customized table\">\r\n\t\t\t\t\t\t\t<TableHead>\r\n\t\t\t\t\t\t\t<TableRow className={classes.styledTableRow}>\r\n\t\t\t\t\t\t\t\t<TableCell className={classes.tableCellHead}>Model</TableCell>\r\n\t\t\t\t\t\t\t\t<TableCell align=\"right\" className={classes.tableCellHead}>Hostname</TableCell>\r\n\t\t\t\t\t\t\t\t<TableCell align=\"right\" className={classes.tableCellHead}>Datacenter</TableCell>\r\n\t\t\t\t\t\t\t\t<TableCell align=\"right\" className={classes.tableCellHead}>Rack</TableCell>\r\n\t\t\t\t\t\t\t\t<TableCell align=\"right\" className={classes.tableCellHead}>Rack U</TableCell>\r\n\t\t\t\t\t\t\t\t<TableCell align=\"right\" className={classes.tableCellHead}>Owner</TableCell>\r\n\t\t\t\t\t\t\t\t<TableCell align=\"right\" className={classes.tableCellHead}>Asset Number</TableCell>\r\n\t\t\t\t\t\t\t\t<TableCell align=\"right\" className={classes.tableCellHead}></TableCell>\r\n\t\t\t\t\t\t\t</TableRow>\r\n\t\t\t\t\t\t\t</TableHead>\r\n\t\t\t\t\t\t\t<TableBody>\r\n\t\t\t\t\t\t\t{rows.map(row =>\r\n\t\t\t\t\t\t\t\t<TableRow key={row.name}>\r\n\t\t\t\t\t\t\t\t\t<TableCell component=\"th\" scope=\"row\">{row.model}</TableCell>\r\n\t\t\t\t\t\t\t\t\t<TableCell align=\"right\">{row.hostname}</TableCell>\r\n\t\t\t\t\t\t\t\t\t<TableCell align=\"right\">{row.datacenter}</TableCell>\r\n\t\t\t\t\t\t\t\t\t<TableCell align=\"right\">{row.rack}</TableCell>\r\n\t\t\t\t\t\t\t\t\t<TableCell align=\"right\">{row.rackU}</TableCell>\r\n\t\t\t\t\t\t\t\t\t<TableCell align=\"right\">{row.owner}</TableCell>\r\n\t\t\t\t\t\t\t\t\t<TableCell align=\"right\">{row.assetNum}</TableCell>\r\n\t\t\t\t\t\t\t\t\t<TableCell align=\"center\">\r\n\t\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t\t\t\t\t\t\t\tvariant=\"contained\"\r\n\t\t\t\t\t\t\t\t\t\t\tonClick={() => this.setState({ showDetailedView: true })}\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\tMore Details\r\n\t\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t</TableCell>\r\n\t\t\t\t\t\t\t\t</TableRow>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t</TableBody>\r\n\t\t\t\t\t\t</Table>\r\n\t\t\t\t\t</TableContainer>\r\n\t\t\t\t</Grid>\r\n\t\t\t</Grid>\r\n\t\t<DetailAsset\r\n\t\t\topen={this.state.showDetailedView}\r\n\t\t\tclose={this.closeDetailedView}\r\n\t\t\tsearch={this.props.search}\r\n\t\t\t/*disabled={this.props.privilege===Privilege.USER}*/\r\n\t\t/>\r\n\t\t</React.Fragment>\r\n\t);\r\n  }\r\n}\r\n\r\nexport default withStyles(useStyles)(TableAsset);\r\n","export enum RackCommand {\r\n    GET_ALL_RACKS = \"all\",\r\n    CREATE_RACKS = \"create\",\r\n    DELETE_RACKS = \"delete\",\r\n    GET_RACK_DETAILS = \"details\"\r\n}\r\n","import React from 'react';\r\n\r\nexport default class ErrorBoundary extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = { hasError: false };\r\n    }\r\n\r\n    static getDerivedStateFromError(error) {\r\n      // Update state so the next render will show the fallback UI.\r\n      return \"An unforseen error occurred. Please refresh the page and try again later.\";\r\n    }\r\n\r\n    componentDidCatch(error, errorInfo) {\r\n      // You can also log the error to an error reporting service\r\n      //logErrorToMyService(error, errorInfo);\r\n    }\r\n\r\n    render() {\r\n      if (this.state.hasError) {\r\n        // You can render any custom fallback UI\r\n        return <h1>Something went wrong.</h1>;\r\n      }\r\n\r\n      return this.props.children;\r\n    }\r\n}\r\n","import React from 'react';\r\n\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nimport { Privilege } from '../../enums/privilegeTypes.ts'\r\nimport ImpExpAsset from '../helpers/ImpExpAsset';\r\nimport CreateAsset from '../helpers/CreateAsset';\r\nimport StatusDisplay from '../../helpers/StatusDisplay';\r\nimport TableAsset from '../helpers/TableAssets';\r\nimport ErrorBoundary from '../../errors/ErrorBoundry';\r\nimport \"../stylesheets/AssetStyles.css\";\r\n\r\nexport default class AssetsView extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            statusSeverity:'',\r\n            statusMessage:'',\r\n            showStatus:false,\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <ErrorBoundary>\r\n                    <StatusDisplay\r\n                        open={this.state.showStatus}\r\n                        severity={this.state.statusSeverity}\r\n                        closeStatus={this.closeShowStatus}\r\n                        message={this.state.statusMessage}\r\n                    />\r\n                    <Grid container spacing={3}>\r\n                        <Grid item xs={3}>\r\n                            {(this.props.privilege === Privilege.ADMIN) ? <CreateAsset search={this.search} />:null}\r\n                        </Grid>\r\n                        <Grid item xs={6}>\r\n                            {(this.props.privilege === Privilege.ADMIN) ? <ImpExpAsset downloadTable={this.downloadTable} />:null}\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <TableAsset />\r\n                        </Grid>\r\n                    </Grid>\r\n                </ErrorBoundary>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","export enum StatsCommand {\r\n    GENERATE_REPORT = \"generate-report\",\r\n    TEST = \"test\",\r\n}\r\n","import React from 'react';\r\n\r\nimport axios from 'axios';\r\n\r\nimport Select from '@material-ui/core/Select';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport { MenuItem, Button, TextField } from '@material-ui/core';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport ToggleButtonGroup from '@material-ui/lab/ToggleButtonGroup';\r\nimport ToggleButton from '@material-ui/lab/ToggleButton';\r\n\r\nimport { RackCommand } from \"../enums/RackCommands.ts\";\r\nimport { Privilege } from '../../enums/privilegeTypes.ts';\r\nimport \"../stylesheets/RackStyles.css\";\r\n\r\nimport getURL from '../../helpers/functions/GetURL';\r\nimport * as Constants from '../../Constants';\r\nimport StatusDisplay from '../../helpers/StatusDisplay';\r\n\r\nimport ErrorBoundray from '../../errors/ErrorBoundry';\r\n\r\nconst racksMainPath = 'racks/';\r\n\r\nexport default class RacksView extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            items: [],\r\n            firstRack: 'A1',\r\n            secondRack: 'A1',\r\n\r\n            showStatus: false,\r\n            statusMessage: '',\r\n            statusSeverity: 'info',\r\n\r\n            showConfirmationBox: false,\r\n\r\n            racksList: [],\r\n\r\n            formats: [\"single\"]\r\n        }\r\n\r\n        axios.defaults.headers.common['token'] = this.props.token;\r\n        axios.defaults.headers.common['privilege'] = this.props.privilege;\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getAllRacks();\r\n    }\r\n\r\n    handleFormat = (event, newFormats) => {\r\n        console.log(newFormats);\r\n        if (newFormats.length) {\r\n            this.setState({formats: newFormats});\r\n        }\r\n    };\r\n\r\n    getAllRacks = () => {\r\n        axios.get(getURL(racksMainPath, RackCommand.GET_ALL_RACKS)).then(response => {\r\n                if (response.data.message === 'success') {\r\n                    this.setState({ showStatus: true, statusMessage: \"Success\", statusSeverity:\"success\", racksList:response.data.racks })\r\n                } else {\r\n                    this.setState({ showStatus: true, statusMessage: response.data.message, statusSeverity:\"error\" })\r\n                }\r\n            });\r\n    }\r\n\r\n    updateRacks(command) {\r\n        axios.post(\r\n            getURL(racksMainPath, command),\r\n            {\r\n                'startRack':this.state.firstRack,\r\n                'endRack':this.state.secondRack,\r\n            }\r\n            ).then(response => {\r\n                console.log(response);\r\n                if (response.data.message === 'success') {\r\n                    this.setState({ showStatus: true, statusMessage: \"Success\", statusSeverity:\"success\", showConfirmationBox:false });\r\n                    if (command === RackCommand.GET_RACK_DETAILS) {\r\n                        const win = window.open(response.data.link, '_blank');\r\n                        if (win != null) {\r\n                            win.focus();\r\n                        }\r\n                    }\r\n                } else {\r\n                    this.setState({ showStatus: true, statusMessage: response.data.message, statusSeverity:\"error\" })\r\n                }\r\n            });\r\n    }\r\n\r\n    createRacks = () => {\r\n        this.updateRacks(RackCommand.CREATE_RACKS);\r\n    }\r\n\r\n    deleteRacks = () => {\r\n        this.updateRacks(RackCommand.DELETE_RACKS);\r\n    }\r\n\r\n    viewRacks = () => {\r\n        this.updateRacks(RackCommand.GET_RACK_DETAILS);\r\n    }\r\n\r\n    changeStartingRack = (event) => {\r\n        this.setState({ firstRack: event.target.value })\r\n    }\r\n\r\n    changeEndingRack = (event) => {\r\n        this.setState({ secondRack: event.target.value })\r\n    }\r\n\r\n    closeShowStatus = () => {\r\n        this.setState({ showStatus: false })\r\n    }\r\n\r\n    changeRackType = (type) => {\r\n        this.setState({ rackType: type})\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <ErrorBoundray>\r\n                <Paper elevation={3}>\r\n                <StatusDisplay\r\n                    open={this.state.showStatus}\r\n                    severity={this.state.statusSeverity}\r\n                    closeStatus={this.closeShowStatus}\r\n                    message={this.state.statusMessage}\r\n                />\r\n                <Grid\r\n                    container\r\n                    spacing={1}\r\n                    direction=\"row\"\r\n                    justify=\"flex-start\"\r\n                    alignItems=\"center\"\r\n                >\r\n                    <Grid item xs={3}>\r\n                        <ToggleButtonGroup value={this.state.formats} onChange={this.handleFormat} aria-label=\"rackType\" exclusive>\r\n                            <ToggleButton value=\"single\" aria-label=\"single\">\r\n                                Single\r\n                            </ToggleButton>\r\n                            <ToggleButton value=\"range\" aria-label=\"range\">\r\n                                Range\r\n                            </ToggleButton>\r\n                        </ToggleButtonGroup>\r\n                        <TextField id=\"standard-basic\" variant=\"outlined\" label=\"Username\" name=\"username\" onChange={this.props.updateModelCreator}/>\r\n                    </Grid>\r\n                    <Grid item xs={3}>\r\n                        <TextField id=\"standard-basic\" variant=\"outlined\" label=\"Username\" name=\"username\" onChange={this.props.updateModelCreator}/>\r\n                    </Grid>\r\n                </Grid>\r\n                <FormControl>\r\n                    <div class=\"select-letter\">\r\n                        <Select id=\"starting-letter-selector\" value={this.state.startingRackLetter} onChange={this.changeStartingLetter}>\r\n                            {Constants.RackX.map(val => (<MenuItem value={val}>{val}</MenuItem>))}\r\n                        </Select>\r\n                        <FormHelperText>Starting Letter</FormHelperText>\r\n                    </div>\r\n                </FormControl>\r\n                <FormControl>\r\n                    <div class=\"select-letter\">\r\n                        <Select id=\"ending-letter-selector\" value={this.state.endingRackLetter} onChange={this.changeEndingLetter}>\r\n                            {Constants.RackX.map(val => (<MenuItem value={val}>{val}</MenuItem>))}\r\n                        </Select>\r\n                        <FormHelperText>Ending Letter</FormHelperText>\r\n                    </div>\r\n                </FormControl>\r\n                <FormControl>\r\n                    <div class=\"select-number\">\r\n                        <TextField\r\n                            id=\"starting-num-selector\"\r\n                            type=\"number\"\r\n                            value={this.state.startingRackNumber}\r\n                            onChange={this.changeStartingNum}\r\n                            InputProps={{ inputProps: { min: 1} }}\r\n                        />\r\n                        <FormHelperText>Starting Number</FormHelperText>\r\n                    </div>\r\n                </FormControl>\r\n                <FormControl>\r\n                    <div class=\"select-number\">\r\n                        <TextField\r\n                            id=\"ending-num-selector\"\r\n                            type=\"number\"\r\n                            value={this.state.endingRackNumber}\r\n                            onChange={this.changeEndingNum}\r\n                            InputProps={{ inputProps: { min: 1} }}\r\n                        />\r\n                        <FormHelperText>Ending Number</FormHelperText>\r\n                    </div>\r\n                </FormControl>\r\n                <div class=\"buttons\">\r\n                    <span class=\"button\">\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        onClick={this.viewRacks}\r\n                        disabled={this.state.showConfirmationBox}\r\n                    >\r\n                        View\r\n                    </Button>\r\n                    </span>\r\n                    <span class=\"button\">\r\n                        {(this.props.privilege === Privilege.ADMIN) ?\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            onClick={this.createRacks}\r\n                            disabled={this.state.showConfirmationBox}\r\n                        >\r\n                            Create\r\n                        </Button> : null}\r\n                    </span>\r\n                    <span class=\"button\">\r\n                        {(this.props.privilege === Privilege.ADMIN) ?\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            onClick={() => this.setState({ showConfirmationBox: true, })}\r\n                            disabled={this.state.showConfirmationBox}\r\n                        >\r\n                            Delete\r\n                        </Button> : null}\r\n                        </span>\r\n                    </div>\r\n                    {this.state.showConfirmationBox ? <div>\r\n                            Are you sure you wish to delete?\r\n                            <Button\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                onClick={this.deleteRacks}\r\n                            >\r\n                                Yes\r\n                            </Button>\r\n                            <Button\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                onClick={() => this.setState({ showConfirmationBox: false, })}\r\n                            >\r\n                                No\r\n                            </Button>\r\n                        </div>:null}\r\n\r\n                    </Paper>\r\n                </ErrorBoundray>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","export default function jsonToArr(incomingJSON) {\r\n    var json = {};\r\n    try {\r\n        json = JSON.parse(incomingJSON);\r\n    } catch (e) {\r\n        json = incomingJSON;\r\n    }\r\n\r\n    if (Object.entries(json).length === 0 && json.constructor === Object) {\r\n        return [];\r\n    }\r\n\r\n    const items = [];\r\n\r\n    Object.keys(json).map((key) => {\r\n        const row = [];\r\n        row.push(key);\r\n        row.push(json[key]);\r\n        items.push(row);\r\n\r\n        return key;\r\n    });\r\n    return items;\r\n}\r\n","import React from 'react';\r\nimport axios from 'axios';\r\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\r\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\r\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport getURL from '../../helpers/functions/GetURL';\r\nimport  Button from '@material-ui/core/Button';\r\nimport { StatsCommand } from \"../enums/StatsCommands.ts\";\r\nimport JSONtoArr from \"../../helpers/functions/JSONtoArr\";\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport StatusDisplay from '../../helpers/StatusDisplay';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport ErrorBoundray from '../../errors/ErrorBoundry';\r\n\r\n\r\nconst statsMainPath = 'stats/';\r\nconst tables = {\r\n    \"totalUsage\":\"Total Usage\",\r\n    \"spaceUsage\": \"Space Usage\",\r\n    \"vendorUsage\": \"Vendor Usage\",\r\n    \"modelUsage\": \"Model Usage\",\r\n    \"ownerUsage\": \"Owner Usage\",\r\n}\r\n\r\nconst tableCols = {\r\n    \"totalUsage\":[\"Total\", \"Usage\"],\r\n    \"spaceUsage\": [\"Rack\", \"Usage\"],\r\n    \"vendorUsage\": [\"Vendor\", \"Usage\"],\r\n    \"modelUsage\": [\"Model\", \"Usage\"],\r\n    \"ownerUsage\": [\"Ownder\", \"Usage\"],\r\n}\r\n\r\nexport default class StatisticsView extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            tableValues: {\r\n                \"totalUsage\":[],\r\n                \"spaceUsage\": [],\r\n                \"vendorUsage\": [],\r\n                \"modelUsage\": [],\r\n                \"ownerUsage\": [],\r\n            },\r\n            totalUsage:[],\r\n            spaceUsage:[],\r\n            vendorUsage:[],\r\n            modelUsage:[],\r\n            ownerUsage:[],\r\n\r\n            showStatus:false,\r\n            statusMessage:'',\r\n            statusSeverity:'',\r\n        };\r\n\r\n        this.closeShowStatus = this.closeShowStatus.bind(this);\r\n        this.generateReport = this.generateReport.bind(this);\r\n\r\n        axios.defaults.headers.common['token'] = this.props.token;\r\n        axios.defaults.headers.common['privilege'] = this.props.privilege;\r\n    }\r\n\r\n    generateReport() {\r\n        axios.get(getURL(statsMainPath, StatsCommand.GENERATE_REPORT)).then(response => {\r\n                try {\r\n                    var data = response.data;\r\n                    var totalUsage = [];\r\n                    var totalUsageRow = [\"Total Usage\"];\r\n                    totalUsageRow.push(data[\"totalUsage\"]);\r\n                    totalUsage.push(totalUsageRow);\r\n\r\n                    var spaceUsage = JSONtoArr(data[\"spaceUsage\"]);\r\n                    if (spaceUsage.length === 0) {\r\n                        spaceUsage.push([\"No space is currently being used\", []])\r\n                    }\r\n                    var vendorUsage = JSONtoArr(data[\"vendorUsage\"]);\r\n                    if (vendorUsage.length === 0) {\r\n                        vendorUsage.push([\"No vendors currently using space\", []])\r\n                    }\r\n                    var modelUsage = JSONtoArr(data[\"modelUsage\"]);\r\n                    if (modelUsage.length === 0) {\r\n                        modelUsage.push([\"No models currently using space\", []])\r\n                    }\r\n                    var ownerUsage = JSONtoArr(data[\"ownerUsage\"]);\r\n                    if (ownerUsage.length === 0) {\r\n                        ownerUsage.push([\"No owners currently using space\", []])\r\n                    }\r\n\r\n                    this.setState({\r\n                        showStatus: true,\r\n                        statusSeverity:\"success\",\r\n                        statusMessage: \"Success\",\r\n                        tableValues: {\r\n                            \"totalUsage\":totalUsage,\r\n                            \"spaceUsage\": spaceUsage,\r\n                            \"vendorUsage\": vendorUsage,\r\n                            \"modelUsage\": modelUsage,\r\n                            \"ownerUsage\": ownerUsage,\r\n                        },\r\n                     })\r\n                } catch {\r\n                    this.setState({ showStatus: true, statusMessage: response.data.message, statusSeverity:\"error\" })\r\n                }\r\n            });\r\n    }\r\n\r\n    closeShowStatus() {\r\n        this.setState({ showStatus: false })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <ErrorBoundray >\r\n                <StatusDisplay\r\n                    open={this.state.showStatus}\r\n                    severity={this.state.statusSeverity}\r\n                    closeStatus={this.closeShowStatus}\r\n                    message={this.state.statusMessage}\r\n                />\r\n                <div>\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        onClick={this.generateReport}\r\n                    >\r\n                        Generate New Report\r\n                    </Button>\r\n                </div>\r\n                {Object.keys(tables).map(key => (\r\n                <ExpansionPanel>\r\n                    <ExpansionPanelSummary\r\n                        expandIcon={<ExpandMoreIcon />}\r\n                    >\r\n                        <Typography>{tables[key]}</Typography>\r\n                    </ExpansionPanelSummary>\r\n                    <ExpansionPanelDetails>\r\n                        <TableContainer component={Paper}>\r\n                            <Table>\r\n                                <TableHead>\r\n                                    <TableRow >\r\n                                        {tableCols[key].map(column => (<TableCell><span id={column}>{column}</span></TableCell>))}\r\n                                    </TableRow>\r\n                                </TableHead>\r\n                                <TableBody>\r\n                                {this.state.tableValues[key].map(row => (\r\n                                    <TableRow>\r\n                                        {row.map(column => (<TableCell><span id={column}>{column + (isNaN(column) ? \"\" : \"%\")}</span></TableCell>))}\r\n                                    </TableRow>\r\n                                ))}\r\n                                </TableBody>\r\n                            </Table>\r\n                        </TableContainer>\r\n                    </ExpansionPanelDetails>\r\n                </ExpansionPanel>\r\n                ))}\r\n                </ErrorBoundray>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\n\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport AccountCircle from '@material-ui/icons/AccountCircle';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\n\r\nimport ModelsView from './models/pages/ModelsView';\r\nimport UsersView from './users/pages/UsersView';\r\nimport AssetsView from './assets/pages/AssetsView';\r\nimport RacksView from './racks/pages/RacksView';\r\nimport StatisticsView from './statistics/pages/StatisticsView';\r\n\r\nimport { Privilege } from './enums/privilegeTypes.ts'\r\n\r\nimport ErrorBoundry from './errors/ErrorBoundry';\r\n\r\nimport '../stylesheets/TabStyles.css';\r\n\r\nconst useStyles = theme => ({\r\n    root: {\r\n      flexGrow: 1,\r\n    },\r\n    menuButton: {\r\n      marginRight: theme.spacing(2),\r\n    },\r\n    title: {\r\n      flexGrow: 1,\r\n    },\r\n    tab:{\r\n        flexGrow:'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        maxWidth: \"100%\",\r\n        width:\"100%\",\r\n        margin:\"0 auto\",\r\n    }\r\n  });\r\n\r\nclass TabViewer extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            currentTabID:0,\r\n            anchorEl: null,\r\n            isMenuOpen:false,\r\n        };\r\n        this.handleChange = this.handleChange.bind(this);\r\n    }\r\n\r\n    handleChange(event, newValue) {\r\n        this.setState({ currentTabID: newValue })\r\n    }\r\n\r\n    handleProfileMenuOpen = (event) => {\r\n        this.setState({ anchorEl: event.currentTarget, isMenuOpen:true });\r\n    }\r\n\r\n    handleMenuClose = () => {\r\n        this.setState({ anchorEl: null, isMenuOpen:false });\r\n    };\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n\r\n        return (\r\n        <div className={classes.root}>\r\n            <ErrorBoundry>\r\n            <AppBar position=\"static\">\r\n                <Toolbar>\r\n                    <Typography variant=\"h6\" className={classes.title}>\r\n                        Hyposoft Server Management\r\n                    </Typography>\r\n                    <div>\r\n                        <IconButton\r\n                            aria-label=\"account of current user\"\r\n                            aria-controls=\"menu-appbar\"\r\n                            aria-haspopup=\"true\"\r\n                            color=\"inherit\"\r\n                            onClick={this.handleProfileMenuOpen}\r\n                        >\r\n                            <AccountCircle />\r\n                        </IconButton>\r\n                        <Menu\r\n                            anchorEl={this.state.anchorEl}\r\n                            anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n                            id='primary-search-account-menu'\r\n                            keepMounted\r\n                            transformOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n                            open={this.state.isMenuOpen}\r\n                            onClose={this.handleMenuClose}\r\n                        >\r\n                            <MenuItem>{\"Username: \" + this.props.username}</MenuItem>\r\n                            <MenuItem>{\"Privilege: \" + this.props.privilege}</MenuItem>\r\n                            <MenuItem onClick={this.props.logout} >LOGOUT</MenuItem>\r\n                        </Menu>\r\n                    </div>\r\n                </Toolbar>\r\n            </AppBar>\r\n\r\n            <Tabs value={this.state.currentTabID} onChange={this.handleChange}\r\n                indicatorColor=\"primary\"\r\n                textColor=\"primary\"\r\n                centered\r\n            >\r\n                    <Tab value={0} style={{flexGrow: 1,}} label=\"Models\"> </Tab>\r\n                    <Tab value={1} style={{flexGrow: 1,}} label=\"Assets\" ></Tab>\r\n                    {(this.props.privilege === Privilege.ADMIN) ? <Tab value={2} style={{flexGrow: 1,}} label=\"Users\"></Tab> : null}\r\n                    <Tab value={3} style={{flexGrow: 1,}} label=\"Racks\" />\r\n                    <Tab value={4} style={{flexGrow: 1,}} label=\"Statistics\" />\r\n            </Tabs>\r\n            <Typography\r\n                component=\"div\"\r\n                role=\"tabpanel\"\r\n                hidden={this.state.currentTabID !== 0}\r\n                id={`simple-tabpanel-0`}\r\n                aria-labelledby={`simple-tab-0`}\r\n            >\r\n                <Container className={classes.tab} ><ModelsView token={this.props.token} privilege={this.props.privilege} /></Container>\r\n            </Typography>\r\n            <Typography\r\n                component=\"div\"\r\n                role=\"tabpanel\"\r\n                hidden={this.state.currentTabID !== 1}\r\n                id={`simple-tabpanel-0`}\r\n                aria-labelledby={`simple-tab-0`}\r\n            >\r\n                <Container className={classes.tab} ><AssetsView token={this.props.token} privilege={this.props.privilege} /></Container>\r\n            </Typography>\r\n            <Typography\r\n                component=\"div\"\r\n                role=\"tabpanel\"\r\n                hidden={this.state.currentTabID !== 2}\r\n                id={`simple-tabpanel-0`}\r\n                aria-labelledby={`simple-tab-0`}\r\n            >\r\n                <Container className={classes.tab} ><UsersView token={this.props.token} privilege={this.props.privilege} /></Container>\r\n            </Typography>\r\n            <Typography\r\n                component=\"div\"\r\n                role=\"tabpanel\"\r\n                hidden={this.state.currentTabID !== 3}\r\n                id={`simple-tabpanel-0`}\r\n                aria-labelledby={`simple-tab-0`}\r\n            >\r\n                <Container className={classes.tab} ><RacksView token={this.props.token} privilege={this.props.privilege} /></Container>\r\n            </Typography>\r\n            <Typography\r\n                component=\"div\"\r\n                role=\"tabpanel\"\r\n                hidden={this.state.currentTabID !== 4}\r\n                id={`simple-tabpanel-0`}\r\n                aria-labelledby={`simple-tab-0`}\r\n            >\r\n                <Container className={classes.tab} ><StatisticsView token={this.props.token} privilege={this.props.privilege} /></Container>\r\n            </Typography>\r\n            </ErrorBoundry>\r\n        </div>);\r\n    }\r\n}\r\n\r\n\r\nexport default withStyles(useStyles)(TabViewer);\r\n","import React from \"react\";\r\nimport Login from \"./Login\";\r\nimport TabViewer from \"./Tabs\";\r\nimport axios from 'axios';\r\nimport getURL from './helpers/functions/GetURL';\r\n\r\nconst storedToken = 'token';\r\nconst storedPrivilege = 'privilege';\r\nconst storedLoggedIn = 'loggedIn';\r\nconst storedUsername = 'username';\r\n\r\nexport default class PageSelector extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      token:sessionStorage.getItem(storedToken) || '',\r\n      privilege:sessionStorage.getItem(storedPrivilege) || '',\r\n      loggedIn:sessionStorage.getItem(storedLoggedIn) || '',\r\n      username:sessionStorage.getItem(storedUsername) || '',\r\n    };\r\n\r\n    this.login = this.login.bind(this);\r\n    this.logout = this.logout.bind(this);\r\n  }\r\n\r\n  login(token, username, privilege) {\r\n    sessionStorage.setItem(storedToken, token);\r\n    sessionStorage.setItem(storedPrivilege, privilege);\r\n    sessionStorage.setItem(storedLoggedIn, true);\r\n    sessionStorage.setItem(storedUsername, username);\r\n\r\n    axios.defaults.headers.common['token'] = this.props.token;\r\n    axios.defaults.headers.common['privilege'] = this.props.privilege;\r\n\r\n    this.setState({\r\n      token:token,\r\n      privilege:privilege,\r\n      loggedIn:true,\r\n      username: username,\r\n    })\r\n  }\r\n\r\n  logout() {\r\n    axios.get(getURL('users/', 'logout'));\r\n\r\n    this.setState({\r\n      token:'',\r\n      privilege:'',\r\n      loggedIn:false,\r\n      username:'',\r\n    });\r\n\r\n    sessionStorage.removeItem(storedToken);\r\n    sessionStorage.removeItem(storedPrivilege);\r\n    sessionStorage.removeItem(storedLoggedIn);\r\n    sessionStorage.removeItem(storedUsername);\r\n\r\n    window.location.reload();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        {this.state.loggedIn ?  <TabViewer token={this.state.token} username={this.state.username} privilege={this.state.privilege} logout={this.logout} /> : <Login loginFunc={this.login} shib={this.props.redirected}/>}\r\n      </div>\r\n    );\r\n  }\r\n\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './stylesheets/index.css';\nimport PageSelector from './javascript/PageSelector';\n\nReactDOM.render(<PageSelector redirected={document.referrer}/>, document.getElementById('root'));\n"],"sourceRoot":""}
