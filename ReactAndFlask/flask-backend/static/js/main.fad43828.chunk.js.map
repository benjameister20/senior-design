{"version":3,"sources":["javascript/enums/privilegeTypes.ts","javascript/Constants.jsx","javascript/helpers/functions/GetURL.jsx","javascript/models/enums/ModelCommands.ts","javascript/models/enums/ModelInputs.ts","javascript/helpers/StatusDisplay.jsx","javascript/errors/ErrorBoundry.jsx","javascript/Login.jsx","javascript/models/helpers/ButtonsModel.jsx","javascript/models/helpers/FilterModel.jsx","javascript/models/helpers/DetailModel.jsx","javascript/models/helpers/CreateModel.jsx","javascript/users/enums/UserCommands.ts","javascript/users/enums/UserInputs.ts","javascript/helpers/UploadModal.jsx","javascript/helpers/TableView.jsx","javascript/models/ModelConstants.jsx","javascript/models/pages/ModelsView.jsx","javascript/users/helpers/ButtonsUser.jsx","javascript/instances/enums/InstanceCommands.ts","javascript/instances/enums/InstanceInputs.ts","javascript/users/helpers/FilterUser.jsx","javascript/users/helpers/DetailUser.jsx","javascript/users/helpers/CreateUser.jsx","javascript/users/UserConstants.jsx","javascript/users/pages/UsersView.jsx","javascript/racks/enums/RackCommands.ts","javascript/instances/helpers/InstanceButtons.jsx","javascript/instances/helpers/FilterInstance.jsx","javascript/instances/helpers/DetailInstance.jsx","javascript/instances/helpers/CreateInstance.jsx","javascript/instances/InstanceConstants.jsx","javascript/instances/pages/InstancesView.jsx","javascript/racks/pages/RacksView.jsx","javascript/statistics/enums/StatsCommands.ts","javascript/helpers/functions/JSONtoArr.jsx","javascript/statistics/pages/StatisticsView.jsx","javascript/Tabs.jsx","javascript/PageSelector.jsx","index.jsx"],"names":["Privilege","serverEndpoint","RackX","RackY","getURL","path","endpoint","Constants","ModelCommand","ModelInput","StatusDisplay","props","state","Snackbar","open","this","autoHideDuration","onClose","closeStatus","elevation","variant","severity","message","IconButton","aria-label","color","size","onClick","fontSize","React","Component","ErrorBoundary","hasError","error","errorInfo","children","Login","username","password","statusMessage","showStatus","statusSeverity","closeShowStatus","bind","submitCredentials","axios","post","then","response","data","setState","loginFunc","ADMIN","event","target","value","TextField","id","label","required","ref","onChange","updateUsername","type","updatePassword","Button","ButtonsModel","startIcon","openImportModal","downloadTable","FilterModel","filters","hasOwnProperty","forceUpdate","search","map","filter","index","InputBase","placeholder","inputProps","updateSearchText","createInputs","name","inputs","DetailModel","updateColor","updateModelColorDetails","hex","showConfirmationBox","closeModal","confirmDelete","deleteItem","delete","showDetailedView","ExpansionPanel","ExpansionPanelSummary","expandIcon","Typography","ExpansionPanelDetails","statusOpen","statusClose","loading","CircularProgress","Autocomplete","options","includeInputInList","freeSolo","defaultValue","defaultValues","vendor","renderInput","params","updateModelCreator","onBlur","fullWidth","disabled","modelNumber","height","powerPorts","cpu","memory","storage","comments","edit","UserCommand","UserInput","CreateModel","console","log","updateModelColor","createModel","UploadModal","Modal","style","top","left","transform","background","aria-labelledby","aria-describedby","showImportModal","closeImportModal","accept","chooseFile","uploadFile","textDescription","TableView","TableContainer","component","Paper","Table","className","minWidth","TableHead","TableRow","columns","col","TableCell","TableBody","vals","row","keys","key","scope","GENERAL_MODEL_ERROR","modelsMainPath","ModelsView","create","createdModel","Vendor","model_number","Height","display_color","ethernet_ports","power_ports","CPU","Memory","Storage","Comment","getVendorList","searchModels","createStatusOpen","createStatusMessage","createStatusSeverity","catch","ModelConstants","editModel","originalVendor","originalModelNumber","originalHeight","detailedValues","detailStatusOpen","detailStatusMessage","detailStatusSeverity","deleteModel","detailViewModel","modelNum","detailView","headers","detailViewLoading","viewVendor","viewModel","searchVendor","searchModelNum","searchHeight","items","searchText","get","VENDOR_VALUES","vendorsList","results","madeVendorQuery","sendUploadedFile","UPLOAD_FILE","summary","EXPORT_FILE","csvData","csvLink","link","click","openCreateModal","showCreateModal","closeCreateModal","closeDetailedView","updateModelEdited","reason","createStatusClose","detailStatusClose","FormData","append","importedFile","files","initialize","createdVendor","createdModelNum","createdHeight","createdDispClr","createdEthPorts","createdPwrPorts","createdCPU","createdMem","createdStorage","createdComments","deleteVendor","defaults","common","token","privilege","filename","r","useAutocomplete","USER","InstanceCommand","InstanceInput","Filters","DetailedView","input","CreateModal","class","GENERAL_USER_ERROR","usersMainPath","UsersView","createUser","createdUser","Username","Password","display_name","Email","searchUsers","UserConstants","editUser","originalUsername","deleteUser","deleteUsername","detailViewUser","viewUser","searchUsernm","searchEml","searchDspNm","searchPriv","initialized","updateUserCreator","updateUserEdited","createStatus","RackCommand","InstanceButtons","FilterInstance","DetailInstance","CreateInstance","GENERAL_INSTANCE_ERROR","InstancesView","createdInstance","deleteInstanceRack","deleteInstancerack_position","viewInstanceRack","viewInstancerack_position","searchModel","searchHostname","searchRack","searchRackU","originalRack","originalrack_position","modelList","madeModelQuery","Model","Hostname","Rack","RackU","Owner","searchInstances","InstanceConstants","rack","rack_position","GET_ALL_MODELS","getModelList","detailViewInstance","createInstance","updateInstanceCreator","updateInstanceEdited","editInstance","deleteInstance","StatsCommand","RacksView","startingRackLetter","endingRackLetter","startingRackNumber","endingRackNumber","getAllRacks","updateRacks","createRacks","deleteRacks","viewRacks","changeStartingLetter","changeEndingLetter","changeStartingNum","changeEndingNum","GET_ALL_RACKS","command","GET_RACK_DETAILS","win","window","focus","CREATE_RACKS","DELETE_RACKS","FormControl","Select","val","MenuItem","FormHelperText","jsonToArr","incomingJSON","json","JSON","parse","e","Object","entries","length","constructor","push","tables","tableCols","StatisticsView","tableValues","totalUsage","spaceUsage","vendorUsage","modelUsage","ownerUsage","generateReport","GENERATE_REPORT","totalUsageRow","JSONtoArr","column","isNaN","TabViewer","handleProfileMenuOpen","anchorEl","currentTarget","isMenuOpen","handleMenuClose","currentTabID","handleChange","newValue","AppBar","position","aria-controls","aria-haspopup","Menu","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","logout","Tabs","indicatorColor","textColor","centered","Tab","flexGrow","role","hidden","storedToken","storedPrivilege","storedLoggedIn","storedUsername","PageSelector","sessionStorage","getItem","loggedIn","login","setItem","removeItem","location","reload","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.fad43828.chunk.js","sourcesContent":["export enum Privilege  {\r\n    ADMIN = \"admin\",\r\n    USER = \"user\",\r\n};\r\n","/**\r\n * Constants file\r\n */\r\n\r\nexport const localServerEndpoint = 'http://localhost:4010/';\r\nexport const testServerEndpoint = ' https://parseltongue-finishinge-lfw68m.herokuapp.com/';\r\nexport const devServerEndpoint = 'https://parseltongue-dev.herokuapp.com/';\r\nexport const prodServerEndpoint = 'https://parseltongue-prod.herokuapp.com/';\r\n\r\nexport const serverEndpoint = localServerEndpoint;\r\n\r\n\r\nexport const RackX = [\r\n    'A', 'B', 'C', 'D', 'E',\r\n    'F', 'G', 'H', 'I', 'J',\r\n    'K', 'L', 'M', 'N', 'O',\r\n    'P', 'Q', 'R', 'S', 'T',\r\n    'W', 'X', 'Y', 'Z',\r\n]\r\n\r\nexport const RackY = [\r\n    1, 2, 3, 4, 5, 6, 7, 8, 9, 10,\r\n    11, 12, 13, 14, 15, 16, 17, 18, 19 , 20,\r\n    21, 22, 23, 24, 25, 26, 27, 28, 29, 30,\r\n    31, 32, 33, 34, 35, 36, 37, 38, 39, 40,\r\n    41, 42, 43, 44, 45, 46, 47, 48, 49, 50,\r\n    51, 52, 53, 54, 55, 56, 57, 58, 59, 60,\r\n]\r\n","import * as Constants from '../../Constants';\r\n\r\nexport default function getURL(path, endpoint) {\r\n    return Constants.serverEndpoint + path + endpoint;\r\n}\r\n","export enum ModelCommand {\r\n    create = 'create/',\r\n    delete = 'delete/',\r\n    edit = 'edit/',\r\n    view = 'view/',\r\n    detailView = 'detailView/',\r\n    search = 'search/',\r\n    VENDOR_VALUES = 'assistedvendor/',\r\n    UPLOAD_FILE = 'import/',\r\n    EXPORT_FILE = 'export/'\r\n}\r\n","export enum ModelInput {\r\n    Vendor = 'vendor',\r\n    model_number = 'model_number',\r\n    Height = 'height',\r\n    display_color = 'display_color',\r\n    ethernet_ports = 'ethernet_ports',\r\n    power_ports = 'power_ports',\r\n    CPU = 'cpu',\r\n    Memory = 'memory',\r\n    Storage = 'storage',\r\n    Comment = 'comment'\r\n}\r\n","import React from 'react';\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport Button from '@material-ui/core/Button';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\n\r\n\r\nexport default class StatusDisplay extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n\r\n        };\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Snackbar open={this.props.open} autoHideDuration={12000} onClose={this.props.closeStatus}>\r\n                    <MuiAlert elevation={6} variant=\"filled\"\r\n                        severity={this.props.severity}\r\n                    >\r\n                        <div>\r\n                        {this.props.message}\r\n                        <IconButton\r\n                            aria-label=\"close\"\r\n                            color=\"inherit\"\r\n                            size=\"small\"\r\n                            onClick={this.props.closeStatus}\r\n                        >\r\n                            <CloseIcon fontSize=\"inherit\" />\r\n                        </IconButton>\r\n                        </div>\r\n                    </MuiAlert >\r\n                </Snackbar>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\r\n\r\nexport default class ErrorBoundary extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = { hasError: false };\r\n    }\r\n\r\n    static getDerivedStateFromError(error) {\r\n      // Update state so the next render will show the fallback UI.\r\n      return \"An unforseen error occurred. Please refresh the page and try again later.\";\r\n    }\r\n\r\n    componentDidCatch(error, errorInfo) {\r\n      // You can also log the error to an error reporting service\r\n      //logErrorToMyService(error, errorInfo);\r\n    }\r\n\r\n    render() {\r\n      if (this.state.hasError) {\r\n        // You can render any custom fallback UI\r\n        return <h1>Something went wrong.</h1>;\r\n      }\r\n\r\n      return this.props.children;\r\n    }\r\n}\r\n","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport axios from 'axios';\r\nimport getURL from './helpers/functions/GetURL';\r\nimport * as Constants from './Constants';\r\nimport { Privilege } from './enums/privilegeTypes.ts'\r\nimport StatusDisplay from './helpers/StatusDisplay';\r\nimport ErrorBoundry from './errors/ErrorBoundry';\r\n\r\nconst loginMainPath = 'users/';\r\n\r\nexport default class Login extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            username:'',\r\n            password:'',\r\n            statusMessage:'',\r\n            showStatus:false,\r\n            statusSeverity:'',\r\n        };\r\n\r\n        this.closeShowStatus = this.closeShowStatus.bind(this);\r\n        this.submitCredentials = this.submitCredentials.bind(this);\r\n    }\r\n\r\n    submitCredentials() {\r\n        axios.post(\r\n            getURL(loginMainPath, 'authenticate'),\r\n            {\r\n                \"username\":this.state.username,\r\n                \"password\":this.state.password,\r\n            }\r\n            ).then(response => {\r\n                var valid = response.data['message'];\r\n                if (valid == 'success') {\r\n                    this.setState({ message: '' });\r\n                    this.props.loginFunc(response.data['token'], response.data['privilege'], this.state.username);\r\n                } else {\r\n                    this.setState({ showStatus:true, statusMessage:response.data['message'] });\r\n                }\r\n            });\r\n        this.props.loginFunc('token', \"Administrator\", Privilege.ADMIN);\r\n    }\r\n\r\n    updateUsername(event) {\r\n        this.setState({ username: event.target.value })\r\n    }\r\n\r\n    updatePassword(event) {\r\n        this.setState({ password: event.target.value })\r\n    }\r\n\r\n    closeShowStatus() {\r\n        this.setState({ showStatus: false })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <ErrorBoundry>\r\n                <StatusDisplay\r\n                    open={this.state.showStatus}\r\n                    severity={this.state.statusSeverity}\r\n                    closeStatus={this.closeShowStatus}\r\n                    message={this.state.statusMessage}\r\n                />\r\n                <TextField\r\n                    id=\"outlined-basic\"\r\n                    label=\"Username\"\r\n                    variant=\"outlined\"\r\n                    required=\"true\"\r\n                    ref='username'\r\n                    onChange={this.updateUsername.bind(this)}\r\n                />\r\n                <TextField\r\n                    id=\"outlined-basic\"\r\n                    label=\"Password\"\r\n                    variant=\"outlined\"\r\n                    required=\"true\"\r\n                    ref='password'\r\n                    type=\"password\"\r\n                    onChange={this.updatePassword.bind(this)}\r\n                />\r\n                <Button\r\n                    onClick={this.submitCredentials}\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                >\r\n                    Sign In\r\n                </Button>\r\n                </ErrorBoundry>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\r\nimport CloudDownloadIcon from '@material-ui/icons/CloudDownload';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nexport default class ButtonsModel extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n\r\n        };\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div>\r\n                <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    startIcon={<CloudUploadIcon />}\r\n                    onClick={this.props.openImportModal}\r\n                >\r\n                    Import\r\n                </Button>\r\n                <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    startIcon={<CloudDownloadIcon />}\r\n                    onClick={this.props.downloadTable}\r\n                >\r\n                    Export\r\n                </Button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nexport default class FilterModel extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            filters:{},\r\n        };\r\n    }\r\n\r\n    updateSearchText(event) {\r\n        if (this.state.filters.hasOwnProperty(event.target.id)) {\r\n            this.state.filters[event.target.id] = event.target.value;\r\n            this.forceUpdate();\r\n        } else {\r\n            var value = (event.target.value == null) ? '' : event.target.value;\r\n            this.state.filters[event.target.id] = event.target.value;\r\n            //this.state.filters.push({ key:event.target.id, value: value});\r\n            this.forceUpdate();\r\n        }\r\n    }\r\n\r\n    search() {\r\n        this.props.search(this.state.filters);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.props.filters.map((filter, index) => (\r\n                    <div>\r\n                        <SearchIcon />\r\n                        <InputBase\r\n                            placeholder={filter+\" filter\"}\r\n                            inputProps={{ 'aria-label': 'search' }}\r\n                            onChange={this.updateSearchText.bind(this)}\r\n                            id={filter}\r\n                        />\r\n                    </div>\r\n                ))\r\n                }\r\n                <div>\r\n                    <Button\r\n                        onClick={this.search.bind(this)}\r\n                    >\r\n                        Search\r\n                    </Button>\r\n                </div>\r\n                Click the search button to populate table. Searching with empty filters searches over all values. Click on row values to see detailed view.\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from '@material-ui/core/Button';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\r\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\r\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport { CompactPicker } from 'react-color';\r\nimport StatusDisplay from '../../helpers/StatusDisplay';\r\n\r\nfunction createInputs(name, label) {\r\n    return {label, name};\r\n}\r\n\r\nconst inputs = {\r\n    \"vendor\":createInputs('vendor', \"Vendor\", ),\r\n    \"modelNumber\":createInputs('model_number', \"Model Number\"),\r\n    \"height\":createInputs('height', \"Height\"),\r\n    \"displayColor\":createInputs('display_color', \"Display Color\"),\r\n    \"powerPorts\":createInputs('power_ports', \"Power Ports\"),\r\n    \"cpu\":createInputs('cpu', \"CPU\"),\r\n    \"memory\":createInputs('memory', \"Memory\"),\r\n    \"storage\":createInputs('storage', \"Storage\"),\r\n    \"comments\":createInputs('comments', \"Comments\"),\r\n}\r\n\r\nexport default class DetailModel extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            showConfirmationBox:false,\r\n            color:null,\r\n        };\r\n\r\n        this.closeModal = this.closeModal.bind(this);\r\n        this.confirmDelete = this.confirmDelete.bind(this);\r\n        this.deleteItem = this.deleteItem.bind(this);\r\n    }\r\n\r\n    confirmDelete() {\r\n        this.setState({ showConfirmationBox: true });\r\n    }\r\n\r\n    closeModal() {\r\n        this.setState({showConfirmationBox:false,});\r\n    }\r\n\r\n    deleteItem() {\r\n        this.setState({ showConfirmationBox: false });\r\n        this.props.delete();\r\n    }\r\n\r\n    updateColor = (color) => {\r\n        this.setState({ color: color });\r\n        this.props.updateModelColorDetails(color.hex);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n        <div>\r\n            {!this.props.showDetailedView ? null:\r\n            <ExpansionPanel >\r\n                    <ExpansionPanelSummary\r\n                        expandIcon={<ExpandMoreIcon />}\r\n                    >\r\n                        <Typography>Model Details</Typography>\r\n                    </ExpansionPanelSummary>\r\n                    <ExpansionPanelDetails>\r\n                        <StatusDisplay\r\n                            open={this.props.statusOpen}\r\n                            severity={this.props.statusSeverity}\r\n                            closeStatus={this.props.statusClose}\r\n                            message={this.props.statusMessage}\r\n                            autoHideDuration={6000}\r\n                        />\r\n                    {\r\n                this.props.loading ? <CircularProgress /> :\r\n                <div>\r\n                    <Autocomplete\r\n                            id=\"select-vendor\"\r\n                            options={this.props.options}\r\n                            includeInputInList\r\n                            freeSolo\r\n                            defaultValue={this.props.defaultValues[inputs.vendor.name]}\r\n                            renderInput={params => (\r\n                            <TextField {...params}\r\n                                label={inputs.vendor.label}\r\n                                name={inputs.vendor.name}\r\n                                onChange={this.props.updateModelCreator}\r\n                                onBlur={this.props.updateModelCreator}\r\n                                variant=\"outlined\" fullWidth\r\n                                disabled={this.props.disabled}\r\n                            />\r\n                            )}\r\n                        />\r\n                        <TextField id=\"standard-basic\" variant=\"outlined\"\r\n                            label={inputs.modelNumber.label} name={inputs.modelNumber.name}\r\n                            onChange={this.props.updateModelCreator}\r\n                            disabled={this.props.disabled}\r\n                            defaultValue={this.props.defaultValues[inputs.modelNumber.name]}\r\n                        />\r\n                        <TextField id=\"standard-basic\" variant=\"outlined\"\r\n                            label={inputs.height.label} name={inputs.height.name}\r\n                            onChange={this.props.updateModelCreator}\r\n                            disabled={this.props.disabled}\r\n                            defaultValue={this.props.defaultValues[inputs.height.name]}\r\n                        />\r\n                        <CompactPicker\r\n                            color={this.state.color || this.props.defaultValues[\"display_color\"]}\r\n                            onChange={this.updateColor}\r\n\r\n                        />\r\n                        <TextField id=\"standard-basic\" variant=\"outlined\"\r\n                            label={inputs.powerPorts.label} name={inputs.powerPorts.name}\r\n                            onChange={this.props.updateModelCreator}\r\n                            disabled={this.props.disabled}\r\n                            defaultValue={this.props.defaultValues[inputs.powerPorts.name]}\r\n                        />\r\n                        <TextField id=\"standard-basic\" variant=\"outlined\"\r\n                            label={inputs.cpu.label} name={inputs.cpu.name}\r\n                            onChange={this.props.updateModelCreator}\r\n                            disabled={this.props.disabled}\r\n                            defaultValue={this.props.defaultValues[inputs.cpu.name]}\r\n                        />\r\n                        <TextField id=\"standard-basic\" variant=\"outlined\"\r\n                            label={inputs.memory.label} name={inputs.memory.name}\r\n                            onChange={this.props.updateModelCreator}\r\n                            disabled={this.props.disabled}\r\n                            defaultValue={this.props.defaultValues[inputs.memory.name]}\r\n                        />\r\n                        <TextField id=\"standard-basic\" variant=\"outlined\"\r\n                            label={inputs.storage.label} name={inputs.storage.name}\r\n                            onChange={this.props.updateModelCreator}\r\n                            disabled={this.props.disabled}\r\n                            defaultValue={this.props.defaultValues[inputs.storage.name]}\r\n                        />\r\n                        <TextField id=\"standard-basic\" variant=\"outlined\"\r\n                            label={inputs.comments.label} name={inputs.comments.name}\r\n                            onChange={this.props.updateModelCreator}\r\n                            disabled={this.props.disabled}\r\n                            defaultValue={this.props.defaultValues[inputs.comments.name]}\r\n                        />\r\n\r\n                    {this.props.disabled ? null:\r\n                    <div>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            onClick={this.props.edit}\r\n                            disabled={this.state.showConfirmationBox}\r\n                        >\r\n                            Save\r\n                        </Button>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            onClick={this.confirmDelete}\r\n                            disabled={this.state.showConfirmationBox}\r\n                        >\r\n                            Delete\r\n                        </Button>\r\n                    </div>}\r\n                    {this.state.showConfirmationBox ? <div>\r\n                        Are you sure you wish to delete?\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            onClick={this.deleteItem}\r\n                        >\r\n                            Yes\r\n                        </Button>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            onClick={this.closeModal}\r\n                        >\r\n                            No\r\n                        </Button>\r\n                    </div>:null}\r\n                </div>}\r\n                    </ExpansionPanelDetails>\r\n                </ExpansionPanel>}\r\n        </div>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\n\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from '@material-ui/core/Button';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\r\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\r\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport { CompactPicker } from 'react-color';\r\n\r\nimport '../stylesheets/ModelStyles.css';\r\nimport StatusDisplay from '../../helpers/StatusDisplay';\r\n\r\nfunction createInputs(name, label) {\r\n    return {label, name};\r\n}\r\n\r\nconst inputs = {\r\n    \"vendor\":createInputs('vendor', \"Vendor\", ),\r\n    \"modelNumber\":createInputs('model_number', \"Model Number\"),\r\n    \"height\":createInputs('height', \"Height\"),\r\n    \"displayColor\":createInputs('display_color', \"Display Color\"),\r\n    \"powerPorts\":createInputs('power_ports', \"Power Ports\"),\r\n    \"cpu\":createInputs('cpu', \"CPU\"),\r\n    \"memory\":createInputs('memory', \"Memory\"),\r\n    \"storage\":createInputs('storage', \"Storage\"),\r\n    \"comments\":createInputs('comments', \"Comments\"),\r\n}\r\n\r\nexport default class CreateModel extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            color:'#000',\r\n        };\r\n    }\r\n\r\n    updateColor = (color) => {\r\n        console.log(color);\r\n        this.setState({ color: color });\r\n        this.props.updateModelColor(color.hex);\r\n        console.log(\"state: \" + this.state.color);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n        <div>\r\n            <ExpansionPanel>\r\n                    <ExpansionPanelSummary\r\n                        expandIcon={<ExpandMoreIcon />}\r\n                    >\r\n                        <Typography>Create Model</Typography>\r\n                    </ExpansionPanelSummary>\r\n                    <ExpansionPanelDetails>\r\n                        <StatusDisplay\r\n                            open={this.props.statusOpen}\r\n                            severity={this.props.statusSeverity}\r\n                            closeStatus={this.props.statusClose}\r\n                            message={this.props.statusMessage}\r\n                        />\r\n                    <div>\r\n                        <Autocomplete\r\n                            id=\"select-vendor\"\r\n                            options={this.props.options}\r\n                            includeInputInList\r\n                            freeSolo\r\n                            renderInput={params => (\r\n                            <TextField {...params} label={inputs.vendor.label} name={inputs.vendor.name} onChange={this.props.updateModelCreator} onBlur={this.props.updateModelCreator} variant=\"outlined\" fullWidth />\r\n                            )}\r\n                        />\r\n                        <TextField id=\"standard-basic\" variant=\"outlined\" label={inputs.modelNumber.label} name={inputs.modelNumber.name} onChange={this.props.updateModelCreator}/>\r\n                        <TextField id=\"standard-basic\" variant=\"outlined\" label={inputs.height.label} name={inputs.height.name} onChange={this.props.updateModelCreator}/>\r\n                        <CompactPicker\r\n                            color={this.state.color}\r\n                            onChange={this.updateColor}\r\n\r\n                        />\r\n                        <TextField id=\"standard-basic\" variant=\"outlined\" label={inputs.powerPorts.label} name={inputs.powerPorts.name} onChange={this.props.updateModelCreator}/>\r\n                        <TextField id=\"standard-basic\" variant=\"outlined\" label={inputs.cpu.label} name={inputs.cpu.name} onChange={this.props.updateModelCreator}/>\r\n                        <TextField id=\"standard-basic\" variant=\"outlined\" label={inputs.memory.label} name={inputs.memory.name} onChange={this.props.updateModelCreator}/>\r\n                        <TextField id=\"standard-basic\" variant=\"outlined\" label={inputs.storage.label} name={inputs.storage.name} onChange={this.props.updateModelCreator}/>\r\n                        <TextField id=\"standard-basic\" variant=\"outlined\" label={inputs.comments.label} name={inputs.comments.name} onChange={this.props.updateModelCreator}/>\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        onClick={this.props.createModel}\r\n                    >\r\n                        Create\r\n                    </Button>\r\n                </div>\r\n                    </ExpansionPanelDetails>\r\n                </ExpansionPanel>\r\n        </div>\r\n        );\r\n    }\r\n}\r\n","export enum UserCommand {\r\n    create = 'create/',\r\n    delete = 'delete/',\r\n    edit = 'edit/',\r\n    view = 'view/',\r\n    detailView = 'detailView/',\r\n    search='search/',\r\n}\r\n","export enum UserInput {\r\n    Username='username',\r\n    Password='password',\r\n    Email='email',\r\n    display_name='display_name',\r\n    Privilege='privilege',\r\n}\r\n","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport { palette } from '@material-ui/system';\r\n\r\nexport default class UploadModal extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {};\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Modal\r\n                style={{top: `50%`,left: `50%`,transform: `translate(-50%, -50%)`, background:'#AAAAAA'}}\r\n                aria-labelledby=\"simple-modal-title\"\r\n                aria-describedby=\"simple-modal-description\"\r\n                open={this.props.showImportModal}\r\n                onClose={this.props.closeImportModal}\r\n            >\r\n                <div>\r\n                    <div>\r\n                    <input\r\n                        type='file'\r\n                        accept=\".csv\"\r\n                        onChange={this.props.chooseFile}\r\n                    />\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        onClick={this.props.uploadFile}\r\n                    >\r\n                        Upload\r\n                    </Button>\r\n                    </div>\r\n                    <p\r\n                        style={{color: `white`}}\r\n                    >\r\n                        {this.props.textDescription}\r\n                    </p>\r\n                </div>\r\n            </Modal>\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nexport default class TableView extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n\r\n    };\r\n  }\r\n\r\n  showDetailedView(event) {\r\n    this.props.showDetailedView(event.target.id);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <TableContainer component={Paper}>\r\n          <Table className={{minWidth: 650}} aria-label=\"simple table\">\r\n            <TableHead>\r\n              <TableRow >\r\n                {this.props.columns.map(col => (<TableCell><span id={col}>{col}</span></TableCell>))}\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {this.props.vals.map((row, index)=> (\r\n              <TableRow>\r\n                {this.props.keys.map(key => (<TableCell scope=\"row\"><span id={index} onClick={this.showDetailedView.bind(this)}>{row[key]}</span></TableCell>))}\r\n              </TableRow>\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","\r\n\r\n\r\nexport const GENERAL_MODEL_ERROR =  \"There was an error in the backend. Could not perform the given model operation at this time.\";\r\n","import React from 'react';\r\nimport axios from 'axios';\r\nimport { CSVLink } from \"react-csv\";\r\n\r\nimport { ModelCommand } from '../enums/ModelCommands.ts'\r\nimport { ModelInput } from '../enums/ModelInputs.ts'\r\n\r\nimport ButtonsModel from '../helpers/ButtonsModel';\r\nimport FilterModel from '../helpers/FilterModel';\r\nimport DetailModel from '../helpers/DetailModel';\r\nimport CreateModel from '../helpers/CreateModel';\r\n\r\nimport { Privilege } from '../../enums/privilegeTypes.ts'\r\n\r\nimport UploadModal from '../../helpers/UploadModal';\r\nimport getURL from '../../helpers/functions/GetURL';\r\nimport TableView from '../../helpers/TableView';\r\nimport StatusDisplay from '../../helpers/StatusDisplay';\r\n\r\nimport ErrorBoundray from '../../errors/ErrorBoundry';\r\nimport * as ModelConstants from \"../ModelConstants\";\r\n\r\nconst inputs = [\r\n    'vendor',\r\n    'model_number',\r\n    'height',\r\n    'display_color',\r\n    'ethernet_ports',\r\n    'power_ports',\r\n    'cpu',\r\n    'memory',\r\n    'storage',\r\n    'comments',\r\n]\r\n\r\nconst columns = [\r\n    'vendor',\r\n    'model_number',\r\n    'height',\r\n]\r\n\r\nconst modelsMainPath = 'models/';\r\nconst modelDownloadFileName = 'models.csv';\r\n\r\nexport default class ModelsView extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n\r\n            // modals\r\n            showCreateModal:false,\r\n            showImportModal:false,\r\n\r\n            // table items\r\n            items:[], //Constants.testModelArray,\r\n\r\n            // vals for creating a new model\r\n            createdModel : {\r\n                'vendor':'',\r\n                'model_number':'',\r\n                'height':'',\r\n                'display_color':'',\r\n                'ethernet_ports':'',\r\n                'power_ports':'',\r\n                'cpu':'',\r\n                'memory':'',\r\n                'storage':'',\r\n                'comment':'',\r\n            },\r\n            createdVendor:'',\r\n            createdModelNum:'',\r\n            createdHeight:'',\r\n            createdDispClr:'',\r\n            createdEthPorts:'',\r\n            createdPwrPorts:'',\r\n            createdCPU:'',\r\n            createdMem:'',\r\n            createdStorage:'',\r\n            createdComments:'',\r\n\r\n            // vals for deleting a model\r\n            deleteVendor:'',\r\n            deleteModel:'',\r\n\r\n            // vals for viewing a model\r\n            viewVendor:'',\r\n            viewModel:'',\r\n\r\n            // searching a model\r\n            searchText:\"\",\r\n            searchVendor:'',\r\n            searchModelNum:'',\r\n            searchHeight:'',\r\n\r\n            // csv data\r\n            csvData:'',\r\n            importedFile:null,\r\n\r\n            // detailed view\r\n            showDetailedView: false,\r\n            detailViewLoading:false,\r\n            detailedValues : {\r\n                'vendor':'',\r\n                'model_number':'',\r\n                'height':'',\r\n                'display_color':'',\r\n                'ethernet_ports':'',\r\n                'power_ports':'',\r\n                'cpu':'',\r\n                'memory':'',\r\n                'storage':'',\r\n                'comment':'',\r\n            },\r\n            originalVendor:'',\r\n            originalModelNumber:'',\r\n            originalHeight:'',\r\n\r\n            statusOpen:false,\r\n            statusSeverity:'',\r\n            statusMessage:'',\r\n            detailStatusOpen:false,\r\n            detailStatusSeverity:'',\r\n            detailStatusMessage:'',\r\n            createStatusOpen:false,\r\n            createStatusSeverity:'',\r\n            createStatusMessage:'',\r\n\r\n            vendorsList:[],\r\n            madeVendorQuery:false,\r\n\r\n        };\r\n\r\n        axios.defaults.headers.common['token'] = this.props.token;\r\n        axios.defaults.headers.common['privilege'] = this.props.privilege;\r\n    }\r\n\r\n    createModel = () => {\r\n        axios.post(\r\n            getURL(modelsMainPath, ModelCommand.create),\r\n            {\r\n                'vendor':this.state.createdModel[ModelInput.Vendor],\r\n                'model_number':this.state.createdModel[ModelInput.model_number],\r\n                'height':this.state.createdModel[ModelInput.Height],\r\n                'display_color':this.state.createdModel[ModelInput.display_color],\r\n                'ethernet_ports':this.state.createdModel[ModelInput.ethernet_ports],\r\n                'power_ports':this.state.createdModel[ModelInput.power_ports],\r\n                'cpu':this.state.createdModel[ModelInput.CPU],\r\n                'memory':this.state.createdModel[ModelInput.Memory],\r\n                'storage':this.state.createdModel[ModelInput.Storage],\r\n                'comment':this.state.createdModel[ModelInput.Comment],\r\n            }\r\n            ).then(\r\n                response => {\r\n                    if (response.data.message === 'success') {\r\n                        this.setState({\r\n                            showStatus: true,\r\n                            statusMessage:'success',\r\n                            statusMessage: \"Successfully created model\",\r\n                            statusSeverity:\"success\",\r\n                            createdModel : {\r\n                                'vendor':'',\r\n                                'model_number':'',\r\n                                'height':'',\r\n                                'display_color':'',\r\n                                'ethernet_ports':'',\r\n                                'power_ports':'',\r\n                                'cpu':'',\r\n                                'memory':'',\r\n                                'storage':'',\r\n                                'comment':'',\r\n                            },\r\n                            showCreateModal:false,\r\n                        });\r\n                        this.getVendorList();\r\n                        this.searchModels();\r\n                    } else {\r\n                        this.setState({ createStatusOpen: true, createStatusMessage: response.data.message, createStatusSeverity:\"error\" })\r\n                    }\r\n                }).catch(\r\n                    this.setState({ createStatusOpen: true, createStatusMessage: ModelConstants.GENERAL_MODEL_ERROR, createStatusSeverity:\"error\" })\r\n                );\r\n    }\r\n\r\n    editModel = () => {\r\n        axios.post(\r\n            getURL(modelsMainPath, ModelCommand.edit),\r\n            {\r\n                'vendorOriginal':this.state.originalVendor,\r\n                'model_numberOriginal':this.state.originalModelNumber,\r\n                'heightOriginal':this.state.originalHeight,\r\n\r\n                'vendor':this.state.detailedValues[ModelInput.Vendor],\r\n                'model_number':this.state.detailedValues[ModelInput.model_number],\r\n                'height':this.state.detailedValues[ModelInput.Height],\r\n                'display_color':this.state.detailedValues[ModelInput.display_color],\r\n                'ethernet_ports':this.state.detailedValues[ModelInput.ethernet_ports],\r\n                'power_ports':this.state.detailedValues[ModelInput.power_ports],\r\n                'cpu':this.state.detailedValues[ModelInput.CPU],\r\n                'memory':this.state.detailedValues[ModelInput.Memory],\r\n                'storage':this.state.detailedValues[ModelInput.Storage],\r\n                'comment':this.state.detailedValues[ModelInput.Comment],\r\n            }\r\n            ).then(\r\n                response => {\r\n                    if (response.data.message === 'success') {\r\n                        this.setState({\r\n                            showStatus: true,\r\n                            statusSeverity:'success',\r\n                            statusMessage: \"Successfully edited model\",\r\n                            originalVendor:'',\r\n                            originalModelNumber:'',\r\n                            originalHeight:'',\r\n                            detailedValues : {\r\n                                'vendor':'',\r\n                                'model_number':'',\r\n                                'height':'',\r\n                                'display_color':'',\r\n                                'ethernet_ports':'',\r\n                                'power_ports':'',\r\n                                'cpu':'',\r\n                                'memory':'',\r\n                                'storage':'',\r\n                                'comment':'',\r\n                            },\r\n                            showDetailedView:false\r\n                        });\r\n                        this.getVendorList();\r\n                        this.searchModels();\r\n                    } else {\r\n                        this.setState({ detailStatusOpen: true, detailStatusMessage: response.data.message, detailStatusSeverity:\"error\" })\r\n                    }\r\n                }).catch(\r\n                    this.setState({ detailStatusOpen: true, detailStatusMessage: ModelConstants.GENERAL_MODEL_ERROR, detailStatusSeverity:\"error\" })\r\n                );\r\n    }\r\n\r\n\r\n    deleteModel = () => {\r\n        axios.post(\r\n            getURL(modelsMainPath, ModelCommand.delete),\r\n            {\r\n                'vendor':this.state.originalVendor,\r\n                'model_number':this.state.originalModelNumber,\r\n            }\r\n            ).then(\r\n                response => {\r\n                    if (response.data.message === 'success') {\r\n                        this.setState({\r\n                            showStatus: true,\r\n                            statusSeverity:'success',\r\n                            statusMessage: \"Successfully deleted model\",\r\n                            detailedValues : {\r\n                                'vendor':'',\r\n                                'model_number':'',\r\n                                'height':'',\r\n                                'display_color':'',\r\n                                'ethernet_ports':'',\r\n                                'power_ports':'',\r\n                                'cpu':'',\r\n                                'memory':'',\r\n                                'storage':'',\r\n                                'comment':'',\r\n                            },\r\n                            showDetailedView:false\r\n                        });\r\n                        this.getVendorList();\r\n                        this.searchModels();\r\n                    } else {\r\n                        this.setState({ showStatus: true, statusMessage: response.data.message, statusSeverity:\"error\" })\r\n                    }\r\n                }).catch(\r\n                    this.setState({ showStatus: true, statusMessage: ModelConstants.GENERAL_MODEL_ERROR, statusSeverity:\"error\" })\r\n                );\r\n    }\r\n\r\n    detailViewModel = (vendor, modelNum) => {\r\n        axios.post(\r\n            getURL(modelsMainPath, ModelCommand.detailView),\r\n            {\r\n                'vendor':vendor,\r\n                'model_number':modelNum,\r\n            }, this.props.headers\r\n            ).then(response => {\r\n                console.log(\"response data\");\r\n                console.log(response.data['models'][0]);\r\n                console.log(\"original detailed values\");\r\n                console.log(this.state.detailedValues);\r\n                this.setState({ detailedValues: response.data['models'][0], detailViewLoading:false},() => console.log(this.state.detailedValues))\r\n            }\r\n            ).catch(\r\n                this.setState({ showStatus: true, statusMessage: ModelConstants.GENERAL_MODEL_ERROR, statusSeverity:\"error\" })\r\n            );\r\n\r\n        this.setState({\r\n            viewVendor:'',\r\n            viewModel:'',\r\n        });\r\n    }\r\n\r\n    searchModels = () => {\r\n        axios.post(\r\n            getURL(modelsMainPath, ModelCommand.search),\r\n            {\r\n                'filter':{\r\n                    'vendor':this.state.searchVendor,\r\n                    'model_number':this.state.searchModelNum,\r\n                    'height':this.state.searchHeight,\r\n                }\r\n            }\r\n            ).then(response => {\r\n                this.setState({ items: response.data['models'] })\r\n            });\r\n\r\n        this.setState({\r\n            searchText:'',\r\n        });\r\n    }\r\n\r\n    getVendorList = () => {\r\n        axios.get(\r\n            getURL(modelsMainPath, ModelCommand.VENDOR_VALUES), {}\r\n            ).then(response => this.setState({ vendorsList: response.data.results }));\r\n\r\n        this.setState({ madeVendorQuery: true });\r\n    }\r\n\r\n    sendUploadedFile = (data) => {\r\n        axios.post(\r\n            getURL(modelsMainPath, ModelCommand.UPLOAD_FILE), data\r\n            ).then(response => {\r\n                if (response.data.message === 'success') {\r\n                    this.setState({ showStatus: true, statusMessage: response.data.summary, statusSeverity:'success', showImportModal: false,})\r\n                    this.searchModels();\r\n                } else {\r\n                    this.setState({ showStatus: true, statusMessage: response.data.message, statusSeverity:\"error\" })\r\n                }\r\n            });\r\n    }\r\n\r\n    downloadTable = () => {\r\n        axios.post(\r\n            getURL(modelsMainPath, ModelCommand.EXPORT_FILE),\r\n            {\r\n                'filter':{\r\n                    'vendor':this.state.searchVendor,\r\n                    'model_number':this.state.searchModelNum,\r\n                    'height':this.state.searchHeight,\r\n                }\r\n            }\r\n            ).then(response => {\r\n                this.setState({ csvData: response.data.csvData });\r\n                this.csvLink.link.click();\r\n            });\r\n    }\r\n\r\n    search = (filters) => {\r\n        this.setState({ searchVendor:filters['vendor'], searchModelNum:filters['model_number'], searchHeight:filters['height']}, this.searchModels);\r\n    }\r\n\r\n    openCreateModal = () => {\r\n        this.setState({showCreateModal: true});\r\n    }\r\n\r\n    openImportModal = () => {\r\n        this.setState({showImportModal: true});\r\n    }\r\n\r\n    showDetailedView = (id) => {\r\n        this.setState({\r\n            showDetailedView: true,\r\n            detailViewLoading:true,\r\n\r\n            originalHeight:this.state.items[id]['height'],\r\n            originalModelNumber:this.state.items[id]['model_number'],\r\n            originalVendor:this.state.items[id]['vendor'],\r\n         });\r\n\r\n        var vendor = this.state.items[id]['vendor'];\r\n        var modelNum = this.state.items[id]['model_number'];\r\n\r\n        this.detailViewModel(vendor, modelNum);\r\n    }\r\n\r\n    closeCreateModal = () => {\r\n        this.setState({showCreateModal: false});\r\n    }\r\n\r\n    closeImportModal = () => {\r\n        this.setState({showImportModal: false});\r\n    }\r\n\r\n    closeDetailedView = () => {\r\n        this.setState({ showDetailedView: false })\r\n    }\r\n\r\n    updateModelCreator(event) {\r\n        this.state.createdModel[event.target.name] = event.target.value;\r\n        this.forceUpdate();\r\n    }\r\n\r\n    updateModelColor = (color) => {\r\n        console.log(\"updating color to \" + color);\r\n        this.state.createdModel['display_color'] = color;\r\n        this.forceUpdate();\r\n    }\r\n\r\n    updateModelColorDetails = (color) => {\r\n        console.log(\"updating color to \" + color);\r\n        this.state.detailedValues['display_color'] = color;\r\n        this.forceUpdate();\r\n    }\r\n\r\n    updateModelEdited = (event) => {\r\n        this.state.detailedValues[event.target.name] = event.target.value;\r\n        this.forceUpdate()\r\n    }\r\n\r\n    updateSearchText = (event) => {\r\n        this.setState({ searchText: event.target.value})\r\n    }\r\n\r\n    closeShowStatus = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n        this.setState({ showStatus: false })\r\n    }\r\n\r\n    createStatusClose = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n        this.setState({ createStatusOpen: false })\r\n    }\r\n\r\n    detailStatusClose = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n        this.setState({ detailStatusOpen: false })\r\n    }\r\n\r\n    uploadFile = () => {\r\n        const data = new FormData();\r\n        data.append('file', this.state.importedFile);\r\n        this.sendUploadedFile(data);\r\n    }\r\n\r\n    chooseFile = (event) => {\r\n        this.setState({ importedFile: event.target.files[0] })\r\n    }\r\n\r\n    initialize = () => {\r\n        this.searchModels();\r\n        this.getVendorList();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <ErrorBoundray>\r\n                {(this.state.madeVendorQuery) ? null: this.initialize()}\r\n                <StatusDisplay\r\n                    open={this.state.showStatus}\r\n                    severity={this.state.statusSeverity}\r\n                    closeStatus={this.closeShowStatus}\r\n                    message={this.state.statusMessage}\r\n                    autoHideDuration={6000}\r\n                />\r\n                {(this.props.privilege == Privilege.ADMIN) ?\r\n                    (<div><ButtonsModel\r\n                    openCreateModal={this.openCreateModal}\r\n                    openImportModal={this.openImportModal}\r\n                    downloadTable={this.downloadTable}\r\n                />\r\n                <CSVLink\r\n                    data={this.state.csvData}\r\n                    filename={modelDownloadFileName}\r\n                    className=\"hidden\"\r\n                    ref={(r) => this.csvLink = r}\r\n                    target=\"_blank\"\r\n                />\r\n                <CreateModel\r\n                    statusOpen={this.state.createStatusOpen}\r\n                    statusSeverity={this.state.createStatusSeverity}\r\n                    statusClose={this.createStatusClose}\r\n                    statusMessage={this.state.createStatusMessage}\r\n\r\n                    showCreateModal={this.state.showCreateModal}\r\n                    closeCreateModal={this.closeCreateModal}\r\n                    createModel={this.createModel}\r\n                    updateModelCreator={this.updateModelCreator}\r\n                    options={this.state.vendorsList}\r\n                    useAutocomplete={true}\r\n                    updateModelColor={this.updateModelColor}\r\n                />\r\n                <UploadModal\r\n                    showImportModal={this.state.showImportModal}\r\n                    closeImportModal={this.closeImportModal}\r\n                    uploadFile={this.uploadFile}\r\n                    chooseFile={this.chooseFile}\r\n                    textDescription=\"The following format should be used for each row: vendor,model_number,height,display_color,ethernet_ports,power_ports,cpu,memory,storage,comment\"\r\n                /></div>):null\r\n                }\r\n                <FilterModel\r\n                    updateSearchText={this.updateSearchText}\r\n                    search={this.search}\r\n                    filters={columns}\r\n                />\r\n                <TableView\r\n                    columns={columns}\r\n                    vals={this.state.items}\r\n                    keys={columns}\r\n                    showDetailedView={this.showDetailedView}\r\n                    filters={columns}\r\n                />\r\n                <DetailModel\r\n                    statusOpen={this.state.detailStatusOpen}\r\n                    statusSeverity={this.state.detailStatusSeverity}\r\n                    statusClose={this.detailStatusClose}\r\n                    statusMessage={this.state.detailStatusMessage}\r\n\r\n                    showDetailedView={this.state.showDetailedView}\r\n                    closeDetailedView={this.closeDetailedView}\r\n                    updateModelEdited={this.updateModelEdited}\r\n                    defaultValues={this.state.detailedValues}\r\n                    loading={this.state.detailViewLoading}\r\n                    edit={this.editModel}\r\n                    delete={this.deleteModel}\r\n                    disabled={this.props.privilege==Privilege.USER}\r\n                    options={this.state.vendorsList}\r\n                    useAutocomplete={true}\r\n                    updateModelColorDetails={this.updateModelColorDetails}\r\n                />\r\n            </ErrorBoundray>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\r\nimport CloudDownloadIcon from '@material-ui/icons/CloudDownload';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nexport default class ButtonsUser extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n\r\n        };\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div>\r\n                <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    startIcon={<CloudUploadIcon />}\r\n                    onClick={this.props.openImportModal}\r\n                >\r\n                    Import\r\n                </Button>\r\n                <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    startIcon={<CloudDownloadIcon />}\r\n                    onClick={this.props.downloadTable}\r\n                >\r\n                    Export\r\n                </Button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","export enum InstanceCommand {\r\n    create = 'create/',\r\n    delete = 'delete/',\r\n    edit = 'edit/',\r\n    view = 'view/',\r\n    detailView = 'detailView/',\r\n    search = 'search/',\r\n    GET_ALL_MODELS = 'assistedmodel/',\r\n    UPLOAD_FILE = 'import/',\r\n    EXPORT_FILE = 'export/',\r\n}\r\n","export enum InstanceInput {\r\n    Model = 'model',\r\n    Hostname = 'hostname',\r\n    Rack = 'rack',\r\n    RackU = 'rack_position',\r\n    Owner = 'owner',\r\n    Comment = 'comment',\r\n}\r\n","import React from 'react';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nexport default class Filters extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            filters:{},\r\n        };\r\n    }\r\n\r\n    updateSearchText(event) {\r\n        if (this.state.filters.hasOwnProperty(event.target.id)) {\r\n            this.state.filters[event.target.id] = event.target.value;\r\n            this.forceUpdate();\r\n        } else {\r\n            var value = (event.target.value == null) ? '' : event.target.value;\r\n            this.state.filters[event.target.id] = event.target.value;\r\n            //this.state.filters.push({ key:event.target.id, value: value});\r\n            this.forceUpdate();\r\n        }\r\n    }\r\n\r\n    search() {\r\n        this.props.search(this.state.filters);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.props.filters.map((filter, index) => (\r\n                    <div>\r\n                        <SearchIcon />\r\n                        <InputBase\r\n                            placeholder={filter+\" filter\"}\r\n                            inputProps={{ 'aria-label': 'search' }}\r\n                            onChange={this.updateSearchText.bind(this)}\r\n                            id={filter}\r\n                        />\r\n                    </div>\r\n                ))\r\n                }\r\n                <div>\r\n                    <Button\r\n                        onClick={this.search.bind(this)}\r\n                    >\r\n                        Search\r\n                    </Button>\r\n                </div>\r\n                Click the search button to populate table. Searching with empty filters searches over all values. Click on row values to see detailed view.\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from '@material-ui/core/Button';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport { palette } from '@material-ui/system';\r\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\r\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\r\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport StatusDisplay from '../../helpers/StatusDisplay';\r\n\r\nexport default class DetailedView extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            showConfirmationBox:false,\r\n        };\r\n\r\n        this.closeModal = this.closeModal.bind(this);\r\n        this.confirmDelete = this.confirmDelete.bind(this);\r\n        this.deleteItem = this.deleteItem.bind(this);\r\n    }\r\n\r\n    confirmDelete() {\r\n        this.setState({ showConfirmationBox: true });\r\n    }\r\n\r\n    closeModal() {\r\n        this.setState({showConfirmationBox:false,});\r\n    }\r\n\r\n    deleteItem() {\r\n        this.setState({ showConfirmationBox: false });\r\n        this.props.delete();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n        <div>\r\n            {!this.props.showDetailedView ? null:\r\n            <ExpansionPanel >\r\n                    <ExpansionPanelSummary\r\n                        expandIcon={<ExpandMoreIcon />}\r\n                    >\r\n                        <Typography>Create</Typography>\r\n                    </ExpansionPanelSummary>\r\n                    <ExpansionPanelDetails>\r\n                        <StatusDisplay\r\n                            open={this.props.statusOpen}\r\n                            severity={this.props.statusSeverity}\r\n                            closeStatus={this.props.statusClose}\r\n                            message={this.props.statusMessage}\r\n                        />\r\n                    {\r\n                this.props.loading ? <CircularProgress /> :\r\n                <div>\r\n                    {this.props.inputs.map(input => (\r\n                        <TextField name={input} disabled={this.props.disabled} id=\"standard-basic\" label={input} onChange={this.props.updateModelEdited} defaultValue={this.props.defaultValues[input]}/>\r\n                    ))}\r\n                    {this.props.disabled ? null:\r\n                    <div>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            onClick={this.props.edit}\r\n                            disabled={this.state.showConfirmationBox}\r\n                        >\r\n                            Save\r\n                        </Button>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            onClick={this.confirmDelete}\r\n                            disabled={this.state.showConfirmationBox}\r\n                        >\r\n                            Delete\r\n                        </Button>\r\n                    </div>}\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            onClick={this.props.closeDetailedView}\r\n                            disabled={this.state.showConfirmationBox}\r\n                        >\r\n                            Close\r\n                        </Button>\r\n\r\n                    {this.state.showConfirmationBox ? <div>\r\n                        Are you sure you wish to delete?\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            onClick={this.deleteItem}\r\n                        >\r\n                            Yes\r\n                        </Button>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            onClick={this.closeModal}\r\n                        >\r\n                            No\r\n                        </Button>\r\n                    </div>:null}\r\n                </div>}\r\n                    </ExpansionPanelDetails>\r\n                </ExpansionPanel>}\r\n        </div>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from '@material-ui/core/Button';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\r\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\r\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport '../../../stylesheets/Models.css';\r\nimport StatusDisplay from '../../helpers/StatusDisplay';\r\n\r\nexport default class CreateModal extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n\r\n        };\r\n    }\r\n\r\n    render() {\r\n        return (\r\n        <div>\r\n            <ExpansionPanel class=\"create-expansion-tab\">\r\n                    <ExpansionPanelSummary\r\n                        expandIcon={<ExpandMoreIcon />}\r\n                    >\r\n                        <Typography>Create User</Typography>\r\n                    </ExpansionPanelSummary>\r\n                    <ExpansionPanelDetails class=\"create-expansion-tab\">\r\n                    <div>\r\n                        <StatusDisplay\r\n                            open={this.props.statusOpen}\r\n                            severity={this.props.statusSeverity}\r\n                            closeStatus={this.props.statusClose}\r\n                            message={this.props.statusMessage}\r\n                        />\r\n                    {this.props.inputs.map((input, index) => (\r\n                        (index===0 && this.props.useAutocomplete) ? <Autocomplete\r\n                            id=\"combo-box-demo\"\r\n                            options={this.props.options}\r\n                            includeInputInList\r\n                            freeSolo\r\n                            renderInput={params => (\r\n                            <TextField {...params} label={input} name={input} onChange={this.props.updateModelCreator} onBlur={this.props.updateModelCreator} variant=\"outlined\" fullWidth />\r\n                            )}\r\n                        /> :\r\n                        <TextField id=\"standard-basic\" variant=\"outlined\" label={input} name={input} onChange={this.props.updateModelCreator}/>\r\n                    ))}\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        onClick={this.props.createModel}\r\n                    >\r\n                        Create\r\n                    </Button>\r\n                </div>\r\n                    </ExpansionPanelDetails>\r\n                </ExpansionPanel>\r\n        </div>\r\n        );\r\n    }\r\n}\r\n","\r\n\r\nexport const GENERAL_USER_ERROR =  \"There was an error in the backend. Could not perform the given user operation at this time.\";\r\n","import React from 'react';\r\nimport axios from 'axios';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport { UserCommand } from '../enums/UserCommands.ts'\r\nimport { UserInput } from '../enums/UserInputs.ts'\r\n\r\n\r\nimport ButtonsUser from '../helpers/ButtonsUser';\r\nimport FilterUser from '../helpers/FilterUser';\r\nimport DetailUser from '../helpers/DetailUser';\r\nimport CreateUser from '../helpers/CreateUser';\r\n\r\nimport UploadModal from '../../helpers/UploadModal';\r\nimport getURL from '../../helpers/functions/GetURL';\r\nimport TableView from '../../helpers/TableView';\r\nimport StatusDisplay from '../../helpers/StatusDisplay';\r\n\r\nimport { Privilege } from '../../enums/privilegeTypes.ts'\r\n\r\nimport ErrorBoundray from '../../errors/ErrorBoundry';\r\nimport * as UserConstants from \"../UserConstants\";\r\n\r\nconst inputs = [\r\n    'username',\r\n    'email',\r\n    'display_name',\r\n    'privilege',\r\n    'password',\r\n]\r\n\r\nconst columns = [\r\n    'username',\r\n    'email',\r\n    'display_name',\r\n    'privilege',\r\n]\r\n\r\nconst usersMainPath = 'users/';\r\nconst userDownloadFileName = 'users.csv';\r\n\r\nexport default class UsersView extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n\r\n            // modals\r\n            showCreateModal:false,\r\n            showImportModal:false,\r\n\r\n            // table items\r\n            items:[], //Constants.testUserArray,\r\n\r\n            // vals for creating a new user\r\n            createdUser : {\r\n                'username':'',\r\n                'password':'',\r\n                'display_name':'',\r\n                'email':'',\r\n                'privilege':'',\r\n            },\r\n\r\n            statusOpen:false,\r\n            statusSeverity:'',\r\n            statusMessage:'',\r\n            detailStatusOpen:false,\r\n            detailStatusSeverity:'',\r\n            detailStatusMessage:'',\r\n            createStatusOpen:false,\r\n            createStatusSeverity:'',\r\n            createStatusMessage:'',\r\n\r\n            searchUsernm:'',\r\n            searchEml:'',\r\n            searchDspNm:'',\r\n            searchPriv:'',\r\n\r\n            // vals for deleting a user\r\n            deleteUsername:'',\r\n\r\n            // vals for viewing a user\r\n            viewUser:'',\r\n\r\n            // csv data\r\n            csvData:[],\r\n\r\n            // detailed view\r\n            showDetailedView: false,\r\n            detailViewLoading:false,\r\n            detailedValues : {\r\n                'username':'',\r\n                'display_name':'',\r\n                'email':'',\r\n                'privilege':'',\r\n            },\r\n            originalUsername:'',\r\n\r\n            initialized:false,\r\n        };\r\n\r\n        axios.defaults.headers.common['token'] = this.props.token;\r\n        axios.defaults.headers.common['privilege'] = this.props.privilege;\r\n\r\n    }\r\n\r\n    createUser = () => {\r\n        axios.post(\r\n            getURL(usersMainPath, UserCommand.create),\r\n            {\r\n                'username':this.state.createdUser[UserInput.Username],\r\n                'password':this.state.createdUser[UserInput.Password],\r\n                'display_name':this.state.createdUser[UserInput.display_name],\r\n                'email':this.state.createdUser[UserInput.Email],\r\n                'privilege':this.state.createdUser[UserInput.Privilege],\r\n            }\r\n            ).then(response => {\r\n                if (response.data.message === 'success') {\r\n                    this.setState({\r\n                        createStatusOpen: true,\r\n                        createStatusMessage: \"Successfully created user\",\r\n                        createStatusSeverity:\"success\",\r\n                        createdUser : {\r\n                            'username':'',\r\n                            'password':'',\r\n                            'display_name':'',\r\n                            'email':'',\r\n                            'privilege':'',\r\n                        },\r\n                        showCreateModal:false,\r\n                    });\r\n                    this.searchUsers();\r\n                } else {\r\n                    this.setState({ createStatusOpen: true, createStatusMessage: response.data.message, createStatusSeverity:\"error\" })\r\n                }\r\n            }).catch(\r\n                this.setState({ createStatusOpen: true, createStatusMessage: UserConstants.GENERAL_USER_ERROR, createStatusSeverity:\"error\" })\r\n            );\r\n    }\r\n\r\n    editUser = () => {\r\n        axios.post(\r\n            getURL(usersMainPath, UserCommand.edit),\r\n            {\r\n                'username_original':this.state.originalUsername,\r\n                'username':this.state.detailedValues[UserInput.Username],\r\n                'display_name':this.state.detailedValues[UserInput.display_name],\r\n                'email':this.state.detailedValues[UserInput.Email],\r\n                'privilege':this.state.detailedValues[UserInput.Privilege],\r\n            }\r\n            ).then(response => {\r\n                if (response.data.message === 'success') {\r\n                    this.setState({\r\n                        detailStatusOpen: true,\r\n                        detailStatusMessage: \"Successfully edited user\",\r\n                        detailStatusSeverity:\"success\",\r\n                        originalUsername:'',\r\n                        detailedValues : {\r\n                            'username':'',\r\n                            'display_name':'',\r\n                            'email':'',\r\n                            'privilege':'',\r\n                        },\r\n                        showDetailedView:false,\r\n                    });\r\n                    this.searchUsers();\r\n                } else {\r\n                    this.setState({ detailStatusOpen: true, detailStatusMessage: response.data.message, detailStatusSeverity:\"error\" })\r\n                }\r\n            }).catch(\r\n                this.setState({ detailStatusOpen: true, detailStatusMessage: UserConstants.GENERAL_USER_ERROR, detailStatusSeverity:\"error\" })\r\n            );\r\n    }\r\n\r\n\r\n    deleteUser = () => {\r\n        axios.post(\r\n            getURL(usersMainPath, UserCommand.delete),\r\n            {\r\n                'username':this.state.originalUsername,\r\n            }\r\n            ).then(response => {\r\n                if (response.data.message === 'success') {\r\n                    this.setState({\r\n                        statusOpen: true,\r\n                        statusMessage: \"Successfully deleted user\",\r\n                        statusSeverity:\"success\",\r\n                        deleteUsername:'',\r\n                        showDetailedView:false,\r\n                    });\r\n                    this.searchUsers();\r\n                } else {\r\n                    this.setState({ showStatus: true, statusMessage: response.data.message, statusSeverity:\"error\" })\r\n                }\r\n            }).catch(\r\n                this.setState({ showStatus: true, statusMessage: UserConstants.GENERAL_USER_ERROR, statusSeverity:\"error\" })\r\n            );\r\n    }\r\n\r\n    detailViewUser = (username) => {\r\n        axios.post(\r\n            getURL(usersMainPath, UserCommand.detailView),\r\n            {\r\n                'username':username,\r\n            }\r\n            ).then(response => this.setState({ detailedValues: response.data['user'], detailViewLoading:false})\r\n            ).catch(\r\n                this.setState({ showStatus: true, statusMessage: UserConstants.GENERAL_USER_ERROR, statusSeverity:\"error\" })\r\n            );\r\n\r\n        this.setState({\r\n            viewUser:'',\r\n        });\r\n    }\r\n\r\n    searchUsers = () => {\r\n        axios.post(\r\n            getURL(usersMainPath, UserCommand.search),\r\n            {\r\n                'filter':{\r\n                    'username':this.state.searchUsernm,\r\n                    'email':this.state.searchEml,\r\n                    'display_name':this.state.searchDspNm,\r\n                    'privilege':this.state.searchPriv,\r\n                }\r\n            }\r\n            ).then(response => this.setState({ items: (response.data['users']==null) ? [] : response.data['users'] }));\r\n\r\n        this.setState({ initialized: true})\r\n    }\r\n\r\n    search = (filters) => {\r\n        this.setState({\r\n            searchUsernm:filters['username'],\r\n            searchEml:filters['email'],\r\n            searchDspNm: filters['display_name'],\r\n            searchPriv:filters['privilege'],\r\n        }, this.searchUsers);\r\n    }\r\n\r\n    downloadTable = () => {\r\n        this.csvLink.link.click();\r\n    }\r\n\r\n    openCreateModal = () => {\r\n        this.setState({showCreateModal: true});\r\n    }\r\n\r\n    openImportModal = () => {\r\n        this.setState({showImportModal: true});\r\n    }\r\n\r\n    showDetailedView = (id) => {\r\n        this.setState({\r\n            showDetailedView: true,\r\n            detailViewLoading:true,\r\n            originalUsername:this.state.items[id]['username'],\r\n         });\r\n\r\n        var username = this.state.items[id]['username'];\r\n\r\n        this.detailViewUser(username);\r\n        //this.setState({ detailedValues: Constants.testUserArray[id], detailViewLoading:false})\r\n    }\r\n\r\n    closeCreateModal = () => {\r\n        this.setState({showCreateModal: false});\r\n    }\r\n\r\n    closeImportModal = () => {\r\n        this.setState({showImportModal: false});\r\n    }\r\n\r\n    closeDetailedView = () => {\r\n        this.setState({ showDetailedView: false })\r\n    }\r\n\r\n    updateUserCreator = (event) => {\r\n        this.state.createdUser[event.target.name] = event.target.value;\r\n        this.forceUpdate()\r\n    }\r\n\r\n    updateUserEdited = (event) => {\r\n        this.state.detailedValues[event.target.name] = event.target.value;\r\n        this.forceUpdate()\r\n    }\r\n\r\n    closeShowStatus = () => {\r\n        this.setState({ showStatus: false })\r\n    }\r\n\r\n    createStatusClose = () => {\r\n        this.setState({ createStatusOpen: false })\r\n    }\r\n\r\n    detailStatusClose = () => {\r\n        this.setState({ detailStatusOpen: false })\r\n    }\r\n\r\n    initialized = () => {\r\n        this.searchUsers();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {(this.state.initialized) ? null: this.initialized()}\r\n                <ErrorBoundray>\r\n                <StatusDisplay\r\n                    open={this.state.showStatus}\r\n                    severity={this.state.statusSeverity}\r\n                    closeStatus={this.closeShowStatus}\r\n                    message={this.state.statusMessage}\r\n                />\r\n                {(this.props.privilege == Privilege.ADMIN) ?\r\n                    (<div>\r\n                <CreateUser\r\n                    statusOpen={this.state.createStatusOpen}\r\n                    statusSeverity={this.state.createStatusSeverity}\r\n                    statusClose={this.createStatusClose}\r\n                    statusMessage={this.state.createStatusMessage}\r\n\r\n                    showStatus={this.state.createStatus}\r\n                    showCreateModal={this.state.showCreateModal}\r\n                    closeCreateModal={this.closeCreateModal}\r\n                    createModel={this.createUser}\r\n                    updateModelCreator={this.updateUserCreator}\r\n                    inputs={inputs}\r\n                    options={[]}\r\n                    useAutocomplete={false}\r\n                />\r\n                <UploadModal\r\n                    showImportModal={this.state.showImportModal}\r\n                    closeImportModal={this.closeImportModal}\r\n                /></div>):null\r\n            }\r\n                <FilterUser\r\n                    updateSearchText={this.updateSearchText}\r\n                    search={this.search}\r\n                    filters={columns}\r\n                />\r\n                <TableView\r\n                    columns={columns}\r\n                    vals={this.state.items}\r\n                    keys={columns}\r\n                    showDetailedView={this.showDetailedView}\r\n                    filters={columns}\r\n                />\r\n                <DetailUser\r\n                    statusOpen={this.state.detailStatusOpen}\r\n                    statusSeverity={this.state.detailStatusSeverity}\r\n                    statusClose={this.detailStatusClose}\r\n                    statusMessage={this.state.detailStatusMessage}\r\n\r\n                    showDetailedView={this.state.showDetailedView}\r\n                    closeDetailedView={this.closeDetailedView}\r\n                    inputs={columns}\r\n                    updateModelEdited={this.updateUserEdited}\r\n                    defaultValues={this.state.detailedValues}\r\n                    loading={this.state.detailViewLoading}\r\n                    edit={this.editUser}\r\n                    delete={this.deleteUser}\r\n                    disabled={this.props.privilege==Privilege.USER}\r\n                />\r\n                </ErrorBoundray>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","export enum RackCommand {\r\n    GET_ALL_RACKS = \"all\",\r\n    CREATE_RACKS = \"create\",\r\n    DELETE_RACKS = \"delete\",\r\n    GET_RACK_DETAILS = \"details\"\r\n}\r\n","import React from 'react';\r\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\r\nimport CloudDownloadIcon from '@material-ui/icons/CloudDownload';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nexport default class InstanceButtons extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n\r\n        };\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div>\r\n                <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    startIcon={<CloudUploadIcon />}\r\n                    onClick={this.props.openImportModal}\r\n                >\r\n                    Import\r\n                </Button>\r\n                <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    startIcon={<CloudDownloadIcon />}\r\n                    onClick={this.props.downloadTable}\r\n                >\r\n                    Export\r\n                </Button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nexport default class FilterInstance extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            filters:{},\r\n        };\r\n    }\r\n\r\n    updateSearchText(event) {\r\n        if (this.state.filters.hasOwnProperty(event.target.id)) {\r\n            this.state.filters[event.target.id] = event.target.value;\r\n            this.forceUpdate();\r\n        } else {\r\n            var value = (event.target.value == null) ? '' : event.target.value;\r\n            this.state.filters[event.target.id] = event.target.value;\r\n            //this.state.filters.push({ key:event.target.id, value: value});\r\n            this.forceUpdate();\r\n        }\r\n    }\r\n\r\n    search() {\r\n        this.props.search(this.state.filters);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.props.filters.map((filter, index) => (\r\n                    <div>\r\n                        <SearchIcon />\r\n                        <InputBase\r\n                            placeholder={filter+\" filter\"}\r\n                            inputProps={{ 'aria-label': 'search' }}\r\n                            onChange={this.updateSearchText.bind(this)}\r\n                            id={filter}\r\n                        />\r\n                    </div>\r\n                ))\r\n                }\r\n                <div>\r\n                    <Button\r\n                        onClick={this.search.bind(this)}\r\n                    >\r\n                        Search\r\n                    </Button>\r\n                </div>\r\n                Click the search button to populate table. Searching with empty filters searches over all values. Click on row values to see detailed view.\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from '@material-ui/core/Button';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\r\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\r\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport StatusDisplay from '../../helpers/StatusDisplay';\r\n\r\nexport default class DetailInstance extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            showConfirmationBox:false,\r\n        };\r\n\r\n        this.closeModal = this.closeModal.bind(this);\r\n        this.confirmDelete = this.confirmDelete.bind(this);\r\n        this.deleteItem = this.deleteItem.bind(this);\r\n    }\r\n\r\n    confirmDelete() {\r\n        this.setState({ showConfirmationBox: true });\r\n    }\r\n\r\n    closeModal() {\r\n        this.setState({showConfirmationBox:false,});\r\n    }\r\n\r\n    deleteItem() {\r\n        this.setState({ showConfirmationBox: false });\r\n        this.props.delete();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n        <div>\r\n            {!this.props.showDetailedView ? null:\r\n            <ExpansionPanel >\r\n                    <ExpansionPanelSummary\r\n                        expandIcon={<ExpandMoreIcon />}\r\n                    >\r\n                        <Typography>Create</Typography>\r\n                    </ExpansionPanelSummary>\r\n                    <ExpansionPanelDetails>\r\n                        <StatusDisplay\r\n                            open={this.props.statusOpen}\r\n                            severity={this.props.statusSeverity}\r\n                            closeStatus={this.props.statusClose}\r\n                            message={this.props.statusMessage}\r\n                        />\r\n                    {\r\n                this.props.loading ? <CircularProgress /> :\r\n                <div>\r\n                    {this.props.inputs.map(input => (\r\n                        <TextField name={input} disabled={this.props.disabled} id=\"standard-basic\" label={input} onChange={this.props.updateModelEdited} defaultValue={this.props.defaultValues[input]}/>\r\n                    ))}\r\n                    {this.props.disabled ? null:\r\n                    <div>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            onClick={this.props.edit}\r\n                            disabled={this.state.showConfirmationBox}\r\n                        >\r\n                            Save\r\n                        </Button>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            onClick={this.confirmDelete}\r\n                            disabled={this.state.showConfirmationBox}\r\n                        >\r\n                            Delete\r\n                        </Button>\r\n                    </div>}\r\n                    {this.state.showConfirmationBox ? <div>\r\n                        Are you sure you wish to delete?\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            onClick={this.deleteItem}\r\n                        >\r\n                            Yes\r\n                        </Button>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            onClick={this.closeModal}\r\n                        >\r\n                            No\r\n                        </Button>\r\n                    </div>:null}\r\n                </div>}\r\n                    </ExpansionPanelDetails>\r\n                </ExpansionPanel>}\r\n        </div>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from '@material-ui/core/Button';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\r\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\r\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport '../../../stylesheets/Models.css';\r\nimport StatusDisplay from '../../helpers/StatusDisplay';\r\n\r\nexport default class CreateInstance extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n\r\n        };\r\n    }\r\n\r\n    render() {\r\n        return (\r\n        <div>\r\n            <ExpansionPanel class=\"create-expansion-tab\">\r\n                    <ExpansionPanelSummary\r\n                        expandIcon={<ExpandMoreIcon />}\r\n                    >\r\n                        <Typography>Create</Typography>\r\n                    </ExpansionPanelSummary>\r\n                    <ExpansionPanelDetails class=\"create-expansion-tab\">\r\n                        <StatusDisplay\r\n                            open={this.props.statusOpen}\r\n                            severity={this.props.statusSeverity}\r\n                            closeStatus={this.props.statusClose}\r\n                            message={this.props.statusMessage}\r\n                        />\r\n                    <div>\r\n                    {this.props.inputs.map((input, index) => (\r\n                        (index===0 && this.props.useAutocomplete) ? <Autocomplete\r\n                            id=\"combo-box-demo\"\r\n                            options={this.props.options}\r\n                            includeInputInList\r\n                            freeSolo\r\n                            renderInput={params => (\r\n                            <TextField {...params} label={input} name={input} onChange={this.props.updateModelCreator} onBlur={this.props.updateModelCreator} variant=\"outlined\" fullWidth />\r\n                            )}\r\n                        /> :\r\n                        <TextField id=\"standard-basic\" variant=\"outlined\" label={input} name={input} onChange={this.props.updateModelCreator}/>\r\n                    ))}\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        onClick={this.props.createModel}\r\n                    >\r\n                        Create\r\n                    </Button>\r\n                </div>\r\n                    </ExpansionPanelDetails>\r\n                </ExpansionPanel>\r\n        </div>\r\n        );\r\n    }\r\n}\r\n","\r\n\r\n\r\nexport const GENERAL_INSTANCE_ERROR =  \"There was an error in the backend. Could not perform the given instance operation at this time.\";\r\n","import React from 'react';\r\nimport axios from 'axios';\r\nimport { InstanceCommand } from '../enums/InstanceCommands.ts'\r\nimport { InstanceInput } from '../enums/InstanceInputs.ts'\r\nimport { Privilege } from '../../enums/privilegeTypes.ts'\r\nimport { CSVLink } from \"react-csv\";\r\nimport InstanceButtons from '../helpers/InstanceButtons';\r\nimport FilterInstance from '../helpers/FilterInstance';\r\nimport UploadModal from '../../helpers/UploadModal';\r\nimport getURL from '../../helpers/functions/GetURL';\r\nimport DetailInstance from '../helpers/DetailInstance';\r\nimport CreateInstance from '../helpers/CreateInstance';\r\nimport StatusDisplay from '../../helpers/StatusDisplay';\r\nimport TableView from '../../helpers/TableView';\r\nimport ErrorBoundary from '../../errors/ErrorBoundry';\r\nimport * as InstanceConstants from \"../InstanceConstants\";\r\n\r\nconst inputs = [\r\n    'model',\r\n    'hostname',\r\n    'rack',\r\n    'rack_position',\r\n    'owner',\r\n    'comment',\r\n]\r\n\r\nconst columns = [\r\n    'model',\r\n    'hostname',\r\n    'rack',\r\n    'rack_position',\r\n]\r\n\r\nconst instancesMainPath = 'instances/';\r\nconst instanceDownloadFileName = 'instances.csv';\r\n\r\n\r\n\r\nexport default class InstancesView extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n\r\n            // modals\r\n            showCreateModal:false,\r\n            showImportModal:false,\r\n\r\n            // table items\r\n            items:[], //Constants.testInstanceArray,\r\n\r\n            // vals for creating a new instance\r\n            createdInstance : {\r\n                'model':'',\r\n                'hostname':'',\r\n                'rack':'',\r\n                'rack_position':'',\r\n                'owner':'',\r\n                'comment':'',\r\n            },\r\n\r\n            statusOpen:false,\r\n            statusSeverity:'',\r\n            statusMessage:'',\r\n            detailStatusOpen:false,\r\n            detailStatusSeverity:'',\r\n            detailStatusMessage:'',\r\n            createStatusOpen:false,\r\n            createStatusSeverity:'',\r\n            createStatusMessage:'',\r\n\r\n            // vals for deleting an instance\r\n            deleteInstanceRack:'',\r\n            deleteInstancerack_position:'',\r\n\r\n            // vals for viewing an instance\r\n            viewInstanceRack:'',\r\n            viewInstancerack_position:'',\r\n\r\n            searchModel:'',\r\n            searchHostname:'',\r\n            searchRack:'',\r\n            searchRackU:'',\r\n\r\n            // csv data\r\n            csvData:'',\r\n            importedFile:null,\r\n\r\n            // detailed view\r\n            showDetailedView: false,\r\n            detailViewLoading:false,\r\n            detailedValues : {\r\n                'model':'',\r\n                'hostname':'',\r\n                'rack':'',\r\n                'rack_position':'',\r\n                'owner':'',\r\n                'comment':'',\r\n            },\r\n            originalRack:'',\r\n            originalrack_position:'',\r\n            modelList:[],\r\n            madeModelQuery: false,\r\n        };\r\n\r\n        axios.defaults.headers.common['token'] = this.props.token;\r\n        axios.defaults.headers.common['privilege'] = this.props.privilege;\r\n\r\n    }\r\n\r\n    createInstance() {\r\n        axios.post(\r\n            getURL(instancesMainPath, InstanceCommand.create),\r\n            {\r\n                'model':this.state.createdInstance[InstanceInput.Model],\r\n                'hostname':this.state.createdInstance[InstanceInput.Hostname],\r\n                'rack':this.state.createdInstance[InstanceInput.Rack],\r\n                'rack_position':this.state.createdInstance[InstanceInput.RackU],\r\n                'owner':this.state.createdInstance[InstanceInput.Owner],\r\n                'comment':this.state.createdInstance[InstanceInput.Comment],\r\n            }\r\n            ).then(response => {\r\n                if (response.data.message === 'success') {\r\n                    this.setState({\r\n                        showStatus: true,\r\n                        statusMessage: \"Successfully created instance\",\r\n                        statusSeverity:\"success\",\r\n                        createdInstance : {\r\n                            'model':'',\r\n                            'hostname':'',\r\n                            'rack':'',\r\n                            'rack_position':'',\r\n                            'owner':'',\r\n                            'comment':'',\r\n                        },\r\n                        showCreateModal:false,\r\n                    });\r\n                    this.searchInstances();\r\n                } else {\r\n                    this.setState({ createStatusOpen: true, createStatusMessage: response.data.message, createStatusSeverity:\"error\" })\r\n                }\r\n            }).catch(\r\n                this.setState({ createStatusOpen: true, createStatusMessage: InstanceConstants.GENERAL_INSTANCE_ERROR, createStatusSeverity:\"error\" })\r\n            );\r\n    }\r\n\r\n    editInstance() {\r\n        axios.post(\r\n            getURL(instancesMainPath, InstanceCommand.edit),\r\n            {\r\n                'rackOriginal':this.state.originalRack,\r\n                'rack_positionOriginal':this.state.originalrack_position,\r\n                'model':this.state.detailedValues[InstanceInput.Model],\r\n                'hostname':this.state.detailedValues[InstanceInput.Hostname],\r\n                'rack':this.state.detailedValues[InstanceInput.Rack],\r\n                'rack_position':this.state.detailedValues[InstanceInput.RackU],\r\n                'owner':this.state.detailedValues[InstanceInput.Owner],\r\n                'comment':this.state.detailedValues[InstanceInput.Comment],\r\n            }\r\n            ).then(response => {\r\n                if (response.data.message === 'success') {\r\n                    this.setState({\r\n                        showStatus: true,\r\n                        statusMessage: \"Successfully edited instance\",\r\n                        statusSeverity:\"success\",\r\n                        detailedValues : {\r\n                            'model':'',\r\n                            'hostname':'',\r\n                            'rack':'',\r\n                            'rack_position':'',\r\n                            'owner':'',\r\n                            'comment':'',\r\n                        },\r\n                        showDetailedView:false,\r\n                    });\r\n                    this.searchInstances();\r\n\r\n                } else {\r\n                    this.setState({ detailStatusOpen: true, detailStatusMessage: response.data.message, detailStatusSeverity:\"error\" })\r\n                }\r\n            }).catch(\r\n                this.setState({ detailStatusOpen: true, detailStatusMessage: InstanceConstants.GENERAL_INSTANCE_ERROR, detailStatusSeverity:\"error\" })\r\n            );\r\n    }\r\n\r\n\r\n    deleteInstance() {\r\n        axios.post(\r\n            getURL(instancesMainPath, InstanceCommand.delete),\r\n            {\r\n                'rack':this.state.originalRack,\r\n                'rack_position':this.state.originalrack_position,\r\n            }\r\n            ).then(response => {\r\n                if (response.data.message === 'success') {\r\n                    this.setState({\r\n                        showStatus: true,\r\n                        statusMessage: \"Successfully deleted instance\",\r\n                        statusSeverity:\"success\",\r\n                        originalRack:'',\r\n                        originalrack_position:'',\r\n                        showDetailedView:false\r\n                    });\r\n                    this.searchInstances();\r\n                } else {\r\n                    this.setState({ showStatus: true, statusMessage: response.data.message, statusSeverity:\"error\" })\r\n                }\r\n            }).catch(\r\n                this.setState({ showStatus: true, statusMessage: InstanceConstants.GENERAL_INSTANCE_ERROR, statusSeverity:\"error\" })\r\n            );\r\n    }\r\n\r\n    detailViewInstance(rack, rack_position) {\r\n        axios.post(\r\n            getURL(instancesMainPath, InstanceCommand.detailView),\r\n            {\r\n                'rack':rack,\r\n                'rack_position':rack_position,\r\n            }\r\n            ).then(response => this.setState({ detailedValues: response.data['instances'][0], detailViewLoading:false})\r\n            ).catch(\r\n                this.setState({ showStatus: true, statusMessage: InstanceConstants.GENERAL_INSTANCE_ERROR, statusSeverity:\"error\" })\r\n            );\r\n\r\n        this.setState({\r\n            viewInstanceRack:'',\r\n        });\r\n    }\r\n\r\n    searchInstances() {\r\n        axios.post(\r\n            getURL(instancesMainPath, InstanceCommand.search),\r\n            {\r\n                'filter':{\r\n                    'model':this.state.searchModel,\r\n                    'hostname':this.state.searchHostname,\r\n                    'rack':this.state.searchRack,\r\n                    'rack_position':this.state.searchRackU,\r\n                }\r\n            }\r\n            ).then(response => {\r\n                this.setState({ items: response.data['instances'] });\r\n            });\r\n    }\r\n\r\n    getModelList() {\r\n        axios.get(\r\n            getURL(instancesMainPath, InstanceCommand.GET_ALL_MODELS), {}\r\n            ).then(response => this.setState({ modelList: response.data.results }));\r\n        this.setState({ madeModelQuery: true });\r\n    }\r\n\r\n    sendUploadedFile(data) {\r\n        axios.post(\r\n            getURL(instancesMainPath, InstanceCommand.UPLOAD_FILE), data\r\n            ).then(response => {\r\n                if (response.data.message === 'success') {\r\n                    this.setState({ showStatus: true, statusMessage: response.data.summary, statusSeverity:'success', showImportModal: false,})\r\n                    this.searchInstances();\r\n                } else {\r\n                    this.setState({ showStatus: true, statusMessage: response.data.message, statusSeverity:\"error\" })\r\n                }\r\n            });\r\n    }\r\n\r\n    search(filters) {\r\n        this.setState({\r\n            searchModel:filters['model'],\r\n            searchHostname:filters['hostname'],\r\n            searchRack:filters['rack'],\r\n            searchRackU:filters['rack_position'],\r\n        }, this.searchInstances);\r\n    }\r\n\r\n    downloadTable() {\r\n        axios.post(\r\n            getURL(instancesMainPath, InstanceCommand.EXPORT_FILE),\r\n            {\r\n                'filter':{\r\n                    'model':this.state.searchModel,\r\n                    'hostname':this.state.searchHostname,\r\n                    'rack':this.state.searchRack,\r\n                    'rack_position':this.state.searchRackU,\r\n                }\r\n            }\r\n            ).then(response => {\r\n                this.setState({ csvData: response.data.csvData });\r\n                this.csvLink.link.click();\r\n            });\r\n    }\r\n\r\n    openCreateModal() {\r\n        this.getModelList();\r\n        this.setState({showCreateModal: true});\r\n    }\r\n\r\n    openImportModal() {\r\n        this.setState({showImportModal: true});\r\n    }\r\n\r\n    showDetailedView(id) {\r\n        this.setState({\r\n            showDetailedView: true,\r\n            detailViewLoading:true,\r\n            originalRack: this.state.items[id]['rack'],\r\n            originalrack_position: this.state.items[id]['rack_position'],\r\n        });\r\n\r\n        var model = this.state.items[id]['model'];\r\n        var hostname = this.state.items[id]['hostname'];\r\n        var rack = this.state.items[id]['rack'];\r\n        var rack_position = this.state.items[id]['rack_position'];\r\n\r\n        this.detailViewInstance(rack, rack_position);\r\n    }\r\n\r\n    closeCreateModal() {\r\n        this.setState({showCreateModal: false});\r\n    }\r\n\r\n    closeImportModal() {\r\n        this.setState({showImportModal: false});\r\n    }\r\n\r\n    closeDetailedView() {\r\n        this.setState({ showDetailedView: false })\r\n    }\r\n\r\n    updateInstanceCreator(event) {\r\n        this.state.createdInstance[event.target.name] = event.target.value;\r\n        this.forceUpdate()\r\n    }\r\n\r\n    updateInstanceEdited(event) {\r\n        this.state.detailedValues[event.target.name] = event.target.value;\r\n        this.forceUpdate()\r\n    }\r\n\r\n    closeShowStatus = () => {\r\n        this.setState({ showStatus: false })\r\n    }\r\n\r\n    createStatusClose = () => {\r\n        this.setState({ createStatusOpen: false })\r\n    }\r\n\r\n    detailStatusClose = () => {\r\n        this.setState({ detailStatusOpen: false })\r\n    }\r\n\r\n    uploadFile() {\r\n        const data = new FormData();\r\n        data.append('file', this.state.importedFile);\r\n        this.sendUploadedFile(data);\r\n    }\r\n\r\n    chooseFile(event) {\r\n        this.setState({ importedFile: event.target.files[0] })\r\n    }\r\n\r\n    initialize() {\r\n        this.searchInstances();\r\n        this.getModelList();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <ErrorBoundary>\r\n                {(this.state.madeModelQuery) ? null: this.initialize()}\r\n                <StatusDisplay\r\n                    open={this.state.showStatus}\r\n                    severity={this.state.statusSeverity}\r\n                    closeStatus={this.closeShowStatus}\r\n                    message={this.state.statusMessage}\r\n                />\r\n                {(this.props.privilege == Privilege.ADMIN) ?\r\n                    (<div>\r\n                <InstanceButtons\r\n                    openCreateModal={this.openCreateModal}\r\n                    openImportModal={this.openImportModal}\r\n                    downloadTable={this.downloadTable}\r\n                />\r\n                <CSVLink\r\n                    data={this.state.csvData}\r\n                    filename={instanceDownloadFileName}\r\n                    className=\"hidden\"\r\n                    ref={(r) => this.csvLink = r}\r\n                    target=\"_blank\"\r\n                />\r\n                <CreateInstance\r\n                    statusOpen={this.state.createStatusOpen}\r\n                    statusSeverity={this.state.createStatusSeverity}\r\n                    statusClose={this.createStatusClose}\r\n                    statusMessage={this.state.createStatusMessage}\r\n\r\n                    showCreateModal={this.state.showCreateModal}\r\n                    closeCreateModal={this.closeCreateModal}\r\n                    createModel={this.createInstance}\r\n                    updateModelCreator={this.updateInstanceCreator}\r\n                    inputs={inputs}\r\n                    options={this.state.modelList}\r\n                    useAutocomplete={true}\r\n                />\r\n                <UploadModal\r\n                    showImportModal={this.state.showImportModal}\r\n                    closeImportModal={this.closeImportModal}\r\n                    uploadFile={this.uploadFile}\r\n                    chooseFile={this.chooseFile}\r\n                    textDescription=\"The following format should be used for each row: hostname,rack,rack_position,vendor,model_number,owner,comment\"\r\n                /></div>):null\r\n            }\r\n                <FilterInstance\r\n                    updateSearchText={this.updateSearchText}\r\n                    search={this.search}\r\n                    filters={columns}\r\n                />\r\n                <TableView\r\n                    columns={columns}\r\n                    vals={this.state.items}\r\n                    keys={columns}\r\n                    showDetailedView={this.showDetailedView}\r\n                    filters={columns}\r\n                />\r\n                <DetailInstance\r\n                    statusOpen={this.state.detailStatusOpen}\r\n                    statusSeverity={this.state.detailStatusSeverity}\r\n                    statusClose={this.detailStatusClose}\r\n                    statusMessage={this.state.detailStatusMessage}\r\n\r\n                    showDetailedView={this.state.showDetailedView}\r\n                    closeDetailedView={this.closeDetailedView}\r\n                    inputs={inputs}\r\n                    updateModelEdited={this.updateInstanceEdited}\r\n                    defaultValues={this.state.detailedValues}\r\n                    loading={this.state.detailViewLoading}\r\n                    edit={this.editInstance}\r\n                    delete={this.deleteInstance}\r\n                    disabled={this.props.privilege==Privilege.USER}\r\n                />\r\n            </ErrorBoundary>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\nimport axios from 'axios';\r\nimport Select from '@material-ui/core/Select';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport { MenuItem, Button } from '@material-ui/core';\r\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\r\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\r\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\n\r\n\r\nimport { RackCommand } from \"../enums/RackCommands.ts\";\r\nimport { Privilege } from '../../enums/privilegeTypes.ts';\r\n\r\nimport getURL from '../../helpers/functions/GetURL';\r\nimport * as Constants from '../../Constants';\r\nimport StatusDisplay from '../../helpers/StatusDisplay';\r\n\r\nimport ErrorBoundray from '../../errors/ErrorBoundry';\r\n\r\nconst racksMainPath = 'racks/';\r\n\r\nexport default class RacksView extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            items:[],\r\n            startingRackLetter:'',\r\n            endingRackLetter:'',\r\n            startingRackNumber:-1,\r\n            endingRackNumber:-1,\r\n\r\n            showStatus:false,\r\n            statusMessage:'',\r\n            statusSeverity:'',\r\n\r\n            showConfirmationBox:false,\r\n        };\r\n\r\n        this.getAllRacks = this.getAllRacks.bind(this);\r\n        this.updateRacks = this.updateRacks.bind(this);\r\n        this.createRacks = this.createRacks.bind(this);\r\n        this.deleteRacks = this.deleteRacks.bind(this);\r\n        this.viewRacks = this.viewRacks.bind(this);\r\n        this.changeStartingLetter = this.changeStartingLetter.bind(this);\r\n        this.changeEndingLetter = this.changeEndingLetter.bind(this);\r\n        this.changeStartingNum = this.changeStartingNum.bind(this);\r\n        this.changeEndingNum = this.changeEndingNum.bind(this);\r\n        this.closeShowStatus = this.closeShowStatus.bind(this);\r\n\r\n        axios.defaults.headers.common['token'] = this.props.token;\r\n        axios.defaults.headers.common['privilege'] = this.props.privilege;\r\n\r\n    }\r\n\r\n    getAllRacks() {\r\n        axios.get(getURL(racksMainPath, RackCommand.GET_ALL_RACKS)).then(response => {\r\n                if (response.data.message === 'success') {\r\n                    this.setState({ showStatus: true, statusMessage: \"Success\" })\r\n                } else {\r\n                    this.setState({ showStatus: true, statusMessage: response.data.message, statusSeverity:\"error\" })\r\n                }\r\n            });\r\n    }\r\n\r\n    updateRacks(command) {\r\n        axios.post(\r\n            getURL(racksMainPath, command),\r\n            {\r\n                'start_letter':this.state.startingRackLetter,\r\n                'stop_letter':this.state.endingRackLetter,\r\n                'start_number':this.state.startingRackNumber,\r\n                'stop_number':this.state.endingRackNumber,\r\n            }\r\n            ).then(response => {\r\n                console.log(response);\r\n                if (response.data.message === 'success') {\r\n                    this.setState({ showStatus: true, statusMessage: \"Success\", statusSeverity:\"success\", showConfirmationBox:false });\r\n                    if (command == RackCommand.GET_RACK_DETAILS) {\r\n                        const win = window.open(response.data.link, '_blank');\r\n                        if (win != null) {\r\n                            win.focus();\r\n                        }\r\n                    }\r\n                } else {\r\n                    this.setState({ showStatus: true, statusMessage: response.data.message, statusSeverity:\"error\" })\r\n                }\r\n            });\r\n    }\r\n\r\n    createRacks() {\r\n        this.updateRacks(RackCommand.CREATE_RACKS);\r\n    }\r\n\r\n    deleteRacks() {\r\n        this.updateRacks(RackCommand.DELETE_RACKS);\r\n    }\r\n\r\n    viewRacks() {\r\n        this.updateRacks(RackCommand.GET_RACK_DETAILS);\r\n    }\r\n\r\n    changeStartingLetter(event) {\r\n        this.setState({ startingRackLetter: event.target.value })\r\n    }\r\n\r\n    changeEndingLetter(event) {\r\n        this.setState({ endingRackLetter: event.target.value })\r\n    }\r\n\r\n    changeStartingNum(event) {\r\n        this.setState({ startingRackNumber: event.target.value })\r\n    }\r\n\r\n    changeEndingNum(event) {\r\n        this.setState({ endingRackNumber: event.target.value })\r\n    }\r\n\r\n    closeShowStatus() {\r\n        this.setState({ showStatus: false })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <ErrorBoundray>\r\n                <StatusDisplay\r\n                    open={this.state.showStatus}\r\n                    severity={this.state.statusSeverity}\r\n                    closeStatus={this.closeShowStatus}\r\n                    message={this.state.statusMessage}\r\n                />\r\n                <FormControl>\r\n                    <Select id=\"starting-letter-selector\" value={this.state.startingRackLetter} onChange={this.changeStartingLetter}>\r\n                        {Constants.RackX.map(val => (<MenuItem value={val}>{val}</MenuItem>))}\r\n                    </Select>\r\n                    <FormHelperText>Starting Letter</FormHelperText>\r\n                </FormControl>\r\n                <FormControl>\r\n                    <Select id=\"ending-letter-selector\" value={this.state.endingRackLetter} onChange={this.changeEndingLetter}>\r\n                        {Constants.RackX.map(val => (<MenuItem value={val}>{val}</MenuItem>))}\r\n                    </Select>\r\n                    <FormHelperText>Ending Letter</FormHelperText>\r\n                </FormControl>\r\n                <FormControl>\r\n                    <Select id=\"starting-num-selector\" value={this.state.startingRackNumber} onChange={this.changeStartingNum}>\r\n                        {Constants.RackY.map(val => (<MenuItem value={val}>{val}</MenuItem>))}\r\n                    </Select>\r\n                    <FormHelperText>Starting Number</FormHelperText>\r\n                </FormControl>\r\n                <FormControl>\r\n                    <Select id=\"ending-num-selector\" value={this.state.endingRackNumber} onChange={this.changeEndingNum}>\r\n                        {Constants.RackY.map(val => (<MenuItem value={val}>{val}</MenuItem>))}\r\n                    </Select>\r\n                    <FormHelperText>Ending Number</FormHelperText>\r\n                </FormControl>\r\n                <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    onClick={this.viewRacks}\r\n                    disabled={this.state.showConfirmationBox}\r\n                >\r\n                    View\r\n                </Button>\r\n                {(this.props.privilege == Privilege.ADMIN) ?\r\n                (<div>\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        onClick={this.createRacks}\r\n                        disabled={this.state.showConfirmationBox}\r\n                    >\r\n                        Create\r\n                    </Button>\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        onClick={() => this.setState({ showConfirmationBox: true, })}\r\n                        disabled={this.state.showConfirmationBox}\r\n                    >\r\n                        Delete\r\n                    </Button>\r\n                </div>):null}\r\n\r\n                {this.state.showConfirmationBox ? <div>\r\n                        Are you sure you wish to delete?\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            onClick={this.deleteRacks}\r\n                        >\r\n                            Yes\r\n                        </Button>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            onClick={() => this.setState({ showConfirmationBox: false, })}\r\n                        >\r\n                            No\r\n                        </Button>\r\n                    </div>:null}\r\n\r\n                    {this.state.items.map(rack => (\r\n                    <ExpansionPanel>\r\n                        <ExpansionPanelSummary\r\n                            expandIcon={<ExpandMoreIcon />}\r\n                        >\r\n                            <Typography>{rack.label}</Typography>\r\n                        </ExpansionPanelSummary>\r\n                        <ExpansionPanelDetails>\r\n                            {rack}\r\n                            {/*<TableContainer component={Paper}>\r\n                                <Table>\r\n                                    <TableHead>\r\n                                        <TableRow >\r\n                                            {tableCols[key].map(column => (<TableCell><span id={column}>{column}</span></TableCell>))}\r\n                                        </TableRow>\r\n                                    </TableHead>\r\n                                    <TableBody>\r\n                                    {this.state.tableValues[key].map(row => (\r\n                                        <TableRow>\r\n                                            {row.map(column => (<TableCell><span id={column}>{column}</span></TableCell>))}\r\n                                        </TableRow>\r\n                                    ))}\r\n                                    </TableBody>\r\n                                </Table>\r\n                            </TableContainer>*/}\r\n                        </ExpansionPanelDetails>\r\n                    </ExpansionPanel>\r\n                    ))}\r\n                </ErrorBoundray>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","export enum StatsCommand {\r\n    GENERATE_REPORT = \"generate-report\",\r\n    TEST = \"test\",\r\n}\r\n","export default function jsonToArr(incomingJSON) {\r\n    try {\r\n        var json = JSON.parse(incomingJSON);\r\n    } catch (e) {\r\n        var json = incomingJSON;\r\n    }\r\n\r\n    if (Object.entries(json).length === 0 && json.constructor === Object) {\r\n        return [];\r\n    }\r\n\r\n    const items = [];\r\n\r\n    Object.keys(json).map(function(key) {\r\n        const row = [];\r\n        row.push(key);\r\n        row.push(json[key]);\r\n        items.push(row);\r\n    });\r\n    return items;\r\n}\r\n","import React from 'react';\r\nimport axios from 'axios';\r\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\r\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\r\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport getURL from '../../helpers/functions/GetURL';\r\nimport  Button from '@material-ui/core/Button';\r\nimport { StatsCommand } from \"../enums/StatsCommands.ts\";\r\nimport JSONtoArr from \"../../helpers/functions/JSONtoArr\";\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport StatusDisplay from '../../helpers/StatusDisplay';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport ErrorBoundray from '../../errors/ErrorBoundry';\r\n\r\n\r\nconst statsMainPath = 'stats/';\r\nconst tables = {\r\n    \"totalUsage\":\"Total Usage\",\r\n    \"spaceUsage\": \"Space Usage\",\r\n    \"vendorUsage\": \"Vendor Usage\",\r\n    \"modelUsage\": \"Model Usage\",\r\n    \"ownerUsage\": \"Owner Usage\",\r\n}\r\n\r\nconst tableCols = {\r\n    \"totalUsage\":[\"Total\", \"Usage\"],\r\n    \"spaceUsage\": [\"Rack\", \"Usage\"],\r\n    \"vendorUsage\": [\"Vendor\", \"Usage\"],\r\n    \"modelUsage\": [\"Model\", \"Usage\"],\r\n    \"ownerUsage\": [\"Ownder\", \"Usage\"],\r\n}\r\n\r\nexport default class StatisticsView extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            tableValues: {\r\n                \"totalUsage\":[],\r\n                \"spaceUsage\": [],\r\n                \"vendorUsage\": [],\r\n                \"modelUsage\": [],\r\n                \"ownerUsage\": [],\r\n            },\r\n            totalUsage:[],\r\n            spaceUsage:[],\r\n            vendorUsage:[],\r\n            modelUsage:[],\r\n            ownerUsage:[],\r\n\r\n            showStatus:false,\r\n            statusMessage:'',\r\n            statusSeverity:'',\r\n        };\r\n\r\n        this.closeShowStatus = this.closeShowStatus.bind(this);\r\n        this.generateReport = this.generateReport.bind(this);\r\n\r\n        axios.defaults.headers.common['token'] = this.props.token;\r\n        axios.defaults.headers.common['privilege'] = this.props.privilege;\r\n    }\r\n\r\n    generateReport() {\r\n        axios.get(getURL(statsMainPath, StatsCommand.GENERATE_REPORT)).then(response => {\r\n                try {\r\n                    var data = response.data;\r\n                    var totalUsage = [];\r\n                    var totalUsageRow = [\"Total Usage\"];\r\n                    totalUsageRow.push(data[\"totalUsage\"]);\r\n                    totalUsage.push(totalUsageRow);\r\n\r\n                    var spaceUsage = JSONtoArr(data[\"spaceUsage\"]);\r\n                    if (spaceUsage.length == 0) {\r\n                        spaceUsage.push([\"No space is currently being used\", []])\r\n                    }\r\n                    var vendorUsage = JSONtoArr(data[\"vendorUsage\"]);\r\n                    if (vendorUsage.length == 0) {\r\n                        vendorUsage.push([\"No vendors currently using space\", []])\r\n                    }\r\n                    var modelUsage = JSONtoArr(data[\"modelUsage\"]);\r\n                    if (modelUsage.length == 0) {\r\n                        modelUsage.push([\"No models currently using space\", []])\r\n                    }\r\n                    var ownerUsage = JSONtoArr(data[\"ownerUsage\"]);\r\n                    if (ownerUsage.length == 0) {\r\n                        ownerUsage.push([\"No owners currently using space\", []])\r\n                    }\r\n\r\n                    this.setState({\r\n                        showStatus: true,\r\n                        statusSeverity:\"success\",\r\n                        statusMessage: \"Success\",\r\n                        tableValues: {\r\n                            \"totalUsage\":totalUsage,\r\n                            \"spaceUsage\": spaceUsage,\r\n                            \"vendorUsage\": vendorUsage,\r\n                            \"modelUsage\": modelUsage,\r\n                            \"ownerUsage\": ownerUsage,\r\n                        },\r\n                     })\r\n                } catch {\r\n                    this.setState({ showStatus: true, statusMessage: response.data.message, statusSeverity:\"error\" })\r\n                }\r\n            });\r\n    }\r\n\r\n    closeShowStatus() {\r\n        this.setState({ showStatus: false })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <ErrorBoundray >\r\n                <StatusDisplay\r\n                    open={this.state.showStatus}\r\n                    severity={this.state.statusSeverity}\r\n                    closeStatus={this.closeShowStatus}\r\n                    message={this.state.statusMessage}\r\n                />\r\n                <div>\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        onClick={this.generateReport}\r\n                    >\r\n                        Generate New Report\r\n                    </Button>\r\n                </div>\r\n                {Object.keys(tables).map(key => (\r\n                <ExpansionPanel>\r\n                    <ExpansionPanelSummary\r\n                        expandIcon={<ExpandMoreIcon />}\r\n                    >\r\n                        <Typography>{tables[key]}</Typography>\r\n                    </ExpansionPanelSummary>\r\n                    <ExpansionPanelDetails>\r\n                        <TableContainer component={Paper}>\r\n                            <Table>\r\n                                <TableHead>\r\n                                    <TableRow >\r\n                                        {tableCols[key].map(column => (<TableCell><span id={column}>{column}</span></TableCell>))}\r\n                                    </TableRow>\r\n                                </TableHead>\r\n                                <TableBody>\r\n                                {this.state.tableValues[key].map(row => (\r\n                                    <TableRow>\r\n                                        {row.map(column => (<TableCell><span id={column}>{column + (isNaN(column) ? \"\" : \"%\")}</span></TableCell>))}\r\n                                    </TableRow>\r\n                                ))}\r\n                                </TableBody>\r\n                            </Table>\r\n                        </TableContainer>\r\n                    </ExpansionPanelDetails>\r\n                </ExpansionPanel>\r\n                ))}\r\n                </ErrorBoundray>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport AccountCircle from '@material-ui/icons/AccountCircle';\r\n\r\nimport ModelsView from './models/pages/ModelsView';\r\nimport UsersView from './users/pages/UsersView';\r\nimport InstancesView from './instances/pages/InstancesView';\r\nimport RacksView from './racks/pages/RacksView';\r\nimport StatisticsView from './statistics/pages/StatisticsView';\r\n\r\nimport { Privilege } from './enums/privilegeTypes.ts'\r\n\r\nimport ErrorBoundry from './errors/ErrorBoundry';\r\n\r\nimport '../stylesheets/TabStyles.css';\r\n\r\nexport default class TabViewer extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            currentTabID:0,\r\n            anchorEl: null,\r\n            isMenuOpen:false,\r\n        };\r\n        this.handleChange = this.handleChange.bind(this);\r\n    }\r\n\r\n    handleChange(event, newValue) {\r\n        this.setState({ currentTabID: newValue })\r\n    }\r\n\r\n    handleProfileMenuOpen = (event) => {\r\n        this.setState({ anchorEl: event.currentTarget, isMenuOpen:true });\r\n    }\r\n\r\n    handleMenuClose = () => {\r\n        this.setState({ anchorEl: null, isMenuOpen:false });\r\n    };\r\n\r\n    render() {\r\n        return (\r\n        <div>\r\n            <ErrorBoundry>\r\n            <AppBar position=\"static\">\r\n                <div class=\"root\">\r\n                    <Typography class=\"title\" variant=\"h3\">\r\n                        Hyposoft Server Management\r\n                    </Typography>\r\n                    <span class=\"grow\"/>\r\n                    <IconButton\r\n                        aria-label=\"account of current user\"\r\n                        aria-controls=\"menu-appbar\"\r\n                        aria-haspopup=\"true\"\r\n                        color=\"inherit\"\r\n                        onClick={this.handleProfileMenuOpen}\r\n                    >\r\n                        <AccountCircle />\r\n                    </IconButton>\r\n                    <Menu\r\n                        anchorEl={this.state.anchorEl}\r\n                        anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n                        id='primary-search-account-menu'\r\n                        keepMounted\r\n                        transformOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n                        open={this.state.isMenuOpen}\r\n                        onClose={this.handleMenuClose}\r\n                    >\r\n                        <MenuItem onClick={this.handleMenuClose}>{\"Username: \" + this.props.username}</MenuItem>\r\n                        <MenuItem onClick={this.handleMenuClose}>{\"Privilege: \" + this.props.privilege}</MenuItem>\r\n                        <MenuItem onClick={this.props.logout} >Logout</MenuItem>\r\n                    </Menu>\r\n                </div>\r\n            </AppBar>\r\n\r\n            <Tabs value={this.state.currentTabID} onChange={this.handleChange}\r\n                indicatorColor=\"primary\"\r\n                textColor=\"primary\"\r\n                centered\r\n            >\r\n                    <Tab value={0} style={{flexGrow: 1,}} label=\"Models\"> </Tab>\r\n                    <Tab value={1} style={{flexGrow: 1,}} label=\"Instances\" ></Tab>\r\n                    {(this.props.privilege == Privilege.ADMIN) ? <Tab value={2} style={{flexGrow: 1,}} label=\"Users\"></Tab> : null}\r\n                    <Tab value={3} style={{flexGrow: 1,}} label=\"Racks\" />\r\n                    <Tab value={4} style={{flexGrow: 1,}} label=\"Statistics\" />\r\n            </Tabs>\r\n            <Typography\r\n                component=\"div\"\r\n                role=\"tabpanel\"\r\n                hidden={this.state.currentTabID !== 0}\r\n                id={`simple-tabpanel-0`}\r\n                aria-labelledby={`simple-tab-0`}\r\n            >\r\n                <ModelsView token={this.props.token} privilege={this.props.privilege} />\r\n            </Typography>\r\n            <Typography\r\n                component=\"div\"\r\n                role=\"tabpanel\"\r\n                hidden={this.state.currentTabID !== 1}\r\n                id={`simple-tabpanel-0`}\r\n                aria-labelledby={`simple-tab-0`}\r\n            >\r\n                <InstancesView token={this.props.token} privilege={this.props.privilege} />\r\n            </Typography>\r\n            <Typography\r\n                component=\"div\"\r\n                role=\"tabpanel\"\r\n                hidden={this.state.currentTabID !== 2}\r\n                id={`simple-tabpanel-0`}\r\n                aria-labelledby={`simple-tab-0`}\r\n            >\r\n                <UsersView token={this.props.token} privilege={this.props.privilege} />\r\n            </Typography>\r\n            <Typography\r\n                component=\"div\"\r\n                role=\"tabpanel\"\r\n                hidden={this.state.currentTabID !== 3}\r\n                id={`simple-tabpanel-0`}\r\n                aria-labelledby={`simple-tab-0`}\r\n            >\r\n                <RacksView token={this.props.token} privilege={this.props.privilege} />\r\n            </Typography>\r\n            <Typography\r\n                component=\"div\"\r\n                role=\"tabpanel\"\r\n                hidden={this.state.currentTabID !== 4}\r\n                id={`simple-tabpanel-0`}\r\n                aria-labelledby={`simple-tab-0`}\r\n            >\r\n                <StatisticsView token={this.props.token} privilege={this.props.privilege} />\r\n            </Typography>\r\n            </ErrorBoundry>\r\n        </div>);\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport Login from \"./Login\";\r\nimport TabViewer from \"./Tabs\";\r\nimport axios from 'axios';\r\nimport getURL from './helpers/functions/GetURL';\r\n\r\nconst storedToken = 'token';\r\nconst storedPrivilege = 'privilege';\r\nconst storedLoggedIn = 'loggedIn';\r\nconst storedUsername = 'username';\r\n\r\nexport default class PageSelector extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      token:sessionStorage.getItem(storedToken) || '',\r\n      privilege:sessionStorage.getItem(storedPrivilege) || '',\r\n      loggedIn:sessionStorage.getItem(storedLoggedIn) || '',\r\n      username:sessionStorage.getItem(storedUsername) || '',\r\n    };\r\n\r\n    this.login = this.login.bind(this);\r\n    this.logout = this.logout.bind(this);\r\n  }\r\n\r\n  login(token, username, privilege) {\r\n    sessionStorage.setItem(storedToken, token);\r\n    sessionStorage.setItem(storedPrivilege, privilege);\r\n    sessionStorage.setItem(storedLoggedIn, true);\r\n    sessionStorage.setItem(storedUsername, username);\r\n\r\n    this.setState({\r\n      token:token,\r\n      privilege:privilege,\r\n      loggedIn:true,\r\n      username: username,\r\n    })\r\n  }\r\n\r\n  logout() {\r\n    axios.get(getURL('users/', 'logout'));\r\n\r\n    this.setState({\r\n      token:'',\r\n      privilege:'',\r\n      loggedIn:false,\r\n      username:'',\r\n    });\r\n\r\n    sessionStorage.removeItem(storedToken);\r\n    sessionStorage.removeItem(storedPrivilege);\r\n    sessionStorage.removeItem(storedLoggedIn);\r\n    sessionStorage.removeItem(storedUsername);\r\n\r\n    window.location.reload();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        {this.state.loggedIn ?  <TabViewer token={this.state.token} username={this.state.username} privilege={this.state.privilege} logout={this.logout} /> : <Login loginFunc={this.login} />}\r\n      </div>\r\n    );\r\n  }\r\n\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './stylesheets/index.css';\nimport PageSelector from './javascript/PageSelector';\n\nReactDOM.render(<PageSelector />, document.getElementById('root'));\n"],"sourceRoot":""}
