{"version":3,"sources":["javascript/enums/privilegeTypes.ts","javascript/Constants.jsx","javascript/helpers/functions/GetURL.jsx","javascript/models/enums/ModelCommands.ts","javascript/models/enums/ModelInputs.ts","javascript/helpers/StatusDisplay.jsx","javascript/errors/ErrorBoundry.jsx","javascript/ShibLogin.jsx","javascript/Login.jsx","javascript/models/helpers/ButtonsModel.jsx","javascript/models/helpers/FilterModel.jsx","javascript/models/helpers/DetailModel.jsx","javascript/models/helpers/CreateModel.jsx","javascript/users/enums/UserCommands.ts","javascript/users/enums/UserInputs.ts","javascript/helpers/UploadModal.jsx","javascript/helpers/TableView.jsx","javascript/models/ModelConstants.jsx","javascript/models/pages/ModelsView.jsx","javascript/assets/enums/AssetCommands.ts","javascript/users/helpers/FilterUser.jsx","javascript/users/helpers/DetailUser.jsx","javascript/users/helpers/CreateUser.jsx","javascript/users/UserConstants.jsx","javascript/users/pages/UsersView.jsx","javascript/assets/AssetConstants.jsx","javascript/assets/enums/AssetInputs.ts","javascript/assets/helpers/ImpExpAsset.jsx","javascript/assets/helpers/CreateAsset.jsx","javascript/assets/helpers/DetailsAsset.jsx","javascript/assets/helpers/FilterAsset.jsx","javascript/assets/helpers/functions/createAssetJSON.jsx","javascript/assets/helpers/TableAssets.jsx","javascript/racks/enums/RackCommands.ts","javascript/assets/pages/AssetsView.jsx","javascript/statistics/enums/StatsCommands.ts","javascript/racks/pages/RacksView.jsx","javascript/helpers/functions/JSONtoArr.jsx","javascript/statistics/pages/StatisticsView.jsx","javascript/Tabs.jsx","javascript/PageSelector.jsx","index.jsx","images/logo.png"],"names":["Privilege","serverEndpoint","RackX","ASSETS_MAIN_PATH","MODELS_MAIN_PATH","USERS_MAIN_PATH","DATACENTERS_MAIN_PATH","CLIENT_ID","SHIBBOLETH_LOGIN","encodeURIComponent","getURL","path","endpoint","Constants","ModelCommand","ModelInput","StatusDisplay","props","state","Snackbar","open","this","autoHideDuration","onClose","closeStatus","elevation","variant","severity","message","IconButton","aria-label","color","size","onClick","fontSize","React","Component","ErrorBoundary","hasError","error","errorInfo","children","ShibLogin","username","password","statusMessage","showStatus","statusSeverity","Grid","container","spacing","direction","justify","alignItems","onKeyDown","e","onKeyPressed","style","item","xs","src","logo","alt","height","Card","minWidth","CardContent","Typography","fontWeight","gutterBottom","closeShowStatus","loginMainPath","queryString","require","Login","getDukeCredentials","token","axios","get","headers","then","response","console","log","post","data","netid","mail","displayName","setState","loginFunc","loginWithOAuth","window","location","initialized","oauth","bind","submitCredentials","shib","params","parse","hash","substring","access_token","event","target","value","key","preventDefault","stopPropagation","TextField","id","label","required","ref","onChange","updateUsername","type","updatePassword","Button","direciton","width","ButtonsModel","startIcon","openImportModal","downloadTable","FilterModel","filters","hasOwnProperty","forceUpdate","search","map","filter","index","InputBase","placeholder","inputProps","updateSearchText","createInputs","name","inputs","DetailModel","updateColor","updateModelColorDetails","hex","showConfirmationBox","closeModal","confirmDelete","deleteItem","delete","showDetailedView","ExpansionPanel","ExpansionPanelSummary","expandIcon","ExpansionPanelDetails","statusOpen","statusClose","loading","CircularProgress","Autocomplete","options","includeInputInList","freeSolo","defaultValue","defaultValues","vendor","renderInput","updateModelCreator","onBlur","fullWidth","disabled","modelNumber","powerPorts","cpu","memory","storage","comments","edit","UserCommand","UserInput","CreateModel","updateModelColor","createModel","UploadModal","Modal","top","left","transform","background","aria-labelledby","aria-describedby","showImportModal","closeImportModal","accept","chooseFile","uploadFile","textDescription","TableView","TableContainer","component","Paper","Table","className","TableHead","TableRow","columns","col","TableCell","TableBody","vals","row","keys","scope","GENERAL_MODEL_ERROR","modelsMainPath","ModelsView","create","createdModel","Vendor","model_number","Height","display_color","ethernet_ports","power_ports","CPU","Memory","Storage","Comment","showCreateModal","getVendorList","searchModels","createStatusOpen","createStatusMessage","createStatusSeverity","catch","ModelConstants","editModel","originalVendor","originalModelNumber","originalHeight","detailedValues","detailStatusOpen","detailStatusMessage","detailStatusSeverity","deleteModel","detailViewModel","modelNum","detailView","detailViewLoading","viewVendor","viewModel","searchVendor","searchModelNum","searchHeight","items","searchText","VENDOR_VALUES","vendorsList","results","madeVendorQuery","sendUploadedFile","UPLOAD_FILE","summary","EXPORT_FILE","csvData","csvLink","link","click","openCreateModal","closeCreateModal","closeDetailedView","updateModelEdited","reason","createStatusClose","detailStatusClose","FormData","append","importedFile","files","createdVendor","createdModelNum","createdHeight","createdDispClr","createdEthPorts","createdPwrPorts","createdCPU","createdMem","createdStorage","createdComments","deleteVendor","defaults","common","privilege","ADMIN","filename","r","useAutocomplete","USER","AssetCommand","Filters","DetailedView","input","CreateModal","class","GENERAL_USER_ERROR","usersMainPath","UsersView","createUser","createdUser","Username","Password","display_name","Email","searchUsers","UserConstants","editUser","originalUsername","deleteUser","deleteUsername","detailViewUser","viewUser","searchUsernm","searchEml","searchDspNm","searchPriv","updateUserCreator","updateUserEdited","createStatus","AssetInput","SUCCESS_TOKEN","ERROR_TOKEN","ImpExpAsset","AssetConstants","showImport","classes","modal","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","timeout","Fade","in","paper","button","withStyles","theme","display","justifyContent","backgroundColor","palette","border","boxShadow","shadows","padding","margin","showTooltip","description","emptySearch","searchPath","right","CreateAsset","getLists","getModelList","getOwnerList","getDatacenterList","getNextAssetNum","getAssetList","models","modelNames","networkNames","powerPortNames","model","modelKey","push","parseInt","loadingModels","modelList","networkList","powerPortList","availableNetworkConnections","users","user","loadingOwners","ownerList","datacenters","datacenter","loadingDatacenters","datacenterList","GET_NEXT_ASSET_NUM","loadingAssetNumber","asset_number","instances","assetNums","assetNumToModel","instance","loadingHostnames","assetNumList","assetNumToModelList","createAsset","createJSON","showModal","hostname","rack","rackU","owner","comment","datacenter_id","tags","network_connections","power_connections","updateModel","updateHostname","updateRack","updateRackU","updateOwner","updateComment","updateDatacenter","updateTags","changeNetworkMacAddress","port","val","length","toLowerCase","prevState","Object","assign","undefined","mac_address","changeNetworkHostname","connection_hostname","changeNetworkPort","connection_port","updatePowerPort","changePowerPortState","portNum","leftRight","updateAssetNumber","getPowerConnections","pwrConns","entries","availableNetworks","asset","networList","availableConnections","selectedConnection","powerPortState","MODEL","HOSTNAME","RACK","RACK_U","OWNER","COMMENT","DATACENTER","MAC_ADDRESS","NETWORK_CONNECTIONS","POWER_CONNECTIONS","ASSET_NUMBER","scroll","progress","Tooltip","placement","title","InputProps","min","max","assetNum","networkPort","macAddress","networkConnections","Array","from","_","k","FormControl","RadioGroup","FormControlLabel","control","Radio","labelPlacement","multiline","root","flexGrow","maxWidth","overflow","marginLeft","DetailAsset","FilterAsset","newValue","updateNetworkConnections","updatePowerConnections","updateSearchItems","assets","startingRackNumber","endingRackNumber","Fragment","inputRoot","inputInput","FormHelperText","Select","startingRackLetter","changeStartingLetter","MenuItem","endingRackLetter","changeEndingLetter","changeStartingNum","changeEndingNum","grow","menuButton","marginRight","breakpoints","up","position","borderRadius","shape","fade","white","searchIcon","pointerEvents","transition","transitions","sectionDesktop","sectionMobile","createData","RackCommand","rows","TableAsset","editAsset","body","getAssetAsJSON","RACK_ORIGINAL","originalRack","RACK_U_ORIGINAL","originalrack_position","deleteAsset","getAssetDetails","rack_position","tableItems","deleteAssetRack","deleteAssetrack_position","order","orderBy","table","styledTableRow","tableCellHead","align","close","default","primary","main","styledTableCell","marginBottom","AssetsView","StatsCommand","racksMainPath","RacksView","getAllRacks","GET_ALL_RACKS","racksList","racks","createRacks","updateRacks","CREATE_RACKS","deleteRacks","DELETE_RACKS","viewRacks","GET_RACK_DETAILS","command","win","focus","jsonToArr","incomingJSON","json","JSON","constructor","tables","tableCols","StatisticsView","tableValues","totalUsage","spaceUsage","vendorUsage","modelUsage","ownerUsage","generateReport","GENERATE_REPORT","totalUsageRow","JSONtoArr","column","isNaN","TabViewer","handleProfileMenuOpen","anchorEl","currentTarget","isMenuOpen","handleMenuClose","currentTabID","handleChange","AppBar","Toolbar","aria-controls","aria-haspopup","Menu","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","logout","Tabs","indicatorColor","textColor","centered","Tab","role","hidden","Container","tab","storedToken","storedPrivilege","storedLoggedIn","storedUsername","PageSelector","sessionStorage","getItem","loggedIn","login","setItem","removeItem","reload","redirected","ReactDOM","render","document","referrer","getElementById","module","exports"],"mappings":"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","file":"static/js/main.fbba47be.chunk.js","sourcesContent":["export enum Privilege  {\r\n    ADMIN = \"admin\",\r\n    USER = \"user\",\r\n};\r\n","/**\r\n * Constants file\r\n */\r\n\r\nexport const localServerEndpoint = 'http://localhost:4010/';\r\nexport const testServerEndpoint = ' https://parseltongue-finishinge-lfw68m.herokuapp.com/';\r\nexport const devServerEndpoint = 'https://parseltongue-dev.herokuapp.com/';\r\nexport const prodServerEndpoint = 'https://parseltongue-prod.herokuapp.com/';\r\n\r\nexport const serverEndpoint = localServerEndpoint;\r\n\r\n\r\nexport const RackX = [\r\n    'A', 'B', 'C', 'D', 'E',\r\n    'F', 'G', 'H', 'I', 'J',\r\n    'K', 'L', 'M', 'N', 'O',\r\n    'P', 'Q', 'R', 'S', 'T',\r\n    'W', 'X', 'Y', 'Z',\r\n]\r\n\r\nexport const ASSETS_MAIN_PATH = 'instances/';\r\nexport const MODELS_MAIN_PATH = \"models/\";\r\nexport const USERS_MAIN_PATH = \"users/\";\r\nexport const RACKS_MAIN_PATH = \"racks/\";\r\nexport const DATACENTERS_MAIN_PATH = \"datacenters/\";\r\n\r\nexport const CLIENT_ID = \"ParselTonguesUserAuth\";\r\nexport const CLIENT_SECRET = \"LpUwB*eiK4Iw#1gaCu5jYp1u5uRF3ERsdmuNUGoKYNzn7rHm7b\";\r\nexport const SCOPE = \"basic\";\r\n\r\nexport const SHIBBOLETH_LOGIN =\r\n    \"https://oauth.oit.duke.edu/oauth/authorize.php?\"\r\n     + \"client_id=\" + encodeURIComponent(CLIENT_ID)\r\n     + \"&client_secret=\" + encodeURIComponent(CLIENT_SECRET)\r\n     + \"&redirect_uri=\" + encodeURIComponent('http://localhost:3000/')\r\n     + \"&response_type=token\"\r\n     + \"&state=1129\"\r\n     + \"&scope=\" + encodeURIComponent(SCOPE);\r\n","import * as Constants from '../../Constants';\r\n\r\nexport default function getURL(path, endpoint) {\r\n    return Constants.serverEndpoint + path + endpoint;\r\n}\r\n","export enum ModelCommand {\r\n    create = 'create/',\r\n    delete = 'delete/',\r\n    edit = 'edit/',\r\n    view = 'view/',\r\n    detailView = 'detailView/',\r\n    search = 'search/',\r\n    VENDOR_VALUES = 'assistedvendor/',\r\n    UPLOAD_FILE = 'import/',\r\n    EXPORT_FILE = 'export/'\r\n}\r\n","export enum ModelInput {\r\n    Vendor = 'vendor',\r\n    model_number = 'model_number',\r\n    Height = 'height',\r\n    display_color = 'display_color',\r\n    ethernet_ports = 'ethernet_ports',\r\n    power_ports = 'power_ports',\r\n    CPU = 'cpu',\r\n    Memory = 'memory',\r\n    Storage = 'storage',\r\n    Comment = 'comment'\r\n}\r\n","import React from 'react';\r\n\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\n\r\n\r\nexport default class StatusDisplay extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n\r\n        };\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Snackbar open={this.props.open} autoHideDuration={12000} onClose={this.props.closeStatus}>\r\n                    <MuiAlert elevation={6} variant=\"filled\"\r\n                        severity={this.props.severity}\r\n                    >\r\n                        <div>\r\n                        {this.props.message}\r\n                        <IconButton\r\n                            aria-label=\"close\"\r\n                            color=\"inherit\"\r\n                            size=\"small\"\r\n                            onClick={this.props.closeStatus}\r\n                        >\r\n                            <CloseIcon fontSize=\"inherit\" />\r\n                        </IconButton>\r\n                        </div>\r\n                    </MuiAlert >\r\n                </Snackbar>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\r\n\r\nexport default class ErrorBoundary extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = { hasError: false };\r\n    }\r\n\r\n    static getDerivedStateFromError(error) {\r\n      // Update state so the next render will show the fallback UI.\r\n      return \"An unforseen error occurred. Please refresh the page and try again later.\";\r\n    }\r\n\r\n    componentDidCatch(error, errorInfo) {\r\n      // You can also log the error to an error reporting service\r\n      //logErrorToMyService(error, errorInfo);\r\n    }\r\n\r\n    render() {\r\n      if (this.state.hasError) {\r\n        // You can render any custom fallback UI\r\n        return <h1>Something went wrong.</h1>;\r\n      }\r\n\r\n      return this.props.children;\r\n    }\r\n}\r\n","import React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport StatusDisplay from './helpers/StatusDisplay';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport logo from '../images/logo.png';\r\n\r\n\r\n\r\nexport default class ShibLogin extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            username:'',\r\n            password:'',\r\n            statusMessage:'',\r\n            showStatus:false,\r\n            statusSeverity:'info',\r\n        };\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Grid\r\n                container\r\n                spacing={5}\r\n                direction=\"column\"\r\n                justify=\"flex-start\"\r\n                alignItems=\"center\"\r\n                onKeyDown={(e) => this.onKeyPressed(e)}\r\n                style={{\r\n                    \"minHeight\": \"102vh\",\r\n                    \"background\": \"linear-gradient(to top, #a8e063, #56ab2f)\",\r\n                }}\r\n            >\r\n                <Grid item xs={12}>\r\n                    <img src={logo} alt=\"\" style={{height: \"200px\", \"marginTop\": \"50px\"}} />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <Card\r\n                        style={\r\n                            {\r\n                                minWidth: '20vw',\r\n                            }\r\n                        }\r\n                    >\r\n                        <CardContent>\r\n                            <Grid\r\n                                container\r\n                                spacing={1}\r\n                                direction=\"column\"\r\n                                justify=\"center\"\r\n                                alignItems=\"center\"\r\n                            >\r\n                                <Grid container item alignItems=\"flex-start\" xs={12}>\r\n                                    <Typography\r\n                                        variant=\"h6\"\r\n                                        color=\"textPrimary\"\r\n                                        fontWeight=\"fontWeightBold\"\r\n                                        gutterBottom\r\n                                    >\r\n                                        Please wait while we log you in...\r\n                                    </Typography>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </CardContent>\r\n                    </Card>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <StatusDisplay\r\n                        open={this.state.showStatus}\r\n                        severity={this.state.statusSeverity}\r\n                        closeStatus={this.closeShowStatus}\r\n                        message={this.state.statusMessage}\r\n                    />\r\n                </Grid>\r\n            </Grid>\r\n\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport axios from 'axios';\r\nimport getURL from './helpers/functions/GetURL';\r\nimport { Privilege } from './enums/privilegeTypes.ts'\r\nimport StatusDisplay from './helpers/StatusDisplay';\r\nimport ErrorBoundary from './errors/ErrorBoundry';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport logo from '../images/logo.png';\r\nimport ShibLogin from './ShibLogin';\r\nimport * as Constants from \"./Constants\";\r\n\r\nconst loginMainPath = 'users/';\r\nconst queryString = require('query-string');\r\n\r\nexport default class Login extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            username:'',\r\n            password:'',\r\n            statusMessage:'',\r\n            showStatus:false,\r\n            statusSeverity:'info',\r\n            initialized:false,\r\n            oauth:false,\r\n        };\r\n\r\n        this.closeShowStatus = this.closeShowStatus.bind(this);\r\n        this.submitCredentials = this.submitCredentials.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        console.log(this.props.shib);\r\n        try {\r\n            var params = queryString.parse(window.location.hash.substring(1));\r\n            if (params.access_token != null) {\r\n                this.getDukeCredentials(params.access_token);\r\n                this.setState({ oauth: true });\r\n            }\r\n\r\n            console.log(params);\r\n        } catch(e) {\r\n            console.log(\"tried:\")\r\n        }\r\n        this.setState({ initialized: true });\r\n    }\r\n\r\n    submitCredentials() {\r\n        axios.post(\r\n            getURL(loginMainPath, 'authenticate'),\r\n            {\r\n                \"username\":this.state.username,\r\n                \"password\":this.state.password,\r\n            }\r\n            ).then(response => {\r\n                var valid = response.data['message'];\r\n                if (valid === 'success') {\r\n                    this.setState({ message: '' });\r\n                    this.props.loginFunc(response.data['token'], this.state.username, response.data['privilege']);\r\n                } else {\r\n                    this.setState({ showStatus:true, statusMessage:response.data['message'] });\r\n                }\r\n            });\r\n        //this.props.loginFunc('token', \"Administrator\", Privilege.ADMIN);\r\n    }\r\n\r\n    updateUsername(event) {\r\n        this.setState({ username: event.target.value })\r\n    }\r\n\r\n    updatePassword(event) {\r\n        this.setState({ password: event.target.value })\r\n    }\r\n\r\n    closeShowStatus() {\r\n        this.setState({ showStatus: false })\r\n    }\r\n\r\n    onKeyPressed(event) {\r\n        console.log(\"key down\");\r\n        if (event.key === 'Enter') {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n            this.submitCredentials();\r\n        }\r\n    }\r\n\r\n    getDukeCredentials = (token) => {\r\n        axios.get('https://api.colab.duke.edu/identity/v1/', {\r\n            headers: {\r\n                'x-api-key': Constants.CLIENT_ID,\r\n                'Authorization': `Bearer ${token}`\r\n            }\r\n        }).then(response => {\r\n            console.log(response);\r\n            axios.post(\r\n                getURL(loginMainPath, 'oauth'),\r\n                {\r\n                    \"username\":response.data.netid,\r\n                    \"email\":response.data.mail,\r\n                    \"display_name\":response.data.displayName,\r\n                    \"client_id\":Constants.CLIENT_ID,\r\n                    \"token\":token,\r\n                }\r\n                ).then(response => {\r\n                    var valid = response.data['message'];\r\n                    if (valid === 'success') {\r\n                        this.setState({ message: '' });\r\n                        this.props.loginFunc(response.data['token'], this.state.username, response.data['privilege']);\r\n                    } else {\r\n                        this.setState({ showStatus:true, statusMessage:response.data['message'] });\r\n                    }\r\n            });\r\n        });\r\n    }\r\n\r\n    loginWithOAuth = () => {\r\n        window.location = Constants.SHIBBOLETH_LOGIN;\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <ErrorBoundary>\r\n            { (this.state.oauth) ? <ShibLogin />:\r\n            <Grid\r\n                container\r\n                spacing={5}\r\n                direction=\"column\"\r\n                justify=\"flex-start\"\r\n                alignItems=\"center\"\r\n                onKeyDown={(e) => this.onKeyPressed(e)}\r\n                style={{\r\n                    \"minHeight\": \"102vh\",\r\n                    \"background\": \"linear-gradient(to top, #a8e063, #56ab2f)\",\r\n                }}\r\n            >\r\n                <Grid item xs={12}>\r\n                    <img src={logo} alt=\"\" style={{height: \"200px\", \"marginTop\": \"50px\"}} />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <Card\r\n                        style={\r\n                            {\r\n                                minWidth: '20vw',\r\n                            }\r\n                        }\r\n                    >\r\n                        <CardContent>\r\n                            <Grid\r\n                                container\r\n                                spacing={1}\r\n                                direction=\"column\"\r\n                                justify=\"center\"\r\n                                alignItems=\"center\"\r\n                            >\r\n                                <Grid container item alignItems=\"flex-start\" xs={12}>\r\n                                    <Typography\r\n                                        variant=\"h4\"\r\n                                        color=\"textPrimary\"\r\n                                        fontWeight=\"fontWeightBold\"\r\n                                        gutterBottom\r\n                                    >\r\n                                        Login\r\n                                    </Typography>\r\n                                </Grid>\r\n                                <Grid item xs={12}>\r\n                                    <TextField\r\n                                        id=\"username-input\"\r\n                                        label=\"Username\"\r\n                                        variant=\"outlined\"\r\n                                        required={true}\r\n                                        ref='username'\r\n                                        onChange={this.updateUsername.bind(this)}\r\n                                        style={{minWidth: \"15vw\"}}\r\n                                    />\r\n                                </Grid>\r\n                                <Grid item xs={12}>\r\n                                    <TextField\r\n                                        id=\"password-input\"\r\n                                        label=\"Password\"\r\n                                        variant=\"outlined\"\r\n                                        required={true}\r\n                                        ref='password'\r\n                                        type=\"password\"\r\n                                        onChange={this.updatePassword.bind(this)}\r\n                                        style={{minWidth: \"15vw\"}}\r\n                                    />\r\n                                </Grid>\r\n                                <Grid item xs={12}>\r\n                                    <Button\r\n                                        onClick={this.submitCredentials}\r\n                                        variant=\"contained\"\r\n                                        color=\"primary\"\r\n                                        style={{minWidth: \"15vw\"}}\r\n                                    >\r\n                                        Sign In\r\n                                    </Button>\r\n                                </Grid>\r\n                                <Grid container item direciton=\"row\" justify=\"center\" alignItems=\"center\" xs={12}>\r\n                                        <hr style={{width: \"5vw\"}} />\r\n                                        <Typography color=\"textSecondary\">\r\n                                            Or\r\n                                        </Typography>\r\n                                        <hr style={{width: \"5vw\"}} />\r\n                                </Grid>\r\n                                <Grid item xs={12}>\r\n                                    <Button\r\n                                        onClick={this.loginWithOAuth}\r\n                                        variant=\"contained\"\r\n                                        color=\"primary\"\r\n                                    >\r\n                                        Sign In with NetID\r\n                                    </Button>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </CardContent>\r\n                    </Card>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <StatusDisplay\r\n                        open={this.state.showStatus}\r\n                        severity={this.state.statusSeverity}\r\n                        closeStatus={this.closeShowStatus}\r\n                        message={this.state.statusMessage}\r\n                    />\r\n                </Grid>\r\n            </Grid>\r\n            }\r\n            </ErrorBoundary>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\r\nimport CloudDownloadIcon from '@material-ui/icons/CloudDownload';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nexport default class ButtonsModel extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n\r\n        };\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div>\r\n                <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    startIcon={<CloudUploadIcon />}\r\n                    onClick={this.props.openImportModal}\r\n                >\r\n                    Import\r\n                </Button>\r\n                <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    startIcon={<CloudDownloadIcon />}\r\n                    onClick={this.props.downloadTable}\r\n                >\r\n                    Export\r\n                </Button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nexport default class FilterModel extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            filters:{},\r\n        };\r\n    }\r\n\r\n    updateSearchText(event) {\r\n        if (this.state.filters.hasOwnProperty(event.target.id)) {\r\n            this.state.filters[event.target.id] = event.target.value;\r\n            this.forceUpdate();\r\n        } else {\r\n            this.state.filters[event.target.id] = event.target.value;\r\n            this.forceUpdate();\r\n        }\r\n    }\r\n\r\n    search() {\r\n        this.props.search(this.state.filters);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.props.filters.map((filter, index) => (\r\n                    <div>\r\n                        <SearchIcon />\r\n                        <InputBase\r\n                            placeholder={filter+\" filter\"}\r\n                            inputProps={{ 'aria-label': 'search' }}\r\n                            onChange={this.updateSearchText.bind(this)}\r\n                            id={filter}\r\n                        />\r\n                    </div>\r\n                ))\r\n                }\r\n                <div>\r\n                    <Button\r\n                        onClick={this.search.bind(this)}\r\n                    >\r\n                        Search\r\n                    </Button>\r\n                </div>\r\n                Click the search button to populate table. Searching with empty filters searches over all values. Click on row values to see detailed view.\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from '@material-ui/core/Button';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\r\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\r\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport { CompactPicker } from 'react-color';\r\nimport StatusDisplay from '../../helpers/StatusDisplay';\r\n\r\nfunction createInputs(name, label) {\r\n    return {label, name};\r\n}\r\n\r\nconst inputs = {\r\n    \"vendor\":createInputs('vendor', \"Vendor\", ),\r\n    \"modelNumber\":createInputs('model_number', \"Model Number\"),\r\n    \"height\":createInputs('height', \"Height\"),\r\n    \"displayColor\":createInputs('display_color', \"Display Color\"),\r\n    \"powerPorts\":createInputs('power_ports', \"Power Ports\"),\r\n    \"cpu\":createInputs('cpu', \"CPU\"),\r\n    \"memory\":createInputs('memory', \"Memory\"),\r\n    \"storage\":createInputs('storage', \"Storage\"),\r\n    \"comments\":createInputs('comments', \"Comments\"),\r\n}\r\n\r\nexport default class DetailModel extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            showConfirmationBox:false,\r\n            color:null,\r\n        };\r\n\r\n        this.closeModal = this.closeModal.bind(this);\r\n        this.confirmDelete = this.confirmDelete.bind(this);\r\n        this.deleteItem = this.deleteItem.bind(this);\r\n    }\r\n\r\n    confirmDelete() {\r\n        this.setState({ showConfirmationBox: true });\r\n    }\r\n\r\n    closeModal() {\r\n        this.setState({showConfirmationBox:false,});\r\n    }\r\n\r\n    deleteItem() {\r\n        this.setState({ showConfirmationBox: false });\r\n        this.props.delete();\r\n    }\r\n\r\n    updateColor = (color) => {\r\n        this.setState({ color: color });\r\n        this.props.updateModelColorDetails(color.hex);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n        <div>\r\n            {!this.props.showDetailedView ? null:\r\n            <ExpansionPanel >\r\n                    <ExpansionPanelSummary\r\n                        expandIcon={<ExpandMoreIcon />}\r\n                    >\r\n                        <Typography>Model Details</Typography>\r\n                    </ExpansionPanelSummary>\r\n                    <ExpansionPanelDetails>\r\n                        <StatusDisplay\r\n                            open={this.props.statusOpen}\r\n                            severity={this.props.statusSeverity}\r\n                            closeStatus={this.props.statusClose}\r\n                            message={this.props.statusMessage}\r\n                            autoHideDuration={6000}\r\n                        />\r\n                    {\r\n                this.props.loading ? <CircularProgress /> :\r\n                <div>\r\n                    <Autocomplete\r\n                            id=\"select-vendor\"\r\n                            options={this.props.options}\r\n                            includeInputInList\r\n                            freeSolo\r\n                            defaultValue={this.props.defaultValues[inputs.vendor.name]}\r\n                            renderInput={params => (\r\n                            <TextField {...params}\r\n                                label={inputs.vendor.label}\r\n                                name={inputs.vendor.name}\r\n                                onChange={this.props.updateModelCreator}\r\n                                onBlur={this.props.updateModelCreator}\r\n                                variant=\"outlined\" fullWidth\r\n                                disabled={this.props.disabled}\r\n                            />\r\n                            )}\r\n                        />\r\n                        <TextField id=\"standard-basic\" variant=\"outlined\"\r\n                            label={inputs.modelNumber.label} name={inputs.modelNumber.name}\r\n                            onChange={this.props.updateModelCreator}\r\n                            disabled={this.props.disabled}\r\n                            defaultValue={this.props.defaultValues[inputs.modelNumber.name]}\r\n                        />\r\n                        <TextField id=\"standard-basic\" variant=\"outlined\"\r\n                            label={inputs.height.label} name={inputs.height.name}\r\n                            onChange={this.props.updateModelCreator}\r\n                            disabled={this.props.disabled}\r\n                            defaultValue={this.props.defaultValues[inputs.height.name]}\r\n                        />\r\n                        <CompactPicker\r\n                            color={this.state.color || this.props.defaultValues[\"display_color\"]}\r\n                            onChange={this.updateColor}\r\n\r\n                        />\r\n                        <TextField id=\"standard-basic\" variant=\"outlined\"\r\n                            label={inputs.powerPorts.label} name={inputs.powerPorts.name}\r\n                            onChange={this.props.updateModelCreator}\r\n                            disabled={this.props.disabled}\r\n                            defaultValue={this.props.defaultValues[inputs.powerPorts.name]}\r\n                        />\r\n                        <TextField id=\"standard-basic\" variant=\"outlined\"\r\n                            label={inputs.cpu.label} name={inputs.cpu.name}\r\n                            onChange={this.props.updateModelCreator}\r\n                            disabled={this.props.disabled}\r\n                            defaultValue={this.props.defaultValues[inputs.cpu.name]}\r\n                        />\r\n                        <TextField id=\"standard-basic\" variant=\"outlined\"\r\n                            label={inputs.memory.label} name={inputs.memory.name}\r\n                            onChange={this.props.updateModelCreator}\r\n                            disabled={this.props.disabled}\r\n                            defaultValue={this.props.defaultValues[inputs.memory.name]}\r\n                        />\r\n                        <TextField id=\"standard-basic\" variant=\"outlined\"\r\n                            label={inputs.storage.label} name={inputs.storage.name}\r\n                            onChange={this.props.updateModelCreator}\r\n                            disabled={this.props.disabled}\r\n                            defaultValue={this.props.defaultValues[inputs.storage.name]}\r\n                        />\r\n                        <TextField id=\"standard-basic\" variant=\"outlined\"\r\n                            label={inputs.comments.label} name={inputs.comments.name}\r\n                            onChange={this.props.updateModelCreator}\r\n                            disabled={this.props.disabled}\r\n                            defaultValue={this.props.defaultValues[inputs.comments.name]}\r\n                        />\r\n\r\n                    {this.props.disabled ? null:\r\n                    <div>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            onClick={this.props.edit}\r\n                            disabled={this.state.showConfirmationBox}\r\n                        >\r\n                            Save\r\n                        </Button>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            onClick={this.confirmDelete}\r\n                            disabled={this.state.showConfirmationBox}\r\n                        >\r\n                            Delete\r\n                        </Button>\r\n                    </div>}\r\n                    {this.state.showConfirmationBox ? <div>\r\n                        Are you sure you wish to delete?\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            onClick={this.deleteItem}\r\n                        >\r\n                            Yes\r\n                        </Button>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            onClick={this.closeModal}\r\n                        >\r\n                            No\r\n                        </Button>\r\n                    </div>:null}\r\n                </div>}\r\n                    </ExpansionPanelDetails>\r\n                </ExpansionPanel>}\r\n        </div>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\n\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from '@material-ui/core/Button';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\r\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\r\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport { CompactPicker } from 'react-color';\r\n\r\nimport '../stylesheets/ModelStyles.css';\r\nimport StatusDisplay from '../../helpers/StatusDisplay';\r\n\r\nfunction createInputs(name, label) {\r\n    return {label, name};\r\n}\r\n\r\nconst inputs = {\r\n    \"vendor\":createInputs('vendor', \"Vendor\", ),\r\n    \"modelNumber\":createInputs('model_number', \"Model Number\"),\r\n    \"height\":createInputs('height', \"Height\"),\r\n    \"displayColor\":createInputs('display_color', \"Display Color\"),\r\n    \"powerPorts\":createInputs('power_ports', \"Power Ports\"),\r\n    \"cpu\":createInputs('cpu', \"CPU\"),\r\n    \"memory\":createInputs('memory', \"Memory\"),\r\n    \"storage\":createInputs('storage', \"Storage\"),\r\n    \"comments\":createInputs('comments', \"Comments\"),\r\n}\r\n\r\nexport default class CreateModel extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            color:'#000',\r\n        };\r\n    }\r\n\r\n    updateColor = (color) => {\r\n        console.log(color);\r\n        this.setState({ color: color });\r\n        this.props.updateModelColor(color.hex);\r\n        console.log(\"state: \" + this.state.color);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n        <div>\r\n            <ExpansionPanel>\r\n                    <ExpansionPanelSummary\r\n                        expandIcon={<ExpandMoreIcon />}\r\n                    >\r\n                        <Typography>Create Model</Typography>\r\n                    </ExpansionPanelSummary>\r\n                    <ExpansionPanelDetails>\r\n                        <StatusDisplay\r\n                            open={this.props.statusOpen}\r\n                            severity={this.props.statusSeverity}\r\n                            closeStatus={this.props.statusClose}\r\n                            message={this.props.statusMessage}\r\n                        />\r\n                    <div>\r\n                        <Autocomplete\r\n                            id=\"select-vendor\"\r\n                            options={this.props.options}\r\n                            includeInputInList\r\n                            freeSolo\r\n                            renderInput={params => (\r\n                            <TextField {...params} label={inputs.vendor.label} name={inputs.vendor.name} onChange={this.props.updateModelCreator} onBlur={this.props.updateModelCreator} variant=\"outlined\" fullWidth />\r\n                            )}\r\n                        />\r\n                        <TextField id=\"standard-basic\" variant=\"outlined\" label={inputs.modelNumber.label} name={inputs.modelNumber.name} onChange={this.props.updateModelCreator}/>\r\n                        <TextField id=\"standard-basic\" variant=\"outlined\" label={inputs.height.label} name={inputs.height.name} onChange={this.props.updateModelCreator}/>\r\n                        <CompactPicker\r\n                            color={this.state.color}\r\n                            onChange={this.updateColor}\r\n\r\n                        />\r\n                        <TextField id=\"standard-basic\" variant=\"outlined\" label={inputs.powerPorts.label} name={inputs.powerPorts.name} onChange={this.props.updateModelCreator}/>\r\n                        <TextField id=\"standard-basic\" variant=\"outlined\" label={inputs.cpu.label} name={inputs.cpu.name} onChange={this.props.updateModelCreator}/>\r\n                        <TextField id=\"standard-basic\" variant=\"outlined\" label={inputs.memory.label} name={inputs.memory.name} onChange={this.props.updateModelCreator}/>\r\n                        <TextField id=\"standard-basic\" variant=\"outlined\" label={inputs.storage.label} name={inputs.storage.name} onChange={this.props.updateModelCreator}/>\r\n                        <TextField id=\"standard-basic\" variant=\"outlined\" label={inputs.comments.label} name={inputs.comments.name} onChange={this.props.updateModelCreator}/>\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        onClick={this.props.createModel}\r\n                    >\r\n                        Create\r\n                    </Button>\r\n                </div>\r\n                    </ExpansionPanelDetails>\r\n                </ExpansionPanel>\r\n        </div>\r\n        );\r\n    }\r\n}\r\n","export enum UserCommand {\r\n    create = 'create/',\r\n    delete = 'delete/',\r\n    edit = 'edit/',\r\n    view = 'view/',\r\n    detailView = 'detailView/',\r\n    search='search/',\r\n}\r\n","export enum UserInput {\r\n    Username='username',\r\n    Password='password',\r\n    Email='email',\r\n    display_name='display_name',\r\n    Privilege='privilege',\r\n}\r\n","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Modal from '@material-ui/core/Modal';\r\n\r\nexport default class UploadModal extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {};\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Modal\r\n                style={{top: `50%`,left: `50%`,transform: `translate(-50%, -50%)`, background:'#AAAAAA'}}\r\n                aria-labelledby=\"simple-modal-title\"\r\n                aria-describedby=\"simple-modal-description\"\r\n                open={this.props.showImportModal}\r\n                onClose={this.props.closeImportModal}\r\n            >\r\n                <div>\r\n                    <div>\r\n                    <input\r\n                        type='file'\r\n                        accept=\".csv\"\r\n                        onChange={this.props.chooseFile}\r\n                    />\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        onClick={this.props.uploadFile}\r\n                    >\r\n                        Upload\r\n                    </Button>\r\n                    </div>\r\n                    <p\r\n                        style={{color: `white`}}\r\n                    >\r\n                        {this.props.textDescription}\r\n                    </p>\r\n                </div>\r\n            </Modal>\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nexport default class TableView extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n\r\n    };\r\n  }\r\n\r\n  showDetailedView(event) {\r\n    this.props.showDetailedView(event.target.id);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <TableContainer component={Paper}>\r\n          <Table className={{minWidth: 650}} aria-label=\"simple table\">\r\n            <TableHead>\r\n              <TableRow >\r\n                {this.props.columns.map(col => (<TableCell><span id={col}>{col}</span></TableCell>))}\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {this.props.vals.map((row, index)=> (\r\n              <TableRow>\r\n                {this.props.keys.map(key => (<TableCell scope=\"row\"><span id={index} onClick={this.showDetailedView.bind(this)}>{row[key]}</span></TableCell>))}\r\n              </TableRow>\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","\r\n\r\n\r\nexport const GENERAL_MODEL_ERROR =  \"There was an error in the backend. Could not perform the given model operation at this time.\";\r\n","import React from 'react';\r\nimport axios from 'axios';\r\nimport { CSVLink } from \"react-csv\";\r\n\r\nimport { ModelCommand } from '../enums/ModelCommands.ts'\r\nimport { ModelInput } from '../enums/ModelInputs.ts'\r\n\r\nimport ButtonsModel from '../helpers/ButtonsModel';\r\nimport FilterModel from '../helpers/FilterModel';\r\nimport DetailModel from '../helpers/DetailModel';\r\nimport CreateModel from '../helpers/CreateModel';\r\n\r\nimport { Privilege } from '../../enums/privilegeTypes.ts'\r\n\r\nimport UploadModal from '../../helpers/UploadModal';\r\nimport getURL from '../../helpers/functions/GetURL';\r\nimport TableView from '../../helpers/TableView';\r\nimport StatusDisplay from '../../helpers/StatusDisplay';\r\n\r\nimport ErrorBoundray from '../../errors/ErrorBoundry';\r\nimport * as ModelConstants from \"../ModelConstants\";\r\n\r\nconst columns = [\r\n    'vendor',\r\n    'model_number',\r\n    'height',\r\n]\r\n\r\nconst modelsMainPath = 'models/';\r\nconst modelDownloadFileName = 'models.csv';\r\n\r\nexport default class ModelsView extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n\r\n            // modals\r\n            showCreateModal:false,\r\n            showImportModal:false,\r\n\r\n            // table items\r\n            items:[], //Constants.testModelArray,\r\n\r\n            // vals for creating a new model\r\n            createdModel : {\r\n                'vendor':'',\r\n                'model_number':'',\r\n                'height':'',\r\n                'display_color':'',\r\n                'ethernet_ports':'',\r\n                'power_ports':'',\r\n                'cpu':'',\r\n                'memory':'',\r\n                'storage':'',\r\n                'comment':'',\r\n            },\r\n            createdVendor:'',\r\n            createdModelNum:'',\r\n            createdHeight:'',\r\n            createdDispClr:'',\r\n            createdEthPorts:'',\r\n            createdPwrPorts:'',\r\n            createdCPU:'',\r\n            createdMem:'',\r\n            createdStorage:'',\r\n            createdComments:'',\r\n\r\n            // vals for deleting a model\r\n            deleteVendor:'',\r\n            deleteModel:'',\r\n\r\n            // vals for viewing a model\r\n            viewVendor:'',\r\n            viewModel:'',\r\n\r\n            // searching a model\r\n            searchText:\"\",\r\n            searchVendor:'',\r\n            searchModelNum:'',\r\n            searchHeight:'',\r\n\r\n            // csv data\r\n            csvData:'',\r\n            importedFile:null,\r\n\r\n            // detailed view\r\n            showDetailedView: false,\r\n            detailViewLoading:false,\r\n            detailedValues : {\r\n                'vendor':'',\r\n                'model_number':'',\r\n                'height':'',\r\n                'display_color':'',\r\n                'ethernet_ports':'',\r\n                'power_ports':'',\r\n                'cpu':'',\r\n                'memory':'',\r\n                'storage':'',\r\n                'comment':'',\r\n            },\r\n            originalVendor:'',\r\n            originalModelNumber:'',\r\n            originalHeight:'',\r\n\r\n            statusOpen:false,\r\n            statusSeverity:'',\r\n            statusMessage:'',\r\n            detailStatusOpen:false,\r\n            detailStatusSeverity:'',\r\n            detailStatusMessage:'',\r\n            createStatusOpen:false,\r\n            createStatusSeverity:'',\r\n            createStatusMessage:'',\r\n\r\n            vendorsList:[],\r\n            madeVendorQuery:false,\r\n\r\n        };\r\n\r\n        axios.defaults.headers.common['token'] = this.props.token;\r\n        axios.defaults.headers.common['privilege'] = this.props.privilege;\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.searchModels();\r\n        this.getVendorList();\r\n    }\r\n\r\n    createModel = () => {\r\n        axios.post(\r\n            getURL(modelsMainPath, ModelCommand.create),\r\n            {\r\n                'vendor':this.state.createdModel[ModelInput.Vendor],\r\n                'model_number':this.state.createdModel[ModelInput.model_number],\r\n                'height':this.state.createdModel[ModelInput.Height],\r\n                'display_color':this.state.createdModel[ModelInput.display_color],\r\n                'ethernet_ports':this.state.createdModel[ModelInput.ethernet_ports],\r\n                'power_ports':this.state.createdModel[ModelInput.power_ports],\r\n                'cpu':this.state.createdModel[ModelInput.CPU],\r\n                'memory':this.state.createdModel[ModelInput.Memory],\r\n                'storage':this.state.createdModel[ModelInput.Storage],\r\n                'comment':this.state.createdModel[ModelInput.Comment],\r\n                'ethernet_ports':[\"eth0\", \"eth1\", \"eth2\", \"eth3\"],\r\n            }\r\n            ).then(\r\n                response => {\r\n                    if (response.data.message === 'success') {\r\n                        this.setState({\r\n                            showStatus: true,\r\n                            statusMessage: \"Successfully created model\",\r\n                            statusSeverity:\"success\",\r\n                            createdModel : {\r\n                                'vendor':'',\r\n                                'model_number':'',\r\n                                'height':'',\r\n                                'display_color':'',\r\n                                'ethernet_ports':'',\r\n                                'power_ports':'',\r\n                                'cpu':'',\r\n                                'memory':'',\r\n                                'storage':'',\r\n                                'comment':'',\r\n                            },\r\n                            showCreateModal:false,\r\n                        });\r\n                        this.getVendorList();\r\n                        this.searchModels();\r\n                    } else {\r\n                        this.setState({ createStatusOpen: true, createStatusMessage: response.data.message, createStatusSeverity:\"error\" })\r\n                    }\r\n                }).catch(\r\n                    this.setState({ createStatusOpen: true, createStatusMessage: ModelConstants.GENERAL_MODEL_ERROR, createStatusSeverity:\"error\" })\r\n                );\r\n    }\r\n\r\n    editModel = () => {\r\n        axios.post(\r\n            getURL(modelsMainPath, ModelCommand.edit),\r\n            {\r\n                'vendorOriginal':this.state.originalVendor,\r\n                'model_numberOriginal':this.state.originalModelNumber,\r\n                'heightOriginal':this.state.originalHeight,\r\n\r\n                'vendor':this.state.detailedValues[ModelInput.Vendor],\r\n                'model_number':this.state.detailedValues[ModelInput.model_number],\r\n                'height':this.state.detailedValues[ModelInput.Height],\r\n                'display_color':this.state.detailedValues[ModelInput.display_color],\r\n                'ethernet_ports':this.state.detailedValues[ModelInput.ethernet_ports],\r\n                'power_ports':this.state.detailedValues[ModelInput.power_ports],\r\n                'cpu':this.state.detailedValues[ModelInput.CPU],\r\n                'memory':this.state.detailedValues[ModelInput.Memory],\r\n                'storage':this.state.detailedValues[ModelInput.Storage],\r\n                'comment':this.state.detailedValues[ModelInput.Comment],\r\n            }\r\n            ).then(\r\n                response => {\r\n                    if (response.data.message === 'success') {\r\n                        this.setState({\r\n                            showStatus: true,\r\n                            statusSeverity:'success',\r\n                            statusMessage: \"Successfully edited model\",\r\n                            originalVendor:'',\r\n                            originalModelNumber:'',\r\n                            originalHeight:'',\r\n                            detailedValues : {\r\n                                'vendor':'',\r\n                                'model_number':'',\r\n                                'height':'',\r\n                                'display_color':'',\r\n                                'ethernet_ports':'',\r\n                                'power_ports':'',\r\n                                'cpu':'',\r\n                                'memory':'',\r\n                                'storage':'',\r\n                                'comment':'',\r\n                            },\r\n                            showDetailedView:false\r\n                        });\r\n                        this.getVendorList();\r\n                        this.searchModels();\r\n                    } else {\r\n                        this.setState({ detailStatusOpen: true, detailStatusMessage: response.data.message, detailStatusSeverity:\"error\" })\r\n                    }\r\n                }).catch(\r\n                    this.setState({ detailStatusOpen: true, detailStatusMessage: ModelConstants.GENERAL_MODEL_ERROR, detailStatusSeverity:\"error\" })\r\n                );\r\n    }\r\n\r\n\r\n    deleteModel = () => {\r\n        axios.post(\r\n            getURL(modelsMainPath, ModelCommand.delete),\r\n            {\r\n                'vendor':this.state.originalVendor,\r\n                'model_number':this.state.originalModelNumber,\r\n            }\r\n            ).then(\r\n                response => {\r\n                    if (response.data.message === 'success') {\r\n                        this.setState({\r\n                            showStatus: true,\r\n                            statusSeverity:'success',\r\n                            statusMessage: \"Successfully deleted model\",\r\n                            detailedValues : {\r\n                                'vendor':'',\r\n                                'model_number':'',\r\n                                'height':'',\r\n                                'display_color':'',\r\n                                'ethernet_ports':'',\r\n                                'power_ports':'',\r\n                                'cpu':'',\r\n                                'memory':'',\r\n                                'storage':'',\r\n                                'comment':'',\r\n                            },\r\n                            showDetailedView:false\r\n                        });\r\n                        this.getVendorList();\r\n                        this.searchModels();\r\n                    } else {\r\n                        this.setState({ showStatus: true, statusMessage: response.data.message, statusSeverity:\"error\" })\r\n                    }\r\n                }).catch(\r\n                    this.setState({ showStatus: true, statusMessage: ModelConstants.GENERAL_MODEL_ERROR, statusSeverity:\"error\" })\r\n                );\r\n    }\r\n\r\n    detailViewModel = (vendor, modelNum) => {\r\n        axios.post(\r\n            getURL(modelsMainPath, ModelCommand.detailView),\r\n            {\r\n                'vendor':vendor,\r\n                'model_number':modelNum,\r\n            }\r\n            ).then(response => {\r\n                this.setState({ detailedValues: response.data['models'][0], detailViewLoading:false});\r\n            }\r\n            ).catch(function(error) {\r\n                console.log(error);\r\n                this.setState({ showStatus: true, statusMessage: ModelConstants.GENERAL_MODEL_ERROR, statusSeverity:\"error\" });\r\n            });\r\n\r\n        this.setState({\r\n            viewVendor:'',\r\n            viewModel:'',\r\n        });\r\n    }\r\n\r\n    searchModels = () => {\r\n        axios.post(\r\n            getURL(modelsMainPath, ModelCommand.search),\r\n            {\r\n                'filter':{\r\n                    'vendor':this.state.searchVendor,\r\n                    'model_number':this.state.searchModelNum,\r\n                    'height':this.state.searchHeight,\r\n                }\r\n            }\r\n            ).then(response => {\r\n                this.setState({ items: response.data['models'] })\r\n            });\r\n\r\n        this.setState({\r\n            searchText:'',\r\n        });\r\n    }\r\n\r\n    getVendorList = () => {\r\n        axios.get(\r\n            getURL(modelsMainPath, ModelCommand.VENDOR_VALUES), {}\r\n            ).then(response => this.setState({ vendorsList: response.data.results }));\r\n\r\n        this.setState({ madeVendorQuery: true });\r\n    }\r\n\r\n    sendUploadedFile = (data) => {\r\n        axios.post(\r\n            getURL(modelsMainPath, ModelCommand.UPLOAD_FILE), data\r\n            ).then(response => {\r\n                if (response.data.message === 'success') {\r\n                    this.setState({ showStatus: true, statusMessage: response.data.summary, statusSeverity:'success', showImportModal: false,})\r\n                    this.searchModels();\r\n                } else {\r\n                    this.setState({ showStatus: true, statusMessage: response.data.message, statusSeverity:\"error\" })\r\n                }\r\n            });\r\n    }\r\n\r\n    downloadTable = () => {\r\n        axios.post(\r\n            getURL(modelsMainPath, ModelCommand.EXPORT_FILE),\r\n            {\r\n                'filter':{\r\n                    'vendor':this.state.searchVendor,\r\n                    'model_number':this.state.searchModelNum,\r\n                    'height':this.state.searchHeight,\r\n                }\r\n            }\r\n            ).then(response => {\r\n                this.setState({ csvData: response.data.csvData });\r\n                this.csvLink.link.click();\r\n            });\r\n    }\r\n\r\n    search = (filters) => {\r\n        this.setState({ searchVendor:filters['vendor'], searchModelNum:filters['model_number'], searchHeight:filters['height']}, this.searchModels);\r\n    }\r\n\r\n    openCreateModal = () => {\r\n        this.setState({showCreateModal: true});\r\n    }\r\n\r\n    openImportModal = () => {\r\n        this.setState({showImportModal: true});\r\n    }\r\n\r\n    showDetailedView = (id) => {\r\n        this.setState({\r\n            showDetailedView: true,\r\n            detailViewLoading:true,\r\n\r\n            originalHeight:this.state.items[id]['height'],\r\n            originalModelNumber:this.state.items[id]['model_number'],\r\n            originalVendor:this.state.items[id]['vendor'],\r\n         });\r\n\r\n        var vendor = this.state.items[id]['vendor'];\r\n        var modelNum = this.state.items[id]['model_number'];\r\n\r\n        this.detailViewModel(vendor, modelNum);\r\n    }\r\n\r\n    closeCreateModal = () => {\r\n        this.setState({showCreateModal: false});\r\n    }\r\n\r\n    closeImportModal = () => {\r\n        this.setState({showImportModal: false});\r\n    }\r\n\r\n    closeDetailedView = () => {\r\n        this.setState({ showDetailedView: false })\r\n    }\r\n\r\n    updateModelCreator = (event) => {\r\n        this.state.createdModel[event.target.name] = event.target.value;\r\n        this.forceUpdate();\r\n    }\r\n\r\n    updateModelColor = (color) => {\r\n        console.log(\"updating color to \" + color);\r\n        this.state.createdModel['display_color'] = color;\r\n        this.forceUpdate();\r\n    }\r\n\r\n    updateModelColorDetails = (color) => {\r\n        console.log(\"updating color to \" + color);\r\n        this.state.detailedValues['display_color'] = color;\r\n        this.forceUpdate();\r\n    }\r\n\r\n    updateModelEdited = (event) => {\r\n        this.state.detailedValues[event.target.name] = event.target.value;\r\n        this.forceUpdate()\r\n    }\r\n\r\n    updateSearchText = (event) => {\r\n        this.setState({ searchText: event.target.value})\r\n    }\r\n\r\n    closeShowStatus = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n        this.setState({ showStatus: false })\r\n    }\r\n\r\n    createStatusClose = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n        this.setState({ createStatusOpen: false })\r\n    }\r\n\r\n    detailStatusClose = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n        this.setState({ detailStatusOpen: false })\r\n    }\r\n\r\n    uploadFile = () => {\r\n        const data = new FormData();\r\n        data.append('file', this.state.importedFile);\r\n        this.sendUploadedFile(data);\r\n    }\r\n\r\n    chooseFile = (event) => {\r\n        this.setState({ importedFile: event.target.files[0] })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <ErrorBoundray>\r\n                <StatusDisplay\r\n                    open={this.state.showStatus}\r\n                    severity={this.state.statusSeverity}\r\n                    closeStatus={this.closeShowStatus}\r\n                    message={this.state.statusMessage}\r\n                    autoHideDuration={6000}\r\n                />\r\n                {(this.props.privilege === Privilege.ADMIN) ?\r\n                    (<div><ButtonsModel\r\n                    openCreateModal={this.openCreateModal}\r\n                    openImportModal={this.openImportModal}\r\n                    downloadTable={this.downloadTable}\r\n                />\r\n                <CSVLink\r\n                    data={this.state.csvData}\r\n                    filename={modelDownloadFileName}\r\n                    className=\"hidden\"\r\n                    ref={(r) => this.csvLink = r}\r\n                    target=\"_blank\"\r\n                />\r\n                <CreateModel\r\n                    statusOpen={this.state.createStatusOpen}\r\n                    statusSeverity={this.state.createStatusSeverity}\r\n                    statusClose={this.createStatusClose}\r\n                    statusMessage={this.state.createStatusMessage}\r\n\r\n                    showCreateModal={this.state.showCreateModal}\r\n                    closeCreateModal={this.closeCreateModal}\r\n                    createModel={this.createModel}\r\n                    updateModelCreator={this.updateModelCreator}\r\n                    options={this.state.vendorsList}\r\n                    useAutocomplete={true}\r\n                    updateModelColor={this.updateModelColor}\r\n                />\r\n                <UploadModal\r\n                    showImportModal={this.state.showImportModal}\r\n                    closeImportModal={this.closeImportModal}\r\n                    uploadFile={this.uploadFile}\r\n                    chooseFile={this.chooseFile}\r\n                    textDescription=\"The following format should be used for each row: vendor,model_number,height,display_color,ethernet_ports,power_ports,cpu,memory,storage,comment\"\r\n                /></div>):null\r\n                }\r\n                <FilterModel\r\n                    updateSearchText={this.updateSearchText}\r\n                    search={this.search}\r\n                    filters={columns}\r\n                />\r\n                <TableView\r\n                    columns={columns}\r\n                    vals={this.state.items}\r\n                    keys={columns}\r\n                    showDetailedView={this.showDetailedView}\r\n                    filters={columns}\r\n                />\r\n                <DetailModel\r\n                    statusOpen={this.state.detailStatusOpen}\r\n                    statusSeverity={this.state.detailStatusSeverity}\r\n                    statusClose={this.detailStatusClose}\r\n                    statusMessage={this.state.detailStatusMessage}\r\n\r\n                    showDetailedView={this.state.showDetailedView}\r\n                    closeDetailedView={this.closeDetailedView}\r\n                    updateModelEdited={this.updateModelEdited}\r\n                    defaultValues={this.state.detailedValues}\r\n                    loading={this.state.detailViewLoading}\r\n                    edit={this.editModel}\r\n                    delete={this.deleteModel}\r\n                    disabled={this.props.privilege===Privilege.USER}\r\n                    options={this.state.vendorsList}\r\n                    useAutocomplete={true}\r\n                    updateModelColorDetails={this.updateModelColorDetails}\r\n                />\r\n            </ErrorBoundray>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","export enum AssetCommand {\r\n    create = 'create/',\r\n    delete = 'delete/',\r\n    edit = 'edit/',\r\n    view = 'view/',\r\n    detailView = 'detailView/',\r\n    search = 'search/',\r\n    GET_ALL_MODELS = 'assistedmodel/',\r\n    GET_ALL_OWNERS = 'assistedowner/',\r\n    GET_ALL_DATACENTERS = 'assisteddatacenter/',\r\n    GET_ALL_HOSTNAME = 'assistedhostname/',\r\n    UPLOAD_FILE = 'import/',\r\n    EXPORT_FILE = 'export/',\r\n    GET_NEXT_ASSET_NUM = 'nextAssetNumber/',\r\n}\r\n","import React from 'react';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nexport default class Filters extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            filters:{},\r\n        };\r\n    }\r\n\r\n    updateSearchText(event) {\r\n        if (this.state.filters.hasOwnProperty(event.target.id)) {\r\n            this.state.filters[event.target.id] = event.target.value;\r\n            this.forceUpdate();\r\n        } else {\r\n            this.state.filters[event.target.id] = event.target.value;\r\n            this.forceUpdate();\r\n        }\r\n    }\r\n\r\n    search() {\r\n        this.props.search(this.state.filters);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.props.filters.map((filter, index) => (\r\n                    <div>\r\n                        <SearchIcon />\r\n                        <InputBase\r\n                            placeholder={filter+\" filter\"}\r\n                            inputProps={{ 'aria-label': 'search' }}\r\n                            onChange={this.updateSearchText.bind(this)}\r\n                            id={filter}\r\n                        />\r\n                    </div>\r\n                ))\r\n                }\r\n                <div>\r\n                    <Button\r\n                        onClick={this.search.bind(this)}\r\n                    >\r\n                        Search\r\n                    </Button>\r\n                </div>\r\n                Click the search button to populate table. Searching with empty filters searches over all values. Click on row values to see detailed view.\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from '@material-ui/core/Button';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\r\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\r\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport StatusDisplay from '../../helpers/StatusDisplay';\r\n\r\nexport default class DetailedView extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            showConfirmationBox:false,\r\n        };\r\n\r\n        this.closeModal = this.closeModal.bind(this);\r\n        this.confirmDelete = this.confirmDelete.bind(this);\r\n        this.deleteItem = this.deleteItem.bind(this);\r\n    }\r\n\r\n    confirmDelete() {\r\n        this.setState({ showConfirmationBox: true });\r\n    }\r\n\r\n    closeModal() {\r\n        this.setState({showConfirmationBox:false,});\r\n    }\r\n\r\n    deleteItem() {\r\n        this.setState({ showConfirmationBox: false });\r\n        this.props.delete();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n        <div>\r\n            {!this.props.showDetailedView ? null:\r\n            <ExpansionPanel >\r\n                    <ExpansionPanelSummary\r\n                        expandIcon={<ExpandMoreIcon />}\r\n                    >\r\n                        <Typography>Create</Typography>\r\n                    </ExpansionPanelSummary>\r\n                    <ExpansionPanelDetails>\r\n                        <StatusDisplay\r\n                            open={this.props.statusOpen}\r\n                            severity={this.props.statusSeverity}\r\n                            closeStatus={this.props.statusClose}\r\n                            message={this.props.statusMessage}\r\n                        />\r\n                    {\r\n                this.props.loading ? <CircularProgress /> :\r\n                <div>\r\n                    {this.props.inputs.map(input => (\r\n                        <TextField name={input} disabled={this.props.disabled} id=\"standard-basic\" label={input} onChange={this.props.updateModelEdited} defaultValue={this.props.defaultValues[input]}/>\r\n                    ))}\r\n                    {this.props.disabled ? null:\r\n                    <div>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            onClick={this.props.edit}\r\n                            disabled={this.state.showConfirmationBox}\r\n                        >\r\n                            Save\r\n                        </Button>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            onClick={this.confirmDelete}\r\n                            disabled={this.state.showConfirmationBox}\r\n                        >\r\n                            Delete\r\n                        </Button>\r\n                    </div>}\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            onClick={this.props.closeDetailedView}\r\n                            disabled={this.state.showConfirmationBox}\r\n                        >\r\n                            Close\r\n                        </Button>\r\n\r\n                    {this.state.showConfirmationBox ? <div>\r\n                        Are you sure you wish to delete?\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            onClick={this.deleteItem}\r\n                        >\r\n                            Yes\r\n                        </Button>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            onClick={this.closeModal}\r\n                        >\r\n                            No\r\n                        </Button>\r\n                    </div>:null}\r\n                </div>}\r\n                    </ExpansionPanelDetails>\r\n                </ExpansionPanel>}\r\n        </div>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from '@material-ui/core/Button';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\r\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\r\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport '../../../stylesheets/Models.css';\r\nimport StatusDisplay from '../../helpers/StatusDisplay';\r\n\r\nexport default class CreateModal extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n\r\n        };\r\n    }\r\n\r\n    render() {\r\n        return (\r\n        <div>\r\n            <ExpansionPanel class=\"create-expansion-tab\">\r\n                    <ExpansionPanelSummary\r\n                        expandIcon={<ExpandMoreIcon />}\r\n                    >\r\n                        <Typography>Create User</Typography>\r\n                    </ExpansionPanelSummary>\r\n                    <ExpansionPanelDetails class=\"create-expansion-tab\">\r\n                    <div>\r\n                        <StatusDisplay\r\n                            open={this.props.statusOpen}\r\n                            severity={this.props.statusSeverity}\r\n                            closeStatus={this.props.statusClose}\r\n                            message={this.props.statusMessage}\r\n                        />\r\n                    {this.props.inputs.map((input, index) => (\r\n                        (index===0 && this.props.useAutocomplete) ? <Autocomplete\r\n                            id=\"combo-box-demo\"\r\n                            options={this.props.options}\r\n                            includeInputInList\r\n                            freeSolo\r\n                            renderInput={params => (\r\n                            <TextField {...params} label={input} name={input} onChange={this.props.updateModelCreator} onBlur={this.props.updateModelCreator} variant=\"outlined\" fullWidth />\r\n                            )}\r\n                        /> :\r\n                        <TextField id=\"standard-basic\" variant=\"outlined\" label={input} name={input} onChange={this.props.updateModelCreator}/>\r\n                    ))}\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        onClick={this.props.createModel}\r\n                    >\r\n                        Create\r\n                    </Button>\r\n                </div>\r\n                    </ExpansionPanelDetails>\r\n                </ExpansionPanel>\r\n        </div>\r\n        );\r\n    }\r\n}\r\n","\r\n\r\nexport const GENERAL_USER_ERROR =  \"There was an error in the backend. Could not perform the given user operation at this time.\";\r\n","import React from 'react';\r\nimport axios from 'axios';\r\n\r\nimport { UserCommand } from '../enums/UserCommands.ts'\r\nimport { UserInput } from '../enums/UserInputs.ts'\r\n\r\nimport FilterUser from '../helpers/FilterUser';\r\nimport DetailUser from '../helpers/DetailUser';\r\nimport CreateUser from '../helpers/CreateUser';\r\n\r\nimport UploadModal from '../../helpers/UploadModal';\r\nimport getURL from '../../helpers/functions/GetURL';\r\nimport TableView from '../../helpers/TableView';\r\nimport StatusDisplay from '../../helpers/StatusDisplay';\r\n\r\nimport { Privilege } from '../../enums/privilegeTypes.ts'\r\n\r\nimport ErrorBoundray from '../../errors/ErrorBoundry';\r\nimport * as UserConstants from \"../UserConstants\";\r\n\r\nconst inputs = [\r\n    'username',\r\n    'email',\r\n    'display_name',\r\n    'privilege',\r\n    'password',\r\n]\r\n\r\nconst columns = [\r\n    'username',\r\n    'email',\r\n    'display_name',\r\n    'privilege',\r\n]\r\n\r\nconst usersMainPath = 'users/';\r\n\r\nexport default class UsersView extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n\r\n            // modals\r\n            showCreateModal:false,\r\n            showImportModal:false,\r\n\r\n            // table items\r\n            items:[], //Constants.testUserArray,\r\n\r\n            // vals for creating a new user\r\n            createdUser : {\r\n                'username':'',\r\n                'password':'',\r\n                'display_name':'',\r\n                'email':'',\r\n                'privilege':'',\r\n            },\r\n\r\n            statusOpen:false,\r\n            statusSeverity:'',\r\n            statusMessage:'',\r\n            detailStatusOpen:false,\r\n            detailStatusSeverity:'',\r\n            detailStatusMessage:'',\r\n            createStatusOpen:false,\r\n            createStatusSeverity:'',\r\n            createStatusMessage:'',\r\n\r\n            searchUsernm:'',\r\n            searchEml:'',\r\n            searchDspNm:'',\r\n            searchPriv:'',\r\n\r\n            // vals for deleting a user\r\n            deleteUsername:'',\r\n\r\n            // vals for viewing a user\r\n            viewUser:'',\r\n\r\n            // csv data\r\n            csvData:[],\r\n\r\n            // detailed view\r\n            showDetailedView: false,\r\n            detailViewLoading:false,\r\n            detailedValues : {\r\n                'username':'',\r\n                'display_name':'',\r\n                'email':'',\r\n                'privilege':'',\r\n            },\r\n            originalUsername:'',\r\n\r\n            initialized:false,\r\n        };\r\n\r\n        axios.defaults.headers.common['token'] = this.props.token;\r\n        axios.defaults.headers.common['privilege'] = this.props.privilege;\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.searchUsers();\r\n    }\r\n\r\n    createUser = () => {\r\n        axios.post(\r\n            getURL(usersMainPath, UserCommand.create),\r\n            {\r\n                'username':this.state.createdUser[UserInput.Username],\r\n                'password':this.state.createdUser[UserInput.Password],\r\n                'display_name':this.state.createdUser[UserInput.display_name],\r\n                'email':this.state.createdUser[UserInput.Email],\r\n                'privilege':this.state.createdUser[UserInput.Privilege],\r\n            }\r\n            ).then(response => {\r\n                if (response.data.message === 'success') {\r\n                    this.setState({\r\n                        createStatusOpen: true,\r\n                        createStatusMessage: \"Successfully created user\",\r\n                        createStatusSeverity:\"success\",\r\n                        createdUser : {\r\n                            'username':'',\r\n                            'password':'',\r\n                            'display_name':'',\r\n                            'email':'',\r\n                            'privilege':'',\r\n                        },\r\n                        showCreateModal:false,\r\n                    });\r\n                    this.searchUsers();\r\n                } else {\r\n                    this.setState({ createStatusOpen: true, createStatusMessage: response.data.message, createStatusSeverity:\"error\" })\r\n                }\r\n            }).catch(\r\n                this.setState({ createStatusOpen: true, createStatusMessage: UserConstants.GENERAL_USER_ERROR, createStatusSeverity:\"error\" })\r\n            );\r\n    }\r\n\r\n    editUser = () => {\r\n        axios.post(\r\n            getURL(usersMainPath, UserCommand.edit),\r\n            {\r\n                'username_original':this.state.originalUsername,\r\n                'username':this.state.detailedValues[UserInput.Username],\r\n                'display_name':this.state.detailedValues[UserInput.display_name],\r\n                'email':this.state.detailedValues[UserInput.Email],\r\n                'privilege':this.state.detailedValues[UserInput.Privilege],\r\n            }\r\n            ).then(response => {\r\n                if (response.data.message === 'success') {\r\n                    this.setState({\r\n                        detailStatusOpen: true,\r\n                        detailStatusMessage: \"Successfully edited user\",\r\n                        detailStatusSeverity:\"success\",\r\n                        originalUsername:'',\r\n                        detailedValues : {\r\n                            'username':'',\r\n                            'display_name':'',\r\n                            'email':'',\r\n                            'privilege':'',\r\n                        },\r\n                        showDetailedView:false,\r\n                    });\r\n                    this.searchUsers();\r\n                } else {\r\n                    this.setState({ detailStatusOpen: true, detailStatusMessage: response.data.message, detailStatusSeverity:\"error\" })\r\n                }\r\n            }).catch(\r\n                this.setState({ detailStatusOpen: true, detailStatusMessage: UserConstants.GENERAL_USER_ERROR, detailStatusSeverity:\"error\" })\r\n            );\r\n    }\r\n\r\n\r\n    deleteUser = () => {\r\n        axios.post(\r\n            getURL(usersMainPath, UserCommand.delete),\r\n            {\r\n                'username':this.state.originalUsername,\r\n            }\r\n            ).then(response => {\r\n                if (response.data.message === 'success') {\r\n                    this.setState({\r\n                        statusOpen: true,\r\n                        statusMessage: \"Successfully deleted user\",\r\n                        statusSeverity:\"success\",\r\n                        deleteUsername:'',\r\n                        showDetailedView:false,\r\n                    });\r\n                    this.searchUsers();\r\n                } else {\r\n                    this.setState({ showStatus: true, statusMessage: response.data.message, statusSeverity:\"error\" })\r\n                }\r\n            }).catch(\r\n                this.setState({ showStatus: true, statusMessage: UserConstants.GENERAL_USER_ERROR, statusSeverity:\"error\" })\r\n            );\r\n    }\r\n\r\n    detailViewUser = (username) => {\r\n        axios.post(\r\n            getURL(usersMainPath, UserCommand.detailView),\r\n            {\r\n                'username':username,\r\n            }\r\n            ).then(response => this.setState({ detailedValues: response.data['user'], detailViewLoading:false})\r\n            ).catch(\r\n                this.setState({ showStatus: true, statusMessage: UserConstants.GENERAL_USER_ERROR, statusSeverity:\"error\" })\r\n            );\r\n\r\n        this.setState({\r\n            viewUser:'',\r\n        });\r\n    }\r\n\r\n    searchUsers = () => {\r\n        axios.post(\r\n            getURL(usersMainPath, UserCommand.search),\r\n            {\r\n                'filter':{\r\n                    'username':this.state.searchUsernm,\r\n                    'email':this.state.searchEml,\r\n                    'display_name':this.state.searchDspNm,\r\n                    'privilege':this.state.searchPriv,\r\n                }\r\n            }\r\n            ).then(response => this.setState({ items: (response.data['users']===null) ? [] : response.data['users'] }));\r\n\r\n        this.setState({ initialized: true})\r\n    }\r\n\r\n    search = (filters) => {\r\n        this.setState({\r\n            searchUsernm:filters['username'],\r\n            searchEml:filters['email'],\r\n            searchDspNm: filters['display_name'],\r\n            searchPriv:filters['privilege'],\r\n        }, this.searchUsers);\r\n    }\r\n\r\n    downloadTable = () => {\r\n        this.csvLink.link.click();\r\n    }\r\n\r\n    openCreateModal = () => {\r\n        this.setState({showCreateModal: true});\r\n    }\r\n\r\n    openImportModal = () => {\r\n        this.setState({showImportModal: true});\r\n    }\r\n\r\n    showDetailedView = (id) => {\r\n        this.setState({\r\n            showDetailedView: true,\r\n            detailViewLoading:true,\r\n            originalUsername:this.state.items[id]['username'],\r\n         });\r\n\r\n        var username = this.state.items[id]['username'];\r\n\r\n        this.detailViewUser(username);\r\n        //this.setState({ detailedValues: Constants.testUserArray[id], detailViewLoading:false})\r\n    }\r\n\r\n    closeCreateModal = () => {\r\n        this.setState({showCreateModal: false});\r\n    }\r\n\r\n    closeImportModal = () => {\r\n        this.setState({showImportModal: false});\r\n    }\r\n\r\n    closeDetailedView = () => {\r\n        this.setState({ showDetailedView: false })\r\n    }\r\n\r\n    updateUserCreator = (event) => {\r\n        this.state.createdUser[event.target.name] = event.target.value;\r\n        this.forceUpdate()\r\n    }\r\n\r\n    updateUserEdited = (event) => {\r\n        this.state.detailedValues[event.target.name] = event.target.value;\r\n        this.forceUpdate()\r\n    }\r\n\r\n    closeShowStatus = () => {\r\n        this.setState({ showStatus: false })\r\n    }\r\n\r\n    createStatusClose = () => {\r\n        this.setState({ createStatusOpen: false })\r\n    }\r\n\r\n    detailStatusClose = () => {\r\n        this.setState({ detailStatusOpen: false })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <ErrorBoundray>\r\n                <StatusDisplay\r\n                    open={this.state.showStatus}\r\n                    severity={this.state.statusSeverity}\r\n                    closeStatus={this.closeShowStatus}\r\n                    message={this.state.statusMessage}\r\n                />\r\n                {(this.props.privilege === Privilege.ADMIN) ?\r\n                    (<div>\r\n                <CreateUser\r\n                    statusOpen={this.state.createStatusOpen}\r\n                    statusSeverity={this.state.createStatusSeverity}\r\n                    statusClose={this.createStatusClose}\r\n                    statusMessage={this.state.createStatusMessage}\r\n\r\n                    showStatus={this.state.createStatus}\r\n                    showCreateModal={this.state.showCreateModal}\r\n                    closeCreateModal={this.closeCreateModal}\r\n                    createModel={this.createUser}\r\n                    updateModelCreator={this.updateUserCreator}\r\n                    inputs={inputs}\r\n                    options={[]}\r\n                    useAutocomplete={false}\r\n                />\r\n                <UploadModal\r\n                    showImportModal={this.state.showImportModal}\r\n                    closeImportModal={this.closeImportModal}\r\n                /></div>):null\r\n            }\r\n                <FilterUser\r\n                    updateSearchText={this.updateSearchText}\r\n                    search={this.search}\r\n                    filters={columns}\r\n                />\r\n                <TableView\r\n                    columns={columns}\r\n                    vals={this.state.items}\r\n                    keys={columns}\r\n                    showDetailedView={this.showDetailedView}\r\n                    filters={columns}\r\n                />\r\n                <DetailUser\r\n                    statusOpen={this.state.detailStatusOpen}\r\n                    statusSeverity={this.state.detailStatusSeverity}\r\n                    statusClose={this.detailStatusClose}\r\n                    statusMessage={this.state.detailStatusMessage}\r\n\r\n                    showDetailedView={this.state.showDetailedView}\r\n                    closeDetailedView={this.closeDetailedView}\r\n                    inputs={columns}\r\n                    updateModelEdited={this.updateUserEdited}\r\n                    defaultValues={this.state.detailedValues}\r\n                    loading={this.state.detailViewLoading}\r\n                    edit={this.editUser}\r\n                    delete={this.deleteUser}\r\n                    disabled={this.props.privilege===Privilege.USER}\r\n                />\r\n                </ErrorBoundray>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","\r\n\r\n\r\nexport const GENERAL_ASSET_ERROR =  \"There was an error in the backend. Could not perform the given asset operation at this time.\";\r\n\r\n\r\nexport const ASSETS_MAIN_PATH = 'instances/';\r\nexport const ASSET_DOWNLOAD_FILE_NAME = 'assets.csv';\r\nexport const SUCCESS_TOKEN = \"success\";\r\nexport const ERROR_TOKEN = \"error\";\r\n","export enum AssetInput {\r\n    MODEL = 'model',\r\n    HOSTNAME = 'hostname',\r\n    RACK = 'rack',\r\n    RACK_U = 'rack_position',\r\n    RACK_ORIGINAL = 'rackOriginal',\r\n    RACK_U_ORIGINAL = 'rack_positionOriginal',\r\n    OWNER = 'owner',\r\n    COMMENT = 'comment',\r\n    DATACENTER = 'datacenter_id',\r\n    TAGS = 'tags',\r\n    MAC_ADDRESS = 'mac_address',\r\n    NETWORK_CONNECTIONS = 'network_connections',\r\n    POWER_CONNECTIONS = 'power_connections',\r\n    ASSET_NUMBER = 'asset_number',\r\n}\r\n","import React from 'react';\r\n\r\nimport axios from 'axios';\r\nimport { CSVLink } from \"react-csv\";\r\n\r\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\r\nimport CloudDownloadIcon from '@material-ui/icons/CloudDownload';\r\nimport Button from '@material-ui/core/Button';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport Fade from '@material-ui/core/Fade';\r\n\r\nimport { AssetCommand } from '../enums/AssetCommands.ts'\r\nimport getURL from '../../helpers/functions/GetURL';\r\nimport * as AssetConstants from \"../AssetConstants\";\r\n\r\nconst useStyles = theme => ({\r\n    modal: {\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n    },\r\n    paper: {\r\n      backgroundColor: theme.palette.background.paper,\r\n      border: '2px solid #000',\r\n      boxShadow: theme.shadows[5],\r\n      padding: theme.spacing(2, 4, 3),\r\n    },\r\n    button: {\r\n        margin: theme.spacing(2, 4, 3),\r\n    }\r\n  });\r\n\r\nclass ImpExpAsset extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            csvData:'',\r\n            importedFile:null,\r\n\r\n            showImport:false,\r\n        };\r\n    }\r\n\r\n    sendUploadedFile = (data) => {\r\n        axios.post(\r\n            getURL(AssetConstants.ASSETS_MAIN_PATH, AssetCommand.UPLOAD_FILE), data\r\n            ).then(response => {\r\n                if (response.data.message === AssetConstants.SUCCESS_TOKEN) {\r\n                    this.setState({ showStatus: true, statusMessage: response.data.summary, statusSeverity:AssetConstants.SUCCESS_TOKEN, showImport: false,})\r\n                } else {\r\n                    this.setState({ showStatus: true, statusMessage: response.data.message, statusSeverity:AssetConstants.ERROR_TOKEN })\r\n                }\r\n            });\r\n        }\r\n\r\n    downloadTable = () => {\r\n        axios.post(\r\n            getURL(AssetConstants.ASSETS_MAIN_PATH, AssetCommand.EXPORT_FILE), { 'filter':this.props.filters }\r\n            ).then(response => {\r\n                this.setState({ csvData: response.data.csvData });\r\n                this.csvLink.link.click();\r\n            });\r\n    }\r\n\r\n    openImportModal = () => {\r\n        this.setState({showImport: true});\r\n    }\r\n\r\n    closeImportModal = () => {\r\n        this.setState({showImport: false});\r\n    }\r\n\r\n    uploadFile = () => {\r\n        const data = new FormData();\r\n        data.append('file', this.state.importedFile);\r\n        this.sendUploadedFile(data);\r\n        this.setState({ showImport: false });\r\n    }\r\n\r\n    chooseFile = (event) => {\r\n        this.setState({ importedFile: event.target.files[0] })\r\n    }\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n\r\n        return(\r\n            <span>\r\n                <Grid container spacing={3}>\r\n                    <Grid item xs={2}>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            startIcon={<CloudUploadIcon />}\r\n                            onClick={() => {this.openImportModal()} }\r\n                        >\r\n                            Import\r\n                        </Button>\r\n                    </Grid>\r\n                    <Grid item xs={2}>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            startIcon={<CloudDownloadIcon />}\r\n                            onClick={() => {this.downloadTable()}}\r\n                        >\r\n                            Export\r\n                        </Button>\r\n                    </Grid>\r\n                </Grid>\r\n\r\n                <CSVLink\r\n                    data={this.state.csvData}\r\n                    filename={AssetConstants.ASSET_DOWNLOAD_FILE_NAME}\r\n                    className=\"hidden\"\r\n                    ref={(r) => this.csvLink = r}\r\n                    target=\"_blank\"\r\n                />\r\n\r\n                <Modal\r\n                    aria-labelledby=\"transition-modal-title\"\r\n                    aria-describedby=\"transition-modal-description\"\r\n                    className={classes.modal}\r\n                    open={this.state.showImport}\r\n                    onClose={this.closeImportModal}\r\n                    closeAfterTransition\r\n                    BackdropComponent={Backdrop}\r\n                    BackdropProps={{\r\n                    timeout: 500,\r\n                    }}\r\n                >\r\n                    <Fade in={this.state.showImport}>\r\n                    <div className={classes.paper}>\r\n                        <input\r\n                            type='file'\r\n                            accept=\".csv\"\r\n                            onChange={this.chooseFile}\r\n                        />\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            onClick={() => {this.uploadFile()}}\r\n                            className={classes.button}\r\n                        >\r\n                            Upload\r\n                        </Button>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            onClick={() => {this.uploadFile()}}\r\n                        >\r\n                            Cancel\r\n                        </Button>\r\n                    </div>\r\n                    </Fade>\r\n                </Modal>\r\n            </span>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withStyles(useStyles)(ImpExpAsset);\r\n","import React from 'react';\r\n\r\nimport axios from 'axios';\r\n\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from '@material-ui/core/Button';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\n\r\nimport StatusDisplay from '../../helpers/StatusDisplay';\r\nimport { AssetInput } from '../enums/AssetInputs.ts';\r\nimport { AssetCommand } from '../enums/AssetCommands.ts'\r\nimport getURL from '../../helpers/functions/GetURL';\r\nimport * as AssetConstants from \"../AssetConstants\";\r\nimport * as Constants from \"../../Constants\";\r\nimport { Typography } from '@material-ui/core';\r\n\r\nfunction createInputs(name, label, showTooltip, description) {\r\n    return {label, name, showTooltip, description};\r\n}\r\n\r\nconst emptySearch = {\r\n    \"filter\": {\r\n            \"model\":\"\",\r\n            \"hostname\":\"\",\r\n            \"rack\":\"\",\r\n            \"rack_position\":\"\"\r\n        }\r\n}\r\n\r\nconst searchPath = \"search/\";\r\nconst left = \"left\";\r\nconst right = \"right\";\r\nconst off = \"off\";\r\n\r\nconst useStyles = theme => ({\r\n    root: {\r\n      flexGrow: 1,\r\n    },\r\n    modal: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        maxWidth: \"80%\",\r\n        margin:\"0 auto\",\r\n        minWidth:\"70%\",\r\n        overflow: \"scroll\"\r\n      },\r\n      paper: {\r\n        backgroundColor: theme.palette.background.paper,\r\n        border: '2px solid #000',\r\n        boxShadow: theme.shadows[5],\r\n        padding: theme.spacing(2, 4, 3),\r\n      },\r\n      progress: {\r\n        display: 'flex',\r\n        '& > * + *': {\r\n          marginLeft: theme.spacing(2),\r\n        },\r\n      },\r\n});\r\n\r\nclass CreateAsset extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            // next available asset number\r\n            loadingAssetNumber:true,\r\n\r\n            // model information\r\n            loadingModels:true,\r\n            modelList:[],\r\n            networkList:null,\r\n            powerPortList:null,\r\n\r\n            // owner information\r\n            loadingOwners:true,\r\n            ownerList:[],\r\n\r\n            // datacenter information\r\n            loadingDatacenters:true,\r\n            datacenterList:[],\r\n\r\n            // hostname information\r\n            loadingHostnames:true,\r\n            assetNumList:[],\r\n            assetNumToModelList:null,\r\n\r\n            model:\"\",\r\n            hostname:\"\",\r\n            rack:\"\",\r\n            rackU:-1,\r\n            owner:\"\",\r\n            comment:\"\",\r\n            datacenter_id:\"\",\r\n            tags:[],\r\n            network_connections:null,\r\n            power_connections:null,\r\n            asset_number:100000,\r\n\r\n            selectedConnection:null,\r\n\r\n            statusOpen: false,\r\n            statusMessage: \"\",\r\n            statusSeverity:\"\",\r\n\r\n            showModal:false,\r\n\r\n            powerPortState:null,\r\n            leftRight:null,\r\n            availableConnections:false,\r\n\r\n            inputs: {\r\n                \"model\":createInputs(AssetInput.MODEL, \"Model\", false, \"A reference to an existing model\"),\r\n                \"hostname\":createInputs(AssetInput.HOSTNAME, \"Hostname\", false, \"A short string compliant with RFC 1034’s definition of 'label'\"),\r\n                \"rack\":createInputs(AssetInput.RACK, \"Rack\", false, \"The rack the equipment is installed in, written as a row letter and rack number, e.g. 'B12'\"),\r\n                \"rackU\":createInputs(AssetInput.RACK_U, \"Rack U\", false, \"An integer indicating the vertical location of the bottom of the equipment (e.g. '5')\"),\r\n                \"owner\":createInputs(AssetInput.OWNER, \"Owner\", false, \"A reference to an existing user on the system who owns this equipment\"),\r\n                \"comment\":createInputs(AssetInput.COMMENT, \"Comment\", false, \"Any additional information associated with this asset\"),\r\n                \"datacenter\":createInputs(AssetInput.DATACENTER, \"Datacenter\", false, \"A reference to an existing datacenter\"),\r\n                \"macAddress\":createInputs(AssetInput.MAC_ADDRESS, \"Mac Address\", false, \"A 6-byte hexadecimal string per network port shown canonically in lower case with colon delimiters (e.g., '00:1e:c9:ac:78:aa')\"),\r\n                \"networkConnections\":createInputs(AssetInput.NETWORK_CONNECTIONS, \"Port Name\", false, \"For each network port, a reference to another network port on another piece of gear\"),\r\n                \"powerConnections\":createInputs(AssetInput.POWER_CONNECTIONS, \"Power Connections\", false, \"Choice of PDU port number (0 means not plugged in)\"),\r\n                \"assetNum\":createInputs(AssetInput.ASSET_NUMBER, \"Asset Number\", false, \"A six-digit serial number unique associated with an asset.\"),\r\n            },\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getLists();\r\n    }\r\n\r\n    getLists = () => {\r\n        this.getModelList();\r\n        this.getOwnerList();\r\n        this.getDatacenterList();\r\n        this.getNextAssetNum();\r\n        this.getAssetList();\r\n    }\r\n\r\n    getModelList = () => {\r\n        axios.post(\r\n            getURL(Constants.MODELS_MAIN_PATH, searchPath), emptySearch).then(\r\n            response => {\r\n                var models = response.data.models;\r\n\r\n                var modelNames = [];\r\n                var networkNames = {};\r\n                var powerPortNames = {};\r\n\r\n                models.map(model => {\r\n                    var modelKey = model.vendor + \" \" + model.model_number;\r\n                    modelNames.push(modelKey);\r\n                    networkNames[modelKey] = model.ethernet_ports;\r\n                    powerPortNames[modelKey] = parseInt(model.power_ports);\r\n                });\r\n\r\n                this.setState({ loadingModels: false, modelList: modelNames, networkList: networkNames, powerPortList: powerPortNames })\r\n            }, this.availableNetworkConnections());\r\n    }\r\n\r\n    getOwnerList = () => {\r\n        axios.post(\r\n            getURL(Constants.USERS_MAIN_PATH, searchPath), emptySearch).then(\r\n            response => {\r\n                var users = [];\r\n                response.data.users.map(user => users.push(user.username));\r\n                this.setState({ loadingOwners: false, ownerList: users });\r\n            });\r\n    }\r\n\r\n    getDatacenterList = () => {\r\n        axios.get(\r\n            getURL(Constants.DATACENTERS_MAIN_PATH, \"all/\")).then(\r\n            response => {\r\n                var datacenters = [];\r\n                response.data.datacenters.map(datacenter => datacenters.push(datacenter.name));\r\n                this.setState({ loadingDatacenters: false, datacenterList: datacenters })\r\n            });\r\n    }\r\n\r\n    getNextAssetNum = () => {\r\n        axios.get(\r\n            getURL(Constants.ASSETS_MAIN_PATH, AssetCommand.GET_NEXT_ASSET_NUM)).then(\r\n            response => this.setState({ loadingAssetNumber: false, asset_number: response.data.asset_number }));\r\n    }\r\n\r\n    getAssetList = () => {\r\n        axios.post(\r\n            getURL(Constants.ASSETS_MAIN_PATH, searchPath), emptySearch).then(\r\n            response => {\r\n                var instances = response.data.instances;\r\n\r\n                var assetNums = [];\r\n                var assetNumToModel = {};\r\n                instances.map(instance => {\r\n                    assetNums.push(instance.asset_number);\r\n                    assetNumToModel[instance.asset_number] = instance.model;\r\n                })\r\n\r\n                this.setState({ loadingHostnames: false, assetNumList: assetNums, assetNumToModelList: assetNumToModel });\r\n            }, this.availableNetworkConnections());\r\n    }\r\n\r\n    createAsset = () => {\r\n        axios.post(\r\n            getURL(AssetConstants.ASSETS_MAIN_PATH, AssetCommand.create),\r\n            this.createJSON()).then(\r\n                response => {\r\n                if (response.data.message === AssetConstants.SUCCESS_TOKEN) {\r\n                    this.setState({\r\n                        statusOpen: true,\r\n                        statusMessage: \"Successfully created asset\",\r\n                        statusSeverity:AssetConstants.SUCCESS_TOKEN,\r\n                        showModal:false,\r\n\r\n                        model:\"\",\r\n                        hostname:\"\",\r\n                        rack:\"\",\r\n                        rackU:-1,\r\n                        owner:\"\",\r\n                        comment:\"\",\r\n                        datacenter_id:\"\",\r\n                        tags:[],\r\n                        network_connections:[],\r\n                        power_connections:[],\r\n                        asset_number:-1,\r\n                    }, this.props.search());\r\n                } else {\r\n                    this.setState({ statusOpen: true, statusMessage: response.data.message, statusSeverity:AssetConstants.ERROR_TOKEN })\r\n                }\r\n            });\r\n    }\r\n\r\n    updateModel = (event) => {\r\n        this.setState({ model: event.target.value });\r\n    }\r\n\r\n    updateHostname = (event) => {\r\n        this.setState({ hostname: event.target.value})\r\n    }\r\n\r\n    updateRack = (event) => {\r\n        this.setState({ rack: event.target.value });\r\n    }\r\n\r\n    updateRackU = (event) => {\r\n        this.setState({ rackU: event.target.value });\r\n    }\r\n\r\n    updateOwner = (event) => {\r\n        this.setState({ owner: event.target.value });\r\n    }\r\n\r\n    updateComment = (event) => {\r\n        this.setState({ comment: event.target.value });\r\n    }\r\n\r\n    updateDatacenter = (event) => {\r\n        this.setState({ datacenter_id: event.target.value });\r\n    }\r\n\r\n    updateTags = (event) => {\r\n        this.setState({ tags: event.target.value });\r\n    }\r\n\r\n    changeNetworkMacAddress = (event, port) => {\r\n        var val = event.target.value;\r\n        switch(val.length) {\r\n            case 2:\r\n                val = (val + \":\").toLowerCase();\r\n                break;\r\n            case 5:\r\n                val = (val + \":\").toLowerCase();\r\n                break;\r\n            case 9:\r\n                val = val.substring(0,8).toLowerCase();\r\n                break;\r\n            default:\r\n                val = val.toLowerCase();\r\n        }\r\n\r\n        this.setState(prevState => {\r\n            let network_connections = Object.assign({}, prevState.network_connections);\r\n            console.log(network_connections);\r\n            console.log(network_connections[port]);\r\n            if (network_connections[port] === undefined) {\r\n                network_connections[port] = {\r\n                    \"mac_address\":val,\r\n                }\r\n            } else {\r\n                network_connections[port].mac_address = val;\r\n            }\r\n\r\n            console.log(network_connections[port][\"mac_address\"]);\r\n            network_connections[port] = (network_connections[port] === null) ? {} : network_connections[port];\r\n            network_connections[port].mac_address = val;\r\n            return { network_connections };\r\n        });\r\n    }\r\n\r\n    changeNetworkHostname = (event, port) => {\r\n        var val = event.target.value;\r\n\r\n        this.setState(prevState => {\r\n            let network_connections = Object.assign({}, prevState.network_connections);\r\n            network_connections[port] = (network_connections[port] === null) ? {} : network_connections[port];\r\n            network_connections[port].connection_hostname = val;\r\n            return { network_connections };\r\n        });\r\n    }\r\n\r\n    changeNetworkPort = (event, port) => {\r\n        var val = event.target.value;\r\n\r\n        this.setState(prevState => {\r\n            let network_connections = Object.assign({}, prevState.network_connections);\r\n            network_connections[port] = (network_connections[port] === null) ? {} : network_connections[port];\r\n            network_connections[port].connection_port = val;\r\n            return { network_connections };\r\n        });\r\n    }\r\n\r\n    updatePowerPort = (event, port) => {\r\n        var val = event.target.value;\r\n\r\n        this.setState(prevState => {\r\n            let power_connections = Object.assign({}, prevState.power_connections);\r\n            power_connections[port] = val;\r\n            return { power_connections };\r\n        });\r\n    }\r\n\r\n    changePowerPortState = (event, portNum) => {\r\n        var val = event.target.value;\r\n\r\n        this.setState(prevState => {\r\n            let leftRight = Object.assign({}, prevState.leftRight);\r\n            leftRight[portNum] = val;\r\n            return { leftRight };\r\n        });\r\n    }\r\n\r\n    updateAssetNumber = (event) => {\r\n        this.setState({ asset_number: event.target.value });\r\n    }\r\n\r\n    getPowerConnections = () => {\r\n\r\n        var pwrConns = [];\r\n        Object.entries(this.state.leftRight).map(([key, value]) => {\r\n            switch(value) {\r\n                case left:\r\n                    pwrConns.push(\"L\" + this.state.power_connections[key]);\r\n                    break;\r\n                case right:\r\n                    pwrConns.push(\"R\" + this.state.power_connections[key]);\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n        });\r\n\r\n        return pwrConns;\r\n    }\r\n\r\n    createJSON = () => {\r\n        return {\r\n            \"model\":this.state.model,\r\n            \"hostname\":this.state.hostname,\r\n            \"rack\":this.state.rack,\r\n            \"rackU\":this.state.rackU,\r\n            \"owner\":this.state.owner,\r\n            \"comment\":this.state.comment,\r\n            \"datacenter_id\":this.state.datacenter_id,\r\n            \"tags\":this.state.tags,\r\n            \"network_connections\":this.state.network_connections,\r\n            \"power_connections\":this.getPowerConnections(),\r\n            'asset_number':this.state.asset_number,\r\n        }\r\n    }\r\n\r\n    availableNetworkConnections = () => {\r\n        var availableNetworks = false;\r\n\r\n        var assets = this.state.assetNumList;\r\n        assets.map(asset => {\r\n            if (Object.keys(this.state.networList[this.state.assetNumToModelList[asset]].length).length > 0) {\r\n                availableNetworks = true;\r\n            }\r\n        });\r\n\r\n        this.setState({ availableConnections: availableNetworks });\r\n    }\r\n\r\n    showModal = () => {\r\n        this.setState({ showModal: true });\r\n    }\r\n\r\n    closeModal = () => {\r\n        this.setState({\r\n            // next available asset number\r\n            loadingAssetNumber:true,\r\n\r\n            // model information\r\n            loadingModels:true,\r\n            modelList:[],\r\n            networkList:null,\r\n            powerPortList:null,\r\n\r\n            // owner information\r\n            loadingOwners:true,\r\n            ownerList:[],\r\n\r\n            // datacenter information\r\n            loadingDatacenters:true,\r\n            datacenterList:[],\r\n\r\n            // hostname information\r\n            loadingHostnames:true,\r\n            assetNumList:[],\r\n            assetNumToModelList:null,\r\n\r\n            model:\"\",\r\n            hostname:\"\",\r\n            rack:\"\",\r\n            rackU:-1,\r\n            owner:\"\",\r\n            comment:\"\",\r\n            datacenter_id:\"\",\r\n            tags:[],\r\n            network_connections:[],\r\n            power_connections:[],\r\n            asset_number:100000,\r\n\r\n            selectedConnection:null,\r\n\r\n            statusOpen: false,\r\n            statusMessage: \"\",\r\n            statusSeverity:\"\",\r\n\r\n            showModal:false,\r\n        }, this.getLists());\r\n    }\r\n\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n\r\n        return (\r\n        <span>\r\n            <StatusDisplay\r\n                open={this.statusOpen}\r\n                severity={this.statusSeverity}\r\n                closeStatus={this.statusClose}\r\n                message={this.statusMessage}\r\n            />\r\n            <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                onClick={() => {this.showModal()} }\r\n            >\r\n                Create Asset\r\n            </Button>\r\n            <Modal\r\n                    aria-labelledby=\"transition-modal-title\"\r\n                    aria-describedby=\"transition-modal-description\"\r\n                    className={classes.modal}\r\n                    open={this.state.showModal}\r\n                    onClose={this.closeModal}\r\n                    closeAfterTransition\r\n                    BackdropComponent={Backdrop}\r\n                    scroll=\"body\"\r\n                    fullWidth\r\n                    BackdropProps={{\r\n                    timeout: 500,\r\n                    }}\r\n                >\r\n                    <Fade in={this.state.showModal}>\r\n                    <div className={classes.paper}>\r\n                    {(\r\n                    (this.state.loadingAssetNumber\r\n                    || this.state.loadingDatacenters\r\n                    || this.state.loadingModels\r\n                    || this.state.loadingHostnames\r\n                    || this.state.loadingOwners)\r\n                    //&& false\r\n                    ) ? <div className={classes.progress}><CircularProgress /></div> :\r\n                        <form>\r\n                        <Grid container spacing={3}>\r\n                            <Grid item xs={3}>\r\n                                <Tooltip placement=\"top\" open={this.state.inputs.model.Tooltip} title={this.state.inputs.model.description}>\r\n                                    <Autocomplete\r\n                                        id=\"select-model\"\r\n                                        options={this.state.modelList}\r\n                                        includeInputInList\r\n\r\n                                        renderInput={params => (\r\n                                        <TextField\r\n                                            {...params}\r\n                                            label={this.state.inputs.model.label}\r\n                                            name={this.state.inputs.model.name}\r\n                                            onChange={this.updateModel}\r\n                                            onBlur={this.updateModel}\r\n                                            variant=\"outlined\"\r\n                                            fullWidth\r\n                                            required\r\n                                        />\r\n                                        )}\r\n                                    />\r\n                                </Tooltip>\r\n                            </Grid>\r\n                            <Grid item xs={3}>\r\n                                <Tooltip placement=\"top\" open={this.state.inputs.owner.Tooltip} title={this.state.inputs.owner.description}>\r\n                                    <Autocomplete\r\n                                        id=\"select-owner\"\r\n                                        options={this.state.ownerList}\r\n                                        includeInputInList\r\n                                        renderInput={params => (\r\n                                        <TextField\r\n                                            {...params}\r\n                                            label={this.state.inputs.owner.label}\r\n                                            name={this.state.inputs.owner.name}\r\n                                            onChange={this.updateOwner}\r\n                                            onBlur={this.updateOwner}\r\n                                            variant=\"outlined\"\r\n                                            fullWidth\r\n                                            required\r\n                                        />\r\n                                        )}\r\n                                    />\r\n                                </Tooltip>\r\n                            </Grid>\r\n                            <Grid item xs={3}>\r\n                                <Tooltip placement=\"top\" open={this.state.inputs.datacenter.Tooltip} title={this.state.inputs.datacenter.description}>\r\n                                    <Autocomplete\r\n                                        id=\"input-datacenter\"\r\n                                        options={this.state.datacenterList}\r\n                                        includeInputInList\r\n\r\n                                        renderInput={params => (\r\n                                        <TextField\r\n                                            {...params}\r\n                                            label={this.state.inputs.datacenter.label}\r\n                                            name={this.state.inputs.datacenter.name}\r\n                                            onChange={this.updateDatacenter}\r\n                                            onBlur={this.updateDatacenter}\r\n                                            \r\n                                            variant=\"outlined\"\r\n                                            fullWidth\r\n                                        />\r\n                                        )}\r\n                                    />\r\n                                </Tooltip>\r\n                            </Grid>\r\n                            <Grid item xs={3}>\r\n                                <Tooltip placement=\"top\" open={this.state.inputs.rack.Tooltip} title={this.state.inputs.rack.description}>\r\n                                    <TextField\r\n                                        id=\"input-rack\"\r\n                                        variant=\"outlined\"\r\n                                        label={this.state.inputs.rack.label}\r\n                                        name={this.state.inputs.rack.name}\r\n                                        onChange={this.updateRack}\r\n                                        required\r\n                                        fullWidth\r\n                                    />\r\n                                </Tooltip>\r\n                            </Grid>\r\n                            <Grid item xs={3}>\r\n                                <Tooltip placement=\"top\" open={this.state.inputs.rackU.Tooltip} title={this.state.inputs.rackU.description}>\r\n                                    <TextField\r\n                                        id=\"input-rackU\"\r\n                                        variant=\"outlined\"\r\n                                        type=\"number\"\r\n                                        InputProps={{ inputProps: { min: 1, max:42} }}\r\n                                        label={this.state.inputs.rackU.label}\r\n                                        name={this.state.inputs.rackU.name}\r\n                                        onChange={this.updateRackU}\r\n                                        required\r\n                                        fullWidth\r\n                                    />\r\n                                </Tooltip>\r\n                            </Grid>\r\n                            <Grid item xs={3}>\r\n                                <Tooltip placement=\"top\" open={this.state.inputs.assetNum.Tooltip} title={this.state.inputs.assetNum.description}>\r\n                                    <TextField\r\n                                        id=\"input-asset-number\"\r\n                                        variant=\"outlined\"\r\n                                        type=\"number\"\r\n                                        InputProps={{ inputProps: { min: 100000, max:999999} }}\r\n                                        label={this.state.inputs.assetNum.label}\r\n                                        name={this.state.inputs.assetNum.name}\r\n                                        onChange={this.updateAssetNumber}\r\n                                        value={this.state.asset_number}\r\n                                        required\r\n                                        fullWidth\r\n                                    />\r\n                                </Tooltip>\r\n                            </Grid>\r\n                            <Grid item xs={3}>\r\n                                <Tooltip placement=\"top\" open={this.state.inputs.hostname.Tooltip} title={this.state.inputs.hostname.description}>\r\n                                    <TextField\r\n                                        id=\"input-hostname\"\r\n                                        variant=\"outlined\"\r\n                                        label={this.state.inputs.hostname.label}\r\n                                        name={this.state.inputs.hostname.name}\r\n                                        onChange={this.updateHostname}\r\n                                        fullWidth\r\n                                    />\r\n                                </Tooltip>\r\n                            </Grid>\r\n\r\n                            <Grid item xs={12}>\r\n                                {(\r\n                                    (!(this.state.networkList \r\n                                        && this.state.networkList[this.state.model]) \r\n                                    || (this.state.hostname===\"\"))\r\n                                    && !this.state.availableConnections\r\n                                ) ? null:\r\n                                this.state.networkList[this.state.model].map(networkPort => (\r\n                                <Grid container spacing={3}>\r\n                                    <Grid item xs={2}>\r\n                                        <Typography>{networkPort + \": \"}</Typography>\r\n                                    </Grid>\r\n                                    <Grid item xs={3}>\r\n                                        <Tooltip placement=\"top\" open={this.state.inputs.macAddress.Tooltip} title={this.state.inputs.macAddress.description}>\r\n                                            <TextField\r\n                                                id=\"input-mac-address\"\r\n                                                variant=\"outlined\"\r\n                                                label={this.state.inputs.macAddress.label}\r\n                                                name={this.state.inputs.macAddress.name}\r\n                                                onChange={(event) => {this.changeNetworkMacAddress(event, networkPort)}}\r\n                                                fullWidth\r\n                                                value={ (this.state.network_connections !== null && this.state.network_connections[networkPort]!==undefined) ? this.state.network_connections[networkPort].mac_address : \"\" }\r\n                                            />\r\n                                        </Tooltip>\r\n                                    </Grid>\r\n                                    <Grid item xs={3}>\r\n                                        <Tooltip placement=\"top\" open={this.state.inputs.networkConnections.Tooltip} title={this.state.inputs.networkConnections.description}>\r\n                                            <Autocomplete\r\n                                                id=\"input-network-ports\"\r\n                                                options={this.state.assetNumList}\r\n                                                includeInputInList\r\n                                                renderInput={params => (\r\n                                                    <TextField\r\n                                                        {...params}\r\n                                                        label={\"Connection Hostname\"}\r\n                                                        name={\"Connection Hostname\"}\r\n                                                        onBlur={(event) => {this.changeNetworkHostname(event, networkPort)}}\r\n                                                        variant=\"outlined\"\r\n                                                        fullWidth\r\n                                                        value={ (this.state.network_connections !== null && this.state.network_connections[networkPort]!==undefined) ? this.state.network_connections[networkPort].connection_hostname : \"\" }\r\n                                                    />\r\n                                                )}\r\n                                            />\r\n                                        </Tooltip>\r\n                                    </Grid>\r\n                                    <Grid item xs={3}>\r\n                                        <Tooltip placement=\"top\" open={this.state.inputs.networkConnections.Tooltip} title={this.state.inputs.networkConnections.description}>\r\n                                            <Autocomplete\r\n                                                id=\"input-network-ports\"\r\n                                                options={this.state.networkList[this.state.assetNumToModelList[networkPort]]}\r\n                                                includeInputInList\r\n                                                renderInput={params => (\r\n                                                    <TextField\r\n                                                        {...params}\r\n                                                        label={\"Connection Port\"}\r\n                                                        name={\"Connection Port\"}\r\n                                                        onBlur={(event) => {this.changeNetworkPort(event, networkPort)}}\r\n                                                        variant=\"outlined\"\r\n                                                        fullWidth\r\n                                                        value={ (this.state.network_connections !== null && this.state.network_connections[networkPort]!==undefined) ? this.state.network_connections[networkPort].connection_port : \"\" }\r\n                                                    />\r\n                                                )}\r\n                                            />\r\n                                        </Tooltip>\r\n                                    </Grid>\r\n                                </Grid>\r\n                                ))}\r\n                            </Grid>\r\n\r\n                            {(\r\n                                !(this.state.powerPortList \r\n                                && this.state.powerPortList[this.state.model])\r\n                                ) ? null :\r\n                            Array.from( { length: this.state.powerPortList[this.state.model] }, (_, k) => (\r\n                            <Grid item xs={12}>\r\n                                <Grid container spacing={3}>\r\n                                    <Grid item xs={12}>\r\n                                        <Typography>{\"Power Port: \" + k}</Typography>\r\n                                    </Grid>\r\n                                    <Grid item xs={2}>\r\n                                        <TextField\r\n                                            type=\"number\"\r\n                                            value={(this.state.power_connections===null) ? 1 : this.state.power_connections[k]}\r\n                                            InputProps={{ inputProps: { min: 0, max: 24} }}\r\n                                            onChange={(event) => {this.updatePowerPort(event, k)} }\r\n                                        />\r\n                                    </Grid>\r\n                                    <Grid item xs={6}>\r\n                                        <FormControl component=\"fieldset\">\r\n                                            <RadioGroup\r\n                                                aria-label=\"position\"\r\n                                                name=\"position\"\r\n                                                value={(this.state.leftRight===null) ? null:this.state.leftRight[k]}\r\n                                                onChange={(event) => {this.changePowerPortState(event, k)} }\r\n                                                row\r\n                                            >\r\n                                                <FormControlLabel\r\n                                                    value=\"left\"\r\n                                                    control={<Radio color=\"primary\" />}\r\n                                                    label=\"Left\"\r\n                                                    labelPlacement=\"bottom\"\r\n                                                />\r\n                                                <FormControlLabel\r\n                                                    value=\"right\"\r\n                                                    control={<Radio color=\"primary\" />}\r\n                                                    label=\"Right\"\r\n                                                    labelPlacement=\"bottom\"\r\n                                                />\r\n                                                <FormControlLabel\r\n                                                    value=\"off\"\r\n                                                    control={<Radio color=\"primary\" />}\r\n                                                    label=\"Off\"\r\n                                                    labelPlacement=\"bottom\"\r\n                                                />\r\n                                            </RadioGroup>\r\n                                        </FormControl>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Grid>\r\n                            ))\r\n                                    }\r\n                            <Grid item xs={6}>\r\n                                    <TextField\r\n                                        id=\"input-comment\"\r\n                                        variant=\"outlined\"\r\n                                        label={this.state.inputs.comment.label}\r\n                                        name={this.state.inputs.comment.name}\r\n                                        onChange={this.updateComment}\r\n                                        multiline={true}\r\n                                        fullWidth\r\n                                    />\r\n                            </Grid>\r\n                            <Grid item xs={6} />\r\n                            <Grid item xs={1}>\r\n                                <Button\r\n                                    variant=\"contained\"\r\n                                    color=\"primary\"\r\n                                    type=\"submit\"\r\n                                    onClick={this.createAsset}\r\n                                >\r\n                                    Create\r\n                                </Button>\r\n                            </Grid>\r\n                            <Grid item xs={9}>\r\n                                <Button\r\n                                    variant=\"contained\"\r\n                                    color=\"primary\"\r\n                                    type=\"submit\"\r\n                                    onClick={this.closeModal}\r\n                                >\r\n                                    Cancel\r\n                                </Button>\r\n                            </Grid>\r\n                        </Grid></form>}\r\n                    </div>\r\n                    </Fade>\r\n                </Modal>\r\n        </span>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default withStyles(useStyles)(CreateAsset);\r\n","import React from 'react';\r\n\r\nimport axios from 'axios';\r\n\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from '@material-ui/core/Button';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\n\r\nimport StatusDisplay from '../../helpers/StatusDisplay';\r\nimport { AssetInput } from '../enums/AssetInputs.ts';\r\nimport { AssetCommand } from '../enums/AssetCommands.ts'\r\nimport getURL from '../../helpers/functions/GetURL';\r\nimport * as AssetConstants from \"../AssetConstants\";\r\nimport * as Constants from \"../../Constants\";\r\nimport { Typography } from '@material-ui/core';\r\n\r\nfunction createInputs(name, label, showTooltip, description) {\r\n    return {label, name, showTooltip, description};\r\n}\r\n\r\nconst emptySearch = {\r\n    \"filter\": {\r\n            \"model\":\"\",\r\n            \"hostname\":\"\",\r\n            \"rack\":\"\",\r\n            \"rack_position\":\"\"\r\n        }\r\n}\r\n\r\nconst searchPath = \"search/\";\r\nconst left = \"left\";\r\nconst right = \"right\";\r\nconst off = \"off\";\r\n\r\nconst useStyles = theme => ({\r\n    root: {\r\n      flexGrow: 1,\r\n    },\r\n    modal: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        maxWidth: \"80%\",\r\n        margin:\"0 auto\",\r\n        minWidth:\"70%\",\r\n        overflow: \"scroll\"\r\n      },\r\n      paper: {\r\n        backgroundColor: theme.palette.background.paper,\r\n        border: '2px solid #000',\r\n        boxShadow: theme.shadows[5],\r\n        padding: theme.spacing(2, 4, 3),\r\n      },\r\n      progress: {\r\n        display: 'flex',\r\n        '& > * + *': {\r\n          marginLeft: theme.spacing(2),\r\n        },\r\n      },\r\n});\r\n\r\nclass DetailAsset extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            // next available asset number\r\n            loadingAssetNumber:true,\r\n\r\n            // model information\r\n            loadingModels:true,\r\n            modelList:[],\r\n            networkList:null,\r\n            powerPortList:null,\r\n\r\n            // owner information\r\n            loadingOwners:true,\r\n            ownerList:[],\r\n\r\n            // datacenter information\r\n            loadingDatacenters:true,\r\n            datacenterList:[],\r\n\r\n            // hostname information\r\n            loadingHostnames:true,\r\n            assetNumList:[],\r\n            assetNumToModelList:null,\r\n\r\n            model:\"\",\r\n            hostname:\"\",\r\n            rack:\"\",\r\n            rackU:-1,\r\n            owner:\"\",\r\n            comment:\"\",\r\n            datacenter_id:\"\",\r\n            tags:[],\r\n            network_connections:null,\r\n            power_connections:null,\r\n            asset_number:100000,\r\n\r\n            selectedConnection:null,\r\n\r\n            statusOpen: false,\r\n            statusMessage: \"\",\r\n            statusSeverity:\"\",\r\n\r\n            showModal:false,\r\n\r\n            powerPortState:null,\r\n            leftRight:null,\r\n\r\n            inputs: {\r\n                \"model\":createInputs(AssetInput.MODEL, \"Model\", false, \"A reference to an existing model\"),\r\n                \"hostname\":createInputs(AssetInput.HOSTNAME, \"Hostname\", false, \"A short string compliant with RFC 1034’s definition of 'label'\"),\r\n                \"rack\":createInputs(AssetInput.RACK, \"Rack\", false, \"The rack the equipment is installed in, written as a row letter and rack number, e.g. 'B12'\"),\r\n                \"rackU\":createInputs(AssetInput.RACK_U, \"Rack U\", false, \"An integer indicating the vertical location of the bottom of the equipment (e.g. '5')\"),\r\n                \"owner\":createInputs(AssetInput.OWNER, \"Owner\", false, \"A reference to an existing user on the system who owns this equipment\"),\r\n                \"comment\":createInputs(AssetInput.COMMENT, \"Comment\", false, \"Any additional information associated with this asset\"),\r\n                \"datacenter\":createInputs(AssetInput.DATACENTER, \"Datacenter\", false, \"A reference to an existing datacenter\"),\r\n                \"macAddress\":createInputs(AssetInput.MAC_ADDRESS, \"Mac Address\", false, \"A 6-byte hexadecimal string per network port shown canonically in lower case with colon delimiters (e.g., '00:1e:c9:ac:78:aa')\"),\r\n                \"networkConnections\":createInputs(AssetInput.NETWORK_CONNECTIONS, \"Port Name\", false, \"For each network port, a reference to another network port on another piece of gear\"),\r\n                \"powerConnections\":createInputs(AssetInput.POWER_CONNECTIONS, \"Power Connections\", false, \"Choice of PDU port number (0 means not plugged in)\"),\r\n                \"assetNum\":createInputs(AssetInput.ASSET_NUMBER, \"Asset Number\", false, \"A six-digit serial number unique associated with an asset.\"),\r\n            },\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getLists();\r\n    }\r\n\r\n    getLists = () => {\r\n        this.getModelList();\r\n        this.getOwnerList();\r\n        this.getDatacenterList();\r\n        this.getNextAssetNum();\r\n        this.getAssetList();\r\n    }\r\n\r\n    getModelList = () => {\r\n        axios.post(\r\n            getURL(Constants.MODELS_MAIN_PATH, searchPath), emptySearch).then(\r\n            response => {\r\n                var models = response.data.models;\r\n\r\n                var modelNames = [];\r\n                var networkNames = {};\r\n                var powerPortNames = {};\r\n\r\n                models.map(model => {\r\n                    var modelKey = model.vendor + \" \" + model.model_number;\r\n                    modelNames.push(modelKey);\r\n                    networkNames[modelKey] = model.ethernet_ports;\r\n                    powerPortNames[modelKey] = parseInt(model.power_ports);\r\n                });\r\n\r\n                this.setState({ loadingModels: false, modelList: modelNames, networkList: networkNames, powerPortList: powerPortNames })\r\n            });\r\n    }\r\n\r\n    getOwnerList = () => {\r\n        axios.post(\r\n            getURL(Constants.USERS_MAIN_PATH, searchPath), emptySearch).then(\r\n            response => {\r\n                var users = [];\r\n                response.data.users.map(user => users.push(user.username));\r\n                this.setState({ loadingOwners: false, ownerList: users });\r\n            });\r\n    }\r\n\r\n    getDatacenterList = () => {\r\n        axios.get(\r\n            getURL(Constants.DATACENTERS_MAIN_PATH, \"all/\")).then(\r\n            response => {\r\n                var datacenters = [];\r\n                response.data.datacenters.map(datacenter => datacenters.push(datacenter.name));\r\n                this.setState({ loadingDatacenters: false, datacenterList: datacenters })\r\n            });\r\n    }\r\n\r\n    getNextAssetNum = () => {\r\n        axios.get(\r\n            getURL(Constants.ASSETS_MAIN_PATH, AssetCommand.GET_NEXT_ASSET_NUM)).then(\r\n            response => this.setState({ loadingAssetNumber: false, asset_number: response.data.asset_number }));\r\n    }\r\n\r\n    getAssetList = () => {\r\n        axios.post(\r\n            getURL(Constants.ASSETS_MAIN_PATH, searchPath), emptySearch).then(\r\n            response => {\r\n                var instances = response.data.instances;\r\n\r\n                var assetNums = [];\r\n                var assetNumToModel = {};\r\n                instances.map(instance => {\r\n                    assetNums.push(instance.asset_number);\r\n                    assetNumToModel[instance.asset_number] = instance.model;\r\n                })\r\n\r\n                this.setState({ loadingHostnames: false, assetNumList: assetNums, assetNumToModelList: assetNumToModel });\r\n            });\r\n    }\r\n\r\n    DetailAsset = () => {\r\n        axios.post(\r\n            getURL(AssetConstants.ASSETS_MAIN_PATH, AssetCommand.create),\r\n            this.createJSON()).then(\r\n                response => {\r\n                if (response.data.message === AssetConstants.SUCCESS_TOKEN) {\r\n                    this.setState({\r\n                        statusOpen: true,\r\n                        statusMessage: \"Successfully created asset\",\r\n                        statusSeverity:AssetConstants.SUCCESS_TOKEN,\r\n                        showModal:false,\r\n\r\n                        model:\"\",\r\n                        hostname:\"\",\r\n                        rack:\"\",\r\n                        rackU:-1,\r\n                        owner:\"\",\r\n                        comment:\"\",\r\n                        datacenter_id:\"\",\r\n                        tags:[],\r\n                        network_connections:[],\r\n                        power_connections:[],\r\n                        asset_number:-1,\r\n                    }, this.props.search());\r\n                } else {\r\n                    this.setState({ statusOpen: true, statusMessage: response.data.message, statusSeverity:AssetConstants.ERROR_TOKEN })\r\n                }\r\n            });\r\n    }\r\n\r\n    updateModel = (event) => {\r\n        this.setState({ model: event.target.value });\r\n    }\r\n\r\n    updateHostname = (event) => {\r\n        this.setState({ hostname: event.target.value})\r\n    }\r\n\r\n    updateRack = (event) => {\r\n        this.setState({ rack: event.target.value });\r\n    }\r\n\r\n    updateRackU = (event) => {\r\n        this.setState({ rackU: event.target.value });\r\n    }\r\n\r\n    updateOwner = (event) => {\r\n        this.setState({ owner: event.target.value });\r\n    }\r\n\r\n    updateComment = (event) => {\r\n        this.setState({ comment: event.target.value });\r\n    }\r\n\r\n    updateDatacenter = (event) => {\r\n        this.setState({ datacenter_id: event.target.value });\r\n    }\r\n\r\n    updateTags = (event) => {\r\n        this.setState({ tags: event.target.value });\r\n    }\r\n\r\n    changeNetworkMacAddress = (event, port) => {\r\n        var val = event.target.value;\r\n        switch(val.length) {\r\n            case 2:\r\n                val = (val + \":\").toLowerCase();\r\n                break;\r\n            case 5:\r\n                val = (val + \":\").toLowerCase();\r\n                break;\r\n            case 9:\r\n                val = val.substring(0,8).toLowerCase();\r\n                break;\r\n            default:\r\n                val = val.toLowerCase();\r\n        }\r\n\r\n        this.setState(prevState => {\r\n            let network_connections = Object.assign({}, prevState.network_connections);\r\n            console.log(network_connections);\r\n            console.log(network_connections[port]);\r\n            if (network_connections[port] === undefined) {\r\n                network_connections[port] = {\r\n                    \"mac_address\":val,\r\n                }\r\n            } else {\r\n                network_connections[port].mac_address = val;\r\n            }\r\n\r\n            console.log(network_connections[port][\"mac_address\"]);\r\n            network_connections[port] = (network_connections[port] === null) ? {} : network_connections[port];\r\n            network_connections[port].mac_address = val;\r\n            return { network_connections };\r\n        });\r\n    }\r\n\r\n    changeNetworkHostname = (event, port) => {\r\n        var val = event.target.value;\r\n\r\n        this.setState(prevState => {\r\n            let network_connections = Object.assign({}, prevState.network_connections);\r\n            network_connections[port] = (network_connections[port] === null) ? {} : network_connections[port];\r\n            network_connections[port].connection_hostname = val;\r\n            return { network_connections };\r\n        });\r\n    }\r\n\r\n    changeNetworkPort = (event, port) => {\r\n        var val = event.target.value;\r\n\r\n        this.setState(prevState => {\r\n            let network_connections = Object.assign({}, prevState.network_connections);\r\n            network_connections[port] = (network_connections[port] === null) ? {} : network_connections[port];\r\n            network_connections[port].connection_port = val;\r\n            return { network_connections };\r\n        });\r\n    }\r\n\r\n    updatePowerPort = (event, port) => {\r\n        var val = event.target.value;\r\n\r\n        this.setState(prevState => {\r\n            let power_connections = Object.assign({}, prevState.power_connections);\r\n            power_connections[port] = val;\r\n            return { power_connections };\r\n        });\r\n    }\r\n\r\n    changePowerPortState = (event, portNum) => {\r\n        var val = event.target.value;\r\n\r\n        this.setState(prevState => {\r\n            let leftRight = Object.assign({}, prevState.leftRight);\r\n            leftRight[portNum] = val;\r\n            return { leftRight };\r\n        });\r\n    }\r\n\r\n    updateAssetNumber = (event) => {\r\n        this.setState({ asset_number: event.target.value });\r\n    }\r\n\r\n    getPowerConnections = () => {\r\n\r\n        var pwrConns = [];\r\n        Object.entries(this.state.leftRight).map(([key, value]) => {\r\n            switch(key) {\r\n                case left:\r\n                    pwrConns.push(\"L\" + value);\r\n                    break;\r\n                case right:\r\n                    pwrConns.push(\"R\" + value);\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n        });\r\n\r\n        return pwrConns;\r\n    }\r\n\r\n    createJSON = () => {\r\n        return {\r\n            \"model\":this.state.model,\r\n            \"hostname\":this.state.hostname,\r\n            \"rack\":this.state.rack,\r\n            \"rackU\":this.state.rackU,\r\n            \"owner\":this.state.owner,\r\n            \"comment\":this.state.comment,\r\n            \"datacenter_id\":this.state.datacenter_id,\r\n            \"tags\":this.state.tags,\r\n            \"network_connections\":this.state.network_connections,\r\n            \"power_connections\":this.getPowerConnections(),\r\n            'asset_number':this.state.asset_number,\r\n        }\r\n    }\r\n\r\n    availableNetworkConnections = () => {\r\n\r\n    }\r\n\r\n    showModal = () => {\r\n        this.setState({ showModal: true });\r\n    }\r\n\r\n    closeModal = () => {\r\n        this.setState({\r\n            // next available asset number\r\n            loadingAssetNumber:true,\r\n\r\n            // model information\r\n            loadingModels:true,\r\n            modelList:[],\r\n            networkList:null,\r\n            powerPortList:null,\r\n\r\n            // owner information\r\n            loadingOwners:true,\r\n            ownerList:[],\r\n\r\n            // datacenter information\r\n            loadingDatacenters:true,\r\n            datacenterList:[],\r\n\r\n            // hostname information\r\n            loadingHostnames:true,\r\n            assetNumList:[],\r\n            assetNumToModelList:null,\r\n\r\n            model:\"\",\r\n            hostname:\"\",\r\n            rack:\"\",\r\n            rackU:-1,\r\n            owner:\"\",\r\n            comment:\"\",\r\n            datacenter_id:\"\",\r\n            tags:[],\r\n            network_connections:[],\r\n            power_connections:[],\r\n            asset_number:100000,\r\n\r\n            selectedConnection:null,\r\n\r\n            statusOpen: false,\r\n            statusMessage: \"\",\r\n            statusSeverity:\"\",\r\n\r\n            showModal:false,\r\n        }, this.getLists());\r\n    }\r\n\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n\r\n        return (\r\n        <span>\r\n            <StatusDisplay\r\n                open={this.statusOpen}\r\n                severity={this.statusSeverity}\r\n                closeStatus={this.statusClose}\r\n                message={this.statusMessage}\r\n            />\r\n            <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                onClick={() => {this.showModal()} }\r\n            >\r\n                Create Asset\r\n            </Button>\r\n            <Modal\r\n                    aria-labelledby=\"transition-modal-title\"\r\n                    aria-describedby=\"transition-modal-description\"\r\n                    className={classes.modal}\r\n                    open={this.state.showModal}\r\n                    onClose={this.closeModal}\r\n                    closeAfterTransition\r\n                    BackdropComponent={Backdrop}\r\n                    scroll=\"body\"\r\n                    fullWidth\r\n                    BackdropProps={{\r\n                    timeout: 500,\r\n                    }}\r\n                >\r\n                    <Fade in={this.state.showModal}>\r\n                    <div className={classes.paper}>\r\n                    {(\r\n                    (this.state.loadingAssetNumber\r\n                    || this.state.loadingDatacenters\r\n                    || this.state.loadingModels\r\n                    || this.state.loadingHostnames\r\n                    || this.state.loadingOwners)\r\n                    && false\r\n                    ) ? <div className={classes.progress}><CircularProgress /></div> :\r\n                        <form>\r\n                        <Grid container spacing={3}>\r\n                            <Grid item xs={3}>\r\n                                <Tooltip placement=\"top\" open={this.state.inputs.model.Tooltip} title={this.state.inputs.model.description}>\r\n                                    <Autocomplete\r\n                                        id=\"select-model\"\r\n                                        options={this.state.modelList}\r\n                                        includeInputInList\r\n\r\n                                        renderInput={params => (\r\n                                        <TextField\r\n                                            {...params}\r\n                                            label={this.state.inputs.model.label}\r\n                                            name={this.state.inputs.model.name}\r\n                                            onChange={this.updateModel}\r\n                                            onBlur={this.updateModel}\r\n                                            variant=\"outlined\"\r\n                                            fullWidth\r\n                                            required\r\n                                        />\r\n                                        )}\r\n                                    />\r\n                                </Tooltip>\r\n                            </Grid>\r\n                            <Grid item xs={3}>\r\n                                <Tooltip placement=\"top\" open={this.state.inputs.owner.Tooltip} title={this.state.inputs.owner.description}>\r\n                                    <Autocomplete\r\n                                        id=\"select-owner\"\r\n                                        options={this.state.ownerList}\r\n                                        includeInputInList\r\n                                        renderInput={params => (\r\n                                        <TextField\r\n                                            {...params}\r\n                                            label={this.state.inputs.owner.label}\r\n                                            name={this.state.inputs.owner.name}\r\n                                            onChange={this.updateOwner}\r\n                                            onBlur={this.updateOwner}\r\n                                            variant=\"outlined\"\r\n                                            fullWidth\r\n                                            required\r\n                                        />\r\n                                        )}\r\n                                    />\r\n                                </Tooltip>\r\n                            </Grid>\r\n                            <Grid item xs={3}>\r\n                                <Tooltip placement=\"top\" open={this.state.inputs.datacenter.Tooltip} title={this.state.inputs.datacenter.description}>\r\n                                    <Autocomplete\r\n                                        id=\"input-datacenter\"\r\n                                        options={this.state.datacenterList}\r\n                                        includeInputInList\r\n\r\n                                        renderInput={params => (\r\n                                        <TextField\r\n                                            {...params}\r\n                                            label={this.state.inputs.datacenter.label}\r\n                                            name={this.state.inputs.datacenter.name}\r\n                                            onChange={this.updateDatacenter}\r\n                                            onBlur={this.updateDatacenter}\r\n                                            \r\n                                            variant=\"outlined\"\r\n                                            fullWidth\r\n                                        />\r\n                                        )}\r\n                                    />\r\n                                </Tooltip>\r\n                            </Grid>\r\n                            <Grid item xs={3}>\r\n                                <Tooltip placement=\"top\" open={this.state.inputs.rack.Tooltip} title={this.state.inputs.rack.description}>\r\n                                    <TextField\r\n                                        id=\"input-rack\"\r\n                                        variant=\"outlined\"\r\n                                        label={this.state.inputs.rack.label}\r\n                                        name={this.state.inputs.rack.name}\r\n                                        onChange={this.updateRack}\r\n                                        required\r\n                                        fullWidth\r\n                                    />\r\n                                </Tooltip>\r\n                            </Grid>\r\n                            <Grid item xs={3}>\r\n                                <Tooltip placement=\"top\" open={this.state.inputs.rackU.Tooltip} title={this.state.inputs.rackU.description}>\r\n                                    <TextField\r\n                                        id=\"input-rackU\"\r\n                                        variant=\"outlined\"\r\n                                        type=\"number\"\r\n                                        InputProps={{ inputProps: { min: 1, max:42} }}\r\n                                        label={this.state.inputs.rackU.label}\r\n                                        name={this.state.inputs.rackU.name}\r\n                                        onChange={this.updateRackU}\r\n                                        required\r\n                                        fullWidth\r\n                                    />\r\n                                </Tooltip>\r\n                            </Grid>\r\n                            <Grid item xs={3}>\r\n                                <Tooltip placement=\"top\" open={this.state.inputs.assetNum.Tooltip} title={this.state.inputs.assetNum.description}>\r\n                                    <TextField\r\n                                        id=\"input-asset-number\"\r\n                                        variant=\"outlined\"\r\n                                        type=\"number\"\r\n                                        InputProps={{ inputProps: { min: 100000, max:999999} }}\r\n                                        label={this.state.inputs.assetNum.label}\r\n                                        name={this.state.inputs.assetNum.name}\r\n                                        onChange={this.updateAssetNumber}\r\n                                        value={this.state.asset_number}\r\n                                        required\r\n                                        fullWidth\r\n                                    />\r\n                                </Tooltip>\r\n                            </Grid>\r\n                            <Grid item xs={3}>\r\n                                <Tooltip placement=\"top\" open={this.state.inputs.hostname.Tooltip} title={this.state.inputs.hostname.description}>\r\n                                    <TextField\r\n                                        id=\"input-hostname\"\r\n                                        variant=\"outlined\"\r\n                                        label={this.state.inputs.hostname.label}\r\n                                        name={this.state.inputs.hostname.name}\r\n                                        onChange={this.updateHostname}\r\n                                        fullWidth\r\n                                    />\r\n                                </Tooltip>\r\n                            </Grid>\r\n\r\n                            <Grid item xs={12}>\r\n                                {(!(this.state.networkList && this.state.networkList[this.state.model]) || (this.state.hostname===\"\")) ? null:\r\n                                this.state.networkList[this.state.model].map(networkPort => (\r\n                                <Grid container spacing={3}>\r\n                                    <Grid item xs={2}>\r\n                                        <Typography>{networkPort + \": \"}</Typography>\r\n                                    </Grid>\r\n                                    <Grid item xs={3}>\r\n                                        <Tooltip placement=\"top\" open={this.state.inputs.macAddress.Tooltip} title={this.state.inputs.macAddress.description}>\r\n                                            <TextField\r\n                                                id=\"input-mac-address\"\r\n                                                variant=\"outlined\"\r\n                                                label={this.state.inputs.macAddress.label}\r\n                                                name={this.state.inputs.macAddress.name}\r\n                                                onChange={(event) => {this.changeNetworkMacAddress(event, networkPort)}}\r\n                                                fullWidth\r\n                                                value={ (this.state.network_connections !== null && this.state.network_connections[networkPort]!==undefined) ? this.state.network_connections[networkPort].mac_address : \"\" }\r\n                                            />\r\n                                        </Tooltip>\r\n                                    </Grid>\r\n                                    <Grid item xs={3}>\r\n                                        <Tooltip placement=\"top\" open={this.state.inputs.networkConnections.Tooltip} title={this.state.inputs.networkConnections.description}>\r\n                                            <Autocomplete\r\n                                                id=\"input-network-ports\"\r\n                                                options={this.state.assetNumList}\r\n                                                includeInputInList\r\n                                                renderInput={params => (\r\n                                                    <TextField\r\n                                                        {...params}\r\n                                                        label={\"Connection Hostname\"}\r\n                                                        name={\"Connection Hostname\"}\r\n                                                        onBlur={(event) => {this.changeNetworkHostname(event, networkPort)}}\r\n                                                        variant=\"outlined\"\r\n                                                        fullWidth\r\n                                                        value={ (this.state.network_connections !== null && this.state.network_connections[networkPort]!==undefined) ? this.state.network_connections[networkPort].connection_hostname : \"\" }\r\n                                                    />\r\n                                                )}\r\n                                            />\r\n                                        </Tooltip>\r\n                                    </Grid>\r\n                                    <Grid item xs={3}>\r\n                                        <Tooltip placement=\"top\" open={this.state.inputs.networkConnections.Tooltip} title={this.state.inputs.networkConnections.description}>\r\n                                            <Autocomplete\r\n                                                id=\"input-network-ports\"\r\n                                                options={this.state.networkList[this.state.assetNumToModelList[networkPort]]}\r\n                                                includeInputInList\r\n                                                renderInput={params => (\r\n                                                    <TextField\r\n                                                        {...params}\r\n                                                        label={\"Connection Port\"}\r\n                                                        name={\"Connection Port\"}\r\n                                                        onBlur={(event) => {this.changeNetworkPort(event, networkPort)}}\r\n                                                        variant=\"outlined\"\r\n                                                        fullWidth\r\n                                                        value={ (this.state.network_connections !== null && this.state.network_connections[networkPort]!==undefined) ? this.state.network_connections[networkPort].connection_port : \"\" }\r\n                                                    />\r\n                                                )}\r\n                                            />\r\n                                        </Tooltip>\r\n                                    </Grid>\r\n                                </Grid>\r\n                                ))}\r\n                            </Grid>\r\n\r\n                            {(!(this.state.powerPortList && this.state.powerPortList[this.state.model])) ? null :\r\n                            Array.from( { length: this.state.powerPortList[this.state.model] }, (_, k) => (\r\n                            <Grid item xs={12}>\r\n                                <Grid container spacing={3}>\r\n                                    <Grid item xs={12}>\r\n                                        <Typography>{\"Power Port: \" + k}</Typography>\r\n                                    </Grid>\r\n                                    <Grid item xs={2}>\r\n                                        <TextField\r\n                                            type=\"number\"\r\n                                            value={(this.state.power_connections===null) ? 1 : this.state.power_connections[k]}\r\n                                            InputProps={{ inputProps: { min: 0, max: 24} }}\r\n                                            onChange={(event) => {this.updatePowerPort(event, k)} }\r\n                                        />\r\n                                    </Grid>\r\n                                    <Grid item xs={6}>\r\n                                        <FormControl component=\"fieldset\">\r\n                                            <RadioGroup\r\n                                                aria-label=\"position\"\r\n                                                name=\"position\"\r\n                                                value={(this.state.leftRight===null) ? null:this.state.leftRight[k]}\r\n                                                onChange={(event) => {this.changePowerPortState(event, k)} }\r\n                                                row\r\n                                            >\r\n                                                <FormControlLabel\r\n                                                    value=\"left\"\r\n                                                    control={<Radio color=\"primary\" />}\r\n                                                    label=\"Left\"\r\n                                                    labelPlacement=\"bottom\"\r\n                                                />\r\n                                                <FormControlLabel\r\n                                                    value=\"right\"\r\n                                                    control={<Radio color=\"primary\" />}\r\n                                                    label=\"Right\"\r\n                                                    labelPlacement=\"bottom\"\r\n                                                />\r\n                                                <FormControlLabel\r\n                                                    value=\"off\"\r\n                                                    control={<Radio color=\"primary\" />}\r\n                                                    label=\"Off\"\r\n                                                    labelPlacement=\"bottom\"\r\n                                                />\r\n                                            </RadioGroup>\r\n                                        </FormControl>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Grid>\r\n                            ))\r\n                                    }\r\n                            <Grid item xs={6}>\r\n                                    <TextField\r\n                                        id=\"input-comment\"\r\n                                        variant=\"outlined\"\r\n                                        label={this.state.inputs.comment.label}\r\n                                        name={this.state.inputs.comment.name}\r\n                                        onChange={this.updateComment}\r\n                                        multiline={true}\r\n                                        fullWidth\r\n                                    />\r\n                            </Grid>\r\n                            <Grid item xs={6} />\r\n                            <Grid item xs={1}>\r\n                                <Button\r\n                                    variant=\"contained\"\r\n                                    color=\"primary\"\r\n                                    type=\"submit\"\r\n                                    onClick={this.DetailAsset}\r\n                                >\r\n                                    Create\r\n                                </Button>\r\n                            </Grid>\r\n                            <Grid item xs={9}>\r\n                                <Button\r\n                                    variant=\"contained\"\r\n                                    color=\"primary\"\r\n                                    type=\"submit\"\r\n                                    onClick={this.closeModal}\r\n                                >\r\n                                    Cancel\r\n                                </Button>\r\n                            </Grid>\r\n                        </Grid></form>}\r\n                    </div>\r\n                    </Fade>\r\n                </Modal>\r\n        </span>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default withStyles(useStyles)(DetailAsset);\r\n","import React from 'react';\r\n\r\nimport axios from 'axios';\r\n\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { fade, withStyles } from '@material-ui/core/styles';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport { MenuItem, Button, TextField } from '@material-ui/core';\r\n\r\nimport createAssetJSON from \"./functions/createAssetJSON\";\r\nimport { AssetCommand } from '../enums/AssetCommands.ts'\r\nimport getURL from '../../helpers/functions/GetURL';\r\nimport * as AssetConstants from \"../AssetConstants\";\r\nimport * as Constants from '../../Constants';\r\n\r\nconst useStyles = theme => ({\r\n    grow: {\r\n      flexGrow: 1,\r\n    },\r\n    menuButton: {\r\n      marginRight: theme.spacing(2),\r\n    },\r\n    title: {\r\n      display: 'none',\r\n      [theme.breakpoints.up('sm')]: {\r\n        display: 'block',\r\n      },\r\n    },\r\n    search: {\r\n      position: 'relative',\r\n      borderRadius: theme.shape.borderRadius,\r\n      backgroundColor: fade(theme.palette.common.white, 0.15),\r\n      '&:hover': {\r\n        backgroundColor: fade(theme.palette.common.white, 0.25),\r\n      },\r\n      marginRight: theme.spacing(2),\r\n      marginLeft: 0,\r\n      width: '100%',\r\n      [theme.breakpoints.up('sm')]: {\r\n        marginLeft: theme.spacing(3),\r\n        width: 'auto',\r\n      },\r\n    },\r\n    searchIcon: {\r\n      width: theme.spacing(7),\r\n      height: '100%',\r\n      position: 'absolute',\r\n      pointerEvents: 'none',\r\n      display: 'flex',\r\n      alignItems: 'left',\r\n      justifyContent: 'left',\r\n    },\r\n    inputRoot: {\r\n      color: 'inherit',\r\n    },\r\n    inputInput: {\r\n      padding: theme.spacing(1, 1, 1, 7),\r\n      transition: theme.transitions.create('width'),\r\n      width: '100%',\r\n      [theme.breakpoints.up('md')]: {\r\n        width: 200,\r\n      },\r\n    },\r\n    sectionDesktop: {\r\n      display: 'none',\r\n      [theme.breakpoints.up('md')]: {\r\n        display: 'flex',\r\n      },\r\n    },\r\n    sectionMobile: {\r\n      display: 'flex',\r\n      [theme.breakpoints.up('md')]: {\r\n        display: 'none',\r\n      },\r\n    },\r\n  });\r\n\r\nclass FilterAsset extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            model:\"\",\r\n            hostname:\"\",\r\n            rack:\"\",\r\n            rackU:-1,\r\n            owner:\"\",\r\n            comment:\"\",\r\n            datacenter_id:\"\",\r\n            tags:[],\r\n            network_connections:\"\",\r\n            power_connections:\"\",\r\n            asset_number:-1,\r\n\r\n            startingRackNumber:null,\r\n            endingRackNumber:null,\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.search();\r\n    }\r\n\r\n    updateModel = (event, newValue) => {\r\n        this.setState({ model: newValue });\r\n    }\r\n\r\n    updateHostname = (event, newValue) => {\r\n        this.setState({ hostname: newValue})\r\n    }\r\n\r\n    updateRack = (event, newValue) => {\r\n        this.setState({ rack: newValue });\r\n    }\r\n\r\n    updateRackU = (event, newValue) => {\r\n        this.setState({ rackU: newValue });\r\n    }\r\n\r\n    updateOwner = (event, newValue) => {\r\n        this.setState({ owner: newValue });\r\n    }\r\n\r\n    updateComment = (event, newValue) => {\r\n        this.setState({ comment: newValue });\r\n    }\r\n\r\n    updateDatacenter = (event, newValue) => {\r\n        this.setState({ datacenter_id: newValue });\r\n    }\r\n\r\n    updateTags = (event, newValue) => {\r\n        this.setState({ tags: newValue });\r\n    }\r\n\r\n    updateNetworkConnections = (event, newValue) => {\r\n        this.setState({ network_connections: newValue });\r\n    }\r\n\r\n    updatePowerConnections = (event, newValue) => {\r\n        this.setState({ power_connections: newValue });\r\n    }\r\n\r\n    updateAssetNumber = (event, newValue) => {\r\n        this.setState({ asset_number: newValue });\r\n    }\r\n\r\n    search = () => {\r\n        axios.post(\r\n            getURL(AssetConstants.ASSETS_MAIN_PATH, AssetCommand.search),{ 'filter':createAssetJSON() }\r\n            ).then(response => {\r\n                this.props.updateSearchItems(response.data.assets);\r\n            });\r\n    }\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <Grid container spacing={3}>\r\n                    <Grid item xs={3}>\r\n                        <FormControl>\r\n                            <div>\r\n                                <TextField\r\n                                    placeholder=\"Search…\"\r\n                                    classes={{\r\n                                        root: classes.inputRoot,\r\n                                        input: classes.inputInput,\r\n                                    }}\r\n                                    inputProps={{ 'aria-label': 'search' }}\r\n                                />\r\n                            </div>\r\n                            <FormHelperText>Filter by Datacenter</FormHelperText>\r\n                        </FormControl>\r\n                    </Grid>\r\n                    <Grid item xs={3}>\r\n                        <FormControl>\r\n                            <div>\r\n                                <TextField\r\n                                    placeholder=\"Search…\"\r\n                                    classes={{\r\n                                        root: classes.inputRoot,\r\n                                        input: classes.inputInput,\r\n                                    }}\r\n                                    inputProps={{ 'aria-label': 'search' }}\r\n                                />\r\n                            </div>\r\n                            <FormHelperText>Filter by model</FormHelperText>\r\n                        </FormControl>\r\n                    </Grid>\r\n                    <Grid item xs={6}>\r\n                        <FormControl>\r\n                            <div>\r\n                                <TextField\r\n                                    placeholder=\"Search…\"\r\n                                    classes={{\r\n                                        root: classes.inputRoot,\r\n                                        input: classes.inputInput,\r\n                                    }}\r\n                                    inputProps={{ 'aria-label': 'search' }}\r\n                                />\r\n                            </div>\r\n                            <FormHelperText>Filter by hostname</FormHelperText>\r\n                        </FormControl>\r\n                    </Grid>\r\n                    <Grid item xs={1}>\r\n                        <FormControl>\r\n                                <Select\r\n                                    id=\"starting-letter-selector\"\r\n                                    value={this.state.startingRackLetter}\r\n                                    onChange={this.changeStartingLetter}\r\n                                >\r\n                                    {Constants.RackX.map(val => (<MenuItem value={val}>{val}</MenuItem>))}\r\n                                </Select>\r\n                                <FormHelperText>Starting Letter</FormHelperText>\r\n                        </FormControl>\r\n                    </Grid>\r\n                    <Grid item xs={1}>\r\n                        <FormControl>\r\n                                <Select\r\n                                    id=\"ending-letter-selector\"\r\n                                    value={this.state.endingRackLetter}\r\n                                    onChange={this.changeEndingLetter}\r\n                                >\r\n                                    {Constants.RackX.map(val => (<MenuItem value={val}>{val}</MenuItem>))}\r\n                                </Select>\r\n                                <FormHelperText>Ending Letter</FormHelperText>\r\n                        </FormControl>\r\n                    </Grid>\r\n                    <Grid item xs={1}>\r\n                        <FormControl>\r\n                                <TextField\r\n                                    id=\"starting-num-selector\"\r\n                                    type=\"number\"\r\n                                    value={this.state.startingRackNumber}\r\n                                    onChange={this.changeStartingNum}\r\n                                    InputProps={{ inputProps: { min: 1} }}\r\n                                />\r\n                                <FormHelperText>Starting Number</FormHelperText>\r\n                        </FormControl>\r\n                    </Grid>\r\n                    <Grid item xs={1}>\r\n                        <FormControl>\r\n                                <TextField\r\n                                    id=\"ending-num-selector\"\r\n                                    type=\"number\"\r\n                                    value={this.state.endingRackNumber}\r\n                                    onChange={this.changeEndingNum}\r\n                                    InputProps={{ inputProps: { min: 1} }}\r\n                                />\r\n                                <FormHelperText>Ending Number</FormHelperText>\r\n                        </FormControl>\r\n                    </Grid>\r\n                </Grid>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withStyles(useStyles)(FilterAsset);\r\n","export default function createAssetJSON(model, hostname, rack, rackU, owner, comment, datacenter_id, tags, network_connections, power_connections, asset_number) {\r\n    return {\r\n        \"model\":model,\r\n        \"hostname\":hostname,\r\n        \"rack\":rack,\r\n        \"rackU\":rackU,\r\n        \"owner\":owner,\r\n        \"comment\":comment,\r\n        \"datacenter_id\":datacenter_id,\r\n        \"tags\":tags,\r\n        \"network_connections\":network_connections,\r\n        \"power_connections\":power_connections,\r\n        'asset_number':asset_number,\r\n    }\r\n}\r\n","import React from 'react';\r\n\r\nimport axios from 'axios';\r\n\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport { Button } from '@material-ui/core';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nimport { AssetInput } from '../enums/AssetInputs.ts';\r\nimport { AssetCommand } from '../enums/AssetCommands.ts';\r\nimport getURL from '../../helpers/functions/GetURL';\r\nimport * as AssetConstants from \"../AssetConstants\";\r\nimport DetailAsset from \"./DetailsAsset\";\r\nimport FilterAsset from './FilterAsset';\r\nimport stableSort from \"../../helpers/functions/StableSort\";\r\nimport getComparator from \"../../helpers/functions/GetComparator\";\r\n\r\n\r\nconst useStyles = theme => ({\r\n  styledTableRow: {\r\n    '&:nth-of-type(odd)': {\r\n      backgroundColor: theme.palette.background.default,\r\n    },\r\n  },\r\n  tableCellHead: {\r\n\tbackgroundColor: theme.palette.primary.main,\r\n\tcolor: theme.palette.common.white,\r\n  },\r\n  styledTableCell:{\r\n      fontSize: 14,\r\n  },\r\n  table: {\r\n    minWidth: 700,\r\n  },\r\n  \tpaper: {\r\n\t\twidth: '100%',\r\n\t\tmarginBottom: theme.spacing(2),\r\n\t},\r\n});\r\n\r\nfunction createData(model, hostname, datacenter, rack, rackU, owner, assetNum) {\r\n  return { model, hostname, datacenter, rack, rackU, owner, assetNum };\r\n}\r\n\r\nconst rows = [\r\n\tcreateData('Frozen yoghurt', 159, 6.0, 24, 4.0),\r\n\tcreateData('Ice cream sandwich', 237, 9.0, 37, 4.3),\r\n\tcreateData('Eclair', 262, 16.0, 24, 6.0),\r\n\tcreateData('Cupcake', 305, 3.7, 67, 4.3),\r\n\tcreateData('Gingerbread', 356, 16.0, 49, 3.9),\r\n  ];\r\n\r\nconst columns = [\r\n    'model',\r\n    'hostname',\r\n    'rack',\r\n    'rack_position',\r\n]\r\n\r\nclass TableAsset extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n\t  tableItems:[],\r\n\r\n\t  detailStatusOpen:false,\r\n\t  detailStatusSeverity:'',\r\n\t  detailStatusMessage:'',\r\n\r\n\t  deleteAssetRack:'',\r\n\t  deleteAssetrack_position:'',\r\n\r\n\t  showDetailedView: false,\r\n\t  detailViewLoading:false,\r\n\t  originalRack:'',\r\n\t  originalrack_position:'',\r\n\r\n\t  order:\"asc\",\r\n\t  orderBy:\"model\",\r\n    };\r\n  }\r\n\r\n  editAsset = () => {\r\n\tlet body = this.state.detailedValues.getAssetAsJSON();\r\n\tbody[AssetInput.RACK_ORIGINAL] = this.state.originalRack;\r\n\tbody[AssetInput.RACK_U_ORIGINAL] = this.state.originalrack_position;\r\n\taxios.post(\r\n\t\tgetURL(AssetConstants.ASSETS_MAIN_PATH, AssetCommand.edit),body\r\n\t\t).then(response => {\r\n\t\t\tif (response.data.message === AssetConstants.SUCCESS_TOKEN) {\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\tshowStatus: true,\r\n\t\t\t\t\tstatusMessage: \"Successfully edited asset\",\r\n\t\t\t\t\tstatusSeverity:AssetConstants.SUCCESS_TOKEN,\r\n\t\t\t\t\tdetailedValues : null,\r\n\t\t\t\t\tshowDetailedView:false,\r\n\t\t\t\t});\r\n\t\t\t} else {\r\n\t\t\t\tthis.setState({ detailStatusOpen: true, detailStatusMessage: response.data.message, detailStatusSeverity:AssetConstants.ERROR_TOKEN })\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\r\n\tdeleteAsset = () => {\r\n\t\tvar body = {};\r\n\t\tbody[AssetInput.RACK] = this.state.originalRack;\r\n\t\tbody[AssetInput.RACK_U] = this.state.originalrack_position;\r\n\r\n\t\taxios.post(\r\n\t\t\tgetURL(AssetConstants.ASSETS_MAIN_PATH, AssetCommand.delete), body\r\n\t\t\t).then(response => {\r\n\t\t\t\tif (response.data.message === AssetConstants.SUCCESS_TOKEN) {\r\n\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\tshowStatus: true,\r\n\t\t\t\t\t\tstatusMessage: \"Successfully deleted asset\",\r\n\t\t\t\t\t\tstatusSeverity:AssetConstants.SUCCESS_TOKEN,\r\n\t\t\t\t\t\toriginalRack:'',\r\n\t\t\t\t\t\toriginalrack_position:'',\r\n\t\t\t\t\t\tshowDetailedView:false\r\n\t\t\t\t\t});\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.setState({ showStatus: true, statusMessage: response.data.message, statusSeverity:AssetConstants.ERROR_TOKEN })\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t}\r\n\r\n\tgetAssetDetails = (rack, rack_position) => {\r\n\t\tthis.setState({ detailViewLoading: true });\r\n\r\n\t\tvar body = {};\r\n\t\tbody[AssetInput.RACK] = rack;\r\n\t\tbody[AssetInput.RACK_U] = rack_position;\r\n\r\n\t\taxios.post(\r\n\t\t\tgetURL(AssetConstants.ASSETS_MAIN_PATH, AssetCommand.detailView), body\r\n\t\t\t).then(response => this.setState({ detailedValues: response.data['assets'][0], detailViewLoading:false}));\r\n\t}\r\n\r\n\tcloseDetailedView = () => {\r\n\t\tthis.setState({ showDetailedView: false })\r\n\t}\r\n\r\n\tcloseShowStatus = () => {\r\n\t\tthis.setState({ showStatus: false })\r\n\t}\r\n\r\n\r\n\r\n\trender() {\r\n\tconst { classes } = this.props;\r\n\r\n\treturn (\r\n\t\t<React.Fragment>\r\n\t\t\t<Grid container spacing={3}>\r\n\t\t\t\t<Grid item xs={6}>\r\n\t\t\t\t\t<FilterAsset />\r\n\t\t\t\t</Grid>\r\n\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t<TableContainer component={Paper}>\r\n\t\t\t\t\t\t<Table className={classes.table} aria-label=\"customized table\">\r\n\t\t\t\t\t\t\t<TableHead>\r\n\t\t\t\t\t\t\t<TableRow className={classes.styledTableRow}>\r\n\t\t\t\t\t\t\t\t<TableCell className={classes.tableCellHead}>Model</TableCell>\r\n\t\t\t\t\t\t\t\t<TableCell align=\"right\" className={classes.tableCellHead}>Hostname</TableCell>\r\n\t\t\t\t\t\t\t\t<TableCell align=\"right\" className={classes.tableCellHead}>Datacenter</TableCell>\r\n\t\t\t\t\t\t\t\t<TableCell align=\"right\" className={classes.tableCellHead}>Rack</TableCell>\r\n\t\t\t\t\t\t\t\t<TableCell align=\"right\" className={classes.tableCellHead}>Rack U</TableCell>\r\n\t\t\t\t\t\t\t\t<TableCell align=\"right\" className={classes.tableCellHead}>Owner</TableCell>\r\n\t\t\t\t\t\t\t\t<TableCell align=\"right\" className={classes.tableCellHead}>Asset Number</TableCell>\r\n\t\t\t\t\t\t\t\t<TableCell align=\"right\" className={classes.tableCellHead}></TableCell>\r\n\t\t\t\t\t\t\t</TableRow>\r\n\t\t\t\t\t\t\t</TableHead>\r\n\t\t\t\t\t\t\t<TableBody>\r\n\t\t\t\t\t\t\t{rows.map(row =>\r\n\t\t\t\t\t\t\t\t<TableRow key={row.name}>\r\n\t\t\t\t\t\t\t\t\t<TableCell component=\"th\" scope=\"row\">{row.model}</TableCell>\r\n\t\t\t\t\t\t\t\t\t<TableCell align=\"right\">{row.hostname}</TableCell>\r\n\t\t\t\t\t\t\t\t\t<TableCell align=\"right\">{row.datacenter}</TableCell>\r\n\t\t\t\t\t\t\t\t\t<TableCell align=\"right\">{row.rack}</TableCell>\r\n\t\t\t\t\t\t\t\t\t<TableCell align=\"right\">{row.rackU}</TableCell>\r\n\t\t\t\t\t\t\t\t\t<TableCell align=\"right\">{row.owner}</TableCell>\r\n\t\t\t\t\t\t\t\t\t<TableCell align=\"right\">{row.assetNum}</TableCell>\r\n\t\t\t\t\t\t\t\t\t<TableCell align=\"center\">\r\n\t\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t\t\t\t\t\t\t\tvariant=\"contained\"\r\n\t\t\t\t\t\t\t\t\t\t\tonClick={() => this.setState({ showDetailedView: true })}\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\tMore Details\r\n\t\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t</TableCell>\r\n\t\t\t\t\t\t\t\t</TableRow>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t</TableBody>\r\n\t\t\t\t\t\t</Table>\r\n\t\t\t\t\t</TableContainer>\r\n\t\t\t\t</Grid>\r\n\t\t\t</Grid>\r\n\t\t<DetailAsset\r\n\t\t\topen={this.state.showDetailedView}\r\n\t\t\tclose={this.closeDetailedView}\r\n\t\t\tsearch={this.props.search}\r\n\t\t\t/*disabled={this.props.privilege===Privilege.USER}*/\r\n\t\t/>\r\n\t\t</React.Fragment>\r\n\t);\r\n  }\r\n}\r\n\r\nexport default withStyles(useStyles)(TableAsset);\r\n","export enum RackCommand {\r\n    GET_ALL_RACKS = \"all\",\r\n    CREATE_RACKS = \"create\",\r\n    DELETE_RACKS = \"delete\",\r\n    GET_RACK_DETAILS = \"details\"\r\n}\r\n","import React from 'react';\r\n\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nimport { Privilege } from '../../enums/privilegeTypes.ts'\r\nimport ImpExpAsset from '../helpers/ImpExpAsset';\r\nimport CreateAsset from '../helpers/CreateAsset';\r\nimport StatusDisplay from '../../helpers/StatusDisplay';\r\nimport TableAsset from '../helpers/TableAssets';\r\nimport ErrorBoundary from '../../errors/ErrorBoundry';\r\nimport \"../stylesheets/AssetStyles.css\";\r\n\r\nexport default class AssetsView extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            statusSeverity:'',\r\n            statusMessage:'',\r\n            showStatus:false,\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <ErrorBoundary>\r\n                    <StatusDisplay\r\n                        open={this.state.showStatus}\r\n                        severity={this.state.statusSeverity}\r\n                        closeStatus={this.closeShowStatus}\r\n                        message={this.state.statusMessage}\r\n                    />\r\n                    <Grid container spacing={3}>\r\n                        <Grid item xs={3}>\r\n                            {(this.props.privilege === Privilege.ADMIN) ? <CreateAsset search={this.search} />:null}\r\n                        </Grid>\r\n                        <Grid item xs={6}>\r\n                            {(this.props.privilege === Privilege.ADMIN) ? <ImpExpAsset downloadTable={this.downloadTable} />:null}\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <TableAsset />\r\n                        </Grid>\r\n                    </Grid>\r\n                </ErrorBoundary>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","export enum StatsCommand {\r\n    GENERATE_REPORT = \"generate-report\",\r\n    TEST = \"test\",\r\n}\r\n","import React from 'react';\r\n\r\nimport axios from 'axios';\r\n\r\nimport Select from '@material-ui/core/Select';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport { MenuItem, Button, TextField } from '@material-ui/core';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\n\r\nimport { RackCommand } from \"../enums/RackCommands.ts\";\r\nimport { Privilege } from '../../enums/privilegeTypes.ts';\r\nimport \"../stylesheets/RackStyles.css\";\r\n\r\nimport getURL from '../../helpers/functions/GetURL';\r\nimport * as Constants from '../../Constants';\r\nimport StatusDisplay from '../../helpers/StatusDisplay';\r\n\r\nimport ErrorBoundray from '../../errors/ErrorBoundry';\r\n\r\nconst racksMainPath = 'racks/';\r\n\r\nexport default class RacksView extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            items:[],\r\n            startingRackLetter:'A',\r\n            endingRackLetter:'A',\r\n            startingRackNumber:1,\r\n            endingRackNumber:1,\r\n\r\n            showStatus:false,\r\n            statusMessage:'',\r\n            statusSeverity:'',\r\n\r\n            showConfirmationBox:false,\r\n\r\n            racksList:[],\r\n        };\r\n\r\n        axios.defaults.headers.common['token'] = this.props.token;\r\n        axios.defaults.headers.common['privilege'] = this.props.privilege;\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getAllRacks();\r\n    }\r\n\r\n    getAllRacks = () => {\r\n        axios.get(getURL(racksMainPath, RackCommand.GET_ALL_RACKS)).then(response => {\r\n                if (response.data.message === 'success') {\r\n                    this.setState({ showStatus: true, statusMessage: \"Success\", statusSeverity:\"success\", racksList:response.data.racks })\r\n                } else {\r\n                    this.setState({ showStatus: true, statusMessage: response.data.message, statusSeverity:\"error\" })\r\n                }\r\n            });\r\n    }\r\n\r\n    updateRacks(command) {\r\n        axios.post(\r\n            getURL(racksMainPath, command),\r\n            {\r\n                'start_letter':this.state.startingRackLetter,\r\n                'stop_letter':this.state.endingRackLetter,\r\n                'start_number':this.state.startingRackNumber,\r\n                'stop_number':this.state.endingRackNumber,\r\n            }\r\n            ).then(response => {\r\n                console.log(response);\r\n                if (response.data.message === 'success') {\r\n                    this.setState({ showStatus: true, statusMessage: \"Success\", statusSeverity:\"success\", showConfirmationBox:false });\r\n                    if (command === RackCommand.GET_RACK_DETAILS) {\r\n                        const win = window.open(response.data.link, '_blank');\r\n                        if (win != null) {\r\n                            win.focus();\r\n                        }\r\n                    }\r\n                } else {\r\n                    this.setState({ showStatus: true, statusMessage: response.data.message, statusSeverity:\"error\" })\r\n                }\r\n            });\r\n    }\r\n\r\n    createRacks = () => {\r\n        this.updateRacks(RackCommand.CREATE_RACKS);\r\n    }\r\n\r\n    deleteRacks = () => {\r\n        this.updateRacks(RackCommand.DELETE_RACKS);\r\n    }\r\n\r\n    viewRacks = () => {\r\n        this.updateRacks(RackCommand.GET_RACK_DETAILS);\r\n    }\r\n\r\n    changeStartingLetter = (event) => {\r\n        this.setState({ startingRackLetter: event.target.value })\r\n    }\r\n\r\n    changeEndingLetter = (event) => {\r\n        this.setState({ endingRackLetter: event.target.value })\r\n    }\r\n\r\n    changeStartingNum = (event) => {\r\n        this.setState({ startingRackNumber: event.target.value })\r\n    }\r\n\r\n    changeEndingNum = (event) => {\r\n        this.setState({ endingRackNumber: event.target.value })\r\n    }\r\n\r\n    closeShowStatus = () => {\r\n        this.setState({ showStatus: false })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <ErrorBoundray>\r\n                <Paper elevation={3}>\r\n                <StatusDisplay\r\n                    open={this.state.showStatus}\r\n                    severity={this.state.statusSeverity}\r\n                    closeStatus={this.closeShowStatus}\r\n                    message={this.state.statusMessage}\r\n                />\r\n                <FormControl>\r\n                    <div class=\"select-letter\">\r\n                        <Select id=\"starting-letter-selector\" value={this.state.startingRackLetter} onChange={this.changeStartingLetter}>\r\n                            {Constants.RackX.map(val => (<MenuItem value={val}>{val}</MenuItem>))}\r\n                        </Select>\r\n                        <FormHelperText>Starting Letter</FormHelperText>\r\n                    </div>\r\n                </FormControl>\r\n                <FormControl>\r\n                    <div class=\"select-letter\">\r\n                        <Select id=\"ending-letter-selector\" value={this.state.endingRackLetter} onChange={this.changeEndingLetter}>\r\n                            {Constants.RackX.map(val => (<MenuItem value={val}>{val}</MenuItem>))}\r\n                        </Select>\r\n                        <FormHelperText>Ending Letter</FormHelperText>\r\n                    </div>\r\n                </FormControl>\r\n                <FormControl>\r\n                    <div class=\"select-number\">\r\n                        <TextField\r\n                            id=\"starting-num-selector\"\r\n                            type=\"number\"\r\n                            value={this.state.startingRackNumber}\r\n                            onChange={this.changeStartingNum}\r\n                            InputProps={{ inputProps: { min: 1} }}\r\n                        />\r\n                        <FormHelperText>Starting Number</FormHelperText>\r\n                    </div>\r\n                </FormControl>\r\n                <FormControl>\r\n                    <div class=\"select-number\">\r\n                        <TextField\r\n                            id=\"ending-num-selector\"\r\n                            type=\"number\"\r\n                            value={this.state.endingRackNumber}\r\n                            onChange={this.changeEndingNum}\r\n                            InputProps={{ inputProps: { min: 1} }}\r\n                        />\r\n                        <FormHelperText>Ending Number</FormHelperText>\r\n                    </div>\r\n                </FormControl>\r\n                <div class=\"buttons\">\r\n                    <span class=\"button\">\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        onClick={this.viewRacks}\r\n                        disabled={this.state.showConfirmationBox}\r\n                    >\r\n                        View\r\n                    </Button>\r\n                    </span>\r\n                    <span class=\"button\">\r\n                        {(this.props.privilege === Privilege.ADMIN) ?\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            onClick={this.createRacks}\r\n                            disabled={this.state.showConfirmationBox}\r\n                        >\r\n                            Create\r\n                        </Button> : null}\r\n                    </span>\r\n                    <span class=\"button\">\r\n                        {(this.props.privilege === Privilege.ADMIN) ?\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            onClick={() => this.setState({ showConfirmationBox: true, })}\r\n                            disabled={this.state.showConfirmationBox}\r\n                        >\r\n                            Delete\r\n                        </Button> : null}\r\n                        </span>\r\n                    </div>\r\n                    {this.state.showConfirmationBox ? <div>\r\n                            Are you sure you wish to delete?\r\n                            <Button\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                onClick={this.deleteRacks}\r\n                            >\r\n                                Yes\r\n                            </Button>\r\n                            <Button\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                onClick={() => this.setState({ showConfirmationBox: false, })}\r\n                            >\r\n                                No\r\n                            </Button>\r\n                        </div>:null}\r\n\r\n                    </Paper>\r\n                </ErrorBoundray>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","export default function jsonToArr(incomingJSON) {\r\n    var json = {};\r\n    try {\r\n        json = JSON.parse(incomingJSON);\r\n    } catch (e) {\r\n        json = incomingJSON;\r\n    }\r\n\r\n    if (Object.entries(json).length === 0 && json.constructor === Object) {\r\n        return [];\r\n    }\r\n\r\n    const items = [];\r\n\r\n    Object.keys(json).map((key) => {\r\n        const row = [];\r\n        row.push(key);\r\n        row.push(json[key]);\r\n        items.push(row);\r\n\r\n        return key;\r\n    });\r\n    return items;\r\n}\r\n","import React from 'react';\r\nimport axios from 'axios';\r\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\r\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\r\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport getURL from '../../helpers/functions/GetURL';\r\nimport  Button from '@material-ui/core/Button';\r\nimport { StatsCommand } from \"../enums/StatsCommands.ts\";\r\nimport JSONtoArr from \"../../helpers/functions/JSONtoArr\";\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport StatusDisplay from '../../helpers/StatusDisplay';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport ErrorBoundray from '../../errors/ErrorBoundry';\r\n\r\n\r\nconst statsMainPath = 'stats/';\r\nconst tables = {\r\n    \"totalUsage\":\"Total Usage\",\r\n    \"spaceUsage\": \"Space Usage\",\r\n    \"vendorUsage\": \"Vendor Usage\",\r\n    \"modelUsage\": \"Model Usage\",\r\n    \"ownerUsage\": \"Owner Usage\",\r\n}\r\n\r\nconst tableCols = {\r\n    \"totalUsage\":[\"Total\", \"Usage\"],\r\n    \"spaceUsage\": [\"Rack\", \"Usage\"],\r\n    \"vendorUsage\": [\"Vendor\", \"Usage\"],\r\n    \"modelUsage\": [\"Model\", \"Usage\"],\r\n    \"ownerUsage\": [\"Ownder\", \"Usage\"],\r\n}\r\n\r\nexport default class StatisticsView extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            tableValues: {\r\n                \"totalUsage\":[],\r\n                \"spaceUsage\": [],\r\n                \"vendorUsage\": [],\r\n                \"modelUsage\": [],\r\n                \"ownerUsage\": [],\r\n            },\r\n            totalUsage:[],\r\n            spaceUsage:[],\r\n            vendorUsage:[],\r\n            modelUsage:[],\r\n            ownerUsage:[],\r\n\r\n            showStatus:false,\r\n            statusMessage:'',\r\n            statusSeverity:'',\r\n        };\r\n\r\n        this.closeShowStatus = this.closeShowStatus.bind(this);\r\n        this.generateReport = this.generateReport.bind(this);\r\n\r\n        axios.defaults.headers.common['token'] = this.props.token;\r\n        axios.defaults.headers.common['privilege'] = this.props.privilege;\r\n    }\r\n\r\n    generateReport() {\r\n        axios.get(getURL(statsMainPath, StatsCommand.GENERATE_REPORT)).then(response => {\r\n                try {\r\n                    var data = response.data;\r\n                    var totalUsage = [];\r\n                    var totalUsageRow = [\"Total Usage\"];\r\n                    totalUsageRow.push(data[\"totalUsage\"]);\r\n                    totalUsage.push(totalUsageRow);\r\n\r\n                    var spaceUsage = JSONtoArr(data[\"spaceUsage\"]);\r\n                    if (spaceUsage.length === 0) {\r\n                        spaceUsage.push([\"No space is currently being used\", []])\r\n                    }\r\n                    var vendorUsage = JSONtoArr(data[\"vendorUsage\"]);\r\n                    if (vendorUsage.length === 0) {\r\n                        vendorUsage.push([\"No vendors currently using space\", []])\r\n                    }\r\n                    var modelUsage = JSONtoArr(data[\"modelUsage\"]);\r\n                    if (modelUsage.length === 0) {\r\n                        modelUsage.push([\"No models currently using space\", []])\r\n                    }\r\n                    var ownerUsage = JSONtoArr(data[\"ownerUsage\"]);\r\n                    if (ownerUsage.length === 0) {\r\n                        ownerUsage.push([\"No owners currently using space\", []])\r\n                    }\r\n\r\n                    this.setState({\r\n                        showStatus: true,\r\n                        statusSeverity:\"success\",\r\n                        statusMessage: \"Success\",\r\n                        tableValues: {\r\n                            \"totalUsage\":totalUsage,\r\n                            \"spaceUsage\": spaceUsage,\r\n                            \"vendorUsage\": vendorUsage,\r\n                            \"modelUsage\": modelUsage,\r\n                            \"ownerUsage\": ownerUsage,\r\n                        },\r\n                     })\r\n                } catch {\r\n                    this.setState({ showStatus: true, statusMessage: response.data.message, statusSeverity:\"error\" })\r\n                }\r\n            });\r\n    }\r\n\r\n    closeShowStatus() {\r\n        this.setState({ showStatus: false })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <ErrorBoundray >\r\n                <StatusDisplay\r\n                    open={this.state.showStatus}\r\n                    severity={this.state.statusSeverity}\r\n                    closeStatus={this.closeShowStatus}\r\n                    message={this.state.statusMessage}\r\n                />\r\n                <div>\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        onClick={this.generateReport}\r\n                    >\r\n                        Generate New Report\r\n                    </Button>\r\n                </div>\r\n                {Object.keys(tables).map(key => (\r\n                <ExpansionPanel>\r\n                    <ExpansionPanelSummary\r\n                        expandIcon={<ExpandMoreIcon />}\r\n                    >\r\n                        <Typography>{tables[key]}</Typography>\r\n                    </ExpansionPanelSummary>\r\n                    <ExpansionPanelDetails>\r\n                        <TableContainer component={Paper}>\r\n                            <Table>\r\n                                <TableHead>\r\n                                    <TableRow >\r\n                                        {tableCols[key].map(column => (<TableCell><span id={column}>{column}</span></TableCell>))}\r\n                                    </TableRow>\r\n                                </TableHead>\r\n                                <TableBody>\r\n                                {this.state.tableValues[key].map(row => (\r\n                                    <TableRow>\r\n                                        {row.map(column => (<TableCell><span id={column}>{column + (isNaN(column) ? \"\" : \"%\")}</span></TableCell>))}\r\n                                    </TableRow>\r\n                                ))}\r\n                                </TableBody>\r\n                            </Table>\r\n                        </TableContainer>\r\n                    </ExpansionPanelDetails>\r\n                </ExpansionPanel>\r\n                ))}\r\n                </ErrorBoundray>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\n\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport AccountCircle from '@material-ui/icons/AccountCircle';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\n\r\nimport ModelsView from './models/pages/ModelsView';\r\nimport UsersView from './users/pages/UsersView';\r\nimport AssetsView from './assets/pages/AssetsView';\r\nimport RacksView from './racks/pages/RacksView';\r\nimport StatisticsView from './statistics/pages/StatisticsView';\r\n\r\nimport { Privilege } from './enums/privilegeTypes.ts'\r\n\r\nimport ErrorBoundry from './errors/ErrorBoundry';\r\n\r\nimport '../stylesheets/TabStyles.css';\r\n\r\nconst useStyles = theme => ({\r\n    root: {\r\n      flexGrow: 1,\r\n    },\r\n    menuButton: {\r\n      marginRight: theme.spacing(2),\r\n    },\r\n    title: {\r\n      flexGrow: 1,\r\n    },\r\n    tab:{\r\n        flexGrow:'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        maxWidth: \"100%\",\r\n        width:\"100%\",\r\n        margin:\"0 auto\",\r\n    }\r\n  });\r\n\r\nclass TabViewer extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            currentTabID:0,\r\n            anchorEl: null,\r\n            isMenuOpen:false,\r\n        };\r\n        this.handleChange = this.handleChange.bind(this);\r\n    }\r\n\r\n    handleChange(event, newValue) {\r\n        this.setState({ currentTabID: newValue })\r\n    }\r\n\r\n    handleProfileMenuOpen = (event) => {\r\n        this.setState({ anchorEl: event.currentTarget, isMenuOpen:true });\r\n    }\r\n\r\n    handleMenuClose = () => {\r\n        this.setState({ anchorEl: null, isMenuOpen:false });\r\n    };\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n\r\n        return (\r\n        <div className={classes.root}>\r\n            <ErrorBoundry>\r\n            <AppBar position=\"static\">\r\n                <Toolbar>\r\n                    <Typography variant=\"h6\" className={classes.title}>\r\n                        Hyposoft Server Management\r\n                    </Typography>\r\n                    <div>\r\n                        <IconButton\r\n                            aria-label=\"account of current user\"\r\n                            aria-controls=\"menu-appbar\"\r\n                            aria-haspopup=\"true\"\r\n                            color=\"inherit\"\r\n                            onClick={this.handleProfileMenuOpen}\r\n                        >\r\n                            <AccountCircle />\r\n                        </IconButton>\r\n                        <Menu\r\n                            anchorEl={this.state.anchorEl}\r\n                            anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n                            id='primary-search-account-menu'\r\n                            keepMounted\r\n                            transformOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n                            open={this.state.isMenuOpen}\r\n                            onClose={this.handleMenuClose}\r\n                        >\r\n                            <MenuItem>{\"Username: \" + this.props.username}</MenuItem>\r\n                            <MenuItem>{\"Privilege: \" + this.props.privilege}</MenuItem>\r\n                            <MenuItem onClick={this.props.logout} >LOGOUT</MenuItem>\r\n                        </Menu>\r\n                    </div>\r\n                </Toolbar>\r\n            </AppBar>\r\n\r\n            <Tabs value={this.state.currentTabID} onChange={this.handleChange}\r\n                indicatorColor=\"primary\"\r\n                textColor=\"primary\"\r\n                centered\r\n            >\r\n                    <Tab value={0} style={{flexGrow: 1,}} label=\"Models\"> </Tab>\r\n                    <Tab value={1} style={{flexGrow: 1,}} label=\"Assets\" ></Tab>\r\n                    {(this.props.privilege === Privilege.ADMIN) ? <Tab value={2} style={{flexGrow: 1,}} label=\"Users\"></Tab> : null}\r\n                    <Tab value={3} style={{flexGrow: 1,}} label=\"Racks\" />\r\n                    <Tab value={4} style={{flexGrow: 1,}} label=\"Statistics\" />\r\n            </Tabs>\r\n            <Typography\r\n                component=\"div\"\r\n                role=\"tabpanel\"\r\n                hidden={this.state.currentTabID !== 0}\r\n                id={`simple-tabpanel-0`}\r\n                aria-labelledby={`simple-tab-0`}\r\n            >\r\n                <Container className={classes.tab} ><ModelsView token={this.props.token} privilege={this.props.privilege} /></Container>\r\n            </Typography>\r\n            <Typography\r\n                component=\"div\"\r\n                role=\"tabpanel\"\r\n                hidden={this.state.currentTabID !== 1}\r\n                id={`simple-tabpanel-0`}\r\n                aria-labelledby={`simple-tab-0`}\r\n            >\r\n                <Container className={classes.tab} ><AssetsView token={this.props.token} privilege={this.props.privilege} /></Container>\r\n            </Typography>\r\n            <Typography\r\n                component=\"div\"\r\n                role=\"tabpanel\"\r\n                hidden={this.state.currentTabID !== 2}\r\n                id={`simple-tabpanel-0`}\r\n                aria-labelledby={`simple-tab-0`}\r\n            >\r\n                <Container className={classes.tab} ><UsersView token={this.props.token} privilege={this.props.privilege} /></Container>\r\n            </Typography>\r\n            <Typography\r\n                component=\"div\"\r\n                role=\"tabpanel\"\r\n                hidden={this.state.currentTabID !== 3}\r\n                id={`simple-tabpanel-0`}\r\n                aria-labelledby={`simple-tab-0`}\r\n            >\r\n                <Container className={classes.tab} ><RacksView token={this.props.token} privilege={this.props.privilege} /></Container>\r\n            </Typography>\r\n            <Typography\r\n                component=\"div\"\r\n                role=\"tabpanel\"\r\n                hidden={this.state.currentTabID !== 4}\r\n                id={`simple-tabpanel-0`}\r\n                aria-labelledby={`simple-tab-0`}\r\n            >\r\n                <Container className={classes.tab} ><StatisticsView token={this.props.token} privilege={this.props.privilege} /></Container>\r\n            </Typography>\r\n            </ErrorBoundry>\r\n        </div>);\r\n    }\r\n}\r\n\r\n\r\nexport default withStyles(useStyles)(TabViewer);\r\n","import React from \"react\";\r\nimport Login from \"./Login\";\r\nimport TabViewer from \"./Tabs\";\r\nimport axios from 'axios';\r\nimport getURL from './helpers/functions/GetURL';\r\n\r\nconst storedToken = 'token';\r\nconst storedPrivilege = 'privilege';\r\nconst storedLoggedIn = 'loggedIn';\r\nconst storedUsername = 'username';\r\n\r\nexport default class PageSelector extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      token:sessionStorage.getItem(storedToken) || '',\r\n      privilege:sessionStorage.getItem(storedPrivilege) || '',\r\n      loggedIn:sessionStorage.getItem(storedLoggedIn) || '',\r\n      username:sessionStorage.getItem(storedUsername) || '',\r\n    };\r\n\r\n    this.login = this.login.bind(this);\r\n    this.logout = this.logout.bind(this);\r\n  }\r\n\r\n  login(token, username, privilege) {\r\n    sessionStorage.setItem(storedToken, token);\r\n    sessionStorage.setItem(storedPrivilege, privilege);\r\n    sessionStorage.setItem(storedLoggedIn, true);\r\n    sessionStorage.setItem(storedUsername, username);\r\n\r\n    axios.defaults.headers.common['token'] = this.props.token;\r\n    axios.defaults.headers.common['privilege'] = this.props.privilege;\r\n\r\n    this.setState({\r\n      token:token,\r\n      privilege:privilege,\r\n      loggedIn:true,\r\n      username: username,\r\n    })\r\n  }\r\n\r\n  logout() {\r\n    axios.get(getURL('users/', 'logout'));\r\n\r\n    this.setState({\r\n      token:'',\r\n      privilege:'',\r\n      loggedIn:false,\r\n      username:'',\r\n    });\r\n\r\n    sessionStorage.removeItem(storedToken);\r\n    sessionStorage.removeItem(storedPrivilege);\r\n    sessionStorage.removeItem(storedLoggedIn);\r\n    sessionStorage.removeItem(storedUsername);\r\n\r\n    window.location.reload();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        {this.state.loggedIn ?  <TabViewer token={this.state.token} username={this.state.username} privilege={this.state.privilege} logout={this.logout} /> : <Login loginFunc={this.login} shib={this.props.redirected}/>}\r\n      </div>\r\n    );\r\n  }\r\n\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './stylesheets/index.css';\nimport PageSelector from './javascript/PageSelector';\n\nReactDOM.render(<PageSelector redirected={document.referrer}/>, document.getElementById('root'));\n","module.exports = __webpack_public_path__ + \"static/media/logo.df79d0ea.png\";"],"sourceRoot":""}
