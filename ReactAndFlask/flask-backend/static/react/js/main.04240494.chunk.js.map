{"version":3,"sources":["javascript/Constants.jsx","javascript/helpers/functions/GetURL.jsx","javascript/Login.jsx","javascript/enums/modelCommands.ts","javascript/enums/modelInputs.ts","javascript/helpers/TableView.jsx","javascript/helpers/ButtonMenu.jsx","javascript/helpers/Filters.jsx","javascript/helpers/UploadModal.jsx","javascript/helpers/DetailedView.jsx","javascript/helpers/CreateModal.jsx","javascript/pages/ModelsView.jsx","javascript/enums/userCommands.ts","javascript/enums/userInputs.ts","javascript/pages/UsersView.jsx","javascript/enums/instanceCommands.ts","javascript/enums/instanceInputs.ts","javascript/pages/InstancesView.jsx","javascript/pages/RacksView.jsx","javascript/pages/StatisticsView.jsx","javascript/TabManager.jsx","javascript/PageSelector.jsx","index.jsx"],"names":["serverEndpoint","testModelArray","testUserArray","testInstanceArray","getURL","path","endpoint","Constants","ModelCommand","ModelInput","Login","props","state","username","password","message","submitCredentials","bind","axios","post","this","then","response","data","setState","loginFunc","event","target","value","TextField","id","label","variant","required","ref","onChange","updateUsername","updatePassword","Button","onClick","color","React","Component","TableView","showDetailedView","TableContainer","component","Paper","Table","className","minWidth","aria-label","TableHead","TableRow","columns","map","col","TableCell","TableBody","vals","row","index","keys","key","scope","ButtonMenu","openCreateModal","startIcon","openImportModal","downloadTable","Filters","filters","hasOwnProperty","forceUpdate","search","filter","InputBase","placeholder","inputProps","updateSearchText","UploadModal","Modal","style","top","left","transform","aria-labelledby","aria-describedby","open","showImportModal","onClose","closeImportModal","type","accept","DetailedView","showConfirmationBox","closeDetailedView","inputs","input","updateModelEdited","defaultValue","defaultValues","edit","delete","CreateModal","showCreateModal","closeCreateModal","name","updateModelCreator","createModel","defaults","headers","common","token","privilege","UserCommand","UserInput","ModelsView","items","createdModel","createdVendor","createdModelNum","createdHeight","createdDispClr","createdEthPorts","createdPwrPorts","createdCPU","createdMem","createdStorage","createdComments","deleteVendor","deleteModel","viewVendor","viewModel","searchText","csvData","detailViewLoading","detailedValues","editModel","create","Vendor","ModelNumber","Height","DisplayColor","EthernetPorts","PowerPorts","CPU","Memory","Storage","Comment","console","log","vendor","modelNum","detailView","height","searchModels","csvLink","link","click","filename","r","loading","InstanceCommand","InstanceInput","UsersView","createdUser","deleteUsername","viewUser","createUser","editUser","deleteUser","detailViewUser","searchUsers","updateUserCreator","updateUserEdited","Username","Password","DisplayName","Email","Privilege","email","displayName","InstancesView","createdInstance","deleteInstanceRack","deleteInstanceRackU","viewInstanceRack","viewInstanceRackU","createInstance","editInstance","deleteInstance","detailViewInstance","searchInstances","updateInstanceCreator","updateInstanceEdited","Model","Hostname","Rack","RackU","Owner","rack","rackU","model","hostname","RacksView","StatisticsView","TabPanel","children","other","Typography","role","hidden","Box","p","a11yProps","useStyles","makeStyles","theme","root","flexGrow","backgroundColor","palette","background","paper","tab","button","TabManager","classes","useState","setValue","AppBar","position","Tabs","newValue","Tab","Logout","PageSelector","loggedIn","login","ReactDOM","render","document","getElementById"],"mappings":"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","file":"js/main.04240494.chunk.js","sourcesContent":["/**\r\n * Constants file\r\n */\r\n\r\nexport const localServerEndpoint = 'http://localhost:4010/';\r\nexport const devServerEndpoint = 'https://parseltongue-dev.herokuapp.com/';\r\nexport const prodServerEndpoint = 'https://parseltongue-prod.herokuapp.com/';\r\n\r\nexport const serverEndpoint = devServerEndpoint;\r\n\r\nexport const testModelArray = [\r\n    {\r\n        'vendor':'a',\r\n        'modelNumber':'a',\r\n        'height':'a',\r\n        'displayColor':'a',\r\n        'ethernetPorts':'a',\r\n        'powerPorts':'a',\r\n        'cpu':'a',\r\n        'memory':'a',\r\n        'storage':'a',\r\n        'comments':'a',\r\n    },{\r\n        'vendor':'b',\r\n        'modelNumber':'b',\r\n        'height':'b',\r\n        'displayColor':'b',\r\n        'ethernetPorts':'b',\r\n        'powerPorts':'b',\r\n        'cpu':'b',\r\n        'memory':'b',\r\n        'storage':'b',\r\n        'comments':'b',\r\n    },{\r\n        'vendor':'c',\r\n        'modelNumber':'c',\r\n        'height':'c',\r\n        'displayColor':'c',\r\n        'ethernetPorts':'c',\r\n        'powerPorts':'c',\r\n        'cpu':'c',\r\n        'memory':'c',\r\n        'storage':'c',\r\n        'comments':'c',\r\n    },\r\n];\r\n\r\nexport const testUserArray = [\r\n    {\r\n        'username':'a',\r\n        'password':'a',\r\n        'displayName':'a',\r\n        'email':'a',\r\n        'privilege':'a',\r\n    },{\r\n        'username':'b',\r\n        'password':'b',\r\n        'displayName':'b',\r\n        'email':'b',\r\n        'privilege':'b',\r\n    },{\r\n        'username':'c',\r\n        'password':'c',\r\n        'displayName':'c',\r\n        'email':'c',\r\n        'privilege':'c',\r\n    },\r\n];\r\n\r\nexport const testInstanceArray = [\r\n    {\r\n        'model':'a',\r\n        'hostname':'a',\r\n        'rack':'a',\r\n        'rackU':'a',\r\n        'owner':'a',\r\n        'comment':'a',\r\n    },{\r\n        'model':'b',\r\n        'hostname':'b',\r\n        'rack':'b',\r\n        'rackU':'b',\r\n        'owner':'b',\r\n        'comment':'b',\r\n    },{\r\n        'model':'c',\r\n        'hostname':'c',\r\n        'rack':'c',\r\n        'rackU':'c',\r\n        'owner':'c',\r\n        'comment':'c',\r\n    },\r\n];\r\n","import * as Constants from '../../Constants';\r\n\r\nexport default function getURL(path, endpoint) {\r\n    return Constants.serverEndpoint + path + endpoint;\r\n}\r\n","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport axios from 'axios';\r\nimport getURL from './helpers/functions/GetURL';\r\nimport * as Constants from './Constants';\r\n\r\nconst loginMainPath = 'users/';\r\n\r\nexport default class Login extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            username:'',\r\n            password:'',\r\n            message:'',\r\n        };\r\n\r\n        this.submitCredentials = this.submitCredentials.bind(this);\r\n    }\r\n\r\n    submitCredentials() {\r\n        axios.post(\r\n            getURL(loginMainPath, 'authenticate'),\r\n            {\r\n                \"username\":this.state.username,\r\n                \"password\":this.state.password,\r\n            }\r\n            ).then(response => {\r\n                var valid = response.data['message'];\r\n                if (valid == 'success') {\r\n                    this.setState({ message: '' });\r\n                    this.props.loginFunc(response.data['token'], response.data['privilege']);\r\n                } else {\r\n                    this.setState({ message:response.data['message'] });\r\n                }\r\n            });\r\n        //this.props.loginFunc('token', 'privilege');\r\n    }\r\n\r\n    updateUsername(event) {\r\n        this.setState({ username: event.target.value })\r\n    }\r\n\r\n    updatePassword(event) {\r\n        this.setState({ password: event.target.value })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.state.message}\r\n                <TextField\r\n                    id=\"outlined-basic\"\r\n                    label=\"Username\"\r\n                    variant=\"outlined\"\r\n                    required=\"true\"\r\n                    ref='username'\r\n                    onChange={this.updateUsername.bind(this)}\r\n                />\r\n                <TextField\r\n                    id=\"outlined-basic\"\r\n                    label=\"Password\"\r\n                    variant=\"outlined\"\r\n                    required=\"true\"\r\n                    ref='password'\r\n                    onChange={this.updatePassword.bind(this)}\r\n                />\r\n                <Button\r\n                    onClick={this.submitCredentials}\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                >\r\n                    Sign In\r\n                </Button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","export enum ModelCommand {\r\n    create = 'create/',\r\n    delete = 'delete/',\r\n    edit = 'edit/',\r\n    view = 'view/',\r\n    detailView = 'detailView/',\r\n    search = 'search/',\r\n}\r\n","export enum ModelInput {\r\n    Vendor = 'vendor',\r\n    ModelNumber = 'modelNumber',\r\n    Height = 'height',\r\n    DisplayColor = 'displayColor',\r\n    EthernetPorts = 'ethernetPorts',\r\n    PowerPorts = 'powerPorts',\r\n    CPU = 'cpu',\r\n    Memory = 'memory',\r\n    Storage = 'storage',\r\n    Comment = 'comments'\r\n}\r\n","import React from 'react';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nexport default class TableView extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n\r\n    };\r\n  }\r\n\r\n  showDetailedView(event) {\r\n    this.props.showDetailedView(event.target.id);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <TableContainer component={Paper}>\r\n          <Table className={{minWidth: 650}} aria-label=\"simple table\">\r\n            <TableHead>\r\n              <TableRow >\r\n                {this.props.columns.map(col => (<TableCell><span id={col}>{col}</span></TableCell>))}\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {this.props.vals.map((row, index)=> (\r\n              <TableRow>\r\n                {this.props.keys.map(key => (<TableCell scope=\"row\"><span id={index} onClick={this.showDetailedView.bind(this)}>{row[key]}</span></TableCell>))}\r\n              </TableRow>\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\r\nimport CloudDownloadIcon from '@material-ui/icons/CloudDownload';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nexport default class ButtonMenu extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n\r\n        };\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div>\r\n                <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    onClick={this.props.openCreateModal}\r\n                >\r\n                    Create\r\n                </Button>\r\n                <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    startIcon={<CloudUploadIcon />}\r\n                    onClick={this.props.openImportModal}\r\n                >\r\n                    Import\r\n                </Button>\r\n                <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    startIcon={<CloudDownloadIcon />}\r\n                    onClick={this.props.downloadTable}\r\n                >\r\n                    Export\r\n                </Button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nexport default class Filters extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            filters:{},\r\n        };\r\n    }\r\n\r\n    updateSearchText(event) {\r\n        if (this.state.filters.hasOwnProperty(event.target.id)) {\r\n            this.state.filters[event.target.id] = event.target.value;\r\n            this.forceUpdate();\r\n        } else {\r\n            var value = (event.target.value == null) ? '' : event.target.value;\r\n            this.state.filters[event.target.id] = event.target.value;\r\n            //this.state.filters.push({ key:event.target.id, value: value});\r\n            this.forceUpdate();\r\n        }\r\n    }\r\n\r\n    search() {\r\n        this.props.search(this.state.filters);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.props.filters.map((filter, index) => (\r\n                    <div>\r\n                        <SearchIcon />\r\n                        <InputBase\r\n                            placeholder={filter+\" filter\"}\r\n                            inputProps={{ 'aria-label': 'search' }}\r\n                            onChange={this.updateSearchText.bind(this)}\r\n                            id={filter}\r\n                        />\r\n                    </div>\r\n                ))\r\n                }\r\n                <div>\r\n                    <Button\r\n                        onClick={this.search.bind(this)}\r\n                    >\r\n                        Search\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Modal from '@material-ui/core/Modal';\r\n\r\nexport default class UploadModal extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n\r\n        };\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Modal\r\n                style={{top: `50%`,left: `50%`,transform: `translate(-50%, -50%)`,}}\r\n                aria-labelledby=\"simple-modal-title\"\r\n                aria-describedby=\"simple-modal-description\"\r\n                open={this.props.showImportModal}\r\n                onClose={this.props.closeImportModal}\r\n            >\r\n                <div>\r\n                    <input type='file' accept=\".csv\" />\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                    >\r\n                        Upload\r\n                    </Button>\r\n                </div>\r\n            </Modal>\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from '@material-ui/core/Button';\r\n\r\nexport default class DetailedView extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            showConfirmationBox:false,\r\n        };\r\n    }\r\n\r\n    closeModal() {\r\n        this.setState({showConfirmationBox:false,});\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n        <div>\r\n            <Modal\r\n                style={{top: `50%`,left: `50%`,transform: `translate(-50%, -50%)`,}}\r\n                aria-labelledby=\"simple-modal-title\"\r\n                aria-describedby=\"simple-modal-description\"\r\n                open={this.props.showDetailedView}\r\n                onClose={this.props.closeDetailedView}\r\n            >\r\n                <div>\r\n                    {this.props.inputs.map(input => (\r\n                        <TextField id=\"standard-basic\" label={input} onChange={this.props.updateModelEdited} defaultValue={this.props.defaultValues[input]}/>\r\n                    ))}\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        onClick={this.props.edit}\r\n                    >\r\n                        Save\r\n                    </Button>\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        onClick={this.props.delete}\r\n                    >\r\n                        Delete\r\n                    </Button>\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        onClick={this.props.closeDetailedView}\r\n                    >\r\n                        Close\r\n                    </Button>\r\n                </div>\r\n            </Modal>\r\n        </div>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from '@material-ui/core/Button';\r\n\r\nexport default class CreateModal extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n\r\n        };\r\n    }\r\n\r\n    render() {\r\n        return (\r\n        <div>\r\n            <Modal\r\n                style={{top: `50%`,left: `50%`,transform: `translate(-50%, -50%)`,}}\r\n                aria-labelledby=\"simple-modal-title\"\r\n                aria-describedby=\"simple-modal-description\"\r\n                open={this.props.showCreateModal}\r\n                onClose={this.props.closeCreateModal}\r\n            >\r\n                <div>\r\n                    {this.props.inputs.map(input => (\r\n                        <TextField id=\"standard-basic\" label={input} name={input} onChange={this.props.updateModelCreator}/>\r\n                    ))}\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        onClick={this.props.createModel}\r\n                    >\r\n                        Create\r\n                    </Button>\r\n                </div>\r\n            </Modal>\r\n        </div>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\nimport axios from 'axios';\r\nimport { ModelCommand } from '../enums/modelCommands.ts'\r\nimport { ModelInput } from '../enums/modelInputs.ts'\r\nimport TableView from '../helpers/TableView';\r\nimport { CSVLink } from \"react-csv\";\r\nimport ButtonMenu from '../helpers/ButtonMenu';\r\nimport Filters from '../helpers/Filters';\r\nimport UploadModal from '../helpers/UploadModal';\r\nimport getURL from '../helpers/functions/GetURL';\r\nimport DetailedView from '../helpers/DetailedView';\r\nimport CreateModal from '../helpers/CreateModal';\r\nimport * as Constants from '../Constants';\r\n\r\nconst inputs = [\r\n    'vendor',\r\n    'modelNumber',\r\n    'height',\r\n    'displayColor',\r\n    'ethernetPorts',\r\n    'powerPorts',\r\n    'cpu',\r\n    'memory',\r\n    'storage',\r\n    'comments',\r\n]\r\n\r\nconst columns = [\r\n    'vendor',\r\n    'modelNumber',\r\n    'height',\r\n]\r\n\r\nconst modelsMainPath = 'models/';\r\nconst modelDownloadFileName = 'models.csv';\r\n\r\naxios.defaults.headers.common['token'] = this.props.token;\r\naxios.defaults.headers.common['privilege'] = this.props.privilege;\r\n\r\nexport default class ModelsView extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n\r\n            // modals\r\n            showCreateModal:false,\r\n            showImportModal:false,\r\n\r\n            // table items\r\n            items:[], //Constants.testModelArray,\r\n\r\n            // vals for creating a new model\r\n            createdModel : {\r\n                'vendor':'',\r\n                'modelNumber':'',\r\n                'height':'',\r\n                'displayColor':'',\r\n                'ethernetPorts':'',\r\n                'powerPorts':'',\r\n                'cpu':'',\r\n                'memory':'',\r\n                'storage':'',\r\n                'comments':'',\r\n            },\r\n            createdVendor:'',\r\n            createdModelNum:'',\r\n            createdHeight:'',\r\n            createdDispClr:'',\r\n            createdEthPorts:'',\r\n            createdPwrPorts:'',\r\n            createdCPU:'',\r\n            createdMem:'',\r\n            createdStorage:'',\r\n            createdComments:'',\r\n\r\n            // vals for deleting a model\r\n            deleteVendor:'',\r\n            deleteModel:'',\r\n\r\n            // vals for viewing a model\r\n            viewVendor:'',\r\n            viewModel:'',\r\n\r\n            // searching a model\r\n            searchText:\"\",\r\n\r\n            // csv data\r\n            csvData:[],\r\n\r\n            // detailed view\r\n            showDetailedView: false,\r\n            detailViewLoading:false,\r\n            detailedValues : {\r\n                'vendor':'',\r\n                'modelNumber':'',\r\n                'height':'',\r\n                'displayColor':'',\r\n                'ethernetPorts':'',\r\n                'powerPorts':'',\r\n                'cpu':'',\r\n                'memory':'',\r\n                'storage':'',\r\n                'comments':'',\r\n            },\r\n        };\r\n\r\n        this.openCreateModal = this.openCreateModal.bind(this);\r\n        this.openImportModal = this.openImportModal.bind(this);\r\n        this.downloadTable = this.downloadTable.bind(this);\r\n        this.updateSearchText = this.updateSearchText.bind(this);\r\n        this.search = this.search.bind(this);\r\n        this.closeImportModal = this.closeImportModal.bind(this);\r\n        this.closeCreateModal = this.closeCreateModal.bind(this);\r\n        this.showDetailedView = this.showDetailedView.bind(this);\r\n        this.editModel = this.editModel.bind(this);\r\n        this.closeDetailedView = this.closeDetailedView.bind(this);\r\n        this.updateModelEdited = this.updateModelEdited.bind(this);\r\n        this.closeCreateModal = this.closeCreateModal.bind(this);\r\n        this.createModel = this.createModel.bind(this);\r\n        this.updateModelCreator = this.updateModelCreator.bind(this);\r\n        this.deleteModel = this.deleteModel.bind(this);\r\n    }\r\n\r\n    createModel() {\r\n        axios.post(\r\n            getURL(modelsMainPath, ModelCommand.create),\r\n            {\r\n                'vendor':this.state.createdModel[ModelInput.Vendor],\r\n                'modelNumber':this.state.createdModel[ModelInput.ModelNumber],\r\n                'height':this.state.createdModel[ModelInput.Height],\r\n                'displayColor':this.state.createdModel[ModelInput.DisplayColor],\r\n                'ethernetPorts':this.state.createdModel[ModelInput.EthernetPorts],\r\n                'powerPorts':this.state.createdModel[ModelInput.PowerPorts],\r\n                'cpu':this.state.createdModel[ModelInput.CPU],\r\n                'memory':this.state.createdModel[ModelInput.Memory],\r\n                'storage':this.state.createdModel[ModelInput.Storage],\r\n                'comments':this.state.createdModel[ModelInput.Comment],\r\n            }\r\n            ).then(response => console.log(response));\r\n\r\n        this.setState({\r\n            createdModel : {\r\n                'vendor':'',\r\n                'modelNumber':'',\r\n                'height':'',\r\n                'displayColor':'',\r\n                'ethernetPorts':'',\r\n                'powerPorts':'',\r\n                'cpu':'',\r\n                'memory':'',\r\n                'storage':'',\r\n                'comments':'',\r\n            },\r\n            showCreateModal:false,\r\n        });\r\n    }\r\n\r\n    editModel() {\r\n        axios.post(\r\n            getURL(modelsMainPath, ModelCommand.edit),\r\n            {\r\n                'vendor':this.state.detailedValues[ModelInput.Vendor],\r\n                'modelNumber':this.state.detailedValues[ModelInput.ModelNumber],\r\n                'height':this.state.detailedValues[ModelInput.Height],\r\n                'displayColor':this.state.detailedValues[ModelInput.DisplayColor],\r\n                'ethernetPorts':this.state.detailedValues[ModelInput.EthernetPorts],\r\n                'powerPorts':this.state.detailedValues[ModelInput.PowerPorts],\r\n                'cpu':this.state.detailedValues[ModelInput.CPU],\r\n                'memory':this.state.detailedValues[ModelInput.Memory],\r\n                'storage':this.state.detailedValues[ModelInput.Storage],\r\n                'comments':this.state.detailedValues[ModelInput.Comment],\r\n            }\r\n            ).then(response => console.log(response) );\r\n\r\n        this.setState({\r\n            detailedValues : {\r\n                'vendor':'',\r\n                'modelNumber':'',\r\n                'height':'',\r\n                'displayColor':'',\r\n                'ethernetPorts':'',\r\n                'powerPorts':'',\r\n                'cpu':'',\r\n                'memory':'',\r\n                'storage':'',\r\n                'comments':'',\r\n            },\r\n            showDetailedView:false\r\n        });\r\n    }\r\n\r\n\r\n    deleteModel() {\r\n        axios.post(\r\n            getURL(modelsMainPath, ModelCommand.delete),\r\n            {\r\n                'vendor':this.state.detailedValues[ModelInput.Vendor],\r\n                'modelNumber':this.state.detailedValues[ModelInput.ModelNumber],\r\n            }\r\n            ).then(response => console.log(response));\r\n\r\n        this.setState({\r\n            detailedValues : {\r\n                'vendor':'',\r\n                'modelNumber':'',\r\n                'height':'',\r\n                'displayColor':'',\r\n                'ethernetPorts':'',\r\n                'powerPorts':'',\r\n                'cpu':'',\r\n                'memory':'',\r\n                'storage':'',\r\n                'comments':'',\r\n            },\r\n            showDetailedView:false\r\n        });\r\n    }\r\n\r\n    detailViewModel(vendor, modelNum) {\r\n        axios.post(\r\n            getURL(modelsMainPath, ModelCommand.detailView),\r\n            {\r\n                'vendor':vendor,\r\n                'modelNumber':modelNum,\r\n            }, this.props.headers\r\n            ).then(response => this.setState({ detailedValues: response.data['models'][0], detailViewLoading:false}));\r\n\r\n        this.setState({\r\n            viewVendor:'',\r\n            viewModel:'',\r\n        });\r\n    }\r\n\r\n    searchModels(vendor, modelNum, height) {\r\n        axios.post(\r\n            getURL(modelsMainPath, ModelCommand.search),\r\n            {\r\n                'vendor':vendor,\r\n                'modelNumber':modelNum,\r\n                'height':height,\r\n            }\r\n            ).then(response => this.setState({ items: response.data['models'] }));\r\n\r\n        this.setState({\r\n            searchText:'',\r\n        });\r\n    }\r\n\r\n    search(filters) {\r\n        this.searchModels(filters['vendor'], filters['modelNumber'], filters['height']);\r\n    }\r\n\r\n    downloadTable() {\r\n        this.csvLink.link.click();\r\n    }\r\n\r\n    openCreateModal() {\r\n        this.setState({showCreateModal: true});\r\n    }\r\n\r\n    openImportModal() {\r\n        this.setState({showImportModal: true});\r\n    }\r\n\r\n    showDetailedView(id) {\r\n        this.setState({\r\n            showDetailedView: true,\r\n            detailViewLoading:true,\r\n         });\r\n\r\n        var vendor = this.state.items[id]['vendor'];\r\n        var modelNum = this.state.items[id]['modelNumber'];\r\n\r\n        //this.detailViewModel(vendor, modelNum);\r\n        this.setState({ detailedValues: Constants.testModelArray[id], detailViewLoading:false})\r\n    }\r\n\r\n    closeCreateModal() {\r\n        this.setState({showCreateModal: false});\r\n    }\r\n\r\n    closeImportModal() {\r\n        this.setState({showImportModal: false});\r\n    }\r\n\r\n    closeDetailedView() {\r\n        this.setState({ showDetailedView: false })\r\n    }\r\n\r\n    updateModelCreator(event) {\r\n        this.state.createdModel[event.target.name] = event.target.value;\r\n        this.forceUpdate()\r\n    }\r\n\r\n    updateModelEdited(event) {\r\n        this.state.detailedValues[event.target.label] = event.target.value;\r\n        this.forceUpdate()\r\n    }\r\n\r\n    updateSearchText(event) {\r\n        this.setState({ searchText: event.target.value})\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <ButtonMenu\r\n                    openCreateModal={this.openCreateModal}\r\n                    openImportModal={this.openImportModal}\r\n                    downloadTable={this.downloadTable}\r\n                />\r\n                <CSVLink\r\n                    data={this.state.csvData}\r\n                    filename={modelDownloadFileName}\r\n                    className=\"hidden\"\r\n                    ref={(r) => this.csvLink = r}\r\n                    target=\"_blank\"\r\n                />\r\n                <CreateModal\r\n                    showCreateModal={this.state.showCreateModal}\r\n                    closeCreateModal={this.closeCreateModal}\r\n                    createModel={this.createModel}\r\n                    updateModelCreator={this.updateModelCreator}\r\n                    inputs={inputs}\r\n                />\r\n                <UploadModal\r\n                    showImportModal={this.state.showImportModal}\r\n                    closeImportModal={this.closeImportModal}\r\n                />\r\n                <Filters\r\n                    updateSearchText={this.updateSearchText}\r\n                    search={this.search}\r\n                    filters={columns}\r\n                />\r\n                <TableView\r\n                    columns={columns}\r\n                    vals={this.state.items}\r\n                    keys={columns}\r\n                    showDetailedView={this.showDetailedView}\r\n                    filters={columns}\r\n                />\r\n                <DetailedView\r\n                    showDetailedView={this.state.showDetailedView}\r\n                    closeDetailedView={this.closeDetailedView}\r\n                    inputs={inputs}\r\n                    updateModelEdited={this.updateModelEdited}\r\n                    defaultValues={this.state.detailedValues}\r\n                    loading={this.state.detailViewLoading}\r\n                    edit={this.editModel}\r\n                    delete={this.deleteModel}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","export enum UserCommand {\r\n    create = 'create/',\r\n    delete = 'delete/',\r\n    edit = 'edit/',\r\n    view = 'view/',\r\n    detailView = 'detailView/',\r\n    search='search/',\r\n}\r\n","export enum UserInput {\r\n    Username='username',\r\n    Password='password',\r\n    Email='email',\r\n    DisplayName='displayName',\r\n    Privilege='privilege',\r\n}\r\n","import React from 'react';\r\nimport axios from 'axios';\r\nimport { UserCommand } from '../enums/userCommands.ts'\r\nimport { UserInput } from '../enums/userInputs.ts'\r\nimport TableView from '../helpers/TableView';\r\nimport { CSVLink } from \"react-csv\";\r\nimport ButtonMenu from '../helpers/ButtonMenu';\r\nimport Filters from '../helpers/Filters';\r\nimport UploadModal from '../helpers/UploadModal';\r\nimport getURL from '../helpers/functions/GetURL';\r\nimport DetailedView from '../helpers/DetailedView';\r\nimport CreateModal from '../helpers/CreateModal';\r\nimport * as Constants from '../Constants';\r\n\r\n\r\n\r\nconst inputs = [\r\n    'username',\r\n    'email',\r\n    'displayName',\r\n    'privilege',\r\n    'password',\r\n]\r\n\r\nconst columns = [\r\n    'username',\r\n    'email',\r\n    'displayName',\r\n    'privilege',\r\n]\r\n\r\nconst usersMainPath = 'users/';\r\nconst userDownloadFileName = 'users.csv';\r\n\r\naxios.defaults.headers.common['token'] = this.props.token;\r\naxios.defaults.headers.common['privilege'] = this.props.privilege;\r\n\r\nexport default class UsersView extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n\r\n            // modals\r\n            showCreateModal:false,\r\n            showImportModal:false,\r\n\r\n            // table items\r\n            items:[], //Constants.testUserArray,\r\n\r\n            // vals for creating a new user\r\n            createdUser : {\r\n                'username':'',\r\n                'password':'',\r\n                'displayName':'',\r\n                'email':'',\r\n                'privilege':'',\r\n            },\r\n\r\n            // vals for deleting a user\r\n            deleteUsername:'',\r\n\r\n            // vals for viewing a user\r\n            viewUser:'',\r\n\r\n            // csv data\r\n            csvData:[],\r\n\r\n            // detailed view\r\n            showDetailedView: false,\r\n            detailViewLoading:false,\r\n            detailedValues : {\r\n                'username':'',\r\n                'displayName':'',\r\n                'email':'',\r\n                'privilege':'',\r\n            },\r\n        };\r\n\r\n        this.createUser = this.createUser.bind(this);\r\n        this.editUser = this.editUser.bind(this);\r\n        this.deleteUser = this.deleteUser.bind(this);\r\n        this.detailViewUser = this.detailViewUser.bind(this);\r\n        this.searchUsers = this.searchUsers.bind(this);\r\n        this.search = this.search.bind(this);\r\n        this.openCreateModal = this.openCreateModal.bind(this);\r\n        this.openImportModal = this.openImportModal.bind(this);\r\n        this.showDetailedView = this.showDetailedView.bind(this);\r\n        this.closeCreateModal = this.closeCreateModal.bind(this);\r\n        this.closeImportModal = this.closeImportModal.bind(this);\r\n        this.closeDetailedView = this.closeDetailedView.bind(this);\r\n        this.updateUserCreator = this.updateUserCreator.bind(this);\r\n        this.updateUserEdited = this.updateUserEdited.bind(this)\r\n\r\n    }\r\n\r\n    createUser() {\r\n        axios.post(\r\n            getURL(usersMainPath, UserCommand.create),\r\n            {\r\n                'username':this.state.createdUser[UserInput.Username],\r\n                'password':this.state.createdUser[UserInput.Password],\r\n                'displayName':this.state.createdUser[UserInput.DisplayName],\r\n                'email':this.state.createdUser[UserInput.Email],\r\n                'privilege':this.state.createdUser[UserInput.Privilege],\r\n            }\r\n            ).then(response => console.log(response));\r\n\r\n        this.setState({\r\n            createdUser : {\r\n                'username':'',\r\n                'password':'',\r\n                'displayName':'',\r\n                'email':'',\r\n                'privilege':'',\r\n            },\r\n            showCreateModal:false,\r\n        });\r\n    }\r\n\r\n    editUser() {\r\n        axios.post(\r\n            getURL(usersMainPath, UserCommand.edit),\r\n            {\r\n                'username':this.state.detailedValues[UserInput.Username],\r\n                'displayName':this.state.detailedValues[UserInput.DisplayName],\r\n                'email':this.state.detailedValues[UserInput.Email],\r\n                'privilege':this.state.detailedValues[UserInput.Privilege],\r\n            }\r\n            ).then(response => console.log(response));\r\n\r\n        this.setState({\r\n            detailedValues : {\r\n                'username':'',\r\n                'displayName':'',\r\n                'email':'',\r\n                'privilege':'',\r\n            },\r\n            showDetailedView:false,\r\n        });\r\n    }\r\n\r\n\r\n    deleteUser() {\r\n        axios.post(\r\n            getURL(usersMainPath, UserCommand.delete),\r\n            {\r\n                'username':this.state.deleteUsername,\r\n            }\r\n            ).then(response => console.log(response));\r\n\r\n        this.setState({\r\n            deleteUsername:'',\r\n            showDetailedView:false\r\n        });\r\n    }\r\n\r\n    detailViewUser(username) {\r\n        axios.post(\r\n            getURL(usersMainPath, UserCommand.detailView),\r\n            {\r\n                'username':username,\r\n            }\r\n            ).then(response => this.setState({ detailedValues: response.data['users'][0], detailViewLoading:false}));\r\n\r\n        this.setState({\r\n            viewUser:'',\r\n        });\r\n    }\r\n\r\n    searchUsers(username, email, displayName, privilege) {\r\n        axios.post(\r\n            getURL(usersMainPath, UserCommand.search),\r\n            {\r\n                'username':username,\r\n                'email':email,\r\n                'displayName':displayName,\r\n                'privilege':privilege,\r\n            }\r\n            ).then(response => this.setState({ items: response.data['users'] }));\r\n    }\r\n\r\n    search(filters) {\r\n        this.searchUsers(filters['username'], filters['email'], filters['displayName'], filters['privilege']);\r\n    }\r\n\r\n    downloadTable() {\r\n        this.csvLink.link.click();\r\n    }\r\n\r\n    openCreateModal() {\r\n        this.setState({showCreateModal: true});\r\n    }\r\n\r\n    openImportModal() {\r\n        this.setState({showImportModal: true});\r\n    }\r\n\r\n    showDetailedView(id) {\r\n        this.setState({\r\n            showDetailedView: true,\r\n            detailViewLoading:true,\r\n         });\r\n\r\n        var username = this.state.items[id]['username'];\r\n        var email = this.state.items[id]['email'];\r\n        var displayName = this.state.items[id]['displayName'];\r\n        var privilege = this.state.items[id]['privilege'];\r\n\r\n        //this.detailViewUser(username, email, displayName, privilege);\r\n        this.setState({ detailedValues: Constants.testUserArray[id], detailViewLoading:false})\r\n    }\r\n\r\n    closeCreateModal() {\r\n        this.setState({showCreateModal: false});\r\n    }\r\n\r\n    closeImportModal() {\r\n        this.setState({showImportModal: false});\r\n    }\r\n\r\n    closeDetailedView() {\r\n        this.setState({ showDetailedView: false })\r\n    }\r\n\r\n    updateUserCreator(event) {\r\n        this.state.createdUser[event.target.label] = event.target.value;\r\n        this.forceUpdate()\r\n    }\r\n\r\n    updateUserEdited(event) {\r\n        this.state.detailedValues[event.target.label] = event.target.value;\r\n        this.forceUpdate()\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <ButtonMenu\r\n                    openCreateModal={this.openCreateModal}\r\n                    openImportModal={this.openImportModal}\r\n                    downloadTable={this.downloadTable}\r\n                />\r\n                <CSVLink\r\n                    data={this.state.csvData}\r\n                    filename={userDownloadFileName}\r\n                    className=\"hidden\"\r\n                    ref={(r) => this.csvLink = r}\r\n                    target=\"_blank\"\r\n                />\r\n                <CreateModal\r\n                    showCreateModal={this.state.showCreateModal}\r\n                    closeCreateModal={this.closeCreateModal}\r\n                    createModel={this.createUser}\r\n                    updateModelCreator={this.updateUserCreator}\r\n                    inputs={inputs}\r\n                />\r\n                <UploadModal\r\n                    showImportModal={this.state.showImportModal}\r\n                    closeImportModal={this.closeImportModal}\r\n                />\r\n                <Filters\r\n                    updateSearchText={this.updateSearchText}\r\n                    search={this.search}\r\n                    filters={columns}\r\n                />\r\n                <TableView\r\n                    columns={columns}\r\n                    vals={this.state.items}\r\n                    keys={columns}\r\n                    showDetailedView={this.showDetailedView}\r\n                    filters={columns}\r\n                />\r\n                <DetailedView\r\n                    showDetailedView={this.state.showDetailedView}\r\n                    closeDetailedView={this.closeDetailedView}\r\n                    inputs={inputs}\r\n                    updateModelEdited={this.updateUserEdited}\r\n                    defaultValues={this.state.detailedValues}\r\n                    loading={this.state.detailViewLoading}\r\n                    edit={this.editUser}\r\n                    delete={this.deleteUser}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","export enum InstanceCommand {\r\n    create = 'create/',\r\n    delete = 'delete/',\r\n    edit = 'edit/',\r\n    view = 'view/',\r\n    detailView = 'detailView/',\r\n    search = 'search/'\r\n}\r\n","export enum InstanceInput {\r\n    Model = 'model',\r\n    Hostname = 'hostname',\r\n    Rack = 'rack',\r\n    RackU = 'rackU',\r\n    Owner = 'owner',\r\n    Comment = 'comment',\r\n}\r\n","import React from 'react';\r\nimport axios from 'axios';\r\nimport { InstanceCommand } from '../enums/instanceCommands.ts'\r\nimport { InstanceInput } from '../enums/instanceInputs.ts'\r\nimport TableView from '../helpers/TableView';\r\nimport { CSVLink } from \"react-csv\";\r\nimport ButtonMenu from '../helpers/ButtonMenu';\r\nimport Filters from '../helpers/Filters';\r\nimport UploadModal from '../helpers/UploadModal';\r\nimport getURL from '../helpers/functions/GetURL';\r\nimport DetailedView from '../helpers/DetailedView';\r\nimport CreateModal from '../helpers/CreateModal';\r\nimport * as Constants from '../Constants';\r\n\r\nconst inputs = [\r\n    'model',\r\n    'hostname',\r\n    'rack',\r\n    'rackU',\r\n    'owner',\r\n    'comment',\r\n]\r\n\r\nconst columns = [\r\n    'model',\r\n    'hostname',\r\n    'rack',\r\n    'rackU',\r\n]\r\n\r\nconst instancesMainPath = 'instances/';\r\nconst instanceDownloadFileName = 'instances.csv';\r\n\r\naxios.defaults.headers.common['token'] = this.props.token;\r\naxios.defaults.headers.common['privilege'] = this.props.privilege;\r\n\r\nexport default class InstancesView extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n\r\n            // modals\r\n            showCreateModal:false,\r\n            showImportModal:false,\r\n\r\n            // table items\r\n            items:[], //Constants.testInstanceArray,\r\n\r\n            // vals for creating a new instance\r\n            createdInstance : {\r\n                'model':'',\r\n                'hostname':'',\r\n                'rack':'',\r\n                'rackU':'',\r\n                'owner':'',\r\n                'comment':'',\r\n            },\r\n\r\n            // vals for deleting an instance\r\n            deleteInstanceRack:'',\r\n            deleteInstanceRackU:'',\r\n\r\n            // vals for viewing an instance\r\n            viewInstanceRack:'',\r\n            viewInstanceRackU:'',\r\n\r\n            // csv data\r\n            csvData:[],\r\n\r\n            // detailed view\r\n            showDetailedView: false,\r\n            detailViewLoading:false,\r\n            detailedValues : {\r\n                'model':'',\r\n                'hostname':'',\r\n                'rack':'',\r\n                'rackU':'',\r\n                'owner':'',\r\n                'comment':'',\r\n            },\r\n        };\r\n\r\n        this.createInstance = this.createInstance.bind(this);\r\n        this.editInstance = this.editInstance.bind(this);\r\n        this.deleteInstance = this.deleteInstance.bind(this);\r\n        this.detailViewInstance = this.detailViewInstance.bind(this);\r\n        this.searchInstances = this.searchInstances.bind(this);\r\n        this.search = this.search.bind(this);\r\n        this.openCreateModal = this.openCreateModal.bind(this);\r\n        this.openImportModal = this.openImportModal.bind(this);\r\n        this.showDetailedView = this.showDetailedView.bind(this);\r\n        this.closeCreateModal = this.closeCreateModal.bind(this);\r\n        this.closeImportModal = this.closeImportModal.bind(this);\r\n        this.closeDetailedView = this.closeDetailedView.bind(this);\r\n        this.updateInstanceCreator = this.updateInstanceCreator.bind(this);\r\n        this.updateInstanceEdited = this.updateInstanceEdited.bind(this)\r\n\r\n    }\r\n\r\n    createInstance() {\r\n        axios.post(\r\n            getURL(instancesMainPath, InstanceCommand.create),\r\n            {\r\n                'model':this.state.createdInstance[InstanceInput.Model],\r\n                'hostname':this.state.createdInstance[InstanceInput.Hostname],\r\n                'rack':this.state.createdInstance[InstanceInput.Rack],\r\n                'rackU':this.state.createdInstance[InstanceInput.RackU],\r\n                'owner':this.state.createdInstance[InstanceInput.Owner],\r\n                'comment':this.state.createdInstance[InstanceInput.Comment],\r\n            }\r\n            ).then(response => console.log(response));\r\n\r\n        this.setState({\r\n            createdInstance : {\r\n                'model':'',\r\n                'hostname':'',\r\n                'rack':'',\r\n                'rackU':'',\r\n                'owner':'',\r\n                'comment':'',\r\n            },\r\n            showCreateModal:false,\r\n        });\r\n    }\r\n\r\n    editInstance() {\r\n        axios.post(\r\n            getURL(instancesMainPath, InstanceCommand.edit),\r\n            {\r\n                'model':this.state.detailedValues[InstanceInput.Model],\r\n                'hostname':this.state.detailedValues[InstanceInput.Hostname],\r\n                'rack':this.state.detailedValues[InstanceInput.Rack],\r\n                'rackU':this.state.detailedValues[InstanceInput.RackU],\r\n                'owner':this.state.detailedValues[InstanceInput.Owner],\r\n                'comment':this.state.detailedValues[InstanceInput.Comment],\r\n            }\r\n            ).then(response => console.log(response));\r\n\r\n        this.setState({\r\n            detailedValues : {\r\n                'model':'',\r\n                'hostname':'',\r\n                'rack':'',\r\n                'rackU':'',\r\n                'owner':'',\r\n                'comment':'',\r\n            },\r\n            showDetailedView:false,\r\n        });\r\n    }\r\n\r\n\r\n    deleteInstance() {\r\n        axios.post(\r\n            getURL(instancesMainPath, InstanceCommand.delete),\r\n            {\r\n                'rack':this.state.deleteInstanceRack,\r\n                'rackU':this.state.deleteInstanceRackU,\r\n            }\r\n            ).then(response => console.log(response));\r\n\r\n        this.setState({\r\n            deleteInstanceRack:'',\r\n            deleteInstanceRackU:'',\r\n            showDetailedView:false\r\n        });\r\n    }\r\n\r\n    detailViewInstance(rack, rackU) {\r\n        axios.post(\r\n            getURL(instancesMainPath, InstanceCommand.detailView),\r\n            {\r\n                'rack':rack,\r\n                'rackU':rackU,\r\n            }\r\n            ).then(response => this.setState({ detailedValues: response.data['instances'][0], detailViewLoading:false}));\r\n\r\n        this.setState({\r\n            viewInstanceRack:'',\r\n        });\r\n    }\r\n\r\n    searchInstances(model, hostname, rack, rackU) {\r\n        axios.post(\r\n            getURL(instancesMainPath, InstanceCommand.search),\r\n            {\r\n                'model':model,\r\n                'hostname':hostname,\r\n                'rack':rack,\r\n                'rackU':rackU,\r\n            }\r\n            ).then(response => this.setState({ items: response.data['instances'] }));\r\n    }\r\n\r\n    search(filters) {\r\n        this.searchInstances(filters['model'], filters['hostname'], filters['rack'], filters['rackU']);\r\n    }\r\n\r\n    downloadTable() {\r\n        this.csvLink.link.click();\r\n    }\r\n\r\n    openCreateModal() {\r\n        this.setState({showCreateModal: true});\r\n    }\r\n\r\n    openImportModal() {\r\n        this.setState({showImportModal: true});\r\n    }\r\n\r\n    showDetailedView(id) {\r\n        this.setState({\r\n            showDetailedView: true,\r\n            detailViewLoading:true,\r\n        });\r\n\r\n        var model = this.state.items[id]['model'];\r\n        var hostname = this.state.items[id]['hostname'];\r\n        var rack = this.state.items[id]['rack'];\r\n        var rackU = this.state.items[id]['rackU'];\r\n\r\n        //this.detailViewInstance(model, hostname, rack, rackU);\r\n        this.setState({ detailedValues: Constants.testInstanceArray[id], detailViewLoading:false})\r\n    }\r\n\r\n    closeCreateModal() {\r\n        this.setState({showCreateModal: false});\r\n    }\r\n\r\n    closeImportModal() {\r\n        this.setState({showImportModal: false});\r\n    }\r\n\r\n    closeDetailedView() {\r\n        this.setState({ showDetailedView: false })\r\n    }\r\n\r\n    updateInstanceCreator(event) {\r\n        this.state.createdInstance[event.target.label] = event.target.value;\r\n        this.forceUpdate()\r\n    }\r\n\r\n    updateInstanceEdited(event) {\r\n        this.state.detailedValues[event.target.label] = event.target.value;\r\n        this.forceUpdate()\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <ButtonMenu\r\n                    openCreateModal={this.openCreateModal}\r\n                    openImportModal={this.openImportModal}\r\n                    downloadTable={this.downloadTable}\r\n                />\r\n                <CSVLink\r\n                    data={this.state.csvData}\r\n                    filename={instanceDownloadFileName}\r\n                    className=\"hidden\"\r\n                    ref={(r) => this.csvLink = r}\r\n                    target=\"_blank\"\r\n                />\r\n                <CreateModal\r\n                    showCreateModal={this.state.showCreateModal}\r\n                    closeCreateModal={this.closeCreateModal}\r\n                    createModel={this.createInstance}\r\n                    updateModelCreator={this.updateInstanceCreator}\r\n                    inputs={inputs}\r\n                />\r\n                <UploadModal\r\n                    showImportModal={this.state.showImportModal}\r\n                    closeImportModal={this.closeImportModal}\r\n                />\r\n                <Filters\r\n                    updateSearchText={this.updateSearchText}\r\n                    search={this.search}\r\n                    filters={columns}\r\n                />\r\n                <TableView\r\n                    columns={columns}\r\n                    vals={this.state.items}\r\n                    keys={columns}\r\n                    showDetailedView={this.showDetailedView}\r\n                    filters={columns}\r\n                />\r\n                <DetailedView\r\n                    showDetailedView={this.state.showDetailedView}\r\n                    closeDetailedView={this.closeDetailedView}\r\n                    inputs={inputs}\r\n                    updateModelEdited={this.updateInstanceEdited}\r\n                    defaultValues={this.state.detailedValues}\r\n                    loading={this.state.detailViewLoading}\r\n                    edit={this.editInstance}\r\n                    delete={this.deleteInstance}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\nimport TableView from '../helpers/TableView';\r\n\r\nconst columns = [\r\n    \"Vendor\",\r\n    \"Model Number\",\r\n    \"Height (U)\",\r\n    \"Display Color\",\r\n    \"Ethernet Ports\",\r\n    \"Power Ports\",\r\n    \"CPU\",\r\n    \"Memory\",\r\n    \"Storage\",\r\n    \"Comments\",\r\n]\r\n\r\nexport default function RacksView(props) {\r\n    return (<div></div>);\r\n}\r\n","import React from 'react';\r\nimport TableView from '../helpers/TableView';\r\n\r\nexport default function StatisticsView(props) {\r\n    return (<div></div>);\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\nimport ModelsView from './pages/ModelsView';\r\nimport UsersView from './pages/UsersView';\r\nimport InstancesView from './pages/InstancesView';\r\nimport RacksView from './pages/RacksView';\r\nimport StatisticsView from './pages/StatisticsView';\r\nimport Button from '@material-ui/core/Button';\r\nimport Logout from './helpers/Logout';\r\n\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <Typography\r\n      component=\"div\"\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`simple-tabpanel-${index}`}\r\n      aria-labelledby={`simple-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && <Box p={3}>{children}</Box>}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n  children: PropTypes.node,\r\n  index: PropTypes.any.isRequired,\r\n  value: PropTypes.any.isRequired,\r\n};\r\n\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `simple-tab-${index}`,\r\n    'aria-controls': `simple-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n  tab: {\r\n    flexGrow: 1,\r\n  },\r\n  button:{\r\n    flexGrow: 1,\r\n  }\r\n}));\r\n\r\nexport default function TabManager() {\r\n  const classes = useStyles();\r\n  const [value, setValue] = React.useState(0);\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\">\r\n        <Tabs value={value} onChange={handleChange}>\r\n          <Tab className={classes.tab} label=\"Models\" {...a11yProps(0)} />\r\n          <Tab className={classes.tab} label=\"Instances\" {...a11yProps(1)} />\r\n          <Tab className={classes.tab} label=\"Racks\" {...a11yProps(2)} />\r\n          <Tab className={classes.tab} label=\"Statistics\" {...a11yProps(2)} />\r\n          <Tab className={classes.tab} label=\"Users\" {...a11yProps(2)}  />\r\n          <Button\r\n           className={classes.button}\r\n           variant=\"contained\"\r\n           color=\"secondary\"\r\n           onClick={Logout()}\r\n           >\r\n              Logout\r\n          </Button>\r\n        </Tabs>\r\n      </AppBar>\r\n      <TabPanel value={value} index={0}>\r\n        <ModelsView token={this.props.token} privilege={this.props.privilege} />\r\n      </TabPanel>\r\n      <TabPanel value={value} index={1}>\r\n        <InstancesView token={this.props.token} privilege={this.props.privilege} />\r\n      </TabPanel>\r\n      <TabPanel value={value} index={2}>\r\n        <RacksView token={this.props.token} privilege={this.props.privilege} />\r\n      </TabPanel>\r\n      <TabPanel value={value} index={3}>\r\n        <StatisticsView token={this.props.token} privilege={this.props.privilege} />\r\n      </TabPanel>\r\n      <TabPanel value={value} index={4}>\r\n        <UsersView token={this.props.token} privilege={this.props.privilege} />\r\n      </TabPanel>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport Login from \"./Login\";\r\nimport TabManager from \"./TabManager\";\r\n\r\nexport default class PageSelector extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      token:'',\r\n      privilege:'',\r\n      loggedIn:false,\r\n    };\r\n\r\n    this.login = this.login.bind(this);\r\n  }\r\n\r\n  login(token, privilege) {\r\n    this.setState({\r\n      token:token,\r\n      privilege:privilege,\r\n      loggedIn:true,\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        {this.state.loggedIn ?  <TabManager  token={this.props.token} privilege={this.props.privilege} /> : <Login loginFunc={this.login} />}\r\n      </div>\r\n    );\r\n  }\r\n\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './stylesheets/index.css';\nimport PageSelector from './javascript/PageSelector';\n\nReactDOM.render(<PageSelector />, document.getElementById('root'));\n"],"sourceRoot":""}
