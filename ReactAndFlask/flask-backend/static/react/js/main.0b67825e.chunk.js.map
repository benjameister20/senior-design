{"version":3,"sources":["javascript/enums/privilegeTypes.ts","javascript/Constants.jsx","javascript/helpers/functions/GetURL.jsx","javascript/enums/modelCommands.ts","javascript/enums/modelInputs.ts","javascript/helpers/StatusDisplay.jsx","javascript/Login.jsx","javascript/enums/userCommands.ts","javascript/enums/userInputs.ts","javascript/helpers/TableView.jsx","javascript/helpers/ButtonMenu.jsx","javascript/helpers/Filters.jsx","javascript/helpers/UploadModal.jsx","javascript/helpers/DetailedView.jsx","javascript/helpers/CreateModal.jsx","javascript/pages/ModelsView.jsx","javascript/pages/UsersView.jsx","javascript/enums/instanceCommands.ts","javascript/enums/instanceInputs.ts","javascript/pages/InstancesView.jsx","javascript/enums/rackCommands.ts","javascript/pages/RacksView.jsx","javascript/enums/statsCommands.ts","javascript/helpers/functions/JSONtoArr.jsx","javascript/pages/StatisticsView.jsx","javascript/Tabs.jsx","javascript/PageSelector.jsx","index.jsx"],"names":["Privilege","serverEndpoint","RackX","RackY","getURL","path","endpoint","Constants","ModelCommand","ModelInput","StatusDisplay","props","state","Collapse","in","this","open","Alert","severity","action","IconButton","aria-label","color","size","onClick","closeStatus","fontSize","message","React","Component","Login","username","password","statusMessage","showStatus","statusSeverity","closeShowStatus","bind","submitCredentials","axios","post","then","response","data","setState","loginFunc","event","target","value","TextField","id","label","variant","required","ref","onChange","updateUsername","type","updatePassword","Button","UserCommand","UserInput","TableView","showDetailedView","TableContainer","component","Paper","Table","className","minWidth","TableHead","TableRow","columns","map","col","TableCell","TableBody","vals","row","index","keys","key","scope","ButtonMenu","openCreateModal","startIcon","openImportModal","downloadTable","Filters","filters","hasOwnProperty","forceUpdate","search","filter","InputBase","placeholder","inputProps","updateSearchText","UploadModal","Modal","style","top","left","transform","background","aria-labelledby","aria-describedby","showImportModal","onClose","closeImportModal","accept","DetailedView","showConfirmationBox","closeModal","confirmDelete","deleteItem","delete","closeDetailedView","loading","CircularProgress","inputs","input","name","disabled","updateModelEdited","defaultValue","defaultValues","edit","CreateModal","showCreateModal","closeCreateModal","useAutocomplete","Autocomplete","options","renderInput","params","fullWidth","updateModelCreator","createModel","ModelsView","items","createdModel","createdVendor","createdModelNum","createdHeight","createdDispClr","createdEthPorts","createdPwrPorts","createdCPU","createdMem","createdStorage","createdComments","deleteVendor","deleteModel","viewVendor","viewModel","searchText","csvData","detailViewLoading","detailedValues","originalVendor","originalModelNumber","originalHeight","vendorsList","editModel","getVendorList","defaults","headers","common","token","privilege","create","Vendor","model_number","Height","display_color","eth_ports","power_ports","CPU","Memory","Storage","Comment","console","log","vendor","modelNum","detailView","height","get","VENDOR_VALUES","results","searchModels","csvLink","link","click","detailViewModel","ADMIN","filename","r","USER","InstanceCommand","InstanceInput","UsersView","createdUser","deleteUsername","viewUser","originalUsername","createUser","editUser","deleteUser","detailViewUser","searchUsers","updateUserCreator","updateUserEdited","Username","Password","display_name","Email","email","RackCommand","InstancesView","createdInstance","deleteInstanceRack","deleteInstanceRackU","viewInstanceRack","viewInstanceRackU","originalRack","originalRackU","modelList","createInstance","editInstance","deleteInstance","detailViewInstance","searchInstances","updateInstanceCreator","updateInstanceEdited","getModelList","Model","Hostname","Rack","RackU","Owner","rack","rackU","model","hostname","GET_ALL_MODELS","StatsCommand","RacksView","startingRackLetter","endingRackLetter","startingRackNumber","endingRackNumber","getAllRacks","updateRacks","createRacks","deleteRacks","viewRacks","changeStartingLetter","changeEndingLetter","changeStartingNum","changeEndingNum","GET_ALL_RACKS","command","GET_RACK_DETAILS","CREATE_RACKS","DELETE_RACKS","FormControl","Select","val","MenuItem","FormHelperText","jsonToArr","incomingJSON","json","JSON","parse","e","Object","entries","length","constructor","push","tables","tableCols","StatisticsView","tableValues","totalUsage","spaceUsage","vendorUsage","modelUsage","ownerUsage","generateReport","GENERATE_REPORT","totalUsageRow","JSONtoArr","ExpansionPanel","ExpansionPanelSummary","expandIcon","Typography","ExpansionPanelDetails","column","TabViewer","currentTabID","handleChange","newValue","AppBar","position","Tabs","Tab","flexGrow","logout","role","hidden","PageSelector","loggedIn","login","ReactDOM","render","document","getElementById"],"mappings":"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","file":"js/main.0b67825e.chunk.js","sourcesContent":["export enum Privilege  {\r\n    ADMIN = \"admin\",\r\n    USER = \"user\",\r\n};\r\n","/**\r\n * Constants file\r\n */\r\n\r\nexport const localServerEndpoint = 'http://localhost:4010/';\r\nexport const devServerEndpoint = 'https://parseltongue-dev.herokuapp.com/';\r\nexport const prodServerEndpoint = 'https://parseltongue-prod.herokuapp.com/';\r\n\r\nexport const serverEndpoint = devServerEndpoint;\r\n\r\nexport const RackX = [\r\n    'A', 'B', 'C', 'D', 'E',\r\n    'F', 'G', 'H', 'I', 'J',\r\n    'K', 'L', 'M', 'N', 'O',\r\n    'P', 'Q', 'R', 'S', 'T',\r\n    'W', 'X', 'Y', 'Z',\r\n]\r\n\r\nexport const RackY = [\r\n    1, 2, 3, 4, 5, 6, 7, 8, 9, 10,\r\n    11, 12, 13, 14, 15, 16, 17, 18, 19 , 20,\r\n    21, 22, 23, 24, 25, 26, 27, 28, 29, 30,\r\n    31, 32, 33, 34, 35, 36, 37, 38, 39, 40,\r\n    41, 42, 43, 44, 45, 46, 47, 48, 49, 50,\r\n    51, 52, 53, 54, 55, 56, 57, 58, 59, 60,\r\n]\r\n\r\nexport const testModelArray = [\r\n    {\r\n        'vendor':'a',\r\n        'model_number':'a',\r\n        'height':'a',\r\n        'display_color':'a',\r\n        'eth_ports':'a',\r\n        'power_ports':'a',\r\n        'cpu':'a',\r\n        'memory':'a',\r\n        'storage':'a',\r\n        'comments':'a',\r\n    },{\r\n        'vendor':'b',\r\n        'model_number':'b',\r\n        'height':'b',\r\n        'display_color':'b',\r\n        'eth_ports':'b',\r\n        'power_ports':'b',\r\n        'cpu':'b',\r\n        'memory':'b',\r\n        'storage':'b',\r\n        'comments':'b',\r\n    },{\r\n        'vendor':'c',\r\n        'model_number':'c',\r\n        'height':'c',\r\n        'display_color':'c',\r\n        'eth_ports':'c',\r\n        'power_ports':'c',\r\n        'cpu':'c',\r\n        'memory':'c',\r\n        'storage':'c',\r\n        'comments':'c',\r\n    },\r\n];\r\n\r\nexport const testUserArray = [\r\n    {\r\n        'username':'a',\r\n        'password':'a',\r\n        'display_name':'a',\r\n        'email':'a',\r\n        'privilege':'a',\r\n    },{\r\n        'username':'b',\r\n        'password':'b',\r\n        'display_name':'b',\r\n        'email':'b',\r\n        'privilege':'b',\r\n    },{\r\n        'username':'c',\r\n        'password':'c',\r\n        'display_name':'c',\r\n        'email':'c',\r\n        'privilege':'c',\r\n    },\r\n];\r\n\r\nexport const testInstanceArray = [\r\n    {\r\n        'model':'a',\r\n        'hostname':'a',\r\n        'rack':'a',\r\n        'rackU':'a',\r\n        'owner':'a',\r\n        'comment':'a',\r\n    },{\r\n        'model':'b',\r\n        'hostname':'b',\r\n        'rack':'b',\r\n        'rackU':'b',\r\n        'owner':'b',\r\n        'comment':'b',\r\n    },{\r\n        'model':'c',\r\n        'hostname':'c',\r\n        'rack':'c',\r\n        'rackU':'c',\r\n        'owner':'c',\r\n        'comment':'c',\r\n    },\r\n];\r\n","import * as Constants from '../../Constants';\r\n\r\nexport default function getURL(path, endpoint) {\r\n    return Constants.serverEndpoint + path + endpoint;\r\n}\r\n","export enum ModelCommand {\r\n    create = 'create/',\r\n    delete = 'delete/',\r\n    edit = 'edit/',\r\n    view = 'view/',\r\n    detailView = 'detailView/',\r\n    search = 'search/',\r\n    VENDOR_VALUES = 'assistedvendor/',\r\n}\r\n","export enum ModelInput {\r\n    Vendor = 'vendor',\r\n    model_number = 'model_number',\r\n    Height = 'height',\r\n    display_color = 'display_color',\r\n    eth_ports = 'eth_ports',\r\n    power_ports = 'power_ports',\r\n    CPU = 'cpu',\r\n    Memory = 'memory',\r\n    Storage = 'storage',\r\n    Comment = 'comments'\r\n}\r\n","import React from 'react';\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport Button from '@material-ui/core/Button';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\n\r\nexport default class StatusDisplay extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n\r\n        };\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Collapse in={this.props.open}>\r\n                    <Alert\r\n                        severity={this.props.severity}\r\n                        action={\r\n                        <IconButton\r\n                            aria-label=\"close\"\r\n                            color=\"inherit\"\r\n                            size=\"small\"\r\n                            onClick={this.props.closeStatus}\r\n                        >\r\n                            <CloseIcon fontSize=\"inherit\" />\r\n                        </IconButton>\r\n                        }\r\n                    >\r\n                        {this.props.message}\r\n                    </Alert>\r\n                </Collapse>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport axios from 'axios';\r\nimport getURL from './helpers/functions/GetURL';\r\nimport * as Constants from './Constants';\r\nimport { Privilege } from './enums/privilegeTypes.ts'\r\nimport StatusDisplay from './helpers/StatusDisplay';\r\n\r\nconst loginMainPath = 'users/';\r\n\r\nexport default class Login extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            username:'',\r\n            password:'',\r\n            statusMessage:'',\r\n            showStatus:false,\r\n            statusSeverity:'',\r\n        };\r\n\r\n        this.closeShowStatus = this.closeShowStatus.bind(this);\r\n        this.submitCredentials = this.submitCredentials.bind(this);\r\n    }\r\n\r\n    submitCredentials() {\r\n        axios.post(\r\n            getURL(loginMainPath, 'authenticate'),\r\n            {\r\n                \"username\":this.state.username,\r\n                \"password\":this.state.password,\r\n            }\r\n            ).then(response => {\r\n                var valid = response.data['message'];\r\n                if (valid == 'success') {\r\n                    this.setState({ message: '' });\r\n                    this.props.loginFunc(response.data['token'], response.data['privilege']);\r\n                } else {\r\n                    this.setState({ showStatus:true, statusMessage:response.data['message'] });\r\n                }\r\n            });\r\n        //this.props.loginFunc('token', Privilege.ADMIN);\r\n    }\r\n\r\n    updateUsername(event) {\r\n        this.setState({ username: event.target.value })\r\n    }\r\n\r\n    updatePassword(event) {\r\n        this.setState({ password: event.target.value })\r\n    }\r\n\r\n    closeShowStatus() {\r\n        this.setState({ showStatus: false })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <StatusDisplay\r\n                    open={this.state.showStatus}\r\n                    severity={this.state.statusSeverity}\r\n                    closeStatus={this.closeShowStatus}\r\n                    message={this.state.statusMessage}\r\n                />\r\n                <TextField\r\n                    id=\"outlined-basic\"\r\n                    label=\"Username\"\r\n                    variant=\"outlined\"\r\n                    required=\"true\"\r\n                    ref='username'\r\n                    onChange={this.updateUsername.bind(this)}\r\n                />\r\n                <TextField\r\n                    id=\"outlined-basic\"\r\n                    label=\"Password\"\r\n                    variant=\"outlined\"\r\n                    required=\"true\"\r\n                    ref='password'\r\n                    type=\"password\"\r\n                    onChange={this.updatePassword.bind(this)}\r\n                />\r\n                <Button\r\n                    onClick={this.submitCredentials}\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                >\r\n                    Sign In\r\n                </Button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","export enum UserCommand {\r\n    create = 'create/',\r\n    delete = 'delete/',\r\n    edit = 'edit/',\r\n    view = 'view/',\r\n    detailView = 'detailView/',\r\n    search='search/',\r\n}\r\n","export enum UserInput {\r\n    Username='username',\r\n    Password='password',\r\n    Email='email',\r\n    display_name='display_name',\r\n    Privilege='privilege',\r\n}\r\n","import React from 'react';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nexport default class TableView extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n\r\n    };\r\n  }\r\n\r\n  showDetailedView(event) {\r\n    this.props.showDetailedView(event.target.id);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <TableContainer component={Paper}>\r\n          <Table className={{minWidth: 650}} aria-label=\"simple table\">\r\n            <TableHead>\r\n              <TableRow >\r\n                {this.props.columns.map(col => (<TableCell><span id={col}>{col}</span></TableCell>))}\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {this.props.vals.map((row, index)=> (\r\n              <TableRow>\r\n                {this.props.keys.map(key => (<TableCell scope=\"row\"><span id={index} onClick={this.showDetailedView.bind(this)}>{row[key]}</span></TableCell>))}\r\n              </TableRow>\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\r\nimport CloudDownloadIcon from '@material-ui/icons/CloudDownload';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nexport default class ButtonMenu extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n\r\n        };\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div>\r\n                <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    onClick={this.props.openCreateModal}\r\n                >\r\n                    Create\r\n                </Button>\r\n                <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    startIcon={<CloudUploadIcon />}\r\n                    onClick={this.props.openImportModal}\r\n                >\r\n                    Import\r\n                </Button>\r\n                <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    startIcon={<CloudDownloadIcon />}\r\n                    onClick={this.props.downloadTable}\r\n                >\r\n                    Export\r\n                </Button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nexport default class Filters extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            filters:{},\r\n        };\r\n    }\r\n\r\n    updateSearchText(event) {\r\n        if (this.state.filters.hasOwnProperty(event.target.id)) {\r\n            this.state.filters[event.target.id] = event.target.value;\r\n            this.forceUpdate();\r\n        } else {\r\n            var value = (event.target.value == null) ? '' : event.target.value;\r\n            this.state.filters[event.target.id] = event.target.value;\r\n            //this.state.filters.push({ key:event.target.id, value: value});\r\n            this.forceUpdate();\r\n        }\r\n    }\r\n\r\n    search() {\r\n        this.props.search(this.state.filters);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.props.filters.map((filter, index) => (\r\n                    <div>\r\n                        <SearchIcon />\r\n                        <InputBase\r\n                            placeholder={filter+\" filter\"}\r\n                            inputProps={{ 'aria-label': 'search' }}\r\n                            onChange={this.updateSearchText.bind(this)}\r\n                            id={filter}\r\n                        />\r\n                    </div>\r\n                ))\r\n                }\r\n                <div>\r\n                    <Button\r\n                        onClick={this.search.bind(this)}\r\n                    >\r\n                        Search\r\n                    </Button>\r\n                </div>\r\n                Click Search to populate table. Searching with empty filters searches over all values.\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Modal from '@material-ui/core/Modal';\r\n\r\nexport default class UploadModal extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n\r\n        };\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Modal\r\n                style={{top: `50%`,left: `50%`,transform: `translate(-50%, -50%)`, background: 'linear-gradient(45deg, #2196F3 30%, #21CBF3 90%)',}}\r\n                aria-labelledby=\"simple-modal-title\"\r\n                aria-describedby=\"simple-modal-description\"\r\n                open={this.props.showImportModal}\r\n                onClose={this.props.closeImportModal}\r\n            >\r\n                <div>\r\n                    <input type='file' accept=\".csv\" />\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                    >\r\n                        Upload\r\n                    </Button>\r\n                </div>\r\n            </Modal>\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from '@material-ui/core/Button';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nexport default class DetailedView extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            showConfirmationBox:false,\r\n        };\r\n\r\n        this.closeModal = this.closeModal.bind(this);\r\n        this.confirmDelete = this.confirmDelete.bind(this);\r\n        this.deleteItem = this.deleteItem.bind(this);\r\n    }\r\n\r\n    confirmDelete() {\r\n        this.setState({ showConfirmationBox: true });\r\n    }\r\n\r\n    closeModal() {\r\n        this.setState({showConfirmationBox:false,});\r\n    }\r\n\r\n    deleteItem() {\r\n        this.setState({ showConfirmationBox: false });\r\n        this.props.delete();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n        <div>\r\n            <Modal\r\n                style={{top: `50%`,left: `50%`,transform: `translate(-50%, -50%)`, background: 'linear-gradient(45deg, #2196F3 30%, #21CBF3 90%)',}}\r\n                aria-labelledby=\"simple-modal-title\"\r\n                aria-describedby=\"simple-modal-description\"\r\n                open={this.props.showDetailedView}\r\n                onClose={this.props.closeDetailedView}\r\n            >\r\n                {\r\n                this.props.loading ? <CircularProgress /> :\r\n                <div>\r\n                    {this.props.inputs.map(input => (\r\n                        <TextField name={input} disabled={this.props.disabled} id=\"standard-basic\" label={input} onChange={this.props.updateModelEdited} defaultValue={this.props.defaultValues[input]}/>\r\n                    ))}\r\n                    {this.props.disabled ? null:\r\n                    <div>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            onClick={this.props.edit}\r\n                            disabled={this.state.showConfirmationBox}\r\n                        >\r\n                            Save\r\n                        </Button>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            onClick={this.confirmDelete}\r\n                            disabled={this.state.showConfirmationBox}\r\n                        >\r\n                            Delete\r\n                        </Button>\r\n                    </div>}\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            onClick={this.props.closeDetailedView}\r\n                            disabled={this.state.showConfirmationBox}\r\n                        >\r\n                            Close\r\n                        </Button>\r\n\r\n                    {this.state.showConfirmationBox ? <div>\r\n                        Are you sure you wish to delete?\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            onClick={this.deleteItem}\r\n                        >\r\n                            Yes\r\n                        </Button>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            onClick={this.closeModal}\r\n                        >\r\n                            No\r\n                        </Button>\r\n                    </div>:null}\r\n                </div>}\r\n            </Modal>\r\n        </div>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from '@material-ui/core/Button';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\n\r\nexport default class CreateModal extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n\r\n        };\r\n    }\r\n\r\n    render() {\r\n        return (\r\n        <div>\r\n            <Modal\r\n                style={{top: `50%`,left: `50%`,transform: `translate(-50%, -50%)`, background: 'linear-gradient(45deg, #2196F3 30%, #21CBF3 90%)',}}\r\n                aria-labelledby=\"simple-modal-title\"\r\n                aria-describedby=\"simple-modal-description\"\r\n                open={this.props.showCreateModal}\r\n                onClose={this.props.closeCreateModal}\r\n            >\r\n                <div>\r\n                    {this.props.inputs.map((input, index) => (\r\n                        (index===1 && this.props.useAutocomplete) ? <Autocomplete\r\n                            id=\"combo-box-demo\"\r\n                            options={this.props.options}\r\n                            renderInput={params => (\r\n                            <TextField {...params} label=\"Combo box\" variant=\"outlined\" fullWidth />\r\n                            )}\r\n                        /> :\r\n                        <TextField id=\"standard-basic\" variant=\"outlined\" label={input} name={input} onChange={this.props.updateModelCreator}/>\r\n                    ))}\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        onClick={this.props.createModel}\r\n                    >\r\n                        Create\r\n                    </Button>\r\n                </div>\r\n            </Modal>\r\n        </div>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\nimport axios from 'axios';\r\nimport { ModelCommand } from '../enums/modelCommands.ts'\r\nimport { ModelInput } from '../enums/modelInputs.ts'\r\nimport { Privilege } from '../enums/privilegeTypes.ts'\r\nimport TableView from '../helpers/TableView';\r\nimport { CSVLink } from \"react-csv\";\r\nimport ButtonMenu from '../helpers/ButtonMenu';\r\nimport Filters from '../helpers/Filters';\r\nimport UploadModal from '../helpers/UploadModal';\r\nimport getURL from '../helpers/functions/GetURL';\r\nimport DetailedView from '../helpers/DetailedView';\r\nimport CreateModal from '../helpers/CreateModal';\r\nimport StatusDisplay from '../helpers/StatusDisplay';\r\n\r\nconst inputs = [\r\n    'vendor',\r\n    'model_number',\r\n    'height',\r\n    'display_color',\r\n    'eth_ports',\r\n    'power_ports',\r\n    'cpu',\r\n    'memory',\r\n    'storage',\r\n    'comments',\r\n]\r\n\r\nconst columns = [\r\n    'vendor',\r\n    'model_number',\r\n    'height',\r\n]\r\n\r\nconst modelsMainPath = 'models/';\r\nconst modelDownloadFileName = 'models.csv';\r\n\r\nexport default class ModelsView extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n\r\n            // modals\r\n            showCreateModal:false,\r\n            showImportModal:false,\r\n\r\n            // table items\r\n            items:[], //Constants.testModelArray,\r\n\r\n            // vals for creating a new model\r\n            createdModel : {\r\n                'vendor':'',\r\n                'model_number':'',\r\n                'height':'',\r\n                'display_color':'',\r\n                'eth_ports':'',\r\n                'power_ports':'',\r\n                'cpu':'',\r\n                'memory':'',\r\n                'storage':'',\r\n                'comments':'',\r\n            },\r\n            createdVendor:'',\r\n            createdModelNum:'',\r\n            createdHeight:'',\r\n            createdDispClr:'',\r\n            createdEthPorts:'',\r\n            createdPwrPorts:'',\r\n            createdCPU:'',\r\n            createdMem:'',\r\n            createdStorage:'',\r\n            createdComments:'',\r\n\r\n            // vals for deleting a model\r\n            deleteVendor:'',\r\n            deleteModel:'',\r\n\r\n            // vals for viewing a model\r\n            viewVendor:'',\r\n            viewModel:'',\r\n\r\n            // searching a model\r\n            searchText:\"\",\r\n\r\n            // csv data\r\n            csvData:[],\r\n\r\n            // detailed view\r\n            showDetailedView: false,\r\n            detailViewLoading:false,\r\n            detailedValues : {\r\n                'vendor':'',\r\n                'model_number':'',\r\n                'height':'',\r\n                'display_color':'',\r\n                'eth_ports':'',\r\n                'power_ports':'',\r\n                'cpu':'',\r\n                'memory':'',\r\n                'storage':'',\r\n                'comments':'',\r\n            },\r\n            originalVendor:'',\r\n            originalModelNumber:'',\r\n            originalHeight:'',\r\n\r\n            showStatus:false,\r\n            statusSeverity:'',\r\n            statusMessage:'',\r\n\r\n            vendorsList:[],\r\n\r\n        };\r\n\r\n        this.openCreateModal = this.openCreateModal.bind(this);\r\n        this.openImportModal = this.openImportModal.bind(this);\r\n        this.downloadTable = this.downloadTable.bind(this);\r\n        this.updateSearchText = this.updateSearchText.bind(this);\r\n        this.search = this.search.bind(this);\r\n        this.closeImportModal = this.closeImportModal.bind(this);\r\n        this.closeCreateModal = this.closeCreateModal.bind(this);\r\n        this.showDetailedView = this.showDetailedView.bind(this);\r\n        this.editModel = this.editModel.bind(this);\r\n        this.closeDetailedView = this.closeDetailedView.bind(this);\r\n        this.updateModelEdited = this.updateModelEdited.bind(this);\r\n        this.closeCreateModal = this.closeCreateModal.bind(this);\r\n        this.createModel = this.createModel.bind(this);\r\n        this.updateModelCreator = this.updateModelCreator.bind(this);\r\n        this.deleteModel = this.deleteModel.bind(this);\r\n        this.closeShowStatus = this.closeShowStatus.bind(this);\r\n        this.getVendorList = this.getVendorList.bind(this);\r\n\r\n        axios.defaults.headers.common['token'] = this.props.token;\r\n        axios.defaults.headers.common['privilege'] = this.props.privilege;\r\n    }\r\n\r\n    createModel() {\r\n        axios.post(\r\n            getURL(modelsMainPath, ModelCommand.create),\r\n            {\r\n                'vendor':this.state.createdModel[ModelInput.Vendor],\r\n                'model_number':this.state.createdModel[ModelInput.model_number],\r\n                'height':this.state.createdModel[ModelInput.Height],\r\n                'display_color':this.state.createdModel[ModelInput.display_color],\r\n                'eth_ports':this.state.createdModel[ModelInput.eth_ports],\r\n                'power_ports':this.state.createdModel[ModelInput.power_ports],\r\n                'cpu':this.state.createdModel[ModelInput.CPU],\r\n                'memory':this.state.createdModel[ModelInput.Memory],\r\n                'storage':this.state.createdModel[ModelInput.Storage],\r\n                'comments':this.state.createdModel[ModelInput.Comment],\r\n            }\r\n            ).then(\r\n                response => {\r\n                    if (response.data.message === 'success') {\r\n                        this.setState({\r\n                            showStatus: true,\r\n                            statusMessage:'success',\r\n                            statusMessage: \"Successfully created model\",\r\n                            statusSeverity:\"success\",\r\n                            createdModel : {\r\n                                'vendor':'',\r\n                                'model_number':'',\r\n                                'height':'',\r\n                                'display_color':'',\r\n                                'eth_ports':'',\r\n                                'power_ports':'',\r\n                                'cpu':'',\r\n                                'memory':'',\r\n                                'storage':'',\r\n                                'comments':'',\r\n                            },\r\n                            showCreateModal:false,\r\n                        })\r\n                    } else {\r\n                        this.setState({ showStatus: true, statusMessage: response.data.message, statusSeverity:\"error\" })\r\n                    }\r\n                });\r\n\r\n        this.setState({\r\n            createdModel : {\r\n                'vendor':'',\r\n                'model_number':'',\r\n                'height':'',\r\n                'display_color':'',\r\n                'eth_ports':'',\r\n                'power_ports':'',\r\n                'cpu':'',\r\n                'memory':'',\r\n                'storage':'',\r\n                'comments':'',\r\n            },\r\n            showCreateModal:false,\r\n        });\r\n    }\r\n\r\n    editModel() {\r\n        axios.post(\r\n            getURL(modelsMainPath, ModelCommand.edit),\r\n            {\r\n                'vendorOriginal':this.state.originalVendor,\r\n                'model_numberOriginal':this.state.originalModelNumber,\r\n                'heightOriginal':this.state.originalHeight,\r\n\r\n                'vendor':this.state.detailedValues[ModelInput.Vendor],\r\n                'model_number':this.state.detailedValues[ModelInput.model_number],\r\n                'height':this.state.detailedValues[ModelInput.Height],\r\n                'display_color':this.state.detailedValues[ModelInput.display_color],\r\n                'eth_ports':this.state.detailedValues[ModelInput.eth_ports],\r\n                'power_ports':this.state.detailedValues[ModelInput.power_ports],\r\n                'cpu':this.state.detailedValues[ModelInput.CPU],\r\n                'memory':this.state.detailedValues[ModelInput.Memory],\r\n                'storage':this.state.detailedValues[ModelInput.Storage],\r\n                'comments':this.state.detailedValues[ModelInput.Comment],\r\n            }\r\n            ).then(response => console.log(response) );\r\n\r\n        this.setState({\r\n            originalVendor:'',\r\n            originalModelNumber:'',\r\n            originalHeight:'',\r\n            detailedValues : {\r\n                'vendor':'',\r\n                'model_number':'',\r\n                'height':'',\r\n                'display_color':'',\r\n                'eth_ports':'',\r\n                'power_ports':'',\r\n                'cpu':'',\r\n                'memory':'',\r\n                'storage':'',\r\n                'comments':'',\r\n            },\r\n            showDetailedView:false\r\n        });\r\n    }\r\n\r\n\r\n    deleteModel() {\r\n        axios.post(\r\n            getURL(modelsMainPath, ModelCommand.delete),\r\n            {\r\n                'vendor':this.state.originalVendor,\r\n                'model_number':this.state.originalModelNumber,\r\n            }\r\n            ).then(response => console.log(response));\r\n\r\n        this.setState({\r\n            detailedValues : {\r\n                'vendor':'',\r\n                'model_number':'',\r\n                'height':'',\r\n                'display_color':'',\r\n                'eth_ports':'',\r\n                'power_ports':'',\r\n                'cpu':'',\r\n                'memory':'',\r\n                'storage':'',\r\n                'comments':'',\r\n            },\r\n            showDetailedView:false\r\n        });\r\n    }\r\n\r\n    detailViewModel(vendor, modelNum) {\r\n        axios.post(\r\n            getURL(modelsMainPath, ModelCommand.detailView),\r\n            {\r\n                'vendor':vendor,\r\n                'model_number':modelNum,\r\n            }, this.props.headers\r\n            ).then(response => this.setState({ detailedValues: response.data['models'][0], detailViewLoading:false}));\r\n\r\n        this.setState({\r\n            viewVendor:'',\r\n            viewModel:'',\r\n        });\r\n    }\r\n\r\n    searchModels(vendor, modelNum, height) {\r\n        axios.post(\r\n            getURL(modelsMainPath, ModelCommand.search),\r\n            {\r\n                'filter':{\r\n                    'vendor':vendor,\r\n                    'model_number':modelNum,\r\n                    'height':height,\r\n                }\r\n            }\r\n            ).then(response => this.setState({ items: response.data['models'] }));\r\n\r\n        this.setState({\r\n            searchText:'',\r\n        });\r\n    }\r\n\r\n    getVendorList() {\r\n        axios.get(\r\n            getURL(modelsMainPath, ModelCommand.VENDOR_VALUES)\r\n            ).then(response => this.setState({ vendorsList: response.data.results }));\r\n    }\r\n\r\n    search(filters) {\r\n        this.searchModels(filters['vendor'], filters['model_number'], filters['height']);\r\n    }\r\n\r\n    downloadTable() {\r\n        this.csvLink.link.click();\r\n    }\r\n\r\n    openCreateModal() {\r\n        this.setState({showCreateModal: true});\r\n    }\r\n\r\n    openImportModal() {\r\n        this.setState({showImportModal: true});\r\n    }\r\n\r\n    showDetailedView(id) {\r\n        this.setState({\r\n            showDetailedView: true,\r\n            detailViewLoading:true,\r\n\r\n            originalHeight:this.state.items[id]['height'],\r\n            originalModelNumber:this.state.items[id]['model_number'],\r\n            originalVendor:this.state.items[id]['vendor'],\r\n         });\r\n\r\n        var vendor = this.state.items[id]['vendor'];\r\n        var modelNum = this.state.items[id]['model_number'];\r\n\r\n        this.detailViewModel(vendor, modelNum);\r\n        //this.setState({ detailedValues: Constants.testModelArray[id], detailViewLoading:false})\r\n    }\r\n\r\n    closeCreateModal() {\r\n        this.setState({showCreateModal: false});\r\n    }\r\n\r\n    closeImportModal() {\r\n        this.setState({showImportModal: false});\r\n    }\r\n\r\n    closeDetailedView() {\r\n        this.setState({ showDetailedView: false })\r\n    }\r\n\r\n    updateModelCreator(event) {\r\n        this.state.createdModel[event.target.name] = event.target.value;\r\n        this.forceUpdate()\r\n    }\r\n\r\n    updateModelEdited(event) {\r\n        this.state.detailedValues[event.target.name] = event.target.value;\r\n        this.forceUpdate()\r\n    }\r\n\r\n    updateSearchText(event) {\r\n        this.setState({ searchText: event.target.value})\r\n    }\r\n\r\n    closeShowStatus() {\r\n        this.setState({ showStatus: false })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.getVendorList}\r\n                <StatusDisplay\r\n                    open={this.state.showStatus}\r\n                    severity={this.state.statusSeverity}\r\n                    closeStatus={this.closeShowStatus}\r\n                    message={this.state.statusMessage}\r\n                />\r\n                {(this.props.privilege == Privilege.ADMIN) ?\r\n                    (<div><ButtonMenu\r\n                    openCreateModal={this.openCreateModal}\r\n                    openImportModal={this.openImportModal}\r\n                    downloadTable={this.downloadTable}\r\n                />\r\n                <CSVLink\r\n                    data={this.state.csvData}\r\n                    filename={modelDownloadFileName}\r\n                    className=\"hidden\"\r\n                    ref={(r) => this.csvLink = r}\r\n                    target=\"_blank\"\r\n                />\r\n                <CreateModal\r\n                    showCreateModal={this.state.showCreateModal}\r\n                    closeCreateModal={this.closeCreateModal}\r\n                    createModel={this.createModel}\r\n                    updateModelCreator={this.updateModelCreator}\r\n                    inputs={inputs}\r\n                    options={this.state.vendorsList}\r\n                    useAutocomplete={true}\r\n                />\r\n                <UploadModal\r\n                    showImportModal={this.state.showImportModal}\r\n                    closeImportModal={this.closeImportModal}\r\n                /></div>):null\r\n                }\r\n                <Filters\r\n                    updateSearchText={this.updateSearchText}\r\n                    search={this.search}\r\n                    filters={columns}\r\n                />\r\n                <TableView\r\n                    columns={columns}\r\n                    vals={this.state.items}\r\n                    keys={columns}\r\n                    showDetailedView={this.showDetailedView}\r\n                    filters={columns}\r\n                />\r\n                <DetailedView\r\n                    showDetailedView={this.state.showDetailedView}\r\n                    closeDetailedView={this.closeDetailedView}\r\n                    inputs={inputs}\r\n                    updateModelEdited={this.updateModelEdited}\r\n                    defaultValues={this.state.detailedValues}\r\n                    loading={this.state.detailViewLoading}\r\n                    edit={this.editModel}\r\n                    delete={this.deleteModel}\r\n                    disabled={this.props.privilege==Privilege.USER}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\nimport axios from 'axios';\r\nimport { UserCommand } from '../enums/userCommands.ts'\r\nimport { UserInput } from '../enums/userInputs.ts'\r\nimport { Privilege } from '../enums/privilegeTypes.ts'\r\nimport TableView from '../helpers/TableView';\r\nimport { CSVLink } from \"react-csv\";\r\nimport ButtonMenu from '../helpers/ButtonMenu';\r\nimport Filters from '../helpers/Filters';\r\nimport UploadModal from '../helpers/UploadModal';\r\nimport getURL from '../helpers/functions/GetURL';\r\nimport DetailedView from '../helpers/DetailedView';\r\nimport CreateModal from '../helpers/CreateModal';\r\nimport * as Constants from '../Constants';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport StatusDisplay from '../helpers/StatusDisplay';\r\nimport Button from '@material-ui/core/Button';\r\n\r\n\r\n\r\nconst inputs = [\r\n    'username',\r\n    'email',\r\n    'display_name',\r\n    'privilege',\r\n    'password',\r\n]\r\n\r\nconst columns = [\r\n    'username',\r\n    'email',\r\n    'display_name',\r\n    'privilege',\r\n]\r\n\r\nconst usersMainPath = 'users/';\r\nconst userDownloadFileName = 'users.csv';\r\n\r\nexport default class UsersView extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n\r\n            // modals\r\n            showCreateModal:false,\r\n            showImportModal:false,\r\n\r\n            // table items\r\n            items:[], //Constants.testUserArray,\r\n\r\n            // vals for creating a new user\r\n            createdUser : {\r\n                'username':'',\r\n                'password':'',\r\n                'display_name':'',\r\n                'email':'',\r\n                'privilege':'',\r\n            },\r\n\r\n            showStatus:false,\r\n            statusMessage:'',\r\n            statusSeverity:'',\r\n\r\n            // vals for deleting a user\r\n            deleteUsername:'',\r\n\r\n            // vals for viewing a user\r\n            viewUser:'',\r\n\r\n            // csv data\r\n            csvData:[],\r\n\r\n            // detailed view\r\n            showDetailedView: false,\r\n            detailViewLoading:false,\r\n            detailedValues : {\r\n                'username':'',\r\n                'display_name':'',\r\n                'email':'',\r\n                'privilege':'',\r\n            },\r\n            originalUsername:'',\r\n        };\r\n\r\n        this.createUser = this.createUser.bind(this);\r\n        this.editUser = this.editUser.bind(this);\r\n        this.deleteUser = this.deleteUser.bind(this);\r\n        this.detailViewUser = this.detailViewUser.bind(this);\r\n        this.searchUsers = this.searchUsers.bind(this);\r\n        this.search = this.search.bind(this);\r\n        this.openCreateModal = this.openCreateModal.bind(this);\r\n        this.openImportModal = this.openImportModal.bind(this);\r\n        this.showDetailedView = this.showDetailedView.bind(this);\r\n        this.closeCreateModal = this.closeCreateModal.bind(this);\r\n        this.closeImportModal = this.closeImportModal.bind(this);\r\n        this.closeDetailedView = this.closeDetailedView.bind(this);\r\n        this.updateUserCreator = this.updateUserCreator.bind(this);\r\n        this.updateUserEdited = this.updateUserEdited.bind(this);\r\n        this.closeShowStatus = this.closeShowStatus.bind(this);\r\n\r\n        axios.defaults.headers.common['token'] = this.props.token;\r\n        axios.defaults.headers.common['privilege'] = this.props.privilege;\r\n\r\n    }\r\n\r\n    createUser() {\r\n        axios.post(\r\n            getURL(usersMainPath, UserCommand.create),\r\n            {\r\n                'username':this.state.createdUser[UserInput.Username],\r\n                'password':this.state.createdUser[UserInput.Password],\r\n                'display_name':this.state.createdUser[UserInput.display_name],\r\n                'email':this.state.createdUser[UserInput.Email],\r\n                'privilege':this.state.createdUser[UserInput.Privilege],\r\n            }\r\n            ).then(response => {\r\n                if (response.data.message === 'success') {\r\n                    this.setState({\r\n                        showStatus: true,\r\n                        statusMessage: \"Successfully created user\",\r\n                        statusSeverity:\"success\",\r\n                        createdUser : {\r\n                            'username':'',\r\n                            'password':'',\r\n                            'display_name':'',\r\n                            'email':'',\r\n                            'privilege':'',\r\n                        },\r\n                        showCreateModal:false,\r\n                    })\r\n                } else {\r\n                    this.setState({ showStatus: true, statusMessage: response.data.message, statusSeverity:\"error\" })\r\n                }\r\n            });\r\n    }\r\n\r\n    editUser() {\r\n        axios.post(\r\n            getURL(usersMainPath, UserCommand.edit),\r\n            {\r\n                'username_original':this.state.originalUsername,\r\n                'username':this.state.detailedValues[UserInput.Username],\r\n                'display_name':this.state.detailedValues[UserInput.display_name],\r\n                'email':this.state.detailedValues[UserInput.Email],\r\n                'privilege':this.state.detailedValues[UserInput.Privilege],\r\n            }\r\n            ).then(response => console.log(response));\r\n\r\n        this.setState({\r\n            originalUsername:'',\r\n            detailedValues : {\r\n                'username':'',\r\n                'display_name':'',\r\n                'email':'',\r\n                'privilege':'',\r\n            },\r\n            showDetailedView:false,\r\n        });\r\n    }\r\n\r\n\r\n    deleteUser() {\r\n        axios.post(\r\n            getURL(usersMainPath, UserCommand.delete),\r\n            {\r\n                'username':this.state.originalUsername,\r\n            }\r\n            ).then(response => console.log(response));\r\n\r\n        this.setState({\r\n            deleteUsername:'',\r\n            showDetailedView:false\r\n        });\r\n    }\r\n\r\n    detailViewUser(username) {\r\n        axios.post(\r\n            getURL(usersMainPath, UserCommand.detailView),\r\n            {\r\n                'username':username,\r\n            }\r\n            ).then(response => this.setState({ detailedValues: response.data['user'], detailViewLoading:false}));\r\n\r\n        this.setState({\r\n            viewUser:'',\r\n        });\r\n    }\r\n\r\n    searchUsers(username, email, display_name, privilege) {\r\n        axios.post(\r\n            getURL(usersMainPath, UserCommand.search),\r\n            {\r\n                'filter':{\r\n                    'username':username,\r\n                    'email':email,\r\n                    'display_name':display_name,\r\n                    'privilege':privilege,\r\n                }\r\n            }\r\n            ).then(response => this.setState({ items: (response.data['users']==null) ? [] : response.data['users'] }));\r\n    }\r\n\r\n    search(filters) {\r\n        this.searchUsers(filters['username'], filters['email'], filters['display_name'], filters['privilege']);\r\n    }\r\n\r\n    downloadTable() {\r\n        this.csvLink.link.click();\r\n    }\r\n\r\n    openCreateModal() {\r\n        this.setState({showCreateModal: true});\r\n    }\r\n\r\n    openImportModal() {\r\n        this.setState({showImportModal: true});\r\n    }\r\n\r\n    showDetailedView(id) {\r\n        this.setState({\r\n            showDetailedView: true,\r\n            detailViewLoading:true,\r\n            originalUsername:this.state.items[id]['username'],\r\n         });\r\n\r\n        var username = this.state.items[id]['username'];\r\n\r\n        this.detailViewUser(username);\r\n        //this.setState({ detailedValues: Constants.testUserArray[id], detailViewLoading:false})\r\n    }\r\n\r\n    closeCreateModal() {\r\n        this.setState({showCreateModal: false});\r\n    }\r\n\r\n    closeImportModal() {\r\n        this.setState({showImportModal: false});\r\n    }\r\n\r\n    closeDetailedView() {\r\n        this.setState({ showDetailedView: false })\r\n    }\r\n\r\n    updateUserCreator(event) {\r\n        this.state.createdUser[event.target.name] = event.target.value;\r\n        this.forceUpdate()\r\n    }\r\n\r\n    updateUserEdited(event) {\r\n        this.state.detailedValues[event.target.name] = event.target.value;\r\n        this.forceUpdate()\r\n    }\r\n\r\n    closeShowStatus() {\r\n        this.setState({ showStatus: false })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <StatusDisplay\r\n                    open={this.state.showStatus}\r\n                    severity={this.state.statusSeverity}\r\n                    closeStatus={this.closeShowStatus}\r\n                    message={this.state.statusMessage}\r\n                />\r\n                {(this.props.privilege == Privilege.ADMIN) ?\r\n                    (<div>\r\n                <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    onClick={this.openCreateModal}\r\n                >\r\n                    Create\r\n                </Button>\r\n                <CreateModal\r\n                    showCreateModal={this.state.showCreateModal}\r\n                    closeCreateModal={this.closeCreateModal}\r\n                    createModel={this.createUser}\r\n                    updateModelCreator={this.updateUserCreator}\r\n                    inputs={inputs}\r\n                    options={[]}\r\n                    useAutocomplete={false}\r\n                />\r\n                <UploadModal\r\n                    showImportModal={this.state.showImportModal}\r\n                    closeImportModal={this.closeImportModal}\r\n                /></div>):null\r\n            }\r\n                <Filters\r\n                    updateSearchText={this.updateSearchText}\r\n                    search={this.search}\r\n                    filters={columns}\r\n                />\r\n                <TableView\r\n                    columns={columns}\r\n                    vals={this.state.items}\r\n                    keys={columns}\r\n                    showDetailedView={this.showDetailedView}\r\n                    filters={columns}\r\n                />\r\n                <DetailedView\r\n                    showDetailedView={this.state.showDetailedView}\r\n                    closeDetailedView={this.closeDetailedView}\r\n                    inputs={columns}\r\n                    updateModelEdited={this.updateUserEdited}\r\n                    defaultValues={this.state.detailedValues}\r\n                    loading={this.state.detailViewLoading}\r\n                    edit={this.editUser}\r\n                    delete={this.deleteUser}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","export enum InstanceCommand {\r\n    create = 'create/',\r\n    delete = 'delete/',\r\n    edit = 'edit/',\r\n    view = 'view/',\r\n    detailView = 'detailView/',\r\n    search = 'search/',\r\n    GET_ALL_MODELS = 'assistedmodel/',\r\n}\r\n","export enum InstanceInput {\r\n    Model = 'model',\r\n    Hostname = 'hostname',\r\n    Rack = 'rack',\r\n    RackU = 'rackU',\r\n    Owner = 'owner',\r\n    Comment = 'comment',\r\n}\r\n","import React from 'react';\r\nimport axios from 'axios';\r\nimport { InstanceCommand } from '../enums/instanceCommands.ts'\r\nimport { InstanceInput } from '../enums/instanceInputs.ts'\r\nimport { Privilege } from '../enums/privilegeTypes.ts'\r\nimport TableView from '../helpers/TableView';\r\nimport { CSVLink } from \"react-csv\";\r\nimport ButtonMenu from '../helpers/ButtonMenu';\r\nimport Filters from '../helpers/Filters';\r\nimport UploadModal from '../helpers/UploadModal';\r\nimport getURL from '../helpers/functions/GetURL';\r\nimport DetailedView from '../helpers/DetailedView';\r\nimport CreateModal from '../helpers/CreateModal';\r\nimport * as Constants from '../Constants';\r\nimport StatusDisplay from '../helpers/StatusDisplay';\r\n\r\nconst inputs = [\r\n    'model',\r\n    'hostname',\r\n    'rack',\r\n    'rackU',\r\n    'owner',\r\n    'comment',\r\n]\r\n\r\nconst columns = [\r\n    'model',\r\n    'hostname',\r\n    'rack',\r\n    'rackU',\r\n]\r\n\r\nconst instancesMainPath = 'instances/';\r\nconst instanceDownloadFileName = 'instances.csv';\r\n\r\n\r\n\r\nexport default class InstancesView extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n\r\n            // modals\r\n            showCreateModal:false,\r\n            showImportModal:false,\r\n\r\n            // table items\r\n            items:[], //Constants.testInstanceArray,\r\n\r\n            // vals for creating a new instance\r\n            createdInstance : {\r\n                'model':'',\r\n                'hostname':'',\r\n                'rack':'',\r\n                'rackU':'',\r\n                'owner':'',\r\n                'comment':'',\r\n            },\r\n\r\n            showStatus:false,\r\n            statusMessage:'',\r\n            statusSeverity:'',\r\n\r\n            // vals for deleting an instance\r\n            deleteInstanceRack:'',\r\n            deleteInstanceRackU:'',\r\n\r\n            // vals for viewing an instance\r\n            viewInstanceRack:'',\r\n            viewInstanceRackU:'',\r\n\r\n            // csv data\r\n            csvData:[],\r\n\r\n            // detailed view\r\n            showDetailedView: false,\r\n            detailViewLoading:false,\r\n            detailedValues : {\r\n                'model':'',\r\n                'hostname':'',\r\n                'rack':'',\r\n                'rackU':'',\r\n                'owner':'',\r\n                'comment':'',\r\n            },\r\n            originalRack:'',\r\n            originalRackU:'',\r\n\r\n            modelList:[],\r\n        };\r\n\r\n        this.createInstance = this.createInstance.bind(this);\r\n        this.editInstance = this.editInstance.bind(this);\r\n        this.deleteInstance = this.deleteInstance.bind(this);\r\n        this.detailViewInstance = this.detailViewInstance.bind(this);\r\n        this.searchInstances = this.searchInstances.bind(this);\r\n        this.search = this.search.bind(this);\r\n        this.openCreateModal = this.openCreateModal.bind(this);\r\n        this.openImportModal = this.openImportModal.bind(this);\r\n        this.showDetailedView = this.showDetailedView.bind(this);\r\n        this.closeCreateModal = this.closeCreateModal.bind(this);\r\n        this.closeImportModal = this.closeImportModal.bind(this);\r\n        this.closeDetailedView = this.closeDetailedView.bind(this);\r\n        this.updateInstanceCreator = this.updateInstanceCreator.bind(this);\r\n        this.updateInstanceEdited = this.updateInstanceEdited.bind(this);\r\n        this.closeShowStatus = this.closeShowStatus.bind(this);\r\n        this.getModelList = this.getModelList.bind(this);\r\n\r\n        axios.defaults.headers.common['token'] = this.props.token;\r\n        axios.defaults.headers.common['privilege'] = this.props.privilege;\r\n\r\n    }\r\n\r\n    createInstance() {\r\n        axios.post(\r\n            getURL(instancesMainPath, InstanceCommand.create),\r\n            {\r\n                'model':this.state.createdInstance[InstanceInput.Model],\r\n                'hostname':this.state.createdInstance[InstanceInput.Hostname],\r\n                'rack':this.state.createdInstance[InstanceInput.Rack],\r\n                'rackU':this.state.createdInstance[InstanceInput.RackU],\r\n                'owner':this.state.createdInstance[InstanceInput.Owner],\r\n                'comment':this.state.createdInstance[InstanceInput.Comment],\r\n            }\r\n            ).then(response => {\r\n                if (response.data.message === 'success') {\r\n                    this.setState({\r\n                        showStatus: true,\r\n                        statusMessage: \"Successfully created instance\",\r\n                        statusSeverity:\"success\",\r\n                        createdInstance : {\r\n                            'model':'',\r\n                            'hostname':'',\r\n                            'rack':'',\r\n                            'rackU':'',\r\n                            'owner':'',\r\n                            'comment':'',\r\n                        },\r\n                        showCreateModal:false,\r\n                    })\r\n                } else {\r\n                    this.setState({ showStatus: true, statusMessage: response.data.message, statusSeverity:\"error\" })\r\n                }\r\n            });\r\n    }\r\n\r\n    editInstance() {\r\n        axios.post(\r\n            getURL(instancesMainPath, InstanceCommand.edit),\r\n            {\r\n                'model':this.state.detailedValues[InstanceInput.Model],\r\n                'hostname':this.state.detailedValues[InstanceInput.Hostname],\r\n                'rack':this.state.detailedValues[InstanceInput.Rack],\r\n                'rackU':this.state.detailedValues[InstanceInput.RackU],\r\n                'owner':this.state.detailedValues[InstanceInput.Owner],\r\n                'comment':this.state.detailedValues[InstanceInput.Comment],\r\n            }\r\n            ).then(response => console.log(response));\r\n\r\n        this.setState({\r\n            detailedValues : {\r\n                'model':'',\r\n                'hostname':'',\r\n                'rack':'',\r\n                'rackU':'',\r\n                'owner':'',\r\n                'comment':'',\r\n            },\r\n            showDetailedView:false,\r\n        });\r\n    }\r\n\r\n\r\n    deleteInstance() {\r\n        axios.post(\r\n            getURL(instancesMainPath, InstanceCommand.delete),\r\n            {\r\n                'rack':this.state.originalRack,\r\n                'rackU':this.state.originalRackU,\r\n            }\r\n            ).then(response => console.log(response));\r\n\r\n        this.setState({\r\n            originalRack:'',\r\n            originalRackU:'',\r\n            showDetailedView:false\r\n        });\r\n    }\r\n\r\n    detailViewInstance(rack, rackU) {\r\n        axios.post(\r\n            getURL(instancesMainPath, InstanceCommand.detailView),\r\n            {\r\n                'rack':rack,\r\n                'rackU':rackU,\r\n            }\r\n            ).then(response => this.setState({ detailedValues: response.data['instances'][0], detailViewLoading:false}));\r\n\r\n        this.setState({\r\n            viewInstanceRack:'',\r\n        });\r\n    }\r\n\r\n    searchInstances(model, hostname, rack, rackU) {\r\n        axios.post(\r\n            getURL(instancesMainPath, InstanceCommand.search),\r\n            {\r\n                'filter':{\r\n                    'model':model,\r\n                    'hostname':hostname,\r\n                    'rack':rack,\r\n                    'rackU':rackU,\r\n                }\r\n            }\r\n            ).then(response => this.setState({ items: response.data['instances'] }));\r\n    }\r\n\r\n    getModelList() {\r\n        axios.get(\r\n            getURL(instancesMainPath, InstanceCommand.GET_ALL_MODELS)\r\n            ).then(response => this.setState({ modelList: response.data.results }));\r\n    }\r\n\r\n    search(filters) {\r\n        this.searchInstances(filters['model'], filters['hostname'], filters['rack'], filters['rackU']);\r\n    }\r\n\r\n    downloadTable() {\r\n        this.csvLink.link.click();\r\n    }\r\n\r\n    openCreateModal() {\r\n        this.setState({showCreateModal: true});\r\n    }\r\n\r\n    openImportModal() {\r\n        this.setState({showImportModal: true});\r\n    }\r\n\r\n    showDetailedView(id) {\r\n        this.setState({\r\n            showDetailedView: true,\r\n            detailViewLoading:true,\r\n            originalRack: this.state.items[id]['rack'],\r\n            originalRackU: this.state.items[id]['rackU'],\r\n        });\r\n\r\n        var model = this.state.items[id]['model'];\r\n        var hostname = this.state.items[id]['hostname'];\r\n        var rack = this.state.items[id]['rack'];\r\n        var rackU = this.state.items[id]['rackU'];\r\n\r\n        this.detailViewInstance(model, hostname, rack, rackU);\r\n    }\r\n\r\n    closeCreateModal() {\r\n        this.setState({showCreateModal: false});\r\n    }\r\n\r\n    closeImportModal() {\r\n        this.setState({showImportModal: false});\r\n    }\r\n\r\n    closeDetailedView() {\r\n        this.setState({ showDetailedView: false })\r\n    }\r\n\r\n    updateInstanceCreator(event) {\r\n        this.state.createdInstance[event.target.name] = event.target.value;\r\n        this.forceUpdate()\r\n    }\r\n\r\n    updateInstanceEdited(event) {\r\n        this.state.detailedValues[event.target.name] = event.target.value;\r\n        this.forceUpdate()\r\n    }\r\n    closeShowStatus() {\r\n        this.setState({ showStatus: false })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.getVendorList}\r\n                <StatusDisplay\r\n                    open={this.state.showStatus}\r\n                    severity={this.state.statusSeverity}\r\n                    closeStatus={this.closeShowStatus}\r\n                    message={this.state.statusMessage}\r\n                />\r\n                {(this.props.privilege == Privilege.ADMIN) ?\r\n                    (<div>\r\n                <ButtonMenu\r\n                    openCreateModal={this.openCreateModal}\r\n                    openImportModal={this.openImportModal}\r\n                    downloadTable={this.downloadTable}\r\n                />\r\n                <CSVLink\r\n                    data={this.state.csvData}\r\n                    filename={instanceDownloadFileName}\r\n                    className=\"hidden\"\r\n                    ref={(r) => this.csvLink = r}\r\n                    target=\"_blank\"\r\n                />\r\n                <CreateModal\r\n                    showCreateModal={this.state.showCreateModal}\r\n                    closeCreateModal={this.closeCreateModal}\r\n                    createModel={this.createInstance}\r\n                    updateModelCreator={this.updateInstanceCreator}\r\n                    inputs={inputs}\r\n                    options={this.state.modelList}\r\n                    useAutocomplete={true}\r\n                />\r\n                <UploadModal\r\n                    showImportModal={this.state.showImportModal}\r\n                    closeImportModal={this.closeImportModal}\r\n                /></div>):null\r\n            }\r\n                <Filters\r\n                    updateSearchText={this.updateSearchText}\r\n                    search={this.search}\r\n                    filters={columns}\r\n                />\r\n                <TableView\r\n                    columns={columns}\r\n                    vals={this.state.items}\r\n                    keys={columns}\r\n                    showDetailedView={this.showDetailedView}\r\n                    filters={columns}\r\n                />\r\n                <DetailedView\r\n                    showDetailedView={this.state.showDetailedView}\r\n                    closeDetailedView={this.closeDetailedView}\r\n                    inputs={inputs}\r\n                    updateModelEdited={this.updateInstanceEdited}\r\n                    defaultValues={this.state.detailedValues}\r\n                    loading={this.state.detailViewLoading}\r\n                    edit={this.editInstance}\r\n                    delete={this.deleteInstance}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","export enum RackCommand {\r\n    GET_ALL_RACKS = \"all\",\r\n    CREATE_RACKS = \"create\",\r\n    DELETE_RACKS = \"delete\",\r\n    GET_RACK_DETAILS = \"details\"\r\n}\r\n","import React from 'react';\r\nimport axios from 'axios';\r\nimport { Privilege } from '../enums/privilegeTypes.ts';\r\nimport TableView from '../helpers/TableView';\r\nimport getURL from '../helpers/functions/GetURL';\r\nimport * as Constants from '../Constants';\r\nimport StatusDisplay from '../helpers/StatusDisplay';\r\nimport Select from '@material-ui/core/Select';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport { MenuItem, Button } from '@material-ui/core';\r\nimport { RackCommand } from \"../enums/rackCommands.ts\";\r\n\r\n\r\nconst racksMainPath = 'racks/';\r\n\r\nexport default class RacksView extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            items:[],\r\n            startingRackLetter:'',\r\n            endingRackLetter:'',\r\n            startingRackNumber:-1,\r\n            endingRackNumber:-1,\r\n\r\n            showStatus:false,\r\n            statusMessage:'',\r\n            statusSeverity:'',\r\n\r\n            showConfirmationBox:false,\r\n        };\r\n\r\n        this.getAllRacks = this.getAllRacks.bind(this);\r\n        this.updateRacks = this.updateRacks.bind(this);\r\n        this.createRacks = this.createRacks.bind(this);\r\n        this.deleteRacks = this.deleteRacks.bind(this);\r\n        this.viewRacks = this.viewRacks.bind(this);\r\n        this.changeStartingLetter = this.changeStartingLetter.bind(this);\r\n        this.changeEndingLetter = this.changeEndingLetter.bind(this);\r\n        this.changeStartingNum = this.changeStartingNum.bind(this);\r\n        this.changeEndingNum = this.changeEndingNum.bind(this);\r\n        this.closeShowStatus = this.closeShowStatus.bind(this);\r\n\r\n        axios.defaults.headers.common['token'] = this.props.token;\r\n        axios.defaults.headers.common['privilege'] = this.props.privilege;\r\n\r\n    }\r\n\r\n    getAllRacks() {\r\n        axios.get(getURL(racksMainPath, RackCommand.GET_ALL_RACKS)).then(response => {\r\n                if (response.data.message === 'success') {\r\n                    this.setState({ showStatus: true, statusMessage: \"Success\" })\r\n                } else {\r\n                    this.setState({ showStatus: true, statusMessage: response.data.message, statusSeverity:\"error\" })\r\n                }\r\n            });\r\n    }\r\n\r\n    updateRacks(command) {\r\n        axios.post(\r\n            getURL(racksMainPath, command),\r\n            {\r\n                'start_letter':this.state.startingRackLetter,\r\n                'stop_letter':this.state.endingRackLetter,\r\n                'start_number':this.state.startingRackNumber,\r\n                'stop_number':this.state.endingRackNumber,\r\n            }\r\n            ).then(response => {\r\n                if (response.data.message === 'success') {\r\n                    this.setState({ showStatus: true, statusMessage: \"Success\", statusSeverity:\"success\" })\r\n                } else {\r\n                    this.setState({ showStatus: true, statusMessage: response.data.message, statusSeverity:\"error\" })\r\n                }\r\n\r\n                if (command == RackCommand.GET_RACK_DETAILS) {\r\n                    console.log(response.data);\r\n                    this.setState({ items: response.data });\r\n                }\r\n            });\r\n    }\r\n\r\n    createRacks() {\r\n        this.updateRacks(RackCommand.CREATE_RACKS);\r\n    }\r\n\r\n    deleteRacks() {\r\n        this.updateRacks(RackCommand.DELETE_RACKS);\r\n    }\r\n\r\n    viewRacks() {\r\n        this.updateRacks(RackCommand.GET_RACK_DETAILS);\r\n    }\r\n\r\n    changeStartingLetter(event) {\r\n        this.setState({ startingRackLetter: event.target.value })\r\n    }\r\n\r\n    changeEndingLetter(event) {\r\n        this.setState({ endingRackLetter: event.target.value })\r\n    }\r\n\r\n    changeStartingNum(event) {\r\n        this.setState({ startingRackNumber: event.target.value })\r\n    }\r\n\r\n    changeEndingNum(event) {\r\n        this.setState({ endingRackNumber: event.target.value })\r\n    }\r\n\r\n    closeShowStatus() {\r\n        this.setState({ showStatus: false })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <StatusDisplay\r\n                    open={this.state.showStatus}\r\n                    severity={this.state.statusSeverity}\r\n                    closeStatus={this.closeShowStatus}\r\n                    message={this.state.statusMessage}\r\n                />\r\n                <FormControl>\r\n                    <Select id=\"starting-letter-selector\" value={this.state.startingRackLetter} onChange={this.changeStartingLetter}>\r\n                        {Constants.RackX.map(val => (<MenuItem value={val}>{val}</MenuItem>))}\r\n                    </Select>\r\n                    <FormHelperText>Starting Letter</FormHelperText>\r\n                </FormControl>\r\n                <FormControl>\r\n                    <Select id=\"ending-letter-selector\" value={this.state.endingRackLetter} onChange={this.changeEndingLetter}>\r\n                        {Constants.RackX.map(val => (<MenuItem value={val}>{val}</MenuItem>))}\r\n                    </Select>\r\n                    <FormHelperText>Ending Letter</FormHelperText>\r\n                </FormControl>\r\n                <FormControl>\r\n                    <Select id=\"starting-num-selector\" value={this.state.startingRackNumber} onChange={this.changeStartingNum}>\r\n                        {Constants.RackY.map(val => (<MenuItem value={val}>{val}</MenuItem>))}\r\n                    </Select>\r\n                    <FormHelperText>Starting Number</FormHelperText>\r\n                </FormControl>\r\n                <FormControl>\r\n                    <Select id=\"ending-num-selector\" value={this.state.endingRackNumber} onChange={this.changeEndingNum}>\r\n                        {Constants.RackY.map(val => (<MenuItem value={val}>{val}</MenuItem>))}\r\n                    </Select>\r\n                    <FormHelperText>Ending Number</FormHelperText>\r\n                </FormControl>\r\n                <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    onClick={this.viewRacks}\r\n                    disabled={this.state.showConfirmationBox}\r\n                >\r\n                    View\r\n                </Button>\r\n                {(this.props.privilege == Privilege.ADMIN) ?\r\n                (<div>\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        onClick={this.createRacks}\r\n                        disabled={this.state.showConfirmationBox}\r\n                    >\r\n                        Create\r\n                    </Button>\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        onClick={() => this.setState({ showConfirmationBox: true, })}\r\n                        disabled={this.state.showConfirmationBox}\r\n                    >\r\n                        Delete\r\n                    </Button>\r\n                </div>):null}\r\n\r\n                {this.state.showConfirmationBox ? <div>\r\n                        Are you sure you wish to delete?\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            onClick={this.deleteRacks}\r\n                        >\r\n                            Yes\r\n                        </Button>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            onClick={() => this.setState({ showConfirmationBox: false, })}\r\n                        >\r\n                            No\r\n                        </Button>\r\n                    </div>:null}\r\n\r\n                {/*<TableView\r\n                    columns={columns}\r\n                    vals={this.state.items}\r\n                    keys={columns}\r\n                    showDetailedView={this.showDetailedView}\r\n                    filters={columns}\r\n                />*/}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","export enum StatsCommand {\r\n    GENERATE_REPORT = \"generate-report\",\r\n    TEST = \"test\",\r\n}\r\n","import { ModelInput } from '../../enums/modelInputs.ts'\r\n\r\nexport default function jsonToArr(incomingJSON) {\r\n    try {\r\n        var json = JSON.parse(incomingJSON);\r\n    } catch (e) {\r\n        var json = incomingJSON;\r\n    }\r\n\r\n    if (Object.entries(json).length === 0 && json.constructor === Object) {\r\n        return [];\r\n    }\r\n\r\n    const items = [];\r\n\r\n    Object.keys(json).map(function(key) {\r\n        const row = [];\r\n        row.push(key);\r\n        row.push(json[key]);\r\n        items.push(row);\r\n    });\r\n    return items;\r\n}\r\n","import React from 'react';\r\nimport axios from 'axios';\r\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\r\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\r\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport getURL from '../helpers/functions/GetURL';\r\nimport  Button from '@material-ui/core/Button';\r\nimport { StatsCommand } from \"../enums/statsCommands.ts\";\r\nimport JSONtoArr from \"../helpers/functions/JSONtoArr\";\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport StatusDisplay from '../helpers/StatusDisplay';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\n\r\nconst statsMainPath = 'stats/';\r\nconst tables = {\r\n    \"totalUsage\":\"Total Usage\",\r\n    \"spaceUsage\": \"Space Usage\",\r\n    \"vendorUsage\": \"Vendor Usage\",\r\n    \"modelUsage\": \"Model Usage\",\r\n    \"ownerUsage\": \"Owner Usage\",\r\n}\r\n\r\nconst tableCols = {\r\n    \"totalUsage\":[\"Total\", \"Usage\"],\r\n    \"spaceUsage\": [\"Rack\", \"Usage\"],\r\n    \"vendorUsage\": [\"Vendor\", \"Usage\"],\r\n    \"modelUsage\": [\"Model\", \"Usage\"],\r\n    \"ownerUsage\": [\"Ownder\", \"Usage\"],\r\n}\r\n\r\nexport default class StatisticsView extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            tableValues: {\r\n                \"totalUsage\":[],\r\n                \"spaceUsage\": [],\r\n                \"vendorUsage\": [],\r\n                \"modelUsage\": [],\r\n                \"ownerUsage\": [],\r\n            },\r\n            totalUsage:[],\r\n            spaceUsage:[],\r\n            vendorUsage:[],\r\n            modelUsage:[],\r\n            ownerUsage:[],\r\n\r\n            showStatus:false,\r\n            statusMessage:'',\r\n            statusSeverity:'',\r\n        };\r\n\r\n        this.closeShowStatus = this.closeShowStatus.bind(this);\r\n        this.generateReport = this.generateReport.bind(this);\r\n\r\n        axios.defaults.headers.common['token'] = this.props.token;\r\n        axios.defaults.headers.common['privilege'] = this.props.privilege;\r\n    }\r\n\r\n    generateReport() {\r\n        axios.get(getURL(statsMainPath, StatsCommand.GENERATE_REPORT)).then(response => {\r\n                try {\r\n                    var data = response.data;\r\n                    var totalUsage = [];\r\n                    var totalUsageRow = [\"Total Usage\"];\r\n                    totalUsageRow.push(data[\"totalUsage\"]);\r\n                    totalUsage.push(totalUsageRow);\r\n\r\n                    var spaceUsage = JSONtoArr(data[\"spaceUsage\"]);\r\n                    if (spaceUsage.length == 0) {\r\n                        spaceUsage.push([\"No space is currently being used\", []])\r\n                    }\r\n                    var vendorUsage = JSONtoArr(data[\"vendorUsage\"]);\r\n                    if (vendorUsage.length == 0) {\r\n                        vendorUsage.push([\"No vendors currently using space\", []])\r\n                    }\r\n                    var modelUsage = JSONtoArr(data[\"modelUsage\"]);\r\n                    if (modelUsage.length == 0) {\r\n                        modelUsage.push([\"No models currently using space\", []])\r\n                    }\r\n                    var ownerUsage = JSONtoArr(data[\"ownerUsage\"]);\r\n                    if (ownerUsage.length == 0) {\r\n                        ownerUsage.push([\"No owners currently using space\", []])\r\n                    }\r\n\r\n                    this.setState({\r\n                        showStatus: true,\r\n                        statusSeverity:\"success\",\r\n                        statusMessage: \"Success\",\r\n                        tableValues: {\r\n                            \"totalUsage\":totalUsage,\r\n                            \"spaceUsage\": spaceUsage,\r\n                            \"vendorUsage\": vendorUsage,\r\n                            \"modelUsage\": modelUsage,\r\n                            \"ownerUsage\": ownerUsage,\r\n                        },\r\n                     })\r\n                } catch {\r\n                    this.setState({ showStatus: true, statusMessage: response.data.message, statusSeverity:\"error\" })\r\n                }\r\n            });\r\n    }\r\n\r\n    closeShowStatus() {\r\n        this.setState({ showStatus: false })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <StatusDisplay\r\n                    open={this.state.showStatus}\r\n                    severity={this.state.statusSeverity}\r\n                    closeStatus={this.closeShowStatus}\r\n                    message={this.state.statusMessage}\r\n                />\r\n                <div>\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        onClick={this.generateReport}\r\n                    >\r\n                        Generate New Report\r\n                    </Button>\r\n                </div>\r\n                {Object.keys(tables).map(key => (\r\n                <ExpansionPanel>\r\n                    <ExpansionPanelSummary\r\n                        expandIcon={<ExpandMoreIcon />}\r\n                    >\r\n                        <Typography>{tables[key]}</Typography>\r\n                    </ExpansionPanelSummary>\r\n                    <ExpansionPanelDetails>\r\n                        <TableContainer component={Paper}>\r\n                            <Table>\r\n                                <TableHead>\r\n                                    <TableRow >\r\n                                        {tableCols[key].map(column => (<TableCell><span id={column}>{column}</span></TableCell>))}\r\n                                    </TableRow>\r\n                                </TableHead>\r\n                                <TableBody>\r\n                                {this.state.tableValues[key].map(row => (\r\n                                    <TableRow>\r\n                                        {row.map(column => (<TableCell><span id={column}>{column}</span></TableCell>))}\r\n                                    </TableRow>\r\n                                ))}\r\n                                </TableBody>\r\n                            </Table>\r\n                        </TableContainer>\r\n                    </ExpansionPanelDetails>\r\n                </ExpansionPanel>\r\n                ))}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Button from '@material-ui/core/Button';\r\nimport ModelsView from './pages/ModelsView';\r\nimport UsersView from './pages/UsersView';\r\nimport InstancesView from './pages/InstancesView';\r\nimport RacksView from './pages/RacksView';\r\nimport StatisticsView from './pages/StatisticsView';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { Privilege } from './enums/privilegeTypes.ts'\r\n\r\nexport default class TabViewer extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            currentTabID:0,\r\n        };\r\n        this.handleChange = this.handleChange.bind(this);\r\n    }\r\n\r\n    handleChange(event, newValue) {\r\n        this.setState({ currentTabID: newValue })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n        <div>\r\n            <AppBar position=\"static\">\r\n                <Tabs value={this.state.currentTabID} onChange={this.handleChange}>\r\n                    <Tab value={0} style={{flexGrow: 1,}} label=\"Models\"> </Tab>\r\n                    <Tab value={1} style={{flexGrow: 1,}} label=\"Instances\" ></Tab>\r\n                    {(this.props.privilege == Privilege.ADMIN) ? <Tab value={2} style={{flexGrow: 1,}} label=\"Users\"></Tab> : null}\r\n                    <Tab value={3} style={{flexGrow: 1,}} label=\"Racks\" />\r\n                    <Tab value={4} style={{flexGrow: 1,}} label=\"Statistics\" />\r\n                    <Button\r\n                        style={{flexGrow: 1,}}\r\n                        variant=\"contained\"\r\n                        color=\"secondary\"\r\n                        onClick={this.props.logout}\r\n                    >\r\n                        Logout\r\n                    </Button>\r\n                </Tabs>\r\n            </AppBar>\r\n            <Typography\r\n                component=\"div\"\r\n                role=\"tabpanel\"\r\n                hidden={this.state.currentTabID !== 0}\r\n                id={`simple-tabpanel-0`}\r\n                aria-labelledby={`simple-tab-0`}\r\n            >\r\n                <ModelsView token={this.props.token} privilege={this.props.privilege} />\r\n            </Typography>\r\n            <Typography\r\n                component=\"div\"\r\n                role=\"tabpanel\"\r\n                hidden={this.state.currentTabID !== 1}\r\n                id={`simple-tabpanel-0`}\r\n                aria-labelledby={`simple-tab-0`}\r\n            >\r\n                <InstancesView token={this.props.token} privilege={this.props.privilege} />\r\n            </Typography>\r\n            <Typography\r\n                component=\"div\"\r\n                role=\"tabpanel\"\r\n                hidden={this.state.currentTabID !== 2}\r\n                id={`simple-tabpanel-0`}\r\n                aria-labelledby={`simple-tab-0`}\r\n            >\r\n                <UsersView token={this.props.token} privilege={this.props.privilege} />\r\n            </Typography>\r\n            <Typography\r\n                component=\"div\"\r\n                role=\"tabpanel\"\r\n                hidden={this.state.currentTabID !== 3}\r\n                id={`simple-tabpanel-0`}\r\n                aria-labelledby={`simple-tab-0`}\r\n            >\r\n                <RacksView token={this.props.token} privilege={this.props.privilege} />\r\n            </Typography>\r\n            <Typography\r\n                component=\"div\"\r\n                role=\"tabpanel\"\r\n                hidden={this.state.currentTabID !== 4}\r\n                id={`simple-tabpanel-0`}\r\n                aria-labelledby={`simple-tab-0`}\r\n            >\r\n                <StatisticsView token={this.props.token} privilege={this.props.privilege} />\r\n            </Typography>\r\n        </div>);\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport Login from \"./Login\";\r\nimport TabViewer from \"./Tabs\";\r\nimport axios from 'axios';\r\nimport getURL from './helpers/functions/GetURL';\r\n\r\nexport default class PageSelector extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      token:'',\r\n      privilege:'',\r\n      loggedIn:false,\r\n    };\r\n\r\n    this.login = this.login.bind(this);\r\n    this.logout = this.logout.bind(this);\r\n  }\r\n\r\n  login(token, privilege) {\r\n    this.setState({\r\n      token:token,\r\n      privilege:privilege,\r\n      loggedIn:true,\r\n    })\r\n  }\r\n\r\n  logout() {\r\n    axios.get(getURL('users/', 'logout'));\r\n\r\n    this.setState({\r\n      token:'',\r\n      privilege:'',\r\n      loggedIn:false,\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        {this.state.loggedIn ?  <TabViewer token={this.state.token} privilege={this.state.privilege} logout={this.logout} /> : <Login loginFunc={this.login} />}\r\n      </div>\r\n    );\r\n  }\r\n\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './stylesheets/index.css';\nimport PageSelector from './javascript/PageSelector';\n\nReactDOM.render(<PageSelector />, document.getElementById('root'));\n"],"sourceRoot":""}
