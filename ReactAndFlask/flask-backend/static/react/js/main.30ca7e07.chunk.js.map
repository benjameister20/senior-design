{"version":3,"sources":["javascript/enums/privilegeTypes.ts","javascript/Constants.jsx","javascript/helpers/functions/GetURL.jsx","javascript/enums/modelCommands.ts","javascript/enums/modelInputs.ts","javascript/helpers/StatusDisplay.jsx","javascript/Login.jsx","javascript/enums/userCommands.ts","javascript/enums/userInputs.ts","javascript/helpers/TableView.jsx","javascript/helpers/ButtonMenu.jsx","javascript/helpers/Filters.jsx","javascript/helpers/UploadModal.jsx","javascript/helpers/DetailedView.jsx","javascript/helpers/CreateModal.jsx","javascript/pages/ModelsView.jsx","javascript/pages/UsersView.jsx","javascript/enums/instanceCommands.ts","javascript/enums/instanceInputs.ts","javascript/pages/InstancesView.jsx","javascript/enums/rackCommands.ts","javascript/pages/RacksView.jsx","javascript/enums/statsCommands.ts","javascript/helpers/functions/JSONtoArr.jsx","javascript/pages/StatisticsView.jsx","javascript/Tabs.jsx","javascript/PageSelector.jsx","index.jsx"],"names":["Privilege","serverEndpoint","RackX","RackY","getURL","path","endpoint","Constants","ModelCommand","ModelInput","StatusDisplay","props","state","Collapse","in","this","open","Alert","severity","action","IconButton","aria-label","color","size","onClick","closeStatus","fontSize","message","React","Component","Login","username","password","statusMessage","showStatus","statusSeverity","closeShowStatus","bind","submitCredentials","axios","post","then","response","data","setState","loginFunc","ADMIN","event","target","value","TextField","id","label","variant","required","ref","onChange","updateUsername","type","updatePassword","Button","UserCommand","UserInput","TableView","showDetailedView","TableContainer","component","Paper","Table","className","minWidth","TableHead","TableRow","columns","map","col","TableCell","TableBody","vals","row","index","keys","key","scope","ButtonMenu","openCreateModal","startIcon","openImportModal","downloadTable","Filters","filters","hasOwnProperty","forceUpdate","search","filter","InputBase","placeholder","inputProps","updateSearchText","UploadModal","Modal","style","top","left","transform","bgcolor","aria-labelledby","aria-describedby","showImportModal","onClose","closeImportModal","accept","DetailedView","showConfirmationBox","closeDetailedView","inputs","input","disabled","updateModelEdited","defaultValue","defaultValues","edit","delete","CreateModal","showCreateModal","closeCreateModal","name","updateModelCreator","createModel","ModelsView","items","createdModel","createdVendor","createdModelNum","createdHeight","createdDispClr","createdEthPorts","createdPwrPorts","createdCPU","createdMem","createdStorage","createdComments","deleteVendor","deleteModel","viewVendor","viewModel","searchText","csvData","detailViewLoading","detailedValues","editModel","defaults","headers","common","token","privilege","create","Vendor","ModelNumber","Height","DisplayColor","EthernetPorts","PowerPorts","CPU","Memory","Storage","Comment","console","log","vendor","modelNum","detailView","height","searchModels","csvLink","link","click","detailViewModel","filename","r","loading","USER","InstanceCommand","InstanceInput","UsersView","createdUser","deleteUsername","viewUser","createUser","editUser","deleteUser","detailViewUser","searchUsers","updateUserCreator","updateUserEdited","Username","Password","DisplayName","Email","email","displayName","RackCommand","InstancesView","createdInstance","deleteInstanceRack","deleteInstanceRackU","viewInstanceRack","viewInstanceRackU","createInstance","editInstance","deleteInstance","detailViewInstance","searchInstances","updateInstanceCreator","updateInstanceEdited","Model","Hostname","Rack","RackU","Owner","rack","rackU","model","hostname","StatsCommand","RacksView","startingRackLetter","endingRackLetter","startingRackNumber","endingRackNumber","getAllRacks","updateRacks","createRacks","deleteRacks","viewRacks","changeStartingLetter","changeEndingLetter","changeStartingNum","changeEndingNum","get","GET_ALL_RACKS","command","GET_RACK_DETAILS","CREATE_RACKS","DELETE_RACKS","FormControl","Select","val","MenuItem","FormHelperText","jsonToArr","json","Object","forEach","push","tables","tableCols","StatisticsView","tableValues","totalUsage","spaceUsage","vendorUsage","modelUsage","ownerUsage","GENERATE_REPORT","totalUsageRow","JSONtoArr","generateReport","ExpansionPanel","ExpansionPanelSummary","expandIcon","aria-controls","Typography","ExpansionPanelDetails","column","TabViewer","currentTabID","handleChange","newValue","AppBar","position","Tabs","Tab","flexGrow","logout","role","hidden","PageSelector","loggedIn","login","ReactDOM","render","document","getElementById"],"mappings":"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","file":"js/main.30ca7e07.chunk.js","sourcesContent":["export enum Privilege  {\r\n    ADMIN = \"admin\",\r\n    USER = \"user\",\r\n};\r\n","/**\r\n * Constants file\r\n */\r\n\r\nexport const localServerEndpoint = 'http://localhost:4010/';\r\nexport const devServerEndpoint = 'https://parseltongue-dev.herokuapp.com/';\r\nexport const prodServerEndpoint = 'https://parseltongue-prod.herokuapp.com/';\r\n\r\nexport const serverEndpoint = devServerEndpoint;\r\n\r\nexport const RackX = [\r\n    'A', 'B', 'C', 'D', 'E',\r\n    'F', 'G', 'H', 'I', 'J',\r\n    'K', 'L', 'M', 'N', 'O',\r\n    'P', 'Q', 'R', 'S', 'T',\r\n    'W', 'X', 'Y', 'Z',\r\n]\r\n\r\nexport const RackY = [\r\n    1, 2, 3, 4, 5, 6, 7, 8, 9, 10,\r\n    11, 12, 13, 14, 15, 16, 17, 18, 19 , 20,\r\n    21, 22, 23, 24, 25, 26, 27, 28, 29, 30,\r\n    31, 32, 33, 34, 35, 36, 37, 38, 39, 40,\r\n    41, 42, 43, 44, 45, 46, 47, 48, 49, 50,\r\n    51, 52, 53, 54, 55, 56, 57, 58, 59, 60,\r\n]\r\n\r\nexport const testModelArray = [\r\n    {\r\n        'vendor':'a',\r\n        'modelNumber':'a',\r\n        'height':'a',\r\n        'displayColor':'a',\r\n        'ethernetPorts':'a',\r\n        'powerPorts':'a',\r\n        'cpu':'a',\r\n        'memory':'a',\r\n        'storage':'a',\r\n        'comments':'a',\r\n    },{\r\n        'vendor':'b',\r\n        'modelNumber':'b',\r\n        'height':'b',\r\n        'displayColor':'b',\r\n        'ethernetPorts':'b',\r\n        'powerPorts':'b',\r\n        'cpu':'b',\r\n        'memory':'b',\r\n        'storage':'b',\r\n        'comments':'b',\r\n    },{\r\n        'vendor':'c',\r\n        'modelNumber':'c',\r\n        'height':'c',\r\n        'displayColor':'c',\r\n        'ethernetPorts':'c',\r\n        'powerPorts':'c',\r\n        'cpu':'c',\r\n        'memory':'c',\r\n        'storage':'c',\r\n        'comments':'c',\r\n    },\r\n];\r\n\r\nexport const testUserArray = [\r\n    {\r\n        'username':'a',\r\n        'password':'a',\r\n        'displayName':'a',\r\n        'email':'a',\r\n        'privilege':'a',\r\n    },{\r\n        'username':'b',\r\n        'password':'b',\r\n        'displayName':'b',\r\n        'email':'b',\r\n        'privilege':'b',\r\n    },{\r\n        'username':'c',\r\n        'password':'c',\r\n        'displayName':'c',\r\n        'email':'c',\r\n        'privilege':'c',\r\n    },\r\n];\r\n\r\nexport const testInstanceArray = [\r\n    {\r\n        'model':'a',\r\n        'hostname':'a',\r\n        'rack':'a',\r\n        'rackU':'a',\r\n        'owner':'a',\r\n        'comment':'a',\r\n    },{\r\n        'model':'b',\r\n        'hostname':'b',\r\n        'rack':'b',\r\n        'rackU':'b',\r\n        'owner':'b',\r\n        'comment':'b',\r\n    },{\r\n        'model':'c',\r\n        'hostname':'c',\r\n        'rack':'c',\r\n        'rackU':'c',\r\n        'owner':'c',\r\n        'comment':'c',\r\n    },\r\n];\r\n","import * as Constants from '../../Constants';\r\n\r\nexport default function getURL(path, endpoint) {\r\n    return Constants.serverEndpoint + path + endpoint;\r\n}\r\n","export enum ModelCommand {\r\n    create = 'create/',\r\n    delete = 'delete/',\r\n    edit = 'edit/',\r\n    view = 'view/',\r\n    detailView = 'detailView/',\r\n    search = 'search/',\r\n}\r\n","export enum ModelInput {\r\n    Vendor = 'vendor',\r\n    ModelNumber = 'modelNumber',\r\n    Height = 'height',\r\n    DisplayColor = 'displayColor',\r\n    EthernetPorts = 'ethernetPorts',\r\n    PowerPorts = 'powerPorts',\r\n    CPU = 'cpu',\r\n    Memory = 'memory',\r\n    Storage = 'storage',\r\n    Comment = 'comments'\r\n}\r\n","import React from 'react';\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport Button from '@material-ui/core/Button';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\n\r\nexport default class StatusDisplay extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n\r\n        };\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Collapse in={this.props.open}>\r\n                    <Alert\r\n                        severity={this.props.severity}\r\n                        action={\r\n                        <IconButton\r\n                            aria-label=\"close\"\r\n                            color=\"inherit\"\r\n                            size=\"small\"\r\n                            onClick={this.props.closeStatus}\r\n                        >\r\n                            <CloseIcon fontSize=\"inherit\" />\r\n                        </IconButton>\r\n                        }\r\n                    >\r\n                        {this.props.message}\r\n                    </Alert>\r\n                </Collapse>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport axios from 'axios';\r\nimport getURL from './helpers/functions/GetURL';\r\nimport * as Constants from './Constants';\r\nimport { Privilege } from './enums/privilegeTypes.ts'\r\nimport StatusDisplay from './helpers/StatusDisplay';\r\n\r\nconst loginMainPath = 'users/';\r\n\r\nexport default class Login extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            username:'',\r\n            password:'',\r\n            statusMessage:'',\r\n            showStatus:false,\r\n            statusSeverity:'',\r\n        };\r\n\r\n        this.closeShowStatus = this.closeShowStatus.bind(this);\r\n        this.submitCredentials = this.submitCredentials.bind(this);\r\n    }\r\n\r\n    submitCredentials() {\r\n        axios.post(\r\n            getURL(loginMainPath, 'authenticate'),\r\n            {\r\n                \"username\":this.state.username,\r\n                \"password\":this.state.password,\r\n            }\r\n            ).then(response => {\r\n                var valid = response.data['message'];\r\n                if (valid == 'success') {\r\n                    this.setState({ message: '' });\r\n                    this.props.loginFunc(response.data['token'], response.data['privilege']);\r\n                } else {\r\n                    this.setState({ showStatus:true, statusMessage:response.data['message'] });\r\n                }\r\n            });\r\n        this.props.loginFunc('token', Privilege.ADMIN);\r\n    }\r\n\r\n    updateUsername(event) {\r\n        this.setState({ username: event.target.value })\r\n    }\r\n\r\n    updatePassword(event) {\r\n        this.setState({ password: event.target.value })\r\n    }\r\n\r\n    closeShowStatus() {\r\n        this.setState({ showStatus: false })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <StatusDisplay\r\n                    open={this.state.showStatus}\r\n                    severity={this.state.statusSeverity}\r\n                    closeStatus={this.closeShowStatus}\r\n                    message={this.state.statusMessage}\r\n                />\r\n                <TextField\r\n                    id=\"outlined-basic\"\r\n                    label=\"Username\"\r\n                    variant=\"outlined\"\r\n                    required=\"true\"\r\n                    ref='username'\r\n                    onChange={this.updateUsername.bind(this)}\r\n                />\r\n                <TextField\r\n                    id=\"outlined-basic\"\r\n                    label=\"Password\"\r\n                    variant=\"outlined\"\r\n                    required=\"true\"\r\n                    ref='password'\r\n                    type=\"password\"\r\n                    onChange={this.updatePassword.bind(this)}\r\n                />\r\n                <Button\r\n                    onClick={this.submitCredentials}\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                >\r\n                    Sign In\r\n                </Button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","export enum UserCommand {\r\n    create = 'create/',\r\n    delete = 'delete/',\r\n    edit = 'edit/',\r\n    view = 'view/',\r\n    detailView = 'detailView/',\r\n    search='search/',\r\n}\r\n","export enum UserInput {\r\n    Username='username',\r\n    Password='password',\r\n    Email='email',\r\n    DisplayName='displayName',\r\n    Privilege='privilege',\r\n}\r\n","import React from 'react';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nexport default class TableView extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n\r\n    };\r\n  }\r\n\r\n  showDetailedView(event) {\r\n    this.props.showDetailedView(event.target.id);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <TableContainer component={Paper}>\r\n          <Table className={{minWidth: 650}} aria-label=\"simple table\">\r\n            <TableHead>\r\n              <TableRow >\r\n                {this.props.columns.map(col => (<TableCell><span id={col}>{col}</span></TableCell>))}\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {this.props.vals.map((row, index)=> (\r\n              <TableRow>\r\n                {this.props.keys.map(key => (<TableCell scope=\"row\"><span id={index} onClick={this.showDetailedView.bind(this)}>{row[key]}</span></TableCell>))}\r\n              </TableRow>\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\r\nimport CloudDownloadIcon from '@material-ui/icons/CloudDownload';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nexport default class ButtonMenu extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n\r\n        };\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div>\r\n                <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    onClick={this.props.openCreateModal}\r\n                >\r\n                    Create\r\n                </Button>\r\n                <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    startIcon={<CloudUploadIcon />}\r\n                    onClick={this.props.openImportModal}\r\n                >\r\n                    Import\r\n                </Button>\r\n                <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    startIcon={<CloudDownloadIcon />}\r\n                    onClick={this.props.downloadTable}\r\n                >\r\n                    Export\r\n                </Button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nexport default class Filters extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            filters:{},\r\n        };\r\n    }\r\n\r\n    updateSearchText(event) {\r\n        if (this.state.filters.hasOwnProperty(event.target.id)) {\r\n            this.state.filters[event.target.id] = event.target.value;\r\n            this.forceUpdate();\r\n        } else {\r\n            var value = (event.target.value == null) ? '' : event.target.value;\r\n            this.state.filters[event.target.id] = event.target.value;\r\n            //this.state.filters.push({ key:event.target.id, value: value});\r\n            this.forceUpdate();\r\n        }\r\n    }\r\n\r\n    search() {\r\n        this.props.search(this.state.filters);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.props.filters.map((filter, index) => (\r\n                    <div>\r\n                        <SearchIcon />\r\n                        <InputBase\r\n                            placeholder={filter+\" filter\"}\r\n                            inputProps={{ 'aria-label': 'search' }}\r\n                            onChange={this.updateSearchText.bind(this)}\r\n                            id={filter}\r\n                        />\r\n                    </div>\r\n                ))\r\n                }\r\n                <div>\r\n                    <Button\r\n                        onClick={this.search.bind(this)}\r\n                    >\r\n                        Search\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Modal from '@material-ui/core/Modal';\r\n\r\nexport default class UploadModal extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n\r\n        };\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Modal\r\n                style={{top: `50%`,left: `50%`,transform: `translate(-50%, -50%)`, bgcolor:'text.secondary'}}\r\n                aria-labelledby=\"simple-modal-title\"\r\n                aria-describedby=\"simple-modal-description\"\r\n                open={this.props.showImportModal}\r\n                onClose={this.props.closeImportModal}\r\n            >\r\n                <div>\r\n                    <input type='file' accept=\".csv\" />\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                    >\r\n                        Upload\r\n                    </Button>\r\n                </div>\r\n            </Modal>\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from '@material-ui/core/Button';\r\n\r\nexport default class DetailedView extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            showConfirmationBox:false,\r\n        };\r\n    }\r\n\r\n    closeModal() {\r\n        this.setState({showConfirmationBox:false,});\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n        <div>\r\n            <Modal\r\n                style={{top: `50%`,left: `50%`,transform: `translate(-50%, -50%)`, bgcolor:'text.secondary'}}\r\n                aria-labelledby=\"simple-modal-title\"\r\n                aria-describedby=\"simple-modal-description\"\r\n                open={this.props.showDetailedView}\r\n                onClose={this.props.closeDetailedView}\r\n            >\r\n                <div>\r\n                    {this.props.inputs.map(input => (\r\n                        <TextField disabled={this.props.disabled} id=\"standard-basic\" label={input} onChange={this.props.updateModelEdited} defaultValue={this.props.defaultValues[input]}/>\r\n                    ))}\r\n                    {this.props.disabled ? null:\r\n                    <div>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            onClick={this.props.edit}\r\n                        >\r\n                            Save\r\n                        </Button>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            onClick={this.props.delete}\r\n                        >\r\n                            Delete\r\n                        </Button>\r\n                    </div>}\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            onClick={this.props.closeDetailedView}\r\n                        >\r\n                            Close\r\n                        </Button>\r\n                </div>\r\n            </Modal>\r\n        </div>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from '@material-ui/core/Button';\r\n\r\nexport default class CreateModal extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n\r\n        };\r\n    }\r\n\r\n    render() {\r\n        return (\r\n        <div>\r\n            <Modal\r\n                style={{top: `50%`,left: `50%`,transform: `translate(-50%, -50%)`, bgcolor:'text.secondary'}}\r\n                aria-labelledby=\"simple-modal-title\"\r\n                aria-describedby=\"simple-modal-description\"\r\n                open={this.props.showCreateModal}\r\n                onClose={this.props.closeCreateModal}\r\n            >\r\n                <div>\r\n                    {this.props.inputs.map(input => (\r\n                        <TextField id=\"standard-basic\" label={input} name={input} onChange={this.props.updateModelCreator}/>\r\n                    ))}\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        onClick={this.props.createModel}\r\n                    >\r\n                        Create\r\n                    </Button>\r\n                </div>\r\n            </Modal>\r\n        </div>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\nimport axios from 'axios';\r\nimport { ModelCommand } from '../enums/modelCommands.ts'\r\nimport { ModelInput } from '../enums/modelInputs.ts'\r\nimport { Privilege } from '../enums/privilegeTypes.ts'\r\nimport TableView from '../helpers/TableView';\r\nimport { CSVLink } from \"react-csv\";\r\nimport ButtonMenu from '../helpers/ButtonMenu';\r\nimport Filters from '../helpers/Filters';\r\nimport UploadModal from '../helpers/UploadModal';\r\nimport getURL from '../helpers/functions/GetURL';\r\nimport DetailedView from '../helpers/DetailedView';\r\nimport CreateModal from '../helpers/CreateModal';\r\nimport * as Constants from '../Constants';\r\n\r\nconst inputs = [\r\n    'vendor',\r\n    'modelNumber',\r\n    'height',\r\n    'displayColor',\r\n    'ethernetPorts',\r\n    'powerPorts',\r\n    'cpu',\r\n    'memory',\r\n    'storage',\r\n    'comments',\r\n]\r\n\r\nconst columns = [\r\n    'vendor',\r\n    'modelNumber',\r\n    'height',\r\n]\r\n\r\nconst modelsMainPath = 'models/';\r\nconst modelDownloadFileName = 'models.csv';\r\n\r\nexport default class ModelsView extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n\r\n            // modals\r\n            showCreateModal:false,\r\n            showImportModal:false,\r\n\r\n            // table items\r\n            items:[], //Constants.testModelArray,\r\n\r\n            // vals for creating a new model\r\n            createdModel : {\r\n                'vendor':'',\r\n                'modelNumber':'',\r\n                'height':'',\r\n                'displayColor':'',\r\n                'ethernetPorts':'',\r\n                'powerPorts':'',\r\n                'cpu':'',\r\n                'memory':'',\r\n                'storage':'',\r\n                'comments':'',\r\n            },\r\n            createdVendor:'',\r\n            createdModelNum:'',\r\n            createdHeight:'',\r\n            createdDispClr:'',\r\n            createdEthPorts:'',\r\n            createdPwrPorts:'',\r\n            createdCPU:'',\r\n            createdMem:'',\r\n            createdStorage:'',\r\n            createdComments:'',\r\n\r\n            // vals for deleting a model\r\n            deleteVendor:'',\r\n            deleteModel:'',\r\n\r\n            // vals for viewing a model\r\n            viewVendor:'',\r\n            viewModel:'',\r\n\r\n            // searching a model\r\n            searchText:\"\",\r\n\r\n            // csv data\r\n            csvData:[],\r\n\r\n            // detailed view\r\n            showDetailedView: false,\r\n            detailViewLoading:false,\r\n            detailedValues : {\r\n                'vendor':'',\r\n                'modelNumber':'',\r\n                'height':'',\r\n                'displayColor':'',\r\n                'ethernetPorts':'',\r\n                'powerPorts':'',\r\n                'cpu':'',\r\n                'memory':'',\r\n                'storage':'',\r\n                'comments':'',\r\n            },\r\n\r\n        };\r\n\r\n        this.openCreateModal = this.openCreateModal.bind(this);\r\n        this.openImportModal = this.openImportModal.bind(this);\r\n        this.downloadTable = this.downloadTable.bind(this);\r\n        this.updateSearchText = this.updateSearchText.bind(this);\r\n        this.search = this.search.bind(this);\r\n        this.closeImportModal = this.closeImportModal.bind(this);\r\n        this.closeCreateModal = this.closeCreateModal.bind(this);\r\n        this.showDetailedView = this.showDetailedView.bind(this);\r\n        this.editModel = this.editModel.bind(this);\r\n        this.closeDetailedView = this.closeDetailedView.bind(this);\r\n        this.updateModelEdited = this.updateModelEdited.bind(this);\r\n        this.closeCreateModal = this.closeCreateModal.bind(this);\r\n        this.createModel = this.createModel.bind(this);\r\n        this.updateModelCreator = this.updateModelCreator.bind(this);\r\n        this.deleteModel = this.deleteModel.bind(this);\r\n\r\n        axios.defaults.headers.common['token'] = this.props.token;\r\n        axios.defaults.headers.common['privilege'] = this.props.privilege;\r\n    }\r\n\r\n    createModel() {\r\n        axios.post(\r\n            getURL(modelsMainPath, ModelCommand.create),\r\n            {\r\n                'vendor':this.state.createdModel[ModelInput.Vendor],\r\n                'modelNumber':this.state.createdModel[ModelInput.ModelNumber],\r\n                'height':this.state.createdModel[ModelInput.Height],\r\n                'displayColor':this.state.createdModel[ModelInput.DisplayColor],\r\n                'ethernetPorts':this.state.createdModel[ModelInput.EthernetPorts],\r\n                'powerPorts':this.state.createdModel[ModelInput.PowerPorts],\r\n                'cpu':this.state.createdModel[ModelInput.CPU],\r\n                'memory':this.state.createdModel[ModelInput.Memory],\r\n                'storage':this.state.createdModel[ModelInput.Storage],\r\n                'comments':this.state.createdModel[ModelInput.Comment],\r\n            }\r\n            ).then(\r\n                response => {\r\n                    if (response.data.message === 'success') {\r\n                        this.setState({\r\n                            showStatus: true,\r\n                            statusMessage: \"Successfully created model\",\r\n                            statusSeverity:\"success\",\r\n                            createdModel : {\r\n                                'vendor':'',\r\n                                'modelNumber':'',\r\n                                'height':'',\r\n                                'displayColor':'',\r\n                                'ethernetPorts':'',\r\n                                'powerPorts':'',\r\n                                'cpu':'',\r\n                                'memory':'',\r\n                                'storage':'',\r\n                                'comments':'',\r\n                            },\r\n                            showCreateModal:false,\r\n                        })\r\n                    } else {\r\n                        this.setState({ showStatus: true, statusMessage: response.data.message, statusSeverity:\"error\" })\r\n                    }\r\n                });\r\n\r\n        this.setState({\r\n            createdModel : {\r\n                'vendor':'',\r\n                'modelNumber':'',\r\n                'height':'',\r\n                'displayColor':'',\r\n                'ethernetPorts':'',\r\n                'powerPorts':'',\r\n                'cpu':'',\r\n                'memory':'',\r\n                'storage':'',\r\n                'comments':'',\r\n            },\r\n            showCreateModal:false,\r\n        });\r\n    }\r\n\r\n    editModel() {\r\n        axios.post(\r\n            getURL(modelsMainPath, ModelCommand.edit),\r\n            {\r\n                'vendor':this.state.detailedValues[ModelInput.Vendor],\r\n                'modelNumber':this.state.detailedValues[ModelInput.ModelNumber],\r\n                'height':this.state.detailedValues[ModelInput.Height],\r\n                'displayColor':this.state.detailedValues[ModelInput.DisplayColor],\r\n                'ethernetPorts':this.state.detailedValues[ModelInput.EthernetPorts],\r\n                'powerPorts':this.state.detailedValues[ModelInput.PowerPorts],\r\n                'cpu':this.state.detailedValues[ModelInput.CPU],\r\n                'memory':this.state.detailedValues[ModelInput.Memory],\r\n                'storage':this.state.detailedValues[ModelInput.Storage],\r\n                'comments':this.state.detailedValues[ModelInput.Comment],\r\n            }\r\n            ).then(response => console.log(response) );\r\n\r\n        this.setState({\r\n            detailedValues : {\r\n                'vendor':'',\r\n                'modelNumber':'',\r\n                'height':'',\r\n                'displayColor':'',\r\n                'ethernetPorts':'',\r\n                'powerPorts':'',\r\n                'cpu':'',\r\n                'memory':'',\r\n                'storage':'',\r\n                'comments':'',\r\n            },\r\n            showDetailedView:false\r\n        });\r\n    }\r\n\r\n\r\n    deleteModel() {\r\n        axios.post(\r\n            getURL(modelsMainPath, ModelCommand.delete),\r\n            {\r\n                'vendor':this.state.detailedValues[ModelInput.Vendor],\r\n                'modelNumber':this.state.detailedValues[ModelInput.ModelNumber],\r\n            }\r\n            ).then(response => console.log(response));\r\n\r\n        this.setState({\r\n            detailedValues : {\r\n                'vendor':'',\r\n                'modelNumber':'',\r\n                'height':'',\r\n                'displayColor':'',\r\n                'ethernetPorts':'',\r\n                'powerPorts':'',\r\n                'cpu':'',\r\n                'memory':'',\r\n                'storage':'',\r\n                'comments':'',\r\n            },\r\n            showDetailedView:false\r\n        });\r\n    }\r\n\r\n    detailViewModel(vendor, modelNum) {\r\n        axios.post(\r\n            getURL(modelsMainPath, ModelCommand.detailView),\r\n            {\r\n                'vendor':vendor,\r\n                'modelNumber':modelNum,\r\n            }, this.props.headers\r\n            ).then(response => this.setState({ detailedValues: response.data['models'][0], detailViewLoading:false}));\r\n\r\n        this.setState({\r\n            viewVendor:'',\r\n            viewModel:'',\r\n        });\r\n    }\r\n\r\n    searchModels(vendor, modelNum, height) {\r\n        axios.post(\r\n            getURL(modelsMainPath, ModelCommand.search),\r\n            {\r\n                'filters':{\r\n                    'vendor':vendor,\r\n                    'modelNumber':modelNum,\r\n                    'height':height,\r\n                }\r\n            }\r\n            ).then(response => this.setState({ items: response.data['models'] }));\r\n\r\n        this.setState({\r\n            searchText:'',\r\n        });\r\n    }\r\n\r\n    search(filters) {\r\n        this.searchModels(filters['vendor'], filters['modelNumber'], filters['height']);\r\n    }\r\n\r\n    downloadTable() {\r\n        this.csvLink.link.click();\r\n    }\r\n\r\n    openCreateModal() {\r\n        this.setState({showCreateModal: true});\r\n    }\r\n\r\n    openImportModal() {\r\n        this.setState({showImportModal: true});\r\n    }\r\n\r\n    showDetailedView(id) {\r\n        this.setState({\r\n            showDetailedView: true,\r\n            detailViewLoading:true,\r\n         });\r\n\r\n        var vendor = this.state.items[id]['vendor'];\r\n        var modelNum = this.state.items[id]['modelNumber'];\r\n\r\n        this.detailViewModel(vendor, modelNum);\r\n        //this.setState({ detailedValues: Constants.testModelArray[id], detailViewLoading:false})\r\n    }\r\n\r\n    closeCreateModal() {\r\n        this.setState({showCreateModal: false});\r\n    }\r\n\r\n    closeImportModal() {\r\n        this.setState({showImportModal: false});\r\n    }\r\n\r\n    closeDetailedView() {\r\n        this.setState({ showDetailedView: false })\r\n    }\r\n\r\n    updateModelCreator(event) {\r\n        this.state.createdModel[event.target.name] = event.target.value;\r\n        this.forceUpdate()\r\n    }\r\n\r\n    updateModelEdited(event) {\r\n        this.state.detailedValues[event.target.label] = event.target.value;\r\n        this.forceUpdate()\r\n    }\r\n\r\n    updateSearchText(event) {\r\n        this.setState({ searchText: event.target.value})\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {(this.props.privilege == Privilege.ADMIN) ?\r\n                    (<div><ButtonMenu\r\n                    openCreateModal={this.openCreateModal}\r\n                    openImportModal={this.openImportModal}\r\n                    downloadTable={this.downloadTable}\r\n                />\r\n                <CSVLink\r\n                    data={this.state.csvData}\r\n                    filename={modelDownloadFileName}\r\n                    className=\"hidden\"\r\n                    ref={(r) => this.csvLink = r}\r\n                    target=\"_blank\"\r\n                />\r\n                <CreateModal\r\n                    showCreateModal={this.state.showCreateModal}\r\n                    closeCreateModal={this.closeCreateModal}\r\n                    createModel={this.createModel}\r\n                    updateModelCreator={this.updateModelCreator}\r\n                    inputs={inputs}\r\n                    />\r\n                <UploadModal\r\n                    showImportModal={this.state.showImportModal}\r\n                    closeImportModal={this.closeImportModal}\r\n                /></div>):null\r\n                }\r\n                <Filters\r\n                    updateSearchText={this.updateSearchText}\r\n                    search={this.search}\r\n                    filters={columns}\r\n                />\r\n                <TableView\r\n                    columns={columns}\r\n                    vals={this.state.items}\r\n                    keys={columns}\r\n                    showDetailedView={this.showDetailedView}\r\n                    filters={columns}\r\n                />\r\n                <DetailedView\r\n                    showDetailedView={this.state.showDetailedView}\r\n                    closeDetailedView={this.closeDetailedView}\r\n                    inputs={inputs}\r\n                    updateModelEdited={this.updateModelEdited}\r\n                    defaultValues={this.state.detailedValues}\r\n                    loading={this.state.detailViewLoading}\r\n                    edit={this.editModel}\r\n                    delete={this.deleteModel}\r\n                    disabled={this.props.privilege==Privilege.USER}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\nimport axios from 'axios';\r\nimport { UserCommand } from '../enums/userCommands.ts'\r\nimport { UserInput } from '../enums/userInputs.ts'\r\nimport { Privilege } from '../enums/privilegeTypes.ts'\r\nimport TableView from '../helpers/TableView';\r\nimport { CSVLink } from \"react-csv\";\r\nimport ButtonMenu from '../helpers/ButtonMenu';\r\nimport Filters from '../helpers/Filters';\r\nimport UploadModal from '../helpers/UploadModal';\r\nimport getURL from '../helpers/functions/GetURL';\r\nimport DetailedView from '../helpers/DetailedView';\r\nimport CreateModal from '../helpers/CreateModal';\r\nimport * as Constants from '../Constants';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport StatusDisplay from '../helpers/StatusDisplay';\r\n\r\n\r\n\r\nconst inputs = [\r\n    'username',\r\n    'email',\r\n    'displayName',\r\n    'privilege',\r\n    'password',\r\n]\r\n\r\nconst columns = [\r\n    'username',\r\n    'email',\r\n    'displayName',\r\n    'privilege',\r\n]\r\n\r\nconst usersMainPath = 'users/';\r\nconst userDownloadFileName = 'users.csv';\r\n\r\nexport default class UsersView extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n\r\n            // modals\r\n            showCreateModal:false,\r\n            showImportModal:false,\r\n\r\n            // table items\r\n            items:[], //Constants.testUserArray,\r\n\r\n            // vals for creating a new user\r\n            createdUser : {\r\n                'username':'',\r\n                'password':'',\r\n                'displayName':'',\r\n                'email':'',\r\n                'privilege':'',\r\n            },\r\n\r\n            showStatus:false,\r\n            statusMessage:'',\r\n            statusSeverity:'',\r\n\r\n            // vals for deleting a user\r\n            deleteUsername:'',\r\n\r\n            // vals for viewing a user\r\n            viewUser:'',\r\n\r\n            // csv data\r\n            csvData:[],\r\n\r\n            // detailed view\r\n            showDetailedView: false,\r\n            detailViewLoading:false,\r\n            detailedValues : {\r\n                'username':'',\r\n                'displayName':'',\r\n                'email':'',\r\n                'privilege':'',\r\n            },\r\n        };\r\n\r\n        this.createUser = this.createUser.bind(this);\r\n        this.editUser = this.editUser.bind(this);\r\n        this.deleteUser = this.deleteUser.bind(this);\r\n        this.detailViewUser = this.detailViewUser.bind(this);\r\n        this.searchUsers = this.searchUsers.bind(this);\r\n        this.search = this.search.bind(this);\r\n        this.openCreateModal = this.openCreateModal.bind(this);\r\n        this.openImportModal = this.openImportModal.bind(this);\r\n        this.showDetailedView = this.showDetailedView.bind(this);\r\n        this.closeCreateModal = this.closeCreateModal.bind(this);\r\n        this.closeImportModal = this.closeImportModal.bind(this);\r\n        this.closeDetailedView = this.closeDetailedView.bind(this);\r\n        this.updateUserCreator = this.updateUserCreator.bind(this);\r\n        this.updateUserEdited = this.updateUserEdited.bind(this);\r\n        this.closeShowStatus = this.closeShowStatus.bind(this);\r\n\r\n        axios.defaults.headers.common['token'] = this.props.token;\r\n        axios.defaults.headers.common['privilege'] = this.props.privilege;\r\n\r\n    }\r\n\r\n    createUser() {\r\n        axios.post(\r\n            getURL(usersMainPath, UserCommand.create),\r\n            {\r\n                'username':this.state.createdUser[UserInput.Username],\r\n                'password':this.state.createdUser[UserInput.Password],\r\n                'displayName':this.state.createdUser[UserInput.DisplayName],\r\n                'email':this.state.createdUser[UserInput.Email],\r\n                'privilege':this.state.createdUser[UserInput.Privilege],\r\n            }\r\n            ).then(response => {\r\n                if (response.data.message === 'success') {\r\n                    this.setState({\r\n                        showStatus: true,\r\n                        statusMessage: \"Successfully created user\",\r\n                        statusSeverity:\"success\",\r\n                        createdUser : {\r\n                            'username':'',\r\n                            'password':'',\r\n                            'displayName':'',\r\n                            'email':'',\r\n                            'privilege':'',\r\n                        },\r\n                        showCreateModal:false,\r\n                    })\r\n                } else {\r\n                    this.setState({ showStatus: true, statusMessage: response.data.message, statusSeverity:\"error\" })\r\n                }\r\n            });\r\n    }\r\n\r\n    editUser() {\r\n        axios.post(\r\n            getURL(usersMainPath, UserCommand.edit),\r\n            {\r\n                'username':this.state.detailedValues[UserInput.Username],\r\n                'displayName':this.state.detailedValues[UserInput.DisplayName],\r\n                'email':this.state.detailedValues[UserInput.Email],\r\n                'privilege':this.state.detailedValues[UserInput.Privilege],\r\n            }\r\n            ).then(response => console.log(response));\r\n\r\n        this.setState({\r\n            detailedValues : {\r\n                'username':'',\r\n                'displayName':'',\r\n                'email':'',\r\n                'privilege':'',\r\n            },\r\n            showDetailedView:false,\r\n        });\r\n    }\r\n\r\n\r\n    deleteUser() {\r\n        axios.post(\r\n            getURL(usersMainPath, UserCommand.delete),\r\n            {\r\n                'username':this.state.deleteUsername,\r\n            }\r\n            ).then(response => console.log(response));\r\n\r\n        this.setState({\r\n            deleteUsername:'',\r\n            showDetailedView:false\r\n        });\r\n    }\r\n\r\n    detailViewUser(username) {\r\n        axios.post(\r\n            getURL(usersMainPath, UserCommand.detailView),\r\n            {\r\n                'username':username,\r\n            }\r\n            ).then(response => this.setState({ detailedValues: response.data['users'][0], detailViewLoading:false}));\r\n\r\n        this.setState({\r\n            viewUser:'',\r\n        });\r\n    }\r\n\r\n    searchUsers(username, email, displayName, privilege) {\r\n        axios.post(\r\n            getURL(usersMainPath, UserCommand.search),\r\n            {\r\n                'filters':{\r\n                    'username':username,\r\n                    'email':email,\r\n                    'displayName':displayName,\r\n                    'privilege':privilege,\r\n                }\r\n            }\r\n            ).then(response => this.setState({ items: response.data['users'] }));\r\n    }\r\n\r\n    search(filters) {\r\n        this.searchUsers(filters['username'], filters['email'], filters['displayName'], filters['privilege']);\r\n    }\r\n\r\n    downloadTable() {\r\n        this.csvLink.link.click();\r\n    }\r\n\r\n    openCreateModal() {\r\n        this.setState({showCreateModal: true});\r\n    }\r\n\r\n    openImportModal() {\r\n        this.setState({showImportModal: true});\r\n    }\r\n\r\n    showDetailedView(id) {\r\n        this.setState({\r\n            showDetailedView: true,\r\n            detailViewLoading:true,\r\n         });\r\n\r\n        var username = this.state.items[id]['username'];\r\n        var email = this.state.items[id]['email'];\r\n        var displayName = this.state.items[id]['displayName'];\r\n        var privilege = this.state.items[id]['privilege'];\r\n\r\n        this.detailViewUser(username, email, displayName, privilege);\r\n        //this.setState({ detailedValues: Constants.testUserArray[id], detailViewLoading:false})\r\n    }\r\n\r\n    closeCreateModal() {\r\n        this.setState({showCreateModal: false});\r\n    }\r\n\r\n    closeImportModal() {\r\n        this.setState({showImportModal: false});\r\n    }\r\n\r\n    closeDetailedView() {\r\n        this.setState({ showDetailedView: false })\r\n    }\r\n\r\n    updateUserCreator(event) {\r\n        this.state.createdUser[event.target.name] = event.target.value;\r\n        this.forceUpdate()\r\n    }\r\n\r\n    updateUserEdited(event) {\r\n        this.state.detailedValues[event.target.name] = event.target.value;\r\n        this.forceUpdate()\r\n    }\r\n\r\n    closeShowStatus() {\r\n        this.setState({ showStatus: false })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <StatusDisplay\r\n                    open={this.state.showStatus}\r\n                    severity={this.state.statusSeverity}\r\n                    closeStatus={this.closeShowStatus}\r\n                    message={this.state.statusMessage}\r\n                />\r\n                {(this.props.privilege == Privilege.ADMIN) ?\r\n                    (<div>\r\n                <ButtonMenu\r\n                    openCreateModal={this.openCreateModal}\r\n                    openImportModal={this.openImportModal}\r\n                    downloadTable={this.downloadTable}\r\n                />\r\n                <CSVLink\r\n                    data={this.state.csvData}\r\n                    filename={userDownloadFileName}\r\n                    className=\"hidden\"\r\n                    ref={(r) => this.csvLink = r}\r\n                    target=\"_blank\"\r\n                />\r\n                <CreateModal\r\n                    showCreateModal={this.state.showCreateModal}\r\n                    closeCreateModal={this.closeCreateModal}\r\n                    createModel={this.createUser}\r\n                    updateModelCreator={this.updateUserCreator}\r\n                    inputs={inputs}\r\n                />\r\n                <UploadModal\r\n                    showImportModal={this.state.showImportModal}\r\n                    closeImportModal={this.closeImportModal}\r\n                /></div>):null\r\n            }\r\n                <Filters\r\n                    updateSearchText={this.updateSearchText}\r\n                    search={this.search}\r\n                    filters={columns}\r\n                />\r\n                <TableView\r\n                    columns={columns}\r\n                    vals={this.state.items}\r\n                    keys={columns}\r\n                    showDetailedView={this.showDetailedView}\r\n                    filters={columns}\r\n                />\r\n                <DetailedView\r\n                    showDetailedView={this.state.showDetailedView}\r\n                    closeDetailedView={this.closeDetailedView}\r\n                    inputs={inputs}\r\n                    updateModelEdited={this.updateUserEdited}\r\n                    defaultValues={this.state.detailedValues}\r\n                    loading={this.state.detailViewLoading}\r\n                    edit={this.editUser}\r\n                    delete={this.deleteUser}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","export enum InstanceCommand {\r\n    create = 'create/',\r\n    delete = 'delete/',\r\n    edit = 'edit/',\r\n    view = 'view/',\r\n    detailView = 'detailView/',\r\n    search = 'search/'\r\n}\r\n","export enum InstanceInput {\r\n    Model = 'model',\r\n    Hostname = 'hostname',\r\n    Rack = 'rack',\r\n    RackU = 'rackU',\r\n    Owner = 'owner',\r\n    Comment = 'comment',\r\n}\r\n","import React from 'react';\r\nimport axios from 'axios';\r\nimport { InstanceCommand } from '../enums/instanceCommands.ts'\r\nimport { InstanceInput } from '../enums/instanceInputs.ts'\r\nimport { Privilege } from '../enums/privilegeTypes.ts'\r\nimport TableView from '../helpers/TableView';\r\nimport { CSVLink } from \"react-csv\";\r\nimport ButtonMenu from '../helpers/ButtonMenu';\r\nimport Filters from '../helpers/Filters';\r\nimport UploadModal from '../helpers/UploadModal';\r\nimport getURL from '../helpers/functions/GetURL';\r\nimport DetailedView from '../helpers/DetailedView';\r\nimport CreateModal from '../helpers/CreateModal';\r\nimport * as Constants from '../Constants';\r\nimport StatusDisplay from '../helpers/StatusDisplay';\r\n\r\nconst inputs = [\r\n    'model',\r\n    'hostname',\r\n    'rack',\r\n    'rackU',\r\n    'owner',\r\n    'comment',\r\n]\r\n\r\nconst columns = [\r\n    'model',\r\n    'hostname',\r\n    'rack',\r\n    'rackU',\r\n]\r\n\r\nconst instancesMainPath = 'instances/';\r\nconst instanceDownloadFileName = 'instances.csv';\r\n\r\n\r\n\r\nexport default class InstancesView extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n\r\n            // modals\r\n            showCreateModal:false,\r\n            showImportModal:false,\r\n\r\n            // table items\r\n            items:[], //Constants.testInstanceArray,\r\n\r\n            // vals for creating a new instance\r\n            createdInstance : {\r\n                'model':'',\r\n                'hostname':'',\r\n                'rack':'',\r\n                'rackU':'',\r\n                'owner':'',\r\n                'comment':'',\r\n            },\r\n\r\n            showStatus:false,\r\n            statusMessage:'',\r\n            statusSeverity:'',\r\n\r\n            // vals for deleting an instance\r\n            deleteInstanceRack:'',\r\n            deleteInstanceRackU:'',\r\n\r\n            // vals for viewing an instance\r\n            viewInstanceRack:'',\r\n            viewInstanceRackU:'',\r\n\r\n            // csv data\r\n            csvData:[],\r\n\r\n            // detailed view\r\n            showDetailedView: false,\r\n            detailViewLoading:false,\r\n            detailedValues : {\r\n                'model':'',\r\n                'hostname':'',\r\n                'rack':'',\r\n                'rackU':'',\r\n                'owner':'',\r\n                'comment':'',\r\n            },\r\n        };\r\n\r\n        this.createInstance = this.createInstance.bind(this);\r\n        this.editInstance = this.editInstance.bind(this);\r\n        this.deleteInstance = this.deleteInstance.bind(this);\r\n        this.detailViewInstance = this.detailViewInstance.bind(this);\r\n        this.searchInstances = this.searchInstances.bind(this);\r\n        this.search = this.search.bind(this);\r\n        this.openCreateModal = this.openCreateModal.bind(this);\r\n        this.openImportModal = this.openImportModal.bind(this);\r\n        this.showDetailedView = this.showDetailedView.bind(this);\r\n        this.closeCreateModal = this.closeCreateModal.bind(this);\r\n        this.closeImportModal = this.closeImportModal.bind(this);\r\n        this.closeDetailedView = this.closeDetailedView.bind(this);\r\n        this.updateInstanceCreator = this.updateInstanceCreator.bind(this);\r\n        this.updateInstanceEdited = this.updateInstanceEdited.bind(this);\r\n        this.closeShowStatus = this.closeShowStatus.bind(this);\r\n\r\n        axios.defaults.headers.common['token'] = this.props.token;\r\n        axios.defaults.headers.common['privilege'] = this.props.privilege;\r\n\r\n    }\r\n\r\n    createInstance() {\r\n        axios.post(\r\n            getURL(instancesMainPath, InstanceCommand.create),\r\n            {\r\n                'model':this.state.createdInstance[InstanceInput.Model],\r\n                'hostname':this.state.createdInstance[InstanceInput.Hostname],\r\n                'rack':this.state.createdInstance[InstanceInput.Rack],\r\n                'rackU':this.state.createdInstance[InstanceInput.RackU],\r\n                'owner':this.state.createdInstance[InstanceInput.Owner],\r\n                'comment':this.state.createdInstance[InstanceInput.Comment],\r\n            }\r\n            ).then(response => {\r\n                if (response.data.message === 'success') {\r\n                    this.setState({\r\n                        showStatus: true,\r\n                        statusMessage: \"Successfully created instance\",\r\n                        statusSeverity:\"success\",\r\n                        createdInstance : {\r\n                            'model':'',\r\n                            'hostname':'',\r\n                            'rack':'',\r\n                            'rackU':'',\r\n                            'owner':'',\r\n                            'comment':'',\r\n                        },\r\n                        showCreateModal:false,\r\n                    })\r\n                } else {\r\n                    this.setState({ showStatus: true, statusMessage: response.data.message, statusSeverity:\"error\" })\r\n                }\r\n            });\r\n    }\r\n\r\n    editInstance() {\r\n        axios.post(\r\n            getURL(instancesMainPath, InstanceCommand.edit),\r\n            {\r\n                'model':this.state.detailedValues[InstanceInput.Model],\r\n                'hostname':this.state.detailedValues[InstanceInput.Hostname],\r\n                'rack':this.state.detailedValues[InstanceInput.Rack],\r\n                'rackU':this.state.detailedValues[InstanceInput.RackU],\r\n                'owner':this.state.detailedValues[InstanceInput.Owner],\r\n                'comment':this.state.detailedValues[InstanceInput.Comment],\r\n            }\r\n            ).then(response => console.log(response));\r\n\r\n        this.setState({\r\n            detailedValues : {\r\n                'model':'',\r\n                'hostname':'',\r\n                'rack':'',\r\n                'rackU':'',\r\n                'owner':'',\r\n                'comment':'',\r\n            },\r\n            showDetailedView:false,\r\n        });\r\n    }\r\n\r\n\r\n    deleteInstance() {\r\n        axios.post(\r\n            getURL(instancesMainPath, InstanceCommand.delete),\r\n            {\r\n                'rack':this.state.deleteInstanceRack,\r\n                'rackU':this.state.deleteInstanceRackU,\r\n            }\r\n            ).then(response => console.log(response));\r\n\r\n        this.setState({\r\n            deleteInstanceRack:'',\r\n            deleteInstanceRackU:'',\r\n            showDetailedView:false\r\n        });\r\n    }\r\n\r\n    detailViewInstance(rack, rackU) {\r\n        axios.post(\r\n            getURL(instancesMainPath, InstanceCommand.detailView),\r\n            {\r\n                'rack':rack,\r\n                'rackU':rackU,\r\n            }\r\n            ).then(response => this.setState({ detailedValues: response.data['instances'][0], detailViewLoading:false}));\r\n\r\n        this.setState({\r\n            viewInstanceRack:'',\r\n        });\r\n    }\r\n\r\n    searchInstances(model, hostname, rack, rackU) {\r\n        axios.post(\r\n            getURL(instancesMainPath, InstanceCommand.search),\r\n            {\r\n                'filters':{\r\n                    'model':model,\r\n                    'hostname':hostname,\r\n                    'rack':rack,\r\n                    'rackU':rackU,\r\n                }\r\n            }\r\n            ).then(response => this.setState({ items: response.data['instances'] }));\r\n    }\r\n\r\n    search(filters) {\r\n        this.searchInstances(filters['model'], filters['hostname'], filters['rack'], filters['rackU']);\r\n    }\r\n\r\n    downloadTable() {\r\n        this.csvLink.link.click();\r\n    }\r\n\r\n    openCreateModal() {\r\n        this.setState({showCreateModal: true});\r\n    }\r\n\r\n    openImportModal() {\r\n        this.setState({showImportModal: true});\r\n    }\r\n\r\n    showDetailedView(id) {\r\n        this.setState({\r\n            showDetailedView: true,\r\n            detailViewLoading:true,\r\n        });\r\n\r\n        var model = this.state.items[id]['model'];\r\n        var hostname = this.state.items[id]['hostname'];\r\n        var rack = this.state.items[id]['rack'];\r\n        var rackU = this.state.items[id]['rackU'];\r\n\r\n        this.detailViewInstance(model, hostname, rack, rackU);\r\n        //this.setState({ detailedValues: Constants.testInstanceArray[id], detailViewLoading:false})\r\n    }\r\n\r\n    closeCreateModal() {\r\n        this.setState({showCreateModal: false});\r\n    }\r\n\r\n    closeImportModal() {\r\n        this.setState({showImportModal: false});\r\n    }\r\n\r\n    closeDetailedView() {\r\n        this.setState({ showDetailedView: false })\r\n    }\r\n\r\n    updateInstanceCreator(event) {\r\n        this.state.createdInstance[event.target.name] = event.target.value;\r\n        this.forceUpdate()\r\n    }\r\n\r\n    updateInstanceEdited(event) {\r\n        this.state.detailedValues[event.target.name] = event.target.value;\r\n        this.forceUpdate()\r\n    }\r\n    closeShowStatus() {\r\n        this.setState({ showStatus: false })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <StatusDisplay\r\n                    open={this.state.showStatus}\r\n                    severity={this.state.statusSeverity}\r\n                    closeStatus={this.closeShowStatus}\r\n                    message={this.state.statusMessage}\r\n                />\r\n                {(this.props.privilege == Privilege.ADMIN) ?\r\n                    (<div>\r\n                <ButtonMenu\r\n                    openCreateModal={this.openCreateModal}\r\n                    openImportModal={this.openImportModal}\r\n                    downloadTable={this.downloadTable}\r\n                />\r\n                <CSVLink\r\n                    data={this.state.csvData}\r\n                    filename={instanceDownloadFileName}\r\n                    className=\"hidden\"\r\n                    ref={(r) => this.csvLink = r}\r\n                    target=\"_blank\"\r\n                />\r\n                <CreateModal\r\n                    showCreateModal={this.state.showCreateModal}\r\n                    closeCreateModal={this.closeCreateModal}\r\n                    createModel={this.createInstance}\r\n                    updateModelCreator={this.updateInstanceCreator}\r\n                    inputs={inputs}\r\n                />\r\n                <UploadModal\r\n                    showImportModal={this.state.showImportModal}\r\n                    closeImportModal={this.closeImportModal}\r\n                /></div>):null\r\n            }\r\n                <Filters\r\n                    updateSearchText={this.updateSearchText}\r\n                    search={this.search}\r\n                    filters={columns}\r\n                />\r\n                <TableView\r\n                    columns={columns}\r\n                    vals={this.state.items}\r\n                    keys={columns}\r\n                    showDetailedView={this.showDetailedView}\r\n                    filters={columns}\r\n                />\r\n                <DetailedView\r\n                    showDetailedView={this.state.showDetailedView}\r\n                    closeDetailedView={this.closeDetailedView}\r\n                    inputs={inputs}\r\n                    updateModelEdited={this.updateInstanceEdited}\r\n                    defaultValues={this.state.detailedValues}\r\n                    loading={this.state.detailViewLoading}\r\n                    edit={this.editInstance}\r\n                    delete={this.deleteInstance}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","export enum RackCommand {\r\n    GET_ALL_RACKS = \"all\",\r\n    CREATE_RACKS = \"create\",\r\n    DELETE_RACKS = \"delete\",\r\n    GET_RACK_DETAILS = \"details\"\r\n}\r\n","import React from 'react';\r\nimport axios from 'axios';\r\nimport { Privilege } from '../enums/privilegeTypes.ts';\r\nimport TableView from '../helpers/TableView';\r\nimport getURL from '../helpers/functions/GetURL';\r\nimport * as Constants from '../Constants';\r\nimport StatusDisplay from '../helpers/StatusDisplay';\r\nimport Select from '@material-ui/core/Select';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport { MenuItem, Button } from '@material-ui/core';\r\nimport { RackCommand } from \"../enums/rackCommands.ts\";\r\n\r\n\r\nconst racksMainPath = 'racks/';\r\n\r\nexport default class RacksView extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            items:[],\r\n            startingRackLetter:'',\r\n            endingRackLetter:'',\r\n            startingRackNumber:-1,\r\n            endingRackNumber:-1,\r\n\r\n            showStatus:false,\r\n            statusMessage:'',\r\n            statusSeverity:'',\r\n        };\r\n\r\n        this.getAllRacks = this.getAllRacks.bind(this);\r\n        this.updateRacks = this.updateRacks.bind(this);\r\n        this.createRacks = this.createRacks.bind(this);\r\n        this.deleteRacks = this.deleteRacks.bind(this);\r\n        this.viewRacks = this.viewRacks.bind(this);\r\n        this.changeStartingLetter = this.changeStartingLetter.bind(this);\r\n        this.changeEndingLetter = this.changeEndingLetter.bind(this);\r\n        this.changeStartingNum = this.changeStartingNum.bind(this);\r\n        this.changeEndingNum = this.changeEndingNum.bind(this);\r\n\r\n        axios.defaults.headers.common['token'] = this.props.token;\r\n        axios.defaults.headers.common['privilege'] = this.props.privilege;\r\n\r\n    }\r\n\r\n    getAllRacks() {\r\n        axios.get(getURL(racksMainPath, RackCommand.GET_ALL_RACKS)).then(response => {\r\n                if (response.data.message === 'success') {\r\n                    this.setState({ showStatus: true, statusMessage: \"Success\" })\r\n                } else {\r\n                    this.setState({ showStatus: true, statusMessage: response.data.message, statusSeverity:\"error\" })\r\n                }\r\n            });\r\n    }\r\n\r\n    updateRacks(command) {\r\n        axios.post(\r\n            getURL(racksMainPath, command),\r\n            {\r\n                'start_letter':this.state.startingRackLetter,\r\n                'stop_letter':this.state.endingRackLetter,\r\n                'start_number':this.state.startingRackNumber,\r\n                'stop_number':this.state.endingRackNumber,\r\n            }\r\n            ).then(response => {\r\n                if (response.data.message === 'success') {\r\n                    this.setState({ showStatus: true, statusMessage: \"Success\" })\r\n                } else {\r\n                    this.setState({ showStatus: true, statusMessage: response.data.message, statusSeverity:\"error\" })\r\n                }\r\n\r\n                if (command == RackCommand.GET_RACK_DETAILS) {\r\n                    console.log(response.data);\r\n                    this.setState({ items: response.data });\r\n                }\r\n            });\r\n    }\r\n\r\n    createRacks() {\r\n        this.updateRacks(RackCommand.CREATE_RACKS);\r\n    }\r\n\r\n    deleteRacks() {\r\n        this.updateRacks(RackCommand.DELETE_RACKS);\r\n    }\r\n\r\n    viewRacks() {\r\n        this.updateRacks(RackCommand.GET_RACK_DETAILS);\r\n    }\r\n\r\n    changeStartingLetter(event) {\r\n        this.setState({ startingRackLetter: event.target.value })\r\n    }\r\n\r\n    changeEndingLetter(event) {\r\n        this.setState({ endingRackLetter: event.target.value })\r\n    }\r\n\r\n    changeStartingNum(event) {\r\n        this.setState({ startingRackNumber: event.target.value })\r\n    }\r\n\r\n    changeEndingNum(event) {\r\n        this.setState({ endingRackNumber: event.target.value })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <StatusDisplay\r\n                    open={this.state.showStatus}\r\n                    severity={this.state.statusSeverity}\r\n                    closeStatus={this.closeShowStatus}\r\n                    message={this.state.statusMessage}\r\n                />\r\n                <FormControl>\r\n                    <Select id=\"starting-letter-selector\" value={this.state.startingRackLetter} onChange={this.changeStartingLetter}>\r\n                        {Constants.RackX.map(val => (<MenuItem value={val}>{val}</MenuItem>))}\r\n                    </Select>\r\n                    <FormHelperText>Starting Letter</FormHelperText>\r\n                </FormControl>\r\n                <FormControl>\r\n                    <Select id=\"ending-letter-selector\" value={this.state.endingRackLetter} onChange={this.changeEndingLetter}>\r\n                        {Constants.RackX.map(val => (<MenuItem value={val}>{val}</MenuItem>))}\r\n                    </Select>\r\n                    <FormHelperText>Ending Letter</FormHelperText>\r\n                </FormControl>\r\n                <FormControl>\r\n                    <Select id=\"starting-num-selector\" value={this.state.startingRackNumber} onChange={this.changeStartingNum}>\r\n                        {Constants.RackY.map(val => (<MenuItem value={val}>{val}</MenuItem>))}\r\n                    </Select>\r\n                    <FormHelperText>Starting Number</FormHelperText>\r\n                </FormControl>\r\n                <FormControl>\r\n                    <Select id=\"ending-num-selector\" value={this.state.endingRackNumber} onChange={this.changeEndingNum}>\r\n                        {Constants.RackY.map(val => (<MenuItem value={val}>{val}</MenuItem>))}\r\n                    </Select>\r\n                    <FormHelperText>Ending Number</FormHelperText>\r\n                </FormControl>\r\n                <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    onClick={this.viewRacks}\r\n                >\r\n                    View\r\n                </Button>\r\n                {(this.props.privilege == Privilege.ADMIN) ?\r\n                (<div>\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        onClick={this.createRacks}\r\n                    >\r\n                        Create\r\n                    </Button>\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        onClick={this.deleteRacks}\r\n                    >\r\n                        Delete\r\n                    </Button>\r\n                </div>):null}\r\n\r\n                {/*<TableView\r\n                    columns={columns}\r\n                    vals={this.state.items}\r\n                    keys={columns}\r\n                    showDetailedView={this.showDetailedView}\r\n                    filters={columns}\r\n                />*/}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","export enum StatsCommand {\r\n    GENERATE_REPORT = \"generate-report\",\r\n    TEST = \"test\",\r\n}\r\n","import { ModelInput } from '../../enums/modelInputs.ts'\r\n\r\nexport default function jsonToArr(json) {\r\n    const items = [];\r\n\r\n    Object.keys(json).forEach(function(key) {\r\n        const row = [];\r\n        row.push(key);\r\n        row.push(json[key]);\r\n        items.push(row);\r\n    });\r\n    return items;\r\n}\r\n","import React from 'react';\r\nimport axios from 'axios';\r\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\r\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\r\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport getURL from '../helpers/functions/GetURL';\r\nimport  Button from '@material-ui/core/Button';\r\nimport { StatsCommand } from \"../enums/statsCommands.ts\";\r\nimport JSONtoArr from \"../helpers/functions/JSONtoArr\";\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport StatusDisplay from '../helpers/StatusDisplay';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\n\r\nconst statsMainPath = 'stats/';\r\nconst tables = {\r\n    \"totalUsage\":\"Total Usage\",\r\n    \"spaceUsage\": \"Space Usage\",\r\n    \"vendorUsage\": \"Vendor Usage\",\r\n    \"modelUsage\": \"Model Usage\",\r\n    \"ownerUsage\": \"Owner Usage\",\r\n}\r\n\r\nconst tableCols = {\r\n    \"totalUsage\":[\"Total\", \"Usage\"],\r\n    \"spaceUsage\": [\"Rack\", \"Usage\"],\r\n    \"vendorUsage\": [\"Vendor\", \"Usage\"],\r\n    \"modelUsage\": [\"Model\", \"Usage\"],\r\n    \"ownerUsage\": [\"Ownder\", \"Usage\"],\r\n}\r\n\r\nexport default class StatisticsView extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            tableValues: {\r\n                \"totalUsage\":[],\r\n                \"spaceUsage\": [],\r\n                \"vendorUsage\": [],\r\n                \"modelUsage\": [],\r\n                \"ownerUsage\": [],\r\n            },\r\n            totalUsage:[],\r\n            spaceUsage:[],\r\n            vendorUsage:[],\r\n            modelUsage:[],\r\n            ownerUsage:[],\r\n\r\n            showStatus:false,\r\n            statusMessage:'',\r\n            statusSeverity:'',\r\n        };\r\n\r\n        this.closeShowStatus = this.closeShowStatus.bind(this);\r\n\r\n        axios.defaults.headers.common['token'] = this.props.token;\r\n        axios.defaults.headers.common['privilege'] = this.props.privilege;\r\n    }\r\n\r\n    generateReport() {\r\n        axios.get(getURL(statsMainPath, StatsCommand.GENERATE_REPORT)).then(response => {\r\n                if (response.data.message === 'success') {\r\n                    var data = response.data;\r\n\r\n                    var totalUsage = [];\r\n                    var totalUsageRow = [\"Total Usage\"];\r\n                    totalUsageRow.push(data[\"totalUsage\"]);\r\n                    totalUsage.push(totalUsageRow);\r\n\r\n                    var spaceUsage = JSONtoArr(data[\"spaceUsage\"]);\r\n                    var vendorUsage = JSONtoArr(data[\"vendorUsage\"]);\r\n                    var modelUsage = JSONtoArr(data[\"modelUsage\"]);\r\n                    var ownerUsage = JSONtoArr(data[\"ownerUsage\"]);\r\n\r\n                    this.setState({\r\n                        showStatus: true,\r\n                        statusMessage: \"Success\",\r\n                        totalUsage:totalUsage,\r\n                        spaceUsage:spaceUsage,\r\n                        vendorUsage:vendorUsage,\r\n                        modelUsage:modelUsage,\r\n                        ownerUsage:ownerUsage,\r\n                     })\r\n                } else {\r\n                    this.setState({ showStatus: true, statusMessage: response.data.message, statusSeverity:\"error\" })\r\n                }\r\n            });\r\n    }\r\n\r\n    closeShowStatus() {\r\n        this.setState({ showStatus: false })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <StatusDisplay\r\n                    open={this.state.showStatus}\r\n                    severity={this.state.statusSeverity}\r\n                    closeStatus={this.closeShowStatus}\r\n                    message={this.state.statusMessage}\r\n                />\r\n                <div>\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        onClick={this.generateReport}\r\n                    >\r\n                        Generate New Report\r\n                    </Button>\r\n                </div>\r\n                {Object.keys(tables).forEach(key => (\r\n                <ExpansionPanel>\r\n                    <ExpansionPanelSummary\r\n                        expandIcon={<ExpandMoreIcon />}\r\n                        aria-controls=\"panel1a-content\"\r\n                        id={\"panel-\"+key+\"-header\"}\r\n                    >\r\n                        <Typography>{tables[key]}</Typography>\r\n                    </ExpansionPanelSummary>\r\n                    <ExpansionPanelDetails>\r\n                        <TableContainer component={Paper}>\r\n                            <Table aria-label=\"simple table\">\r\n                                <TableHead>\r\n                                    <TableRow >\r\n                                        {tableCols[key].map(column => (<TableCell><span id={column}>{column}</span></TableCell>))}\r\n                                    </TableRow>\r\n                                </TableHead>\r\n                                <TableBody>\r\n                                {this.state.tableValues[key].map(row => (\r\n                                    <TableRow>\r\n                                        {row.map(column => (<TableCell><span id={column}>{column}</span></TableCell>))}\r\n                                    </TableRow>\r\n                                ))}\r\n                                </TableBody>\r\n                            </Table>\r\n                        </TableContainer>\r\n                    </ExpansionPanelDetails>\r\n                </ExpansionPanel>\r\n                ))}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Button from '@material-ui/core/Button';\r\nimport ModelsView from './pages/ModelsView';\r\nimport UsersView from './pages/UsersView';\r\nimport InstancesView from './pages/InstancesView';\r\nimport RacksView from './pages/RacksView';\r\nimport StatisticsView from './pages/StatisticsView';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { Privilege } from './enums/privilegeTypes.ts'\r\n\r\nexport default class TabViewer extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            currentTabID:0,\r\n        };\r\n        this.handleChange = this.handleChange.bind(this);\r\n    }\r\n\r\n    handleChange(event, newValue) {\r\n        this.setState({ currentTabID: newValue })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n        <div>\r\n            <AppBar position=\"static\">\r\n                <Tabs value={this.state.currentTabID} onChange={this.handleChange}>\r\n                    <Tab value={0} style={{flexGrow: 1,}} label=\"Models\"> </Tab>\r\n                    <Tab value={1} style={{flexGrow: 1,}} label=\"Instances\" ></Tab>\r\n                    {(this.props.privilege == Privilege.ADMIN) ? <Tab value={2} style={{flexGrow: 1,}} label=\"Users\"></Tab> : null}\r\n                    <Tab value={3} style={{flexGrow: 1,}} label=\"Racks\" />\r\n                    <Tab value={4} style={{flexGrow: 1,}} label=\"Statistics\" />\r\n                    <Button\r\n                        style={{flexGrow: 1,}}\r\n                        variant=\"contained\"\r\n                        color=\"secondary\"\r\n                        onClick={this.props.logout}\r\n                    >\r\n                        Logout\r\n                    </Button>\r\n                </Tabs>\r\n            </AppBar>\r\n            <Typography\r\n                component=\"div\"\r\n                role=\"tabpanel\"\r\n                hidden={this.state.currentTabID !== 0}\r\n                id={`simple-tabpanel-0`}\r\n                aria-labelledby={`simple-tab-0`}\r\n            >\r\n                <ModelsView token={this.props.token} privilege={this.props.privilege} />\r\n            </Typography>\r\n            <Typography\r\n                component=\"div\"\r\n                role=\"tabpanel\"\r\n                hidden={this.state.currentTabID !== 1}\r\n                id={`simple-tabpanel-0`}\r\n                aria-labelledby={`simple-tab-0`}\r\n            >\r\n                <InstancesView token={this.props.token} privilege={this.props.privilege} />\r\n            </Typography>\r\n            <Typography\r\n                component=\"div\"\r\n                role=\"tabpanel\"\r\n                hidden={this.state.currentTabID !== 2}\r\n                id={`simple-tabpanel-0`}\r\n                aria-labelledby={`simple-tab-0`}\r\n            >\r\n                <UsersView token={this.props.token} privilege={this.props.privilege} />\r\n            </Typography>\r\n            <Typography\r\n                component=\"div\"\r\n                role=\"tabpanel\"\r\n                hidden={this.state.currentTabID !== 3}\r\n                id={`simple-tabpanel-0`}\r\n                aria-labelledby={`simple-tab-0`}\r\n            >\r\n                <RacksView token={this.props.token} privilege={this.props.privilege} />\r\n            </Typography>\r\n            <Typography\r\n                component=\"div\"\r\n                role=\"tabpanel\"\r\n                hidden={this.state.currentTabID !== 4}\r\n                id={`simple-tabpanel-0`}\r\n                aria-labelledby={`simple-tab-0`}\r\n            >\r\n                <StatisticsView token={this.props.token} privilege={this.props.privilege} />\r\n            </Typography>\r\n        </div>);\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport Login from \"./Login\";\r\nimport TabViewer from \"./Tabs\";\r\nimport axios from 'axios';\r\nimport getURL from './helpers/functions/GetURL';\r\n\r\nexport default class PageSelector extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      token:'',\r\n      privilege:'',\r\n      loggedIn:false,\r\n    };\r\n\r\n    this.login = this.login.bind(this);\r\n    this.logout = this.logout.bind(this);\r\n  }\r\n\r\n  login(token, privilege) {\r\n    this.setState({\r\n      token:token,\r\n      privilege:privilege,\r\n      loggedIn:true,\r\n    })\r\n  }\r\n\r\n  logout() {\r\n    axios.get(getURL('users/', 'logout'));\r\n\r\n    this.setState({\r\n      token:'',\r\n      privilege:'',\r\n      loggedIn:false,\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        {this.state.loggedIn ?  <TabViewer token={this.state.token} privilege={this.state.privilege} logout={this.logout} /> : <Login loginFunc={this.login} />}\r\n      </div>\r\n    );\r\n  }\r\n\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './stylesheets/index.css';\nimport PageSelector from './javascript/PageSelector';\n\nReactDOM.render(<PageSelector />, document.getElementById('root'));\n"],"sourceRoot":""}
