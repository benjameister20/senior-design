{"version":3,"sources":["javascript/Constants.jsx","javascript/helpers/functions/GetURL.jsx","javascript/Login.jsx","javascript/enums/modelCommands.ts","javascript/enums/modelInputs.ts","javascript/enums/userCommands.ts","javascript/enums/userInputs.ts","javascript/helpers/TableView.jsx","javascript/helpers/ButtonMenu.jsx","javascript/helpers/Filters.jsx","javascript/helpers/UploadModal.jsx","javascript/helpers/DetailedView.jsx","javascript/helpers/CreateModal.jsx","javascript/pages/ModelsView.jsx","javascript/pages/UsersView.jsx","javascript/enums/instanceCommands.ts","javascript/enums/instanceInputs.ts","javascript/pages/InstancesView.jsx","javascript/pages/RacksView.jsx","javascript/pages/StatisticsView.jsx","javascript/TabManager.jsx","javascript/PageSelector.jsx","index.jsx"],"names":["serverEndpoint","testModelArray","testUserArray","testInstanceArray","getURL","path","endpoint","Constants","ModelCommand","ModelInput","Login","props","state","username","password","message","submitCredentials","bind","axios","post","this","then","response","data","setState","login","event","target","value","targe","TextField","id","label","variant","required","ref","onChange","updateUsername","updatePassword","Button","onClick","loginFunc","color","React","Component","UserCommand","UserInput","TableView","showDetailedView","TableContainer","component","Paper","Table","className","minWidth","aria-label","TableHead","TableRow","columns","map","col","TableCell","TableBody","vals","row","index","keys","key","scope","ButtonMenu","openCreateModal","startIcon","openImportModal","downloadTable","Filters","filters","hasOwnProperty","forceUpdate","search","filter","InputBase","placeholder","inputProps","updateSearchText","UploadModal","Modal","style","top","left","transform","aria-labelledby","aria-describedby","open","showImportModal","onClose","closeImportModal","type","accept","DetailedView","showConfirmationBox","closeDetailedView","inputs","input","updateModelEdited","defaultValue","defaultValues","edit","delete","CreateModal","showCreateModal","closeCreateModal","updateModelCreator","createModel","ModelsView","items","createdModel","createdVendor","createdModelNum","createdHeight","createdDispClr","createdEthPorts","createdPwrPorts","createdCPU","createdMem","createdStorage","createdComments","deleteVendor","deleteModel","viewVendor","viewModel","searchText","csvData","detailViewLoading","detailedValues","editModel","create","Vendor","ModelNumber","Height","DisplayColor","EthernetPorts","PowerPorts","CPU","Memory","Storage","Comment","console","log","vendor","modelNum","detailView","height","searchModels","csvLink","link","click","filename","r","loading","InstanceCommand","InstanceInput","UsersView","createdUser","deleteUsername","viewUser","createUser","editUser","deleteUser","detailViewUser","searchUsers","updateUserCreator","updateUserEdited","Username","Password","DisplayName","Email","Privilege","email","displayName","privilege","InstancesView","createdInstance","deleteInstanceRack","deleteInstanceRackU","viewInstanceRack","viewInstanceRackU","createInstance","editInstance","deleteInstance","detailViewInstance","searchInstances","updateInstanceCreator","updateInstanceEdited","Model","Hostname","Rack","RackU","Owner","rack","rackU","model","hostname","RacksView","StatisticsView","TabPanel","children","other","Typography","role","hidden","Box","p","a11yProps","useStyles","makeStyles","theme","root","flexGrow","backgroundColor","palette","background","paper","tab","button","TabManager","classes","useState","setValue","AppBar","position","Tabs","newValue","Tab","Logout","PageSelector","token","loggedIn","ReactDOM","render","document","getElementById"],"mappings":"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","file":"js/main.4c8a311a.chunk.js","sourcesContent":["/**\r\n * Constants file\r\n */\r\n\r\nexport const localServerEndpoint = 'http://localhost:4010/';\r\nexport const devServerEndpoint = 'https://parseltongue-dev.herokuapp.com/';\r\nexport const prodServerEndpoint = 'https://parseltongue-prod.herokuapp.com/';\r\n\r\nexport const serverEndpoint = localServerEndpoint;\r\n\r\nexport const testModelArray = [\r\n    {\r\n        'vendor':'a',\r\n        'modelNumber':'a',\r\n        'height':'a',\r\n        'displayColor':'a',\r\n        'ethernetPorts':'a',\r\n        'powerPorts':'a',\r\n        'cpu':'a',\r\n        'memory':'a',\r\n        'storage':'a',\r\n        'comments':'a',\r\n    },{\r\n        'vendor':'b',\r\n        'modelNumber':'b',\r\n        'height':'b',\r\n        'displayColor':'b',\r\n        'ethernetPorts':'b',\r\n        'powerPorts':'b',\r\n        'cpu':'b',\r\n        'memory':'b',\r\n        'storage':'b',\r\n        'comments':'b',\r\n    },{\r\n        'vendor':'c',\r\n        'modelNumber':'c',\r\n        'height':'c',\r\n        'displayColor':'c',\r\n        'ethernetPorts':'c',\r\n        'powerPorts':'c',\r\n        'cpu':'c',\r\n        'memory':'c',\r\n        'storage':'c',\r\n        'comments':'c',\r\n    },\r\n];\r\n\r\nexport const testUserArray = [\r\n    {\r\n        'username':'a',\r\n        'password':'a',\r\n        'displayName':'a',\r\n        'email':'a',\r\n        'privilege':'a',\r\n    },{\r\n        'username':'b',\r\n        'password':'b',\r\n        'displayName':'b',\r\n        'email':'b',\r\n        'privilege':'b',\r\n    },{\r\n        'username':'c',\r\n        'password':'c',\r\n        'displayName':'c',\r\n        'email':'c',\r\n        'privilege':'c',\r\n    },\r\n];\r\n\r\nexport const testInstanceArray = [\r\n    {\r\n        'model':'a',\r\n        'hostname':'a',\r\n        'rack':'a',\r\n        'rackU':'a',\r\n        'owner':'a',\r\n        'comment':'a',\r\n    },{\r\n        'model':'b',\r\n        'hostname':'b',\r\n        'rack':'b',\r\n        'rackU':'b',\r\n        'owner':'b',\r\n        'comment':'b',\r\n    },{\r\n        'model':'c',\r\n        'hostname':'c',\r\n        'rack':'c',\r\n        'rackU':'c',\r\n        'owner':'c',\r\n        'comment':'c',\r\n    },\r\n];\r\n","import * as Constants from '../../Constants';\r\n\r\nexport default function getURL(path, endpoint) {\r\n    return Constants.serverEndpoint + path + endpoint;\r\n}\r\n","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport axios from 'axios';\r\nimport getURL from './helpers/functions/GetURL';\r\nimport * as Constants from './Constants';\r\n\r\nconst loginMainPath = 'authenticate/';\r\n\r\nexport default class Login extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            username:'',\r\n            password:'',\r\n            message:'',\r\n        };\r\n\r\n        this.submitCredentials = this.submitCredentials.bind(this);\r\n    }\r\n\r\n    submitCredentials() {\r\n        axios.post(\r\n            getURL(Constants.serverEndpoint, loginMainPath), \r\n            { \r\n                \"username\":this.state.username, \r\n                \"password\":this.state.password,\r\n            }\r\n            ).then(response => {\r\n                var valid = response.data['message'];\r\n                if (valid == 'success') {\r\n                    this.setState({ message: '' })\r\n                    this.props.login(response.data['token'])\r\n                } else {\r\n                    this.setState({ message:response.data['message'] })\r\n                }\r\n            });\r\n    }\r\n\r\n    updateUsername(event) {\r\n        this.setState({ username: event.target.value })\r\n    }\r\n\r\n    updatePassword(event) {\r\n        this.setState({ password: event.targe.value })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.state.message}\r\n                <TextField\r\n                    id=\"outlined-basic\"\r\n                    label=\"Username\"\r\n                    variant=\"outlined\"\r\n                    required=\"true\"\r\n                    ref='username'\r\n                    onChange={this.updateUsername.bind(this)}\r\n                />\r\n                <TextField\r\n                    id=\"outlined-basic\"\r\n                    label=\"Password\"\r\n                    variant=\"outlined\"\r\n                    required=\"true\"\r\n                    ref='password'\r\n                    onChange={this.updatePassword.bind(this)}\r\n                />\r\n                <Button\r\n                    onClick={() => this.props.loginFunc('token')}\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                >\r\n                    Sign In\r\n                </Button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","export enum ModelCommand {\r\n    create = 'create/',\r\n    delete = 'delete/',\r\n    edit = 'edit/',\r\n    view = 'view/',\r\n    detailView = 'detailView/',\r\n    search = 'search/',\r\n}\r\n","export enum ModelInput {\r\n    Vendor = 'vendor',\r\n    ModelNumber = 'modelNumber',\r\n    Height = 'height',\r\n    DisplayColor = 'displayColor',\r\n    EthernetPorts = 'ethernetPorts',\r\n    PowerPorts = 'powerPorts',\r\n    CPU = 'cpu',\r\n    Memory = 'memory',\r\n    Storage = 'storage',\r\n    Comment = 'comments'\r\n}\r\n","export enum UserCommand {\r\n    create = 'create/',\r\n    delete = 'delete/',\r\n    edit = 'edit/',\r\n    view = 'view/',\r\n    detailView = 'detailView/',\r\n    search='search/',\r\n}\r\n","export enum UserInput {\r\n    Username='username',\r\n    Password='password',\r\n    Email='email',\r\n    DisplayName='displayName',\r\n    Privilege='privilege',\r\n}\r\n","import React from 'react';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nexport default class TableView extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n\r\n    };\r\n  }\r\n\r\n  showDetailedView(event) {\r\n    this.props.showDetailedView(event.target.id);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <TableContainer component={Paper}>\r\n          <Table className={{minWidth: 650}} aria-label=\"simple table\">\r\n            <TableHead>\r\n              <TableRow >\r\n                {this.props.columns.map(col => (<TableCell><span id={col}>{col}</span></TableCell>))}\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {this.props.vals.map((row, index)=> (\r\n              <TableRow>\r\n                {this.props.keys.map(key => (<TableCell scope=\"row\"><span id={index} onClick={this.showDetailedView.bind(this)}>{row[key]}</span></TableCell>))}\r\n              </TableRow>\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\r\nimport CloudDownloadIcon from '@material-ui/icons/CloudDownload';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nexport default class ButtonMenu extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n\r\n        };\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div>\r\n                <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    onClick={this.props.openCreateModal}\r\n                >\r\n                    Create\r\n                </Button>\r\n                <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    startIcon={<CloudUploadIcon />}\r\n                    onClick={this.props.openImportModal}\r\n                >\r\n                    Import\r\n                </Button>\r\n                <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    startIcon={<CloudDownloadIcon />}\r\n                    onClick={this.props.downloadTable}\r\n                >\r\n                    Export\r\n                </Button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nexport default class Filters extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            filters:{},\r\n        };\r\n    }\r\n\r\n    updateSearchText(event) {\r\n        if (this.state.filters.hasOwnProperty(event.target.id)) {\r\n            this.state.filters[event.target.id] = event.target.value;\r\n            this.forceUpdate();\r\n        } else {\r\n            var value = (event.target.value == null) ? '' : event.target.value;\r\n            this.state.filters[event.target.id] = event.target.value;\r\n            //this.state.filters.push({ key:event.target.id, value: value});\r\n            this.forceUpdate();\r\n        }\r\n    }\r\n\r\n    search() {\r\n        this.props.search(this.state.filters);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.props.filters.map((filter, index) => (\r\n                    <div>\r\n                        <SearchIcon />\r\n                        <InputBase\r\n                            placeholder={filter+\" filter\"}\r\n                            inputProps={{ 'aria-label': 'search' }}\r\n                            onChange={this.updateSearchText.bind(this)}\r\n                            id={filter}\r\n                        />\r\n                    </div>\r\n                ))\r\n                }\r\n                <div>\r\n                    <Button\r\n                        onClick={this.search.bind(this)}\r\n                    >\r\n                        Search\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Modal from '@material-ui/core/Modal';\r\n\r\nexport default class UploadModal extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n\r\n        };\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Modal\r\n                style={{top: `50%`,left: `50%`,transform: `translate(-50%, -50%)`,}}\r\n                aria-labelledby=\"simple-modal-title\"\r\n                aria-describedby=\"simple-modal-description\"\r\n                open={this.props.showImportModal}\r\n                onClose={this.props.closeImportModal}\r\n            >\r\n                <div>\r\n                    <input type='file' accept=\".csv\" />\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                    >\r\n                        Upload\r\n                    </Button>\r\n                </div>\r\n            </Modal>\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from '@material-ui/core/Button';\r\n\r\nexport default class DetailedView extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            showConfirmationBox:false,\r\n        };\r\n    }\r\n\r\n    closeModal() {\r\n        this.setState({showConfirmationBox:false,});\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n        <div>\r\n            <Modal\r\n                style={{top: `50%`,left: `50%`,transform: `translate(-50%, -50%)`,}}\r\n                aria-labelledby=\"simple-modal-title\"\r\n                aria-describedby=\"simple-modal-description\"\r\n                open={this.props.showDetailedView}\r\n                onClose={this.props.closeDetailedView}\r\n            >\r\n                <div>\r\n                    {this.props.inputs.map(input => (\r\n                        <TextField id=\"standard-basic\" label={input} onChange={this.props.updateModelEdited} defaultValue={this.props.defaultValues[input]}/>\r\n                    ))}\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        onClick={this.props.edit}\r\n                    >\r\n                        Save\r\n                    </Button>\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        onClick={this.props.delete}\r\n                    >\r\n                        Delete\r\n                    </Button>\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        onClick={this.props.closeDetailedView}\r\n                    >\r\n                        Close\r\n                    </Button>\r\n                </div>\r\n            </Modal>\r\n        </div>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from '@material-ui/core/Button';\r\n\r\nexport default class CreateModal extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n\r\n        };\r\n    }\r\n\r\n    render() {\r\n        return (\r\n        <div>\r\n            <Modal\r\n                style={{top: `50%`,left: `50%`,transform: `translate(-50%, -50%)`,}}\r\n                aria-labelledby=\"simple-modal-title\"\r\n                aria-describedby=\"simple-modal-description\"\r\n                open={this.props.showCreateModal}\r\n                onClose={this.props.closeCreateModal}\r\n            >\r\n                <div>\r\n                    {this.props.inputs.map(input => (\r\n                        <TextField id=\"standard-basic\" label={input} onChange={this.props.updateModelCreator}/>\r\n                    ))}\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        onClick={this.props.createModel}\r\n                    >\r\n                        Create\r\n                    </Button>\r\n                </div>\r\n            </Modal>\r\n        </div>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\nimport axios from 'axios';\r\nimport { ModelCommand } from '../enums/modelCommands.ts'\r\nimport { ModelInput } from '../enums/modelInputs.ts'\r\nimport TableView from '../helpers/TableView';\r\nimport { CSVLink } from \"react-csv\";\r\nimport ButtonMenu from '../helpers/ButtonMenu';\r\nimport Filters from '../helpers/Filters';\r\nimport UploadModal from '../helpers/UploadModal';\r\nimport getURL from '../helpers/functions/GetURL';\r\nimport DetailedView from '../helpers/DetailedView';\r\nimport CreateModal from '../helpers/CreateModal';\r\nimport * as Constants from '../Constants';\r\n\r\nconst inputs = [\r\n    'vendor',\r\n    'modelNumber',\r\n    'height',\r\n    'displayColor',\r\n    'ethernetPorts',\r\n    'powerPorts',\r\n    'cpu',\r\n    'memory',\r\n    'storage',\r\n    'comments',\r\n]\r\n\r\nconst columns = [\r\n    'vendor',\r\n    'modelNumber',\r\n    'height',\r\n]\r\n\r\nconst modelsMainPath = 'models/';\r\nconst modelDownloadFileName = 'models.csv';\r\n\r\nexport default class ModelsView extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n\r\n            // modals\r\n            showCreateModal:false,\r\n            showImportModal:false,\r\n\r\n            // table items\r\n            items:Constants.testModelArray,\r\n\r\n            // vals for creating a new model\r\n            createdModel : {\r\n                'vendor':'',\r\n                'modelNumber':'',\r\n                'height':'',\r\n                'displayColor':'',\r\n                'ethernetPorts':'',\r\n                'powerPorts':'',\r\n                'cpu':'',\r\n                'memory':'',\r\n                'storage':'',\r\n                'comments':'',\r\n            },\r\n            createdVendor:'',\r\n            createdModelNum:'',\r\n            createdHeight:'',\r\n            createdDispClr:'',\r\n            createdEthPorts:'',\r\n            createdPwrPorts:'',\r\n            createdCPU:'',\r\n            createdMem:'',\r\n            createdStorage:'',\r\n            createdComments:'',\r\n\r\n            // vals for deleting a model\r\n            deleteVendor:'',\r\n            deleteModel:'',\r\n\r\n            // vals for viewing a model\r\n            viewVendor:'',\r\n            viewModel:'',\r\n\r\n            // searching a model\r\n            searchText:\"\",\r\n\r\n            // csv data\r\n            csvData:[],\r\n\r\n            // detailed view\r\n            showDetailedView: false,\r\n            detailViewLoading:false,\r\n            detailedValues : {\r\n                'vendor':'',\r\n                'modelNumber':'',\r\n                'height':'',\r\n                'displayColor':'',\r\n                'ethernetPorts':'',\r\n                'powerPorts':'',\r\n                'cpu':'',\r\n                'memory':'',\r\n                'storage':'',\r\n                'comments':'',\r\n            },\r\n        };\r\n\r\n        this.openCreateModal = this.openCreateModal.bind(this);\r\n        this.openImportModal = this.openImportModal.bind(this);\r\n        this.downloadTable = this.downloadTable.bind(this);\r\n        this.updateSearchText = this.updateSearchText.bind(this);\r\n        this.search = this.search.bind(this);\r\n        this.closeImportModal = this.closeImportModal.bind(this);\r\n        this.closeCreateModal = this.closeCreateModal.bind(this);\r\n        this.showDetailedView = this.showDetailedView.bind(this);\r\n        this.editModel = this.editModel.bind(this);\r\n        this.closeDetailedView = this.closeDetailedView.bind(this);\r\n        this.updateModelEdited = this.updateModelEdited.bind(this);\r\n        this.closeCreateModal = this.closeCreateModal.bind(this);\r\n        this.createModel = this.createModel.bind(this);\r\n        this.updateModelCreator = this.updateModelCreator.bind(this);\r\n        this.deleteModel = this.deleteModel.bind(this);\r\n    }\r\n\r\n    createModel() {\r\n        axios.post(\r\n            getURL(modelsMainPath, ModelCommand.create),\r\n            {\r\n                'vendor':this.state.createdModel[ModelInput.Vendor],\r\n                'modelNumber':this.state.createdModel[ModelInput.ModelNumber],\r\n                'height':this.state.createdModel[ModelInput.Height],\r\n                'displayColor':this.state.createdModel[ModelInput.DisplayColor],\r\n                'ethernetPorts':this.state.createdModel[ModelInput.EthernetPorts],\r\n                'powerPorts':this.state.createdModel[ModelInput.PowerPorts],\r\n                'cpu':this.state.createdModel[ModelInput.CPU],\r\n                'memory':this.state.createdModel[ModelInput.Memory],\r\n                'storage':this.state.createdModel[ModelInput.Storage],\r\n                'comments':this.state.createdModel[ModelInput.Comment],\r\n            }\r\n            ).then(response => console.log(response));\r\n\r\n        this.setState({\r\n            createdModel : {\r\n                'vendor':'',\r\n                'modelNumber':'',\r\n                'height':'',\r\n                'displayColor':'',\r\n                'ethernetPorts':'',\r\n                'powerPorts':'',\r\n                'cpu':'',\r\n                'memory':'',\r\n                'storage':'',\r\n                'comments':'',\r\n            },\r\n        });\r\n    }\r\n\r\n    editModel() {\r\n        axios.post(\r\n            getURL(modelsMainPath, ModelCommand.edit),\r\n            {\r\n                'vendor':this.state.detailedValues[ModelInput.Vendor],\r\n                'modelNumber':this.state.detailedValues[ModelInput.ModelNumber],\r\n                'height':this.state.detailedValues[ModelInput.Height],\r\n                'displayColor':this.state.detailedValues[ModelInput.DisplayColor],\r\n                'ethernetPorts':this.state.detailedValues[ModelInput.EthernetPorts],\r\n                'powerPorts':this.state.detailedValues[ModelInput.PowerPorts],\r\n                'cpu':this.state.detailedValues[ModelInput.CPU],\r\n                'memory':this.state.detailedValues[ModelInput.Memory],\r\n                'storage':this.state.detailedValues[ModelInput.Storage],\r\n                'comments':this.state.detailedValues[ModelInput.Comment],\r\n            }\r\n            ).then(response => console.log(response) );\r\n\r\n        this.setState({\r\n            detailedValues : {\r\n                'vendor':'',\r\n                'modelNumber':'',\r\n                'height':'',\r\n                'displayColor':'',\r\n                'ethernetPorts':'',\r\n                'powerPorts':'',\r\n                'cpu':'',\r\n                'memory':'',\r\n                'storage':'',\r\n                'comments':'',\r\n            },\r\n        });\r\n    }\r\n\r\n\r\n    deleteModel() {\r\n        axios.post(\r\n            getURL(modelsMainPath, ModelCommand.delete),\r\n            {\r\n                'vendor':this.state.detailedValues[ModelInput.Vendor],\r\n                'modelNumber':this.state.detailedValues[ModelInput.ModelNumber],\r\n            }\r\n            ).then(response => console.log(response));\r\n\r\n        this.setState({\r\n            detailedValues : {\r\n                'vendor':'',\r\n                'modelNumber':'',\r\n                'height':'',\r\n                'displayColor':'',\r\n                'ethernetPorts':'',\r\n                'powerPorts':'',\r\n                'cpu':'',\r\n                'memory':'',\r\n                'storage':'',\r\n                'comments':'',\r\n            },\r\n            showDetailedView:false\r\n        });\r\n    }\r\n\r\n    detailViewModel(vendor, modelNum) {\r\n        axios.post(\r\n            getURL(modelsMainPath, ModelCommand.detailView),\r\n            {\r\n                'vendor':vendor,\r\n                'modelNumber':modelNum,\r\n            }\r\n            ).then(response => this.setState({ detailedValues: response.data['models'][0], detailViewLoading:false}));\r\n\r\n        this.setState({\r\n            viewVendor:'',\r\n            viewModel:'',\r\n        });\r\n    }\r\n\r\n    searchModels(vendor, modelNum, height) {\r\n        axios.post(\r\n            getURL(modelsMainPath, ModelCommand.search),\r\n            {\r\n                'vendor':vendor,\r\n                'modelNumber':modelNum,\r\n                'height':height,\r\n            }\r\n            ).then(response => this.setState({ items: response.data['models'] }));\r\n\r\n        this.setState({\r\n            searchText:'',\r\n        });\r\n    }\r\n\r\n    search(filters) {\r\n        this.searchModels(filters['vendor'], filters['modelNumber'], filters['height']);\r\n    }\r\n\r\n    downloadTable() {\r\n        this.csvLink.link.click();\r\n    }\r\n\r\n    openCreateModal() {\r\n        this.setState({showCreateModal: true});\r\n    }\r\n\r\n    openImportModal() {\r\n        this.setState({showImportModal: true});\r\n    }\r\n\r\n    showDetailedView(id) {\r\n        this.setState({\r\n            showDetailedView: true,\r\n            detailViewLoading:true,\r\n         });\r\n\r\n        var vendor = this.state.items[id]['vendor'];\r\n        var modelNum = this.state.items[id]['modelNumber'];\r\n\r\n        //this.detailViewModel(vendor, modelNum);\r\n        this.setState({ detailedValues: Constants.testModelArray[id], detailViewLoading:false})\r\n    }\r\n\r\n    closeCreateModal() {\r\n        this.setState({showCreateModal: false});\r\n    }\r\n\r\n    closeImportModal() {\r\n        this.setState({showImportModal: false});\r\n    }\r\n\r\n    closeDetailedView() {\r\n        this.setState({ showDetailedView: false })\r\n    }\r\n\r\n    updateModelCreator(event) {\r\n        this.state.createdModel[event.target.label] = event.target.value;\r\n        this.forceUpdate()\r\n    }\r\n\r\n    updateModelEdited(event) {\r\n        this.state.detailedValues[event.target.label] = event.target.value;\r\n        this.forceUpdate()\r\n    }\r\n\r\n    updateSearchText(event) {\r\n        this.setState({ searchText: event.target.value})\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <ButtonMenu\r\n                    openCreateModal={this.openCreateModal}\r\n                    openImportModal={this.openImportModal}\r\n                    downloadTable={this.downloadTable}\r\n                />\r\n                <CSVLink\r\n                    data={this.state.csvData}\r\n                    filename={modelDownloadFileName}\r\n                    className=\"hidden\"\r\n                    ref={(r) => this.csvLink = r}\r\n                    target=\"_blank\"\r\n                />\r\n                <CreateModal\r\n                    showCreateModal={this.state.showCreateModal}\r\n                    closeCreateModal={this.closeCreateModal}\r\n                    createModel={this.createModel}\r\n                    updateModelCreator={this.updateModelCreator}\r\n                    inputs={inputs}\r\n                />\r\n                <UploadModal\r\n                    showImportModal={this.state.showImportModal}\r\n                    closeImportModal={this.closeImportModal}\r\n                />\r\n                <Filters\r\n                    updateSearchText={this.updateSearchText}\r\n                    search={this.search}\r\n                    filters={columns}\r\n                />\r\n                <TableView\r\n                    columns={columns}\r\n                    vals={this.state.items}\r\n                    keys={columns}\r\n                    showDetailedView={this.showDetailedView}\r\n                    filters={columns}\r\n                />\r\n                <DetailedView\r\n                    showDetailedView={this.state.showDetailedView}\r\n                    closeDetailedView={this.closeDetailedView}\r\n                    inputs={inputs}\r\n                    updateModelEdited={this.updateModelEdited}\r\n                    defaultValues={this.state.detailedValues}\r\n                    loading={this.state.detailViewLoading}\r\n                    edit={this.editModel}\r\n                    delete={this.deleteModel}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\nimport axios from 'axios';\r\nimport { UserCommand } from '../enums/userCommands.ts'\r\nimport { UserInput } from '../enums/userInputs.ts'\r\nimport TableView from '../helpers/TableView';\r\nimport { CSVLink } from \"react-csv\";\r\nimport ButtonMenu from '../helpers/ButtonMenu';\r\nimport Filters from '../helpers/Filters';\r\nimport UploadModal from '../helpers/UploadModal';\r\nimport getURL from '../helpers/functions/GetURL';\r\nimport DetailedView from '../helpers/DetailedView';\r\nimport CreateModal from '../helpers/CreateModal';\r\nimport * as Constants from '../Constants';\r\n\r\n\r\n\r\nconst inputs = [\r\n    'username',\r\n    'email',\r\n    'displayName',\r\n    'privilege',\r\n    'password',\r\n]\r\n\r\nconst columns = [\r\n    'username',\r\n    'email',\r\n    'displayName',\r\n    'privilege',\r\n]\r\n\r\nconst usersMainPath = 'users/';\r\nconst userDownloadFileName = 'users.csv';\r\n\r\nexport default class UsersView extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n\r\n            // modals\r\n            showCreateModal:false,\r\n            showImportModal:false,\r\n\r\n            // table items\r\n            items:Constants.testUserArray,\r\n\r\n            // vals for creating a new user\r\n            createdUser : {\r\n                'username':'',\r\n                'password':'',\r\n                'displayName':'',\r\n                'email':'',\r\n                'privilege':'',\r\n            },\r\n\r\n            // vals for deleting a user\r\n            deleteUsername:'',\r\n\r\n            // vals for viewing a user\r\n            viewUser:'',\r\n\r\n            // csv data\r\n            csvData:[],\r\n\r\n            // detailed view\r\n            showDetailedView: false,\r\n            detailViewLoading:false,\r\n            detailedValues : {\r\n                'username':'',\r\n                'displayName':'',\r\n                'email':'',\r\n                'privilege':'',\r\n            },\r\n        };\r\n\r\n        this.createUser = this.createUser.bind(this);\r\n        this.editUser = this.editUser.bind(this);\r\n        this.deleteUser = this.deleteUser.bind(this);\r\n        this.detailViewUser = this.detailViewUser.bind(this);\r\n        this.searchUsers = this.searchUsers.bind(this);\r\n        this.search = this.search.bind(this);\r\n        this.openCreateModal = this.openCreateModal.bind(this);\r\n        this.openImportModal = this.openImportModal.bind(this);\r\n        this.showDetailedView = this.showDetailedView.bind(this);\r\n        this.closeCreateModal = this.closeCreateModal.bind(this);\r\n        this.closeImportModal = this.closeImportModal.bind(this);\r\n        this.closeDetailedView = this.closeDetailedView.bind(this);\r\n        this.updateUserCreator = this.updateUserCreator.bind(this);\r\n        this.updateUserEdited = this.updateUserEdited.bind(this)\r\n\r\n    }\r\n\r\n    createUser() {\r\n        axios.post(\r\n            getURL(usersMainPath, UserCommand.create),\r\n            {\r\n                'username':this.state.createdUser[UserInput.Username],\r\n                'password':this.state.createdUser[UserInput.Password],\r\n                'displayName':this.state.createdUser[UserInput.DisplayName],\r\n                'email':this.state.createdUser[UserInput.Email],\r\n                'privilege':this.state.createdUser[UserInput.Privilege],\r\n            }\r\n            ).then(response => console.log(response));\r\n\r\n        this.setState({\r\n            createdUser : {\r\n                'username':'',\r\n                'password':'',\r\n                'displayName':'',\r\n                'email':'',\r\n                'privilege':'',\r\n            },\r\n        });\r\n    }\r\n\r\n    editUser() {\r\n        axios.post(\r\n            getURL(usersMainPath, UserCommand.edit),\r\n            {\r\n                'username':this.state.detailedValues[UserInput.Username],\r\n                'displayName':this.state.detailedValues[UserInput.DisplayName],\r\n                'email':this.state.detailedValues[UserInput.Email],\r\n                'privilege':this.state.detailedValues[UserInput.Privilege],\r\n            }\r\n            ).then(response => console.log(response));\r\n\r\n        this.setState({\r\n            detailedValues : {\r\n                'username':'',\r\n                'displayName':'',\r\n                'email':'',\r\n                'privilege':'',\r\n            },\r\n        });\r\n    }\r\n\r\n\r\n    deleteUser() {\r\n        axios.post(\r\n            getURL(usersMainPath, UserCommand.delete),\r\n            {\r\n                'username':this.state.deleteUsername,\r\n            }\r\n            ).then(response => console.log(response));\r\n\r\n        this.setState({\r\n            deleteUsername:'',\r\n            showDetailedView:false\r\n        });\r\n    }\r\n\r\n    detailViewUser(username) {\r\n        axios.post(\r\n            getURL(usersMainPath, UserCommand.detailView),\r\n            {\r\n                'username':username,\r\n            }\r\n            ).then(response => this.setState({ detailedValues: response.data['users'][0], detailViewLoading:false}));\r\n\r\n        this.setState({\r\n            viewUser:'',\r\n        });\r\n    }\r\n\r\n    searchUsers(username, email, displayName, privilege) {\r\n        axios.post(\r\n            getURL(usersMainPath, UserCommand.search),\r\n            {\r\n                'username':username,\r\n                'email':email,\r\n                'displayName':displayName,\r\n                'privilege':privilege,\r\n            }\r\n            ).then(response => this.setState({ items: response.data['users'] }));\r\n    }\r\n\r\n    search(filters) {\r\n        this.searchUsers(filters['username'], filters['email'], filters['displayName'], filters['privilege']);\r\n    }\r\n\r\n    downloadTable() {\r\n        this.csvLink.link.click();\r\n    }\r\n\r\n    openCreateModal() {\r\n        this.setState({showCreateModal: true});\r\n    }\r\n\r\n    openImportModal() {\r\n        this.setState({showImportModal: true});\r\n    }\r\n\r\n    showDetailedView(id) {\r\n        this.setState({\r\n            showDetailedView: true,\r\n            detailViewLoading:true,\r\n         });\r\n\r\n        var username = this.state.items[id]['username'];\r\n        var email = this.state.items[id]['email'];\r\n        var displayName = this.state.items[id]['displayName'];\r\n        var privilege = this.state.items[id]['privilege'];\r\n\r\n        //this.detailViewUser(username, email, displayName, privilege);\r\n        this.setState({ detailedValues: Constants.testUserArray[id], detailViewLoading:false})\r\n    }\r\n\r\n    closeCreateModal() {\r\n        this.setState({showCreateModal: false});\r\n    }\r\n\r\n    closeImportModal() {\r\n        this.setState({showImportModal: false});\r\n    }\r\n\r\n    closeDetailedView() {\r\n        this.setState({ showDetailedView: false })\r\n    }\r\n\r\n    updateUserCreator(event) {\r\n        this.state.createdUser[event.target.label] = event.target.value;\r\n        this.forceUpdate()\r\n    }\r\n\r\n    updateUserEdited(event) {\r\n        this.state.detailedValues[event.target.label] = event.target.value;\r\n        this.forceUpdate()\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <ButtonMenu\r\n                    openCreateModal={this.openCreateModal}\r\n                    openImportModal={this.openImportModal}\r\n                    downloadTable={this.downloadTable}\r\n                />\r\n                <CSVLink\r\n                    data={this.state.csvData}\r\n                    filename={userDownloadFileName}\r\n                    className=\"hidden\"\r\n                    ref={(r) => this.csvLink = r}\r\n                    target=\"_blank\"\r\n                />\r\n                <CreateModal\r\n                    showCreateModal={this.state.showCreateModal}\r\n                    closeCreateModal={this.closeCreateModal}\r\n                    createModel={this.createUser}\r\n                    updateModelCreator={this.updateUserCreator}\r\n                    inputs={inputs}\r\n                />\r\n                <UploadModal\r\n                    showImportModal={this.state.showImportModal}\r\n                    closeImportModal={this.closeImportModal}\r\n                />\r\n                <Filters\r\n                    updateSearchText={this.updateSearchText}\r\n                    search={this.search}\r\n                    filters={columns}\r\n                />\r\n                <TableView\r\n                    columns={columns}\r\n                    vals={this.state.items}\r\n                    keys={columns}\r\n                    showDetailedView={this.showDetailedView}\r\n                    filters={columns}\r\n                />\r\n                <DetailedView\r\n                    showDetailedView={this.state.showDetailedView}\r\n                    closeDetailedView={this.closeDetailedView}\r\n                    inputs={inputs}\r\n                    updateModelEdited={this.updateUserEdited}\r\n                    defaultValues={this.state.detailedValues}\r\n                    loading={this.state.detailViewLoading}\r\n                    edit={this.editUser}\r\n                    delete={this.deleteUser}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","export enum InstanceCommand {\r\n    create = 'create/',\r\n    delete = 'delete/',\r\n    edit = 'edit/',\r\n    view = 'view/',\r\n    detailView = 'detailView/',\r\n    search = 'search/'\r\n}\r\n","export enum InstanceInput {\r\n    Model = 'model',\r\n    Hostname = 'hostname',\r\n    Rack = 'rack',\r\n    RackU = 'rackU',\r\n    Owner = 'owner',\r\n    Comment = 'comment',\r\n}\r\n","import React from 'react';\r\nimport axios from 'axios';\r\nimport { InstanceCommand } from '../enums/instanceCommands.ts'\r\nimport { InstanceInput } from '../enums/instanceInputs.ts'\r\nimport TableView from '../helpers/TableView';\r\nimport { CSVLink } from \"react-csv\";\r\nimport ButtonMenu from '../helpers/ButtonMenu';\r\nimport Filters from '../helpers/Filters';\r\nimport UploadModal from '../helpers/UploadModal';\r\nimport getURL from '../helpers/functions/GetURL';\r\nimport DetailedView from '../helpers/DetailedView';\r\nimport CreateModal from '../helpers/CreateModal';\r\nimport * as Constants from '../Constants';\r\n\r\nconst inputs = [\r\n    'model',\r\n    'hostname',\r\n    'rack',\r\n    'rackU',\r\n    'owner',\r\n    'comment',\r\n]\r\n\r\nconst columns = [\r\n    'model',\r\n    'hostname',\r\n    'rack',\r\n    'rackU',\r\n]\r\n\r\nconst instancesMainPath = 'instances/';\r\nconst instanceDownloadFileName = 'instances.csv';\r\n\r\nexport default class InstancesView extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n\r\n            // modals\r\n            showCreateModal:false,\r\n            showImportModal:false,\r\n\r\n            // table items\r\n            items:Constants.testInstanceArray,\r\n\r\n            // vals for creating a new instance\r\n            createdInstance : {\r\n                'model':'',\r\n                'hostname':'',\r\n                'rack':'',\r\n                'rackU':'',\r\n                'owner':'',\r\n                'comment':'',\r\n            },\r\n\r\n            // vals for deleting an instance\r\n            deleteInstanceRack:'',\r\n            deleteInstanceRackU:'',\r\n\r\n            // vals for viewing an instance\r\n            viewInstanceRack:'',\r\n            viewInstanceRackU:'',\r\n\r\n            // csv data\r\n            csvData:[],\r\n\r\n            // detailed view\r\n            showDetailedView: false,\r\n            detailViewLoading:false,\r\n            detailedValues : {\r\n                'model':'',\r\n                'hostname':'',\r\n                'rack':'',\r\n                'rackU':'',\r\n                'owner':'',\r\n                'comment':'',\r\n            },\r\n        };\r\n\r\n        this.createInstance = this.createInstance.bind(this);\r\n        this.editInstance = this.editInstance.bind(this);\r\n        this.deleteInstance = this.deleteInstance.bind(this);\r\n        this.detailViewInstance = this.detailViewInstance.bind(this);\r\n        this.searchInstances = this.searchInstances.bind(this);\r\n        this.search = this.search.bind(this);\r\n        this.openCreateModal = this.openCreateModal.bind(this);\r\n        this.openImportModal = this.openImportModal.bind(this);\r\n        this.showDetailedView = this.showDetailedView.bind(this);\r\n        this.closeCreateModal = this.closeCreateModal.bind(this);\r\n        this.closeImportModal = this.closeImportModal.bind(this);\r\n        this.closeDetailedView = this.closeDetailedView.bind(this);\r\n        this.updateInstanceCreator = this.updateInstanceCreator.bind(this);\r\n        this.updateInstanceEdited = this.updateInstanceEdited.bind(this)\r\n\r\n    }\r\n\r\n    createInstance() {\r\n        axios.post(\r\n            getURL(instancesMainPath, InstanceCommand.create),\r\n            {\r\n                'model':this.state.createdInstance[InstanceInput.Model],\r\n                'hostname':this.state.createdInstance[InstanceInput.Hostname],\r\n                'rack':this.state.createdInstance[InstanceInput.Rack],\r\n                'rackU':this.state.createdInstance[InstanceInput.RackU],\r\n                'owner':this.state.createdInstance[InstanceInput.Owner],\r\n                'comment':this.state.createdInstance[InstanceInput.Comment],\r\n            }\r\n            ).then(response => console.log(response));\r\n\r\n        this.setState({\r\n            createdInstance : {\r\n                'model':'',\r\n                'hostname':'',\r\n                'rack':'',\r\n                'rackU':'',\r\n                'owner':'',\r\n                'comment':'',\r\n            },\r\n        });\r\n    }\r\n\r\n    editInstance() {\r\n        axios.post(\r\n            getURL(instancesMainPath, InstanceCommand.edit),\r\n            {\r\n                'model':this.state.detailedValues[InstanceInput.Model],\r\n                'hostname':this.state.detailedValues[InstanceInput.Hostname],\r\n                'rack':this.state.detailedValues[InstanceInput.Rack],\r\n                'rackU':this.state.detailedValues[InstanceInput.RackU],\r\n                'owner':this.state.detailedValues[InstanceInput.Owner],\r\n                'comment':this.state.detailedValues[InstanceInput.Comment],\r\n            }\r\n            ).then(response => console.log(response));\r\n\r\n        this.setState({\r\n            detailedValues : {\r\n                'model':'',\r\n                'hostname':'',\r\n                'rack':'',\r\n                'rackU':'',\r\n                'owner':'',\r\n                'comment':'',\r\n            },\r\n        });\r\n    }\r\n\r\n\r\n    deleteInstance() {\r\n        axios.post(\r\n            getURL(instancesMainPath, InstanceCommand.delete),\r\n            {\r\n                'rack':this.state.deleteInstanceRack,\r\n                'rackU':this.state.deleteInstanceRackU,\r\n            }\r\n            ).then(response => console.log(response));\r\n\r\n        this.setState({\r\n            deleteInstanceRack:'',\r\n            deleteInstanceRackU:'',\r\n            showDetailedView:false\r\n        });\r\n    }\r\n\r\n    detailViewInstance(rack, rackU) {\r\n        axios.post(\r\n            getURL(instancesMainPath, InstanceCommand.detailView),\r\n            {\r\n                'rack':rack,\r\n                'rackU':rackU,\r\n            }\r\n            ).then(response => this.setState({ detailedValues: response.data['instances'][0], detailViewLoading:false}));\r\n\r\n        this.setState({\r\n            viewInstanceRack:'',\r\n        });\r\n    }\r\n\r\n    searchInstances(model, hostname, rack, rackU) {\r\n        axios.post(\r\n            getURL(instancesMainPath, InstanceCommand.search),\r\n            {\r\n                'model':model,\r\n                'hostname':hostname,\r\n                'rack':rack,\r\n                'rackU':rackU,\r\n            }\r\n            ).then(response => this.setState({ items: response.data['instances'] }));\r\n    }\r\n\r\n    search(filters) {\r\n        this.searchInstances(filters['model'], filters['hostname'], filters['rack'], filters['rackU']);\r\n    }\r\n\r\n    downloadTable() {\r\n        this.csvLink.link.click();\r\n    }\r\n\r\n    openCreateModal() {\r\n        this.setState({showCreateModal: true});\r\n    }\r\n\r\n    openImportModal() {\r\n        this.setState({showImportModal: true});\r\n    }\r\n\r\n    showDetailedView(id) {\r\n        this.setState({\r\n            showDetailedView: true,\r\n            detailViewLoading:true,\r\n        });\r\n\r\n        var model = this.state.items[id]['model'];\r\n        var hostname = this.state.items[id]['hostname'];\r\n        var rack = this.state.items[id]['rack'];\r\n        var rackU = this.state.items[id]['rackU'];\r\n\r\n        //this.detailViewInstance(model, hostname, rack, rackU);\r\n        this.setState({ detailedValues: Constants.testInstanceArray[id], detailViewLoading:false})\r\n    }\r\n\r\n    closeCreateModal() {\r\n        this.setState({showCreateModal: false});\r\n    }\r\n\r\n    closeImportModal() {\r\n        this.setState({showImportModal: false});\r\n    }\r\n\r\n    closeDetailedView() {\r\n        this.setState({ showDetailedView: false })\r\n    }\r\n\r\n    updateInstanceCreator(event) {\r\n        this.state.createdInstance[event.target.label] = event.target.value;\r\n        this.forceUpdate()\r\n    }\r\n\r\n    updateInstanceEdited(event) {\r\n        this.state.detailedValues[event.target.label] = event.target.value;\r\n        this.forceUpdate()\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <ButtonMenu\r\n                    openCreateModal={this.openCreateModal}\r\n                    openImportModal={this.openImportModal}\r\n                    downloadTable={this.downloadTable}\r\n                />\r\n                <CSVLink\r\n                    data={this.state.csvData}\r\n                    filename={instanceDownloadFileName}\r\n                    className=\"hidden\"\r\n                    ref={(r) => this.csvLink = r}\r\n                    target=\"_blank\"\r\n                />\r\n                <CreateModal\r\n                    showCreateModal={this.state.showCreateModal}\r\n                    closeCreateModal={this.closeCreateModal}\r\n                    createModel={this.createInstance}\r\n                    updateModelCreator={this.updateInstanceCreator}\r\n                    inputs={inputs}\r\n                />\r\n                <UploadModal\r\n                    showImportModal={this.state.showImportModal}\r\n                    closeImportModal={this.closeImportModal}\r\n                />\r\n                <Filters\r\n                    updateSearchText={this.updateSearchText}\r\n                    search={this.search}\r\n                    filters={columns}\r\n                />\r\n                <TableView\r\n                    columns={columns}\r\n                    vals={this.state.items}\r\n                    keys={columns}\r\n                    showDetailedView={this.showDetailedView}\r\n                    filters={columns}\r\n                />\r\n                <DetailedView\r\n                    showDetailedView={this.state.showDetailedView}\r\n                    closeDetailedView={this.closeDetailedView}\r\n                    inputs={inputs}\r\n                    updateModelEdited={this.updateInstanceEdited}\r\n                    defaultValues={this.state.detailedValues}\r\n                    loading={this.state.detailViewLoading}\r\n                    edit={this.editInstance}\r\n                    delete={this.deleteInstance}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\nimport TableView from '../helpers/TableView';\r\n\r\nconst columns = [\r\n    \"Vendor\",\r\n    \"Model Number\",\r\n    \"Height (U)\",\r\n    \"Display Color\",\r\n    \"Ethernet Ports\",\r\n    \"Power Ports\",\r\n    \"CPU\",\r\n    \"Memory\",\r\n    \"Storage\",\r\n    \"Comments\",\r\n]\r\n\r\nexport default function RacksView(props) {\r\n    return (<div></div>);\r\n}\r\n","import React from 'react';\r\nimport TableView from '../helpers/TableView';\r\n\r\nexport default function StatisticsView(props) {\r\n    return (<div></div>);\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\nimport ModelsView from './pages/ModelsView';\r\nimport UsersView from './pages/UsersView';\r\nimport InstancesView from './pages/InstancesView';\r\nimport RacksView from './pages/RacksView';\r\nimport StatisticsView from './pages/StatisticsView';\r\nimport Button from '@material-ui/core/Button';\r\nimport Logout from './helpers/Logout';\r\n\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <Typography\r\n      component=\"div\"\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`simple-tabpanel-${index}`}\r\n      aria-labelledby={`simple-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && <Box p={3}>{children}</Box>}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n  children: PropTypes.node,\r\n  index: PropTypes.any.isRequired,\r\n  value: PropTypes.any.isRequired,\r\n};\r\n\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `simple-tab-${index}`,\r\n    'aria-controls': `simple-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n  tab: {\r\n    flexGrow: 1,\r\n  },\r\n  button:{\r\n    flexGrow: 1,\r\n  }\r\n}));\r\n\r\nexport default function TabManager() {\r\n  const classes = useStyles();\r\n  const [value, setValue] = React.useState(0);\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\">\r\n        <Tabs value={value} onChange={handleChange}>\r\n          <Tab className={classes.tab} label=\"Models\" {...a11yProps(0)} />\r\n          <Tab className={classes.tab} label=\"Instances\" {...a11yProps(1)} />\r\n          <Tab className={classes.tab} label=\"Racks\" {...a11yProps(2)} />\r\n          <Tab className={classes.tab} label=\"Statistics\" {...a11yProps(2)} />\r\n          <Tab className={classes.tab} label=\"Users\" {...a11yProps(2)}  />\r\n          <Button\r\n           className={classes.button}\r\n           variant=\"contained\"\r\n           color=\"secondary\"\r\n           onClick={Logout()}\r\n           >\r\n              Logout\r\n          </Button>\r\n        </Tabs>\r\n      </AppBar>\r\n      <TabPanel value={value} index={0}>\r\n        <ModelsView />\r\n      </TabPanel>\r\n      <TabPanel value={value} index={1}>\r\n        <InstancesView />\r\n      </TabPanel>\r\n      <TabPanel value={value} index={2}>\r\n        <RacksView />\r\n      </TabPanel>\r\n      <TabPanel value={value} index={3}>\r\n        <StatisticsView />\r\n      </TabPanel>\r\n      <TabPanel value={value} index={4}>\r\n        <UsersView />\r\n      </TabPanel>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport Login from \"./Login\";\r\nimport TabManager from \"./TabManager\";\r\n\r\nexport default class PageSelector extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      token:'',\r\n      loggedIn:false,\r\n    };\r\n\r\n    this.login = this.login.bind(this);\r\n  }\r\n\r\n  login(token) {\r\n    this.setState({\r\n      token:token,\r\n      loggedIn:true,\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        {this.state.loggedIn ?  <TabManager token={this.state.token} /> : <Login loginFunc={this.login} />}\r\n      </div>\r\n    );\r\n  }\r\n  \r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './stylesheets/index.css';\nimport PageSelector from './javascript/PageSelector';\n\nReactDOM.render(<PageSelector />, document.getElementById('root'));\n"],"sourceRoot":""}
