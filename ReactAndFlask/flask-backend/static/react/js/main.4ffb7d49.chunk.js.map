{"version":3,"sources":["javascript/Login.jsx","javascript/enums/modelCommands.ts","javascript/enums/modelInputs.ts","javascript/helpers/TableView.jsx","javascript/helpers/ButtonMenu.jsx","javascript/helpers/Filters.jsx","javascript/helpers/UploadModal.jsx","javascript/Constants.jsx","javascript/helpers/functions/GetURL.jsx","javascript/helpers/functions/JSONtoArr.jsx","javascript/enums/userInputs.ts","javascript/enums/userCommands.ts","javascript/helpers/DetailedView.jsx","javascript/pages/ModelsView.jsx","javascript/pages/UsersView.jsx","javascript/enums/instanceInputs.ts","javascript/enums/instanceCommands.ts","javascript/pages/InstancesView.jsx","javascript/pages/RacksView.jsx","javascript/pages/StatisticsView.jsx","javascript/TabManager.jsx","index.jsx","javascript/PageSelector.jsx"],"names":["useStyles","makeStyles","theme","paper","marginTop","spacing","display","flexDirection","alignItems","avatar","margin","backgroundColor","palette","secondary","main","form","submit","Login","props","classes","className","TextField","id","label","variant","required","ref","FormControl","FormGroup","FormControlLabel","value","control","Checkbox","color","labelPlacement","Button","onClick","username","refs","getValue","password","axios","post","then","response","console","log","ModelCommand","ModelInput","TableView","state","TableContainer","component","Paper","Table","minWidth","aria-label","TableHead","TableRow","this","columns","map","col","TableCell","TableBody","vals","row","val","scope","React","Component","ButtonMenu","openCreateModal","startIcon","openImportModal","downloadTable","Filters","searchText","InputBase","placeholder","inputProps","onChange","updateSearchText","searchModels","UploadModal","Modal","style","top","left","transform","aria-labelledby","aria-describedby","open","showImportModal","onClose","closeImportModal","type","accept","serverEndpoint","getURL","path","endpoint","Constants","jsonToArr","json","items","entries","push","Vendor","ModelNumber","UserInput","UserCommand","DetailedView","show","close","edit","inputs","ModelsView","showCreateModal","modelToken","createdModel","createdVendor","createdModelNum","createdHeight","createdDispClr","createdEthPorts","createdPwrPorts","createdCPU","createdMem","createdStorage","createdComments","deleteVendor","deleteModel","viewVendor","viewModel","csvData","showDetailedView","detailedValues","bind","closeCreateModal","editModel","closeDetailedView","create","Height","DisplayColor","EthernetPorts","PowerPorts","CPU","Memory","Storage","Comment","setState","delete","detailView","search","data","csvLink","link","click","event","target","name","forceUpdate","filename","r","updateModelCreator","createModel","usersMainPath","users","Username","Email","DisplayName","InstanceInput","InstanceCommand","UsersView","instanceToken","createdUser","deleteUsername","viewUsername","view","updateUserCreator","UserNumber","createUser","searchUsers","instancesMainPath","instances","Model","Hostname","Rack","RackU","Owner","InstancesView","createdInstance","deleteInstanceRack","deleteInstanceRackU","viewRack","viewRackU","updateInstanceCreator","createInstance","searchInstances","RacksView","StatisticsView","TabPanel","children","index","other","Typography","role","hidden","Box","p","a11yProps","root","flexGrow","background","tab","button","TabManager","useState","setValue","AppBar","position","Tabs","newValue","Tab","Logout","ReactDOM","render","document","getElementById"],"mappings":"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","file":"js/main.4ffb7d49.chunk.js","sourcesContent":["import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Link from '@material-ui/core/Link';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\n\r\nimport axios from 'axios';\r\n\r\n\r\nfunction submitCredentials(username, password) {\r\n    axios.post('http://localhost:4010/users/authenticate', { \"username\":username, \"password\":password} ).then(response => console.log(response))\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    paper: {\r\n        marginTop: theme.spacing(8),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n        marginTop: theme.spacing(1),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n}));\r\n\r\nexport default function Login(props) {\r\n    const classes = useStyles();\r\n    return (\r\n        <div className={classes.paper}>\r\n            <TextField\r\n                id=\"outlined-basic\"\r\n                label=\"Username\"\r\n                variant=\"outlined\"\r\n                required=\"true\"\r\n                ref='username'\r\n            />\r\n            <TextField\r\n                id=\"outlined-basic\"\r\n                label=\"Password\"\r\n                variant=\"outlined\"\r\n                required=\"true\"\r\n                ref='password'\r\n            />\r\n            <FormControl className={classes.form}>\r\n                <FormGroup>\r\n                    <FormControlLabel\r\n                        value=\"end\"\r\n                        control={<Checkbox color=\"primary\" />}\r\n                        label=\"End\"\r\n                        labelPlacement=\"end\"\r\n                    />\r\n                </FormGroup>\r\n            </FormControl>\r\n            <Button\r\n                onClick={() => (submitCredentials(this.refs.username.getValue(), this.refs.password.getValue()))}\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className={classes.submit}\r\n            >\r\n                Sign In\r\n            </Button>\r\n        </div>\r\n    );\r\n}\r\n","export enum ModelCommand {\r\n    create = 'create/',\r\n    delete = 'delete/',\r\n    edit = 'edit/',\r\n    view = 'view/',\r\n    detailView = 'detailView/',\r\n    search = 'search/',\r\n}\r\n","export enum ModelInput {\r\n    Vendor = 'vendor',\r\n    ModelNumber = 'modelNumber',\r\n    Height = 'height',\r\n    DisplayColor = 'displayColor',\r\n    EthernetPorts = 'ethernetPorts',\r\n    PowerPorts = 'powerPorts',\r\n    CPU = 'cpu',\r\n    Memory = 'memory',\r\n    Storage = 'storage',\r\n    Comment = 'comments'\r\n}\r\n","import React from 'react';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nexport default class TableView extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n\r\n    };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <TableContainer component={Paper}>\r\n          <Table className={{minWidth: 650}} aria-label=\"simple table\">\r\n            <TableHead>\r\n              <TableRow >\r\n                {this.props.columns.map(col => (<TableCell><span id={col}>{col}</span></TableCell>))}\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {this.props.vals.map(row => (\r\n              <TableRow>\r\n                {row.map(val => (<TableCell scope=\"row\">{val}</TableCell>))}\r\n              </TableRow>\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\r\nimport CloudDownloadIcon from '@material-ui/icons/CloudDownload';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nexport default class ButtonMenu extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n\r\n        };\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div>\r\n                <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    onClick={this.props.openCreateModal}\r\n                >\r\n                    Create\r\n                </Button>\r\n                <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    startIcon={<CloudUploadIcon />}\r\n                    onClick={this.props.openImportModal}\r\n                >\r\n                    Import\r\n                </Button>\r\n                <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    startIcon={<CloudDownloadIcon />}\r\n                    onClick={this.props.downloadTable}\r\n                >\r\n                    Export\r\n                </Button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nexport default class Filters extends React.Component {\r\n    /*const classes = useStyles();*/\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            searchText:\"\",\r\n        };\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div>\r\n                    <SearchIcon />\r\n                </div>\r\n                <InputBase\r\n                    placeholder=\"Search (blank does a search all)\"\r\n                    inputProps={{ 'aria-label': 'search' }}\r\n                    onChange={this.props.updateSearchText}\r\n                />\r\n                <Button\r\n                    onClick={this.props.searchModels}\r\n                >\r\n                    Search\r\n                </Button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Modal from '@material-ui/core/Modal';\r\n\r\nexport default class UploadModal extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n\r\n        };\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Modal\r\n                style={{top: `50%`,left: `50%`,transform: `translate(-50%, -50%)`,}}\r\n                aria-labelledby=\"simple-modal-title\"\r\n                aria-describedby=\"simple-modal-description\"\r\n                open={this.props.showImportModal}\r\n                onClose={this.props.closeImportModal}\r\n            >\r\n                <div>\r\n                    <input type='file' accept=\".csv\" />\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                    >\r\n                        Upload\r\n                    </Button>\r\n                </div>\r\n            </Modal>\r\n        )\r\n    }\r\n}\r\n","/**\r\n * Constants file\r\n */\r\n\r\nexport const localServerEndpoint = 'http://localhost:4010/';\r\nexport const devServerEndpoint = 'https://parseltongue-dev.herokuapp.com/';\r\nexport const prodServerEndpoint = 'https://parseltongue-prod.herokuapp.com/';\r\n\r\nexport const serverEndpoint = localServerEndpoint;\r\n","import * as Constants from '../../Constants';\r\n\r\nexport default function getURL(path, endpoint) {\r\n    return Constants.serverEndpoint + path + endpoint;\r\n}\r\n","import { ModelInput } from '../../enums/modelInputs.ts'\r\n\r\nexport default function jsonToArr(json) {\r\n    const items = [];\r\n\r\n    for (const [index, val] of json.entries()) {\r\n        const row = [];\r\n        row.push(val[ModelInput.Vendor]);\r\n        row.push(val[ModelInput.ModelNumber]);\r\n        items.push(row);\r\n    }\r\n    return items;\r\n}\r\n","export enum UserInput {\r\n    Username='username',\r\n    Password='password',\r\n    Email='email',\r\n    DisplayName='displayName',\r\n}\r\n","export enum UserCommand {\r\n    create = 'create/',\r\n    delete = 'delete/',\r\n    edit = 'edit/',\r\n    view = 'view/',\r\n    detailView = 'detailView/',\r\n    search='search/',\r\n}\r\n","import React from 'react';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from '@material-ui/core/Button';\r\n\r\nexport default class DetailedView extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n\r\n        };\r\n    }\r\n\r\n    render() {\r\n        return (\r\n        <div>\r\n            <Modal\r\n                style={{top: `50%`,left: `50%`,transform: `translate(-50%, -50%)`,}}\r\n                aria-labelledby=\"simple-modal-title\"\r\n                aria-describedby=\"simple-modal-description\"\r\n                open={this.props.show}\r\n                onClose={this.props.close}\r\n            >\r\n                <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    onClick={this.props.edit}\r\n                >\r\n                    Save Edits\r\n                </Button>\r\n            </Modal>\r\n        </div>);\r\n    }\r\n}","import React from 'react';\r\nimport axios from 'axios';\r\nimport { ModelCommand } from '../enums/modelCommands.ts'\r\nimport { ModelInput } from '../enums/modelInputs.ts'\r\nimport Modal from '@material-ui/core/Modal';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport TableView from '../helpers/TableView';\r\nimport { CSVLink } from \"react-csv\";\r\nimport ButtonMenu from '../helpers/ButtonMenu';\r\nimport Filters from '../helpers/Filters';\r\nimport UploadModal from '../helpers/UploadModal';\r\nimport getURL from '../helpers/functions/GetURL';\r\nimport jsonToArr from '../helpers/functions/JSONtoArr';\r\nimport DetailedView from '../helpers/DetailedView';\r\n\r\nconst inputs = [\r\n    \"Vendor\",\r\n    \"Model Number\",\r\n    \"Height (U)\",\r\n    \"Display Color\",\r\n    \"Ethernet Ports\",\r\n    \"Power Ports\",\r\n    \"CPU\",\r\n    \"Memory\",\r\n    \"Storage\",\r\n    \"Comments\",\r\n]\r\n\r\nconst columns = [\r\n    \"Vendor\",\r\n    \"Model Number\",\r\n    \"Height (U)\",\r\n]\r\n\r\nconst modelsMainPath = 'models/';\r\nconst modelDownloadFileName = 'models.csv';\r\n\r\nexport default class ModelsView extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n\r\n            // modals\r\n            showCreateModal:false,\r\n            showImportModal:false,\r\n\r\n            // table items\r\n            items:[],\r\n\r\n            modelToken:\"\",\r\n\r\n            // vals for creating a new model\r\n            createdModel : {\r\n                'vendor':'',\r\n                'modelNumber':'',\r\n                'height':'',\r\n                'displayColor':'',\r\n                'ethernetPorts':'',\r\n                'powerPorts':'',\r\n                'cpu':'',\r\n                'memory':'',\r\n                'storage':'',\r\n                'comments':'',\r\n            },\r\n            createdVendor:'',\r\n            createdModelNum:'',\r\n            createdHeight:'',\r\n            createdDispClr:'',\r\n            createdEthPorts:'',\r\n            createdPwrPorts:'',\r\n            createdCPU:'',\r\n            createdMem:'',\r\n            createdStorage:'',\r\n            createdComments:'',\r\n\r\n            // vals for deleting a model\r\n            deleteVendor:'',\r\n            deleteModel:'',\r\n\r\n            // vals for viewing a model\r\n            viewVendor:'',\r\n            viewModel:'',\r\n\r\n            // searching a model\r\n            searchText:\"\",\r\n\r\n            // csv data\r\n            csvData:[],\r\n\r\n            // detailed view\r\n            showDetailedView: true,\r\n            detailedValues : {\r\n                'vendor':'',\r\n                'modelNumber':'',\r\n                'height':'',\r\n                'displayColor':'',\r\n                'ethernetPorts':'',\r\n                'powerPorts':'',\r\n                'cpu':'',\r\n                'memory':'',\r\n                'storage':'',\r\n                'comments':'',\r\n            },\r\n        };\r\n\r\n        this.openCreateModal = this.openCreateModal.bind(this);\r\n        this.openImportModal = this.openImportModal.bind(this);\r\n        this.downloadTable = this.downloadTable.bind(this);\r\n        this.updateSearchText = this.updateSearchText.bind(this);\r\n        this.searchModels = this.searchModels.bind(this);\r\n        this.closeImportModal = this.closeImportModal.bind(this);\r\n        this.closeCreateModal = this.closeCreateModal.bind(this);\r\n        this.showDetailedView = this.showDetailedView.bind(this);\r\n        this.editModel = this.editModel.bind(this);\r\n        this.closeDetailedView = this.closeDetailedView.bind(this);\r\n    }\r\n\r\n    createModel() {\r\n        axios.post(\r\n            getURL(modelsMainPath, ModelCommand.create),\r\n            {\r\n                'vendor':this.state.createdModel[ModelInput.Vendor],\r\n                'modelNumber':this.state.createdModel[ModelInput.ModelNumber],\r\n                'height':this.state.createdModel[ModelInput.Height],\r\n                'displayColor':this.state.createdModel[ModelInput.DisplayColor],\r\n                'ethernetPorts':this.state.createdModel[ModelInput.EthernetPorts],\r\n                'powerPorts':this.state.createdModel[ModelInput.PowerPorts],\r\n                'cpu':this.state.createdModel[ModelInput.CPU],\r\n                'memory':this.state.createdModel[ModelInput.Memory],\r\n                'storage':this.state.createdModel[ModelInput.Storage],\r\n                'comments':this.state.createdModel[ModelInput.Comment],\r\n            }\r\n            ).then(response => console.log(response));\r\n\r\n        this.setState({\r\n            createdVendor:'',\r\n            createdModelNum:'',\r\n            createdHeight:'',\r\n            createdDispClr:'',\r\n            createdEthPorts:'',\r\n            createdPwrPorts:'',\r\n            createdCPU:'',\r\n            createdMem:'',\r\n            createdStorage:'',\r\n            createdComments:'',\r\n        });\r\n    }\r\n\r\n    deleteModel() {\r\n        axios.post(\r\n            getURL(modelsMainPath, ModelCommand.delete),\r\n            {\r\n                'vendor':this.state.deleteVendor,\r\n                'modelNumber':this.state.deleteModel,\r\n            }\r\n            ).then(response => console.log(response));\r\n\r\n        this.setState({\r\n            deleteVendor:'',\r\n            deleteModel:'',\r\n        });\r\n    }\r\n\r\n    detailViewModel() {\r\n        axios.post(\r\n            getURL(modelsMainPath, ModelCommand.detailView),\r\n            {\r\n                'vendor':this.state.viewVendor,\r\n                'modelNumber':this.state.viewModel,\r\n            }\r\n            ).then(response => console.log(response));\r\n\r\n        this.setState({\r\n            viewVendor:'',\r\n            viewModel:'',\r\n        });\r\n    }\r\n\r\n    searchModels() {\r\n        axios.post(\r\n            getURL(modelsMainPath, ModelCommand.search),\r\n            {\r\n                'filter':this.state.searchText,\r\n            }\r\n            ).then(response => this.setState({ items: jsonToArr(response.data['models']) }));\r\n\r\n        this.setState({\r\n            searchText:'',\r\n        });\r\n    }\r\n\r\n    downloadTable() {\r\n        this.csvLink.link.click();\r\n    }\r\n\r\n    openCreateModal() {\r\n        this.setState({showCreateModal: true});\r\n    }\r\n\r\n    openImportModal() {\r\n        this.setState({showImportModal: true});\r\n    }\r\n\r\n    closeCreateModal() {\r\n        this.setState({showCreateModal: true});\r\n    }\r\n\r\n    closeImportModal() {\r\n        this.setState({showImportModal: false});\r\n    }\r\n\r\n    updateModelCreator(event) {\r\n        this.state.createdModel[event.target.name] = event.target.value;\r\n        this.forceUpdate()\r\n    }\r\n\r\n    updateSearchText(event) {\r\n        this.setState({ searchText: event.target.value})\r\n    }\r\n\r\n    showDetailedView() {\r\n        this.setState({ showDetailedView: true })\r\n    }\r\n\r\n    closeDetailedView() {\r\n        this.setState({ showDetailedView: false })\r\n    }\r\n\r\n    editModel() {\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <ButtonMenu\r\n                    openCreateModal={this.openCreateModal}\r\n                    openImportModal={this.openImportModal}\r\n                    downloadTable={this.downloadTable}\r\n                />\r\n                <CSVLink\r\n                    data={this.state.csvData}\r\n                    filename={modelDownloadFileName}\r\n                    className=\"hidden\"\r\n                    ref={(r) => this.csvLink = r}\r\n                    target=\"_blank\"\r\n                />\r\n                <Modal\r\n                    style={{top: `50%`,left: `50%`,transform: `translate(-50%, -50%)`,}}\r\n                    aria-labelledby=\"simple-modal-title\"\r\n                    aria-describedby=\"simple-modal-description\"\r\n                    open={this.state.showCreateModal}\r\n                    onClose={() => (this.setState({showCreateModal:false}))}\r\n                >\r\n                    <div>\r\n\r\n                        <TextField id=\"standard-basic\" name={ModelInput.Vendor} label={inputs[0]} onChange={this.updateModelCreator.bind(this)}/>\r\n                        <TextField id=\"standard-basic\" name={ModelInput.ModelNumber} label={inputs[1]} onChange={this.updateModelCreator.bind(this)}/>\r\n                        <TextField id=\"standard-basic\" name={ModelInput.Height} label={inputs[2]} onChange={this.updateModelCreator.bind(this)}/>\r\n                        <TextField id=\"standard-basic\" name={ModelInput.DisplayColor} label={inputs[3]} onChange={this.updateModelCreator.bind(this)}/>\r\n                        <TextField id=\"standard-basic\" name={ModelInput.EthernetPorts} label={inputs[4]} onChange={this.updateModelCreator.bind(this)}/>\r\n                        <TextField id=\"standard-basic\" name={ModelInput.PowerPorts} label={inputs[5]} onChange={this.updateModelCreator.bind(this)}/>\r\n                        <TextField id=\"standard-basic\" name={ModelInput.CPU} label={inputs[6]} onChange={this.updateModelCreator.bind(this)}/>\r\n                        <TextField id=\"standard-basic\" name={ModelInput.Memory} label={inputs[7]} onChange={this.updateModelCreator.bind(this)}/>\r\n                        <TextField id=\"standard-basic\" name={ModelInput.Storage} label={inputs[8]} onChange={this.updateModelCreator.bind(this)}/>\r\n                        <TextField id=\"standard-basic\" name={ModelInput.Comment} label={inputs[9]} onChange={this.updateModelCreator.bind(this)}/>\r\n\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            onClick={this.createModel.bind(this)}\r\n                        >\r\n                            Create\r\n                        </Button>\r\n                    </div>\r\n                </Modal>\r\n                <UploadModal\r\n                    showImportModal={this.state.showImportModal}\r\n                    closeImportModal={this.closeImportModal}\r\n                />\r\n                <Filters\r\n                    updateSearchText={this.updateSearchText}\r\n                    searchModels={this.searchModels}\r\n                />\r\n                <TableView\r\n                    columns={columns}\r\n                    vals={this.state.items}\r\n                />\r\n                <DetailedView \r\n                    show={this.state.showDetailedView}\r\n                    inputs={inputs}\r\n                    vals={this.state.detailedValues}\r\n                    edit={this.editModel}\r\n                    close={this.closeDetailedView}\r\n                />\r\n            </div>\r\n    );\r\n    }\r\n}\r\n","import React from 'react';\r\nimport axios from 'axios';\r\nimport { UserInput } from '../enums/userInputs.ts'\r\nimport { UserCommand } from '../enums/userCommands.ts'\r\nimport * as Constants from '../Constants';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport TableView from '../helpers/TableView';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport InputBase from '@material-ui/core/InputBase';\r\n\r\nconst columns = [\r\n    \"Username\",\r\n    \"Display Name\",\r\n    \"Email\",\r\n]\r\n\r\nconst usersMainPath = 'users/';\r\n\r\nfunction getURL(endpoint) {\r\n    return Constants.serverEndpoint + usersMainPath + endpoint;\r\n}\r\n\r\nfunction jsonToArr(json) {\r\n    var users = json.data['users'];\r\n    const items = [];\r\n\r\n    for (const [index, val] of users.entries()) {\r\n        const row = [];\r\n        row.push(val[UserInput.Username]);\r\n        row.push(val[UserInput.Email]);\r\n        row.push(val[UserInput.DisplayName]);\r\n        items.push(row);\r\n    }\r\n    return items;\r\n}\r\n\r\nexport default class UsersView extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            showCreateModal:false,\r\n            showImportModal:false,\r\n            items:[],\r\n            instanceToken:\"\",\r\n            createdUser: {\r\n                'username':'',\r\n                'email':'',\r\n                'displayName':'',\r\n            },\r\n            deleteUsername:'',\r\n            viewUsername:'',\r\n            searchText:\"\",\r\n        };\r\n    }\r\n\r\n    createUser() {\r\n        axios.post(\r\n            this.getURL(UserCommand.create),\r\n            {\r\n                'username':this.state.createdUser[UserInput.Username],\r\n                'email':this.state.createdUser[UserInput.Email],\r\n                'displayName':this.state.createdUser[UserInput.DisplayName],\r\n            }\r\n            ).then(response => (this.setState({ items:response })));\r\n    }\r\n\r\n    deleteUser() {\r\n        axios.post(\r\n            this.getURL(UserCommand.delete),\r\n            {\r\n                'username':this.state.deleteUsername,\r\n            }\r\n            ).then(response => console.log(response));\r\n    }\r\n\r\n    detailViewUser() {\r\n        axios.post(\r\n            this.getURL(UserCommand.detailView),\r\n            {\r\n                'username':this.state.viewUsername,\r\n            }\r\n            ).then(response => console.log(response));\r\n    }\r\n\r\n    viewUser() {\r\n        axios.post(\r\n            this.getURL(UserCommand.view),\r\n            {\r\n                'username':this.state.viewUsername,\r\n            }\r\n            ).then(response => console.log(response));\r\n    }\r\n\r\n    searchUsers() {\r\n        axios.post(\r\n            getURL(UserCommand.search),\r\n            {\r\n                'filter':this.state.searchText,\r\n            }\r\n            ).then(response => this.setState({ items: jsonToArr(response)}));\r\n    }\r\n\r\n\r\n    openCreateModal() {\r\n        this.setState({showCreateModal: true});\r\n    }\r\n\r\n    updateUserCreator(event) {\r\n        this.state.createdUser[event.target.name] = event.target.value;\r\n        this.forceUpdate()\r\n    }\r\n\r\n    updateSearchText(event) {\r\n        this.setState({ searchText: event.target.value})\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    onClick={this.openCreateModal.bind(this)}\r\n                >\r\n                    Create\r\n                </Button>\r\n                <Modal\r\n                    aria-labelledby=\"simple-modal-title\"\r\n                    aria-describedby=\"simple-modal-description\"\r\n                    open={this.state.showCreateModal}\r\n                    onClose={() => (this.setState({showCreateModal:false}))}\r\n                >\r\n                    <div>\r\n                        <TextField id=\"standard-basic\" name={UserInput.Vendor} label={columns[0]} onChange={this.updateUserCreator.bind(this)}/>\r\n                        <TextField id=\"standard-basic\" name={UserInput.UserNumber} label={columns[1]} onChange={this.updateUserCreator.bind(this)}/>\r\n                        <TextField id=\"standard-basic\" name={UserInput.Height} label={columns[2]} onChange={this.updateUserCreator.bind(this)}/>\r\n\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            onClick={this.createUser.bind(this)}\r\n                        >\r\n                            Create\r\n                        </Button>\r\n                    </div>\r\n                </Modal>\r\n                <div>\r\n                <div>\r\n                    <SearchIcon />\r\n                </div>\r\n                    <InputBase\r\n                        placeholder=\"Search (blank does a search all)\"\r\n                        inputProps={{ 'aria-label': 'search' }}\r\n                        onChange={this.updateSearchText.bind(this)}\r\n                    />\r\n                    <Button\r\n                        onClick={this.searchUsers.bind(this)}\r\n                    >\r\n                        Search\r\n                    </Button>\r\n                </div>\r\n                <TableView\r\n                    columns={columns}\r\n                    vals={this.state.items}\r\n                />\r\n            </div>\r\n    );\r\n    }\r\n}\r\n","export enum InstanceInput {\r\n    Model = 'model',\r\n    Hostname = 'hostname',\r\n    Rack = 'rack',\r\n    RackU = 'rackU',\r\n    Owner = 'owner',\r\n    Comment = 'comment',\r\n}\r\n","export enum InstanceCommand {\r\n    create = 'create/',\r\n    delete = 'delete/',\r\n    edit = 'edit/',\r\n    view = 'view/',\r\n    detailView = 'detailView/',\r\n    search = 'search/'\r\n}\r\n","import React from 'react';\r\nimport axios from 'axios';\r\nimport { InstanceInput } from '../enums/instanceInputs.ts'\r\nimport { InstanceCommand } from '../enums/instanceCommands.ts'\r\nimport * as Constants from '../Constants';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\r\nimport CloudDownloadIcon from '@material-ui/icons/CloudDownload';\r\nimport TableView from '../helpers/TableView';\r\nimport { CSVLink } from \"react-csv\";\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport InputBase from '@material-ui/core/InputBase';\r\n\r\nconst columns = [\r\n    \"Model\",\r\n    \"Hostname\",\r\n    \"Rack\",\r\n    \"Rack U\",\r\n    \"Owner\",\r\n    \"Comments\",\r\n]\r\n\r\nconst instancesMainPath = 'instances/';\r\nconst instanceDownloadFileName = 'instances.csv';\r\n\r\nfunction getURL(endpoint) {\r\n    return Constants.serverEndpoint + instancesMainPath + endpoint;\r\n}\r\n\r\nfunction jsonToArr(json) {\r\n    var instances = json.data['instances'];\r\n    const items = [];\r\n\r\n    for (const [index, val] of instances.entries()) {\r\n        const row = [];\r\n        row.push(val[InstanceInput.Model]);\r\n        row.push(val[InstanceInput.Hostname]);\r\n        row.push(val[InstanceInput.Rack]);\r\n        row.push(val[InstanceInput.RackU]);\r\n        row.push(val[InstanceInput.Owner]);\r\n        row.push(val[InstanceInput.Comment]);\r\n        items.push(row);\r\n    }\r\n    return items;\r\n}\r\n\r\nexport default class InstancesView extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            showCreateModal:false,\r\n            showImportModal:false,\r\n            items:[],\r\n            instanceToken:\"\",\r\n            createdInstance: {\r\n                'model':'',\r\n                'hostname':'',\r\n                'rack':'',\r\n                'rackU':'',\r\n                'owner':'',\r\n                'comment':'',\r\n            },\r\n            deleteInstanceRack:'',\r\n            deleteInstanceRackU:'',\r\n            viewRack:'',\r\n            viewRackU:'',\r\n            csvData:[],\r\n            searchText:\"\",\r\n        };\r\n    }\r\n\r\n    createInstance() {\r\n        axios.post(\r\n            getURL(InstanceCommand.create),\r\n            {\r\n                'model':this.state.createdInstance[InstanceInput.Model],\r\n                'hostname':this.state.createdInstance[InstanceInput.Hostname],\r\n                'rack':this.state.createdInstance[InstanceInput.Rack],\r\n                'rackU':this.state.createdInstance[InstanceInput.RackU],\r\n                'owner':this.state.createdInstance[InstanceInput.Owner],\r\n                'comment':this.state.createdInstance[InstanceInput.Comment],\r\n            }\r\n            ).then(response => (this.setState({ items:jsonToArr(response) })));\r\n    }\r\n\r\n    deleteInstance() {\r\n        axios.post(\r\n            getURL(InstanceCommand.delete),\r\n            {\r\n                'rack':this.state.deleteInstanceRack,\r\n                'rackU':this.state.deleteInstanceRackU\r\n            }\r\n            ).then(response => (this.setState({ items:jsonToArr(response) })));\r\n    }\r\n\r\n    detailViewInstance() {\r\n        axios.post(\r\n            getURL(InstanceCommand.detailView),\r\n            {\r\n                'rack':this.state.deleteInstanceRack,\r\n                'rackU':this.state.deleteInstanceRackU\r\n            }\r\n            ).then(response => (this.setState({ items:jsonToArr(response) })));\r\n    }\r\n\r\n    viewInstance() {\r\n        axios.post(\r\n            getURL(InstanceCommand.view),\r\n            {\r\n                'rack':this.state.deleteInstanceRack,\r\n                'rackU':this.state.deleteInstanceRackU\r\n            }\r\n            ).then(response => (this.setState({ items:jsonToArr(response) })));\r\n    }\r\n\r\n    searchInstances() {\r\n        axios.post(\r\n            getURL(InstanceCommand.search),\r\n            {\r\n                'filter':this.state.searchText,\r\n            }\r\n            ).then(response => this.setState({ items: jsonToArr(response)}));\r\n    }\r\n\r\n    downloadTable() {\r\n        this.csvLink.link.click();\r\n    }\r\n\r\n    openCreateModal() {\r\n        this.setState({showCreateModal: true});\r\n    }\r\n\r\n    openImportModal() {\r\n        this.setState({showImportModal: true});\r\n    }\r\n\r\n    updateInstanceCreator(event) {\r\n        this.state.createdInstance[event.target.name] = event.target.value;\r\n        this.forceUpdate()\r\n    }\r\n\r\n    updateSearchText(event) {\r\n        this.setState({ searchText: event.target.value})\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    onClick={this.openCreateModal.bind(this)}\r\n                >\r\n                    Create\r\n                </Button>\r\n                <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    startIcon={<CloudUploadIcon />}\r\n                    onClick={this.openImportModal.bind(this)}\r\n                >\r\n                    Import\r\n                </Button>\r\n                <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    startIcon={<CloudDownloadIcon />}\r\n                    onClick={this.downloadTable.bind(this)}\r\n                >\r\n                    Export\r\n                </Button>\r\n                <CSVLink\r\n                    data={this.state.csvData}\r\n                    filename={instanceDownloadFileName}\r\n                    className=\"hidden\"\r\n                    ref={(r) => this.csvLink = r}\r\n                    target=\"_blank\"/>\r\n                <Modal\r\n                    style={{top: `50%`,left: `50%`,transform: `translate(-50%, -50%)`,}}\r\n                    aria-labelledby=\"simple-modal-title\"\r\n                    aria-describedby=\"simple-modal-description\"\r\n                    open={this.state.showCreateModal}\r\n                    onClose={() => (this.setState({showCreateModal:false}))}\r\n                >\r\n                    <div>\r\n\r\n                        <TextField id=\"standard-basic\" name={InstanceInput.Model} label={columns[0]} onChange={this.updateInstanceCreator.bind(this)}/>\r\n                        <TextField id=\"standard-basic\" name={InstanceInput.Hostname} label={columns[1]} onChange={this.updateInstanceCreator.bind(this)}/>\r\n                        <TextField id=\"standard-basic\" name={InstanceInput.Rack} label={columns[2]} onChange={this.updateInstanceCreator.bind(this)}/>\r\n                        <TextField id=\"standard-basic\" name={InstanceInput.RackU} label={columns[3]} onChange={this.updateInstanceCreator.bind(this)}/>\r\n                        <TextField id=\"standard-basic\" name={InstanceInput.Owner} label={columns[4]} onChange={this.updateInstanceCreator.bind(this)}/>\r\n                        <TextField id=\"standard-basic\" name={InstanceInput.Comment} label={columns[5]} onChange={this.updateInstanceCreator.bind(this)}/>\r\n\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            onClick={this.createInstance.bind(this)}\r\n                        >\r\n                            Create\r\n                        </Button>\r\n                    </div>\r\n                </Modal>\r\n                <Modal\r\n                    style={{top: `50%`,left: `50%`,transform: `translate(-50%, -50%)`,}}\r\n                    aria-labelledby=\"simple-modal-title\"\r\n                    aria-describedby=\"simple-modal-description\"\r\n                    open={this.state.showImportModal}\r\n                    onClose={() => (this.setState({showImportModal:false}))}\r\n                >\r\n                    <div>\r\n                        <input type='file' accept=\".csv\" />\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                        >\r\n                            Upload\r\n                        </Button>\r\n                    </div>\r\n                </Modal>\r\n                <div>\r\n                <div>\r\n                    <SearchIcon />\r\n                </div>\r\n                    <InputBase\r\n                        placeholder=\"Search (blank does a search all)\"\r\n                        inputProps={{ 'aria-label': 'search' }}\r\n                        onChange={this.updateSearchText.bind(this)}\r\n                    />\r\n                    <Button\r\n                        onClick={this.searchInstances.bind(this)}\r\n                    >\r\n                        Search\r\n                    </Button>\r\n                </div>\r\n                <TableView\r\n                    columns={columns}\r\n                    vals={this.state.items}\r\n                />\r\n            </div>\r\n    );\r\n    }\r\n}\r\n","import React from 'react';\r\nimport TableView from '../helpers/TableView';\r\n\r\nconst columns = [\r\n    \"Vendor\",\r\n    \"Model Number\",\r\n    \"Height (U)\",\r\n    \"Display Color\",\r\n    \"Ethernet Ports\",\r\n    \"Power Ports\",\r\n    \"CPU\",\r\n    \"Memory\",\r\n    \"Storage\",\r\n    \"Comments\",\r\n]\r\n\r\nexport default function RacksView(props) {\r\n    return (<div></div>);\r\n}\r\n","import React from 'react';\r\nimport TableView from '../helpers/TableView';\r\n\r\nexport default function StatisticsView(props) {\r\n    return (<div></div>);\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\nimport ModelsView from './pages/ModelsView';\r\nimport UsersView from './pages/UsersView';\r\nimport InstancesView from './pages/InstancesView';\r\nimport RacksView from './pages/RacksView';\r\nimport StatisticsView from './pages/StatisticsView';\r\nimport Button from '@material-ui/core/Button';\r\nimport Logout from './helpers/Logout';\r\n\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <Typography\r\n      component=\"div\"\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`simple-tabpanel-${index}`}\r\n      aria-labelledby={`simple-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && <Box p={3}>{children}</Box>}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n  children: PropTypes.node,\r\n  index: PropTypes.any.isRequired,\r\n  value: PropTypes.any.isRequired,\r\n};\r\n\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `simple-tab-${index}`,\r\n    'aria-controls': `simple-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n  tab: {\r\n    flexGrow: 1,\r\n  },\r\n  button:{\r\n    flexGrow: 1,\r\n  }\r\n}));\r\n\r\nexport default function TabManager() {\r\n  const classes = useStyles();\r\n  const [value, setValue] = React.useState(0);\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\">\r\n        <Tabs value={value} onChange={handleChange}>\r\n          <Tab className={classes.tab} label=\"Models\" {...a11yProps(0)} />\r\n          <Tab className={classes.tab} label=\"Instances\" {...a11yProps(1)} />\r\n          <Tab className={classes.tab} label=\"Racks\" {...a11yProps(2)} />\r\n          <Tab className={classes.tab} label=\"Statistics\" {...a11yProps(2)} />\r\n          <Tab className={classes.tab} label=\"Users\" {...a11yProps(2)}  />\r\n          <Button\r\n           className={classes.button}\r\n           variant=\"contained\"\r\n           color=\"secondary\"\r\n           onClick={Logout()}\r\n           >\r\n              Logout\r\n          </Button>\r\n        </Tabs>\r\n      </AppBar>\r\n      <TabPanel value={value} index={0}>\r\n        <ModelsView />\r\n      </TabPanel>\r\n      <TabPanel value={value} index={1}>\r\n        <InstancesView />\r\n      </TabPanel>\r\n      <TabPanel value={value} index={2}>\r\n        <RacksView />\r\n      </TabPanel>\r\n      <TabPanel value={value} index={3}>\r\n        <StatisticsView />\r\n      </TabPanel>\r\n      <TabPanel value={value} index={4}>\r\n        <UsersView />\r\n      </TabPanel>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './stylesheets/index.css';\nimport PageSelector from './javascript/PageSelector';\n\nReactDOM.render(<PageSelector />, document.getElementById('root'));\n","import React from \"react\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route\r\n} from \"react-router-dom\";\r\nimport Login from \"./Login\";\r\nimport TabManager from \"./TabManager\";\r\n\r\nexport default function PageSelector() {\r\n  return (\r\n    <Router>\r\n        <Switch>\r\n          <Route path=\"/\">\r\n            <TabManager />\r\n          </Route>\r\n          <Route path=\"/homepage\">\r\n            <Login />\r\n          </Route>\r\n        </Switch>\r\n    </Router>\r\n  );\r\n}\r\n"],"sourceRoot":""}
