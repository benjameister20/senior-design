{"version":3,"sources":["javascript/Login.jsx","javascript/enums/modelCommands.ts","javascript/enums/modelInputs.ts","javascript/helpers/TableView.jsx","javascript/helpers/ButtonMenu.jsx","javascript/helpers/Filters.jsx","javascript/helpers/UploadModal.jsx","javascript/Constants.jsx","javascript/helpers/functions/GetURL.jsx","javascript/enums/userCommands.ts","javascript/enums/userInputs.ts","javascript/helpers/DetailedView.jsx","javascript/helpers/CreateModal.jsx","javascript/pages/ModelsView.jsx","javascript/pages/UsersView.jsx","javascript/enums/instanceInputs.ts","javascript/enums/instanceCommands.ts","javascript/pages/InstancesView.jsx","javascript/pages/RacksView.jsx","javascript/pages/StatisticsView.jsx","javascript/TabManager.jsx","index.jsx","javascript/PageSelector.jsx"],"names":["useStyles","makeStyles","theme","paper","marginTop","spacing","display","flexDirection","alignItems","avatar","margin","backgroundColor","palette","secondary","main","form","submit","Login","props","classes","className","TextField","id","label","variant","required","ref","FormControl","FormGroup","FormControlLabel","value","control","Checkbox","color","labelPlacement","Button","onClick","username","refs","getValue","password","axios","post","then","response","console","log","ModelCommand","ModelInput","TableView","state","event","this","showDetailedView","target","TableContainer","component","Paper","Table","minWidth","aria-label","TableHead","TableRow","columns","map","col","TableCell","TableBody","vals","row","index","keys","key","scope","bind","React","Component","ButtonMenu","openCreateModal","startIcon","openImportModal","downloadTable","Filters","filters","hasOwnProperty","forceUpdate","search","filter","InputBase","placeholder","inputProps","onChange","updateSearchText","UploadModal","Modal","style","top","left","transform","aria-labelledby","aria-describedby","open","showImportModal","onClose","closeImportModal","type","accept","serverEndpoint","testModelArray","testUserArray","getURL","path","endpoint","Constants","UserCommand","UserInput","DetailedView","showConfirmationBox","setState","closeDetailedView","inputs","input","updateModelEdited","defaultValue","defaultValues","edit","delete","CreateModal","showCreateModal","closeCreateModal","updateModelCreator","createModel","ModelsView","items","createdModel","createdVendor","createdModelNum","createdHeight","createdDispClr","createdEthPorts","createdPwrPorts","createdCPU","createdMem","createdStorage","createdComments","deleteVendor","deleteModel","viewVendor","viewModel","searchText","csvData","detailViewLoading","detailedValues","editModel","create","Vendor","ModelNumber","Height","DisplayColor","EthernetPorts","PowerPorts","CPU","Memory","Storage","Comment","vendor","modelNum","detailView","data","height","searchModels","csvLink","link","click","filename","r","loading","InstanceInput","InstanceCommand","UsersView","createdUser","deleteUsername","viewUser","createUser","editUser","deleteUser","detailViewUser","searchUsers","updateUserCreator","updateUserEdited","Username","Password","DisplayName","Email","Privilege","email","displayName","privilege","instancesMainPath","jsonToArr","json","instances","entries","val","push","Model","Hostname","Rack","RackU","Owner","InstancesView","instanceToken","createdInstance","deleteInstanceRack","deleteInstanceRackU","viewRack","viewRackU","view","name","updateInstanceCreator","createInstance","searchInstances","RacksView","StatisticsView","TabPanel","children","other","Typography","role","hidden","Box","p","a11yProps","root","flexGrow","background","tab","button","TabManager","useState","setValue","AppBar","position","Tabs","newValue","Tab","Logout","ReactDOM","render","document","getElementById"],"mappings":"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","file":"js/main.60788bf2.chunk.js","sourcesContent":["import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Link from '@material-ui/core/Link';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\n\r\nimport axios from 'axios';\r\n\r\n\r\nfunction submitCredentials(username, password) {\r\n    axios.post('http://localhost:4010/users/authenticate', { \"username\":username, \"password\":password} ).then(response => console.log(response))\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    paper: {\r\n        marginTop: theme.spacing(8),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n        marginTop: theme.spacing(1),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n}));\r\n\r\nexport default function Login(props) {\r\n    const classes = useStyles();\r\n    return (\r\n        <div className={classes.paper}>\r\n            <TextField\r\n                id=\"outlined-basic\"\r\n                label=\"Username\"\r\n                variant=\"outlined\"\r\n                required=\"true\"\r\n                ref='username'\r\n            />\r\n            <TextField\r\n                id=\"outlined-basic\"\r\n                label=\"Password\"\r\n                variant=\"outlined\"\r\n                required=\"true\"\r\n                ref='password'\r\n            />\r\n            <FormControl className={classes.form}>\r\n                <FormGroup>\r\n                    <FormControlLabel\r\n                        value=\"end\"\r\n                        control={<Checkbox color=\"primary\" />}\r\n                        label=\"End\"\r\n                        labelPlacement=\"end\"\r\n                    />\r\n                </FormGroup>\r\n            </FormControl>\r\n            <Button\r\n                onClick={() => (submitCredentials(this.refs.username.getValue(), this.refs.password.getValue()))}\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className={classes.submit}\r\n            >\r\n                Sign In\r\n            </Button>\r\n        </div>\r\n    );\r\n}\r\n","export enum ModelCommand {\r\n    create = 'create/',\r\n    delete = 'delete/',\r\n    edit = 'edit/',\r\n    view = 'view/',\r\n    detailView = 'detailView/',\r\n    search = 'search/',\r\n}\r\n","export enum ModelInput {\r\n    Vendor = 'vendor',\r\n    ModelNumber = 'modelNumber',\r\n    Height = 'height',\r\n    DisplayColor = 'displayColor',\r\n    EthernetPorts = 'ethernetPorts',\r\n    PowerPorts = 'powerPorts',\r\n    CPU = 'cpu',\r\n    Memory = 'memory',\r\n    Storage = 'storage',\r\n    Comment = 'comments'\r\n}\r\n","import React from 'react';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nexport default class TableView extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n\r\n    };\r\n  }\r\n\r\n  showDetailedView(event) {\r\n    this.props.showDetailedView(event.target.id);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <TableContainer component={Paper}>\r\n          <Table className={{minWidth: 650}} aria-label=\"simple table\">\r\n            <TableHead>\r\n              <TableRow >\r\n                {this.props.columns.map(col => (<TableCell><span id={col}>{col}</span></TableCell>))}\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {this.props.vals.map((row, index)=> (\r\n              <TableRow>\r\n                {this.props.keys.map(key => (<TableCell scope=\"row\"><span id={index} onClick={this.showDetailedView.bind(this)}>{row[key]}</span></TableCell>))}\r\n              </TableRow>\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\r\nimport CloudDownloadIcon from '@material-ui/icons/CloudDownload';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nexport default class ButtonMenu extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n\r\n        };\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div>\r\n                <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    onClick={this.props.openCreateModal}\r\n                >\r\n                    Create\r\n                </Button>\r\n                <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    startIcon={<CloudUploadIcon />}\r\n                    onClick={this.props.openImportModal}\r\n                >\r\n                    Import\r\n                </Button>\r\n                <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    startIcon={<CloudDownloadIcon />}\r\n                    onClick={this.props.downloadTable}\r\n                >\r\n                    Export\r\n                </Button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nexport default class Filters extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            filters:{},\r\n        };\r\n    }\r\n\r\n    updateSearchText(event) {\r\n        if (this.state.filters.hasOwnProperty(event.target.id)) {\r\n            this.state.filters[event.target.id] = event.target.value;\r\n            this.forceUpdate();\r\n        } else {\r\n            var value = (event.target.value == null) ? '' : event.target.value;\r\n            this.state.filters[event.target.id] = event.target.value;\r\n            //this.state.filters.push({ key:event.target.id, value: value});\r\n            this.forceUpdate();\r\n        }\r\n    }\r\n\r\n    search() {\r\n        this.props.search(this.state.filters);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.props.filters.map((filter, index) => (\r\n                    <div>\r\n                        <SearchIcon />\r\n                        <InputBase\r\n                            placeholder={filter+\" filter\"}\r\n                            inputProps={{ 'aria-label': 'search' }}\r\n                            onChange={this.updateSearchText.bind(this)}\r\n                            id={filter}\r\n                        />\r\n                    </div>\r\n                ))\r\n                }\r\n                <div>\r\n                    <Button\r\n                        onClick={this.search.bind(this)}\r\n                    >\r\n                        Search\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Modal from '@material-ui/core/Modal';\r\n\r\nexport default class UploadModal extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n\r\n        };\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Modal\r\n                style={{top: `50%`,left: `50%`,transform: `translate(-50%, -50%)`,}}\r\n                aria-labelledby=\"simple-modal-title\"\r\n                aria-describedby=\"simple-modal-description\"\r\n                open={this.props.showImportModal}\r\n                onClose={this.props.closeImportModal}\r\n            >\r\n                <div>\r\n                    <input type='file' accept=\".csv\" />\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                    >\r\n                        Upload\r\n                    </Button>\r\n                </div>\r\n            </Modal>\r\n        )\r\n    }\r\n}\r\n","/**\r\n * Constants file\r\n */\r\n\r\nexport const localServerEndpoint = 'http://localhost:4010/';\r\nexport const devServerEndpoint = 'https://parseltongue-dev.herokuapp.com/';\r\nexport const prodServerEndpoint = 'https://parseltongue-prod.herokuapp.com/';\r\n\r\nexport const serverEndpoint = localServerEndpoint;\r\n\r\nexport const testModelArray = [\r\n    {\r\n        'vendor':'a',\r\n        'modelNumber':'a',\r\n        'height':'a',\r\n        'displayColor':'a',\r\n        'ethernetPorts':'a',\r\n        'powerPorts':'a',\r\n        'cpu':'a',\r\n        'memory':'a',\r\n        'storage':'a',\r\n        'comments':'a',\r\n    },{\r\n        'vendor':'b',\r\n        'modelNumber':'b',\r\n        'height':'b',\r\n        'displayColor':'b',\r\n        'ethernetPorts':'b',\r\n        'powerPorts':'b',\r\n        'cpu':'b',\r\n        'memory':'b',\r\n        'storage':'b',\r\n        'comments':'b',\r\n    },{\r\n        'vendor':'c',\r\n        'modelNumber':'c',\r\n        'height':'c',\r\n        'displayColor':'c',\r\n        'ethernetPorts':'c',\r\n        'powerPorts':'c',\r\n        'cpu':'c',\r\n        'memory':'c',\r\n        'storage':'c',\r\n        'comments':'c',\r\n    },\r\n];\r\n\r\nexport const testUserArray = [\r\n    {\r\n        'username':'a',\r\n        'password':'a',\r\n        'displayName':'a',\r\n        'email':'a',\r\n        'privilege':'a',\r\n    },{\r\n        'username':'b',\r\n        'password':'b',\r\n        'displayName':'b',\r\n        'email':'b',\r\n        'privilege':'b',\r\n    },{\r\n        'username':'c',\r\n        'password':'c',\r\n        'displayName':'c',\r\n        'email':'c',\r\n        'privilege':'c',\r\n    },\r\n];\r\n","import * as Constants from '../../Constants';\r\n\r\nexport default function getURL(path, endpoint) {\r\n    return Constants.serverEndpoint + path + endpoint;\r\n}\r\n","export enum UserCommand {\r\n    create = 'create/',\r\n    delete = 'delete/',\r\n    edit = 'edit/',\r\n    view = 'view/',\r\n    detailView = 'detailView/',\r\n    search='search/',\r\n}\r\n","export enum UserInput {\r\n    Username='username',\r\n    Password='password',\r\n    Email='email',\r\n    DisplayName='displayName',\r\n    Privilege='privilege',\r\n}\r\n","import React from 'react';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from '@material-ui/core/Button';\r\n\r\nexport default class DetailedView extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            showConfirmationBox:false,\r\n        };\r\n    }\r\n\r\n    closeModal() {\r\n        this.setState({showConfirmationBox:false,});\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n        <div>\r\n            <Modal\r\n                style={{top: `50%`,left: `50%`,transform: `translate(-50%, -50%)`,}}\r\n                aria-labelledby=\"simple-modal-title\"\r\n                aria-describedby=\"simple-modal-description\"\r\n                open={this.props.showDetailedView}\r\n                onClose={this.props.closeDetailedView}\r\n            >\r\n                <div>\r\n                    {this.props.inputs.map(input => (\r\n                        <TextField id=\"standard-basic\" label={input} onChange={this.props.updateModelEdited} defaultValue={this.props.defaultValues[input]}/>\r\n                    ))}\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        onClick={this.props.edit}\r\n                    >\r\n                        Save\r\n                    </Button>\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        onClick={this.props.delete}\r\n                    >\r\n                        Delete\r\n                    </Button>\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        onClick={this.props.closeDetailedView}\r\n                    >\r\n                        Close\r\n                    </Button>\r\n                </div>\r\n            </Modal>\r\n        </div>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from '@material-ui/core/Button';\r\n\r\nexport default class CreateModal extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n\r\n        };\r\n    }\r\n\r\n    render() {\r\n        return (\r\n        <div>\r\n            <Modal\r\n                style={{top: `50%`,left: `50%`,transform: `translate(-50%, -50%)`,}}\r\n                aria-labelledby=\"simple-modal-title\"\r\n                aria-describedby=\"simple-modal-description\"\r\n                open={this.props.showCreateModal}\r\n                onClose={this.props.closeCreateModal}\r\n            >\r\n                <div>\r\n                    {this.props.inputs.map(input => (\r\n                        <TextField id=\"standard-basic\" label={input} onChange={this.props.updateModelCreator}/>\r\n                    ))}\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        onClick={this.props.createModel}\r\n                    >\r\n                        Create\r\n                    </Button>\r\n                </div>\r\n            </Modal>\r\n        </div>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\nimport axios from 'axios';\r\nimport { ModelCommand } from '../enums/modelCommands.ts'\r\nimport { ModelInput } from '../enums/modelInputs.ts'\r\nimport TableView from '../helpers/TableView';\r\nimport { CSVLink } from \"react-csv\";\r\nimport ButtonMenu from '../helpers/ButtonMenu';\r\nimport Filters from '../helpers/Filters';\r\nimport UploadModal from '../helpers/UploadModal';\r\nimport getURL from '../helpers/functions/GetURL';\r\nimport DetailedView from '../helpers/DetailedView';\r\nimport CreateModal from '../helpers/CreateModal';\r\nimport * as Constants from '../Constants';\r\n\r\nconst inputs = [\r\n    'vendor',\r\n    'modelNumber',\r\n    'height',\r\n    'displayColor',\r\n    'ethernetPorts',\r\n    'powerPorts',\r\n    'cpu',\r\n    'memory',\r\n    'storage',\r\n    'comments',\r\n]\r\n\r\nconst columns = [\r\n    'vendor',\r\n    'modelNumber',\r\n    'height',\r\n]\r\n\r\nconst modelsMainPath = 'models/';\r\nconst modelDownloadFileName = 'models.csv';\r\n\r\nexport default class ModelsView extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n\r\n            // modals\r\n            showCreateModal:false,\r\n            showImportModal:false,\r\n\r\n            // table items\r\n            items:Constants.testModelArray,\r\n\r\n            // vals for creating a new model\r\n            createdModel : {\r\n                'vendor':'',\r\n                'modelNumber':'',\r\n                'height':'',\r\n                'displayColor':'',\r\n                'ethernetPorts':'',\r\n                'powerPorts':'',\r\n                'cpu':'',\r\n                'memory':'',\r\n                'storage':'',\r\n                'comments':'',\r\n            },\r\n            createdVendor:'',\r\n            createdModelNum:'',\r\n            createdHeight:'',\r\n            createdDispClr:'',\r\n            createdEthPorts:'',\r\n            createdPwrPorts:'',\r\n            createdCPU:'',\r\n            createdMem:'',\r\n            createdStorage:'',\r\n            createdComments:'',\r\n\r\n            // vals for deleting a model\r\n            deleteVendor:'',\r\n            deleteModel:'',\r\n\r\n            // vals for viewing a model\r\n            viewVendor:'',\r\n            viewModel:'',\r\n\r\n            // searching a model\r\n            searchText:\"\",\r\n\r\n            // csv data\r\n            csvData:[],\r\n\r\n            // detailed view\r\n            showDetailedView: false,\r\n            detailViewLoading:false,\r\n            detailedValues : {\r\n                'vendor':'',\r\n                'modelNumber':'',\r\n                'height':'',\r\n                'displayColor':'',\r\n                'ethernetPorts':'',\r\n                'powerPorts':'',\r\n                'cpu':'',\r\n                'memory':'',\r\n                'storage':'',\r\n                'comments':'',\r\n            },\r\n        };\r\n\r\n        this.openCreateModal = this.openCreateModal.bind(this);\r\n        this.openImportModal = this.openImportModal.bind(this);\r\n        this.downloadTable = this.downloadTable.bind(this);\r\n        this.updateSearchText = this.updateSearchText.bind(this);\r\n        this.search = this.search.bind(this);\r\n        this.closeImportModal = this.closeImportModal.bind(this);\r\n        this.closeCreateModal = this.closeCreateModal.bind(this);\r\n        this.showDetailedView = this.showDetailedView.bind(this);\r\n        this.editModel = this.editModel.bind(this);\r\n        this.closeDetailedView = this.closeDetailedView.bind(this);\r\n        this.updateModelEdited = this.updateModelEdited.bind(this);\r\n        this.closeCreateModal = this.closeCreateModal.bind(this);\r\n        this.createModel = this.createModel.bind(this);\r\n        this.updateModelCreator = this.updateModelCreator.bind(this);\r\n        this.deleteModel = this.deleteModel.bind(this);\r\n    }\r\n\r\n    createModel() {\r\n        axios.post(\r\n            getURL(modelsMainPath, ModelCommand.create),\r\n            {\r\n                'vendor':this.state.createdModel[ModelInput.Vendor],\r\n                'modelNumber':this.state.createdModel[ModelInput.ModelNumber],\r\n                'height':this.state.createdModel[ModelInput.Height],\r\n                'displayColor':this.state.createdModel[ModelInput.DisplayColor],\r\n                'ethernetPorts':this.state.createdModel[ModelInput.EthernetPorts],\r\n                'powerPorts':this.state.createdModel[ModelInput.PowerPorts],\r\n                'cpu':this.state.createdModel[ModelInput.CPU],\r\n                'memory':this.state.createdModel[ModelInput.Memory],\r\n                'storage':this.state.createdModel[ModelInput.Storage],\r\n                'comments':this.state.createdModel[ModelInput.Comment],\r\n            }\r\n            ).then(response => console.log(response));\r\n\r\n        this.setState({\r\n            createdModel : {\r\n                'vendor':'',\r\n                'modelNumber':'',\r\n                'height':'',\r\n                'displayColor':'',\r\n                'ethernetPorts':'',\r\n                'powerPorts':'',\r\n                'cpu':'',\r\n                'memory':'',\r\n                'storage':'',\r\n                'comments':'',\r\n            },\r\n        });\r\n    }\r\n\r\n    editModel() {\r\n        axios.post(\r\n            getURL(modelsMainPath, ModelCommand.edit),\r\n            {\r\n                'vendor':this.state.detailedValues[ModelInput.Vendor],\r\n                'modelNumber':this.state.detailedValues[ModelInput.ModelNumber],\r\n                'height':this.state.detailedValues[ModelInput.Height],\r\n                'displayColor':this.state.detailedValues[ModelInput.DisplayColor],\r\n                'ethernetPorts':this.state.detailedValues[ModelInput.EthernetPorts],\r\n                'powerPorts':this.state.detailedValues[ModelInput.PowerPorts],\r\n                'cpu':this.state.detailedValues[ModelInput.CPU],\r\n                'memory':this.state.detailedValues[ModelInput.Memory],\r\n                'storage':this.state.detailedValues[ModelInput.Storage],\r\n                'comments':this.state.detailedValues[ModelInput.Comment],\r\n            }\r\n            ).then(response => console.log(response) );\r\n\r\n        this.setState({\r\n            detailedValues : {\r\n                'vendor':'',\r\n                'modelNumber':'',\r\n                'height':'',\r\n                'displayColor':'',\r\n                'ethernetPorts':'',\r\n                'powerPorts':'',\r\n                'cpu':'',\r\n                'memory':'',\r\n                'storage':'',\r\n                'comments':'',\r\n            },\r\n        });\r\n    }\r\n\r\n\r\n    deleteModel() {\r\n        axios.post(\r\n            getURL(modelsMainPath, ModelCommand.delete),\r\n            {\r\n                'vendor':this.state.detailedValues[ModelInput.Vendor],\r\n                'modelNumber':this.state.detailedValues[ModelInput.ModelNumber],\r\n            }\r\n            ).then(response => console.log(response));\r\n\r\n        this.setState({\r\n            detailedValues : {\r\n                'vendor':'',\r\n                'modelNumber':'',\r\n                'height':'',\r\n                'displayColor':'',\r\n                'ethernetPorts':'',\r\n                'powerPorts':'',\r\n                'cpu':'',\r\n                'memory':'',\r\n                'storage':'',\r\n                'comments':'',\r\n            },\r\n            showDetailedView:false\r\n        });\r\n    }\r\n\r\n    detailViewModel(vendor, modelNum) {\r\n        axios.post(\r\n            getURL(modelsMainPath, ModelCommand.detailView),\r\n            {\r\n                'vendor':vendor,\r\n                'modelNumber':modelNum,\r\n            }\r\n            ).then(response => this.setState({ detailedValues: response.data['models'][0], detailViewLoading:false}));\r\n\r\n        this.setState({\r\n            viewVendor:'',\r\n            viewModel:'',\r\n        });\r\n    }\r\n\r\n    searchModels(vendor, modelNum, height) {\r\n        axios.post(\r\n            getURL(modelsMainPath, ModelCommand.search),\r\n            {\r\n                'vendor':vendor,\r\n                'modelNumber':modelNum,\r\n                'height':height,\r\n            }\r\n            ).then(response => this.setState({ items: response.data['models'] }));\r\n\r\n        this.setState({\r\n            searchText:'',\r\n        });\r\n    }\r\n\r\n    search(filters) {\r\n        this.searchModels(filters['vendor'], filters['modelNumber'], filters['height']);\r\n    }\r\n\r\n    downloadTable() {\r\n        this.csvLink.link.click();\r\n    }\r\n\r\n    openCreateModal() {\r\n        this.setState({showCreateModal: true});\r\n    }\r\n\r\n    openImportModal() {\r\n        this.setState({showImportModal: true});\r\n    }\r\n\r\n    showDetailedView(id) {\r\n        this.setState({\r\n            showDetailedView: true,\r\n            detailViewLoading:true,\r\n         });\r\n\r\n        var vendor = this.state.items[id]['vendor'];\r\n        var modelNum = this.state.items[id]['modelNumber'];\r\n\r\n        //this.detailViewModel(vendor, modelNum);\r\n        this.setState({ detailedValues: Constants.testModelArray[id], detailViewLoading:false})\r\n    }\r\n\r\n    closeCreateModal() {\r\n        this.setState({showCreateModal: false});\r\n    }\r\n\r\n    closeImportModal() {\r\n        this.setState({showImportModal: false});\r\n    }\r\n\r\n    closeDetailedView() {\r\n        this.setState({ showDetailedView: false })\r\n    }\r\n\r\n    updateModelCreator(event) {\r\n        this.state.createdModel[event.target.label] = event.target.value;\r\n        this.forceUpdate()\r\n    }\r\n\r\n    updateModelEdited(event) {\r\n        this.state.detailedValues[event.target.label] = event.target.value;\r\n        this.forceUpdate()\r\n    }\r\n\r\n    updateSearchText(event) {\r\n        this.setState({ searchText: event.target.value})\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <ButtonMenu\r\n                    openCreateModal={this.openCreateModal}\r\n                    openImportModal={this.openImportModal}\r\n                    downloadTable={this.downloadTable}\r\n                />\r\n                <CSVLink\r\n                    data={this.state.csvData}\r\n                    filename={modelDownloadFileName}\r\n                    className=\"hidden\"\r\n                    ref={(r) => this.csvLink = r}\r\n                    target=\"_blank\"\r\n                />\r\n                <CreateModal\r\n                    showCreateModal={this.state.showCreateModal}\r\n                    closeCreateModal={this.closeCreateModal}\r\n                    createModel={this.createModel}\r\n                    updateModelCreator={this.updateModelCreator}\r\n                    inputs={inputs}\r\n                />\r\n                <UploadModal\r\n                    showImportModal={this.state.showImportModal}\r\n                    closeImportModal={this.closeImportModal}\r\n                />\r\n                <Filters\r\n                    updateSearchText={this.updateSearchText}\r\n                    search={this.search}\r\n                    filters={columns}\r\n                />\r\n                <TableView\r\n                    columns={columns}\r\n                    vals={this.state.items}\r\n                    keys={columns}\r\n                    showDetailedView={this.showDetailedView}\r\n                    filters={columns}\r\n                />\r\n                <DetailedView\r\n                    showDetailedView={this.state.showDetailedView}\r\n                    closeDetailedView={this.closeDetailedView}\r\n                    inputs={inputs}\r\n                    updateModelEdited={this.updateModelEdited}\r\n                    defaultValues={this.state.detailedValues}\r\n                    loading={this.state.detailViewLoading}\r\n                    edit={this.editModel}\r\n                    delete={this.deleteModel}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\nimport axios from 'axios';\r\nimport { UserCommand } from '../enums/userCommands.ts'\r\nimport { UserInput } from '../enums/userInputs.ts'\r\nimport TableView from '../helpers/TableView';\r\nimport { CSVLink } from \"react-csv\";\r\nimport ButtonMenu from '../helpers/ButtonMenu';\r\nimport Filters from '../helpers/Filters';\r\nimport UploadModal from '../helpers/UploadModal';\r\nimport getURL from '../helpers/functions/GetURL';\r\nimport DetailedView from '../helpers/DetailedView';\r\nimport CreateModal from '../helpers/CreateModal';\r\nimport * as Constants from '../Constants';\r\n\r\n\r\n\r\nconst inputs = [\r\n    'username',\r\n    'email',\r\n    'displayName',\r\n    'privilege',\r\n    'password',\r\n]\r\n\r\nconst columns = [\r\n    'username',\r\n    'email',\r\n    'displayName',\r\n    'privilege',\r\n]\r\n\r\nconst usersMainPath = 'users/';\r\nconst userDownloadFileName = 'users.csv';\r\n\r\nexport default class UsersView extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n\r\n            // modals\r\n            showCreateModal:false,\r\n            showImportModal:false,\r\n\r\n            // table items\r\n            items:Constants.testUserArray,\r\n\r\n            // vals for creating a new user\r\n            createdUser : {\r\n                'username':'',\r\n                'password':'',\r\n                'displayName':'',\r\n                'email':'',\r\n                'privilege':'',\r\n            },\r\n\r\n            // vals for deleting a user\r\n            deleteUsername:'',\r\n\r\n            // vals for viewing a user\r\n            viewUser:'',\r\n\r\n            // csv data\r\n            csvData:[],\r\n\r\n            // detailed view\r\n            showDetailedView: false,\r\n            detailViewLoading:false,\r\n            detailedValues : {\r\n                'username':'',\r\n                'displayName':'',\r\n                'email':'',\r\n                'privilege':'',\r\n            },\r\n        };\r\n\r\n        this.createUser = this.createUser.bind(this);\r\n        this.editUser = this.editUser.bind(this);\r\n        this.deleteUser = this.deleteUser.bind(this);\r\n        this.detailViewUser = this.detailViewUser.bind(this);\r\n        this.searchUsers = this.searchUsers.bind(this);\r\n        this.search = this.search.bind(this);\r\n        this.openCreateModal = this.openCreateModal.bind(this);\r\n        this.openImportModal = this.openImportModal.bind(this);\r\n        this.showDetailedView = this.showDetailedView.bind(this);\r\n        this.closeCreateModal = this.closeCreateModal.bind(this);\r\n        this.closeImportModal = this.closeImportModal.bind(this);\r\n        this.closeDetailedView = this.closeDetailedView.bind(this);\r\n        this.updateUserCreator = this.updateUserCreator.bind(this);\r\n        this.updateUserEdited = this.updateUserEdited.bind(this)\r\n    \r\n    }\r\n\r\n    createUser() {\r\n        axios.post(\r\n            getURL(usersMainPath, UserCommand.create),\r\n            {\r\n                'username':this.state.createdUser[UserInput.Username],\r\n                'password':this.state.createdUser[UserInput.Password],\r\n                'displayName':this.state.createdUser[UserInput.DisplayName],\r\n                'email':this.state.createdUser[UserInput.Email],\r\n                'privilege':this.state.createdUser[UserInput.Privilege],\r\n            }\r\n            ).then(response => console.log(response));\r\n\r\n        this.setState({\r\n            createdUser : {\r\n                'username':'',\r\n                'password':'',\r\n                'displayName':'',\r\n                'email':'',\r\n                'privilege':'',\r\n            },\r\n        });\r\n    }\r\n\r\n    editUser() {\r\n        axios.post(\r\n            getURL(usersMainPath, UserCommand.edit),\r\n            {\r\n                'username':this.state.detailedValues[UserInput.Username],\r\n                'displayName':this.state.detailedValues[UserInput.DisplayName],\r\n                'email':this.state.detailedValues[UserInput.Email],\r\n                'privilege':this.state.detailedValues[UserInput.Privilege],\r\n            }\r\n            ).then(response => console.log(response));\r\n\r\n        this.setState({\r\n            detailedValues : {\r\n                'username':'',\r\n                'displayName':'',\r\n                'email':'',\r\n                'privilege':'',\r\n            },\r\n        });\r\n    }\r\n\r\n\r\n    deleteUser() {\r\n        axios.post(\r\n            getURL(usersMainPath, UserCommand.delete),\r\n            {\r\n                'username':this.state.deleteUsername,\r\n            }\r\n            ).then(response => console.log(response));\r\n\r\n        this.setState({\r\n            deleteUsername:'',\r\n            showDetailedView:false\r\n        });\r\n    }\r\n\r\n    detailViewUser(username) {\r\n        axios.post(\r\n            getURL(usersMainPath, UserCommand.detailView),\r\n            {\r\n                'username':username,\r\n            }\r\n            ).then(response => this.setState({ detailedValues: response.data['users'][0], detailViewLoading:false}));\r\n\r\n        this.setState({\r\n            viewUser:'',\r\n        });\r\n    }\r\n\r\n    searchUsers(username, email, displayName, privilege) {\r\n        axios.post(\r\n            getURL(usersMainPath, UserCommand.search),\r\n            {\r\n                'username':username,\r\n                'email':email,\r\n                'displayName':displayName,\r\n                'privilege':privilege,\r\n            }\r\n            ).then(response => this.setState({ items: response.data['users'] }));\r\n    }\r\n\r\n    search(filters) {\r\n        this.searchUsers(filters['username'], filters['email'], filters['displayName'], filters['privilege']);\r\n    }\r\n\r\n    downloadTable() {\r\n        this.csvLink.link.click();\r\n    }\r\n\r\n    openCreateModal() {\r\n        this.setState({showCreateModal: true});\r\n    }\r\n\r\n    openImportModal() {\r\n        this.setState({showImportModal: true});\r\n    }\r\n\r\n    showDetailedView(id) {\r\n        this.setState({\r\n            showDetailedView: true,\r\n            detailViewLoading:true,\r\n         });\r\n\r\n        var username = this.state.items[id]['username'];\r\n        var email = this.state.items[id]['email'];\r\n        var displayName = this.state.items[id]['displayName'];\r\n        var privilege = this.state.items[id]['privilege'];\r\n\r\n        //this.detailViewUser(username, email, displayName, privilege);\r\n        this.setState({ detailedValues: Constants.testUserArray[id], detailViewLoading:false})\r\n    }\r\n\r\n    closeCreateModal() {\r\n        this.setState({showCreateModal: false});\r\n    }\r\n\r\n    closeImportModal() {\r\n        this.setState({showImportModal: false});\r\n    }\r\n\r\n    closeDetailedView() {\r\n        this.setState({ showDetailedView: false })\r\n    }\r\n\r\n    updateUserCreator(event) {\r\n        this.state.createdUser[event.target.label] = event.target.value;\r\n        this.forceUpdate()\r\n    }\r\n\r\n    updateUserEdited(event) {\r\n        this.state.detailedValues[event.target.label] = event.target.value;\r\n        this.forceUpdate()\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <ButtonMenu\r\n                    openCreateModal={this.openCreateModal}\r\n                    openImportModal={this.openImportModal}\r\n                    downloadTable={this.downloadTable}\r\n                />\r\n                <CSVLink\r\n                    data={this.state.csvData}\r\n                    filename={userDownloadFileName}\r\n                    className=\"hidden\"\r\n                    ref={(r) => this.csvLink = r}\r\n                    target=\"_blank\"\r\n                />\r\n                <CreateModal\r\n                    showCreateModal={this.state.showCreateModal}\r\n                    closeCreateModal={this.closeCreateModal}\r\n                    createModel={this.createUser}\r\n                    updateModelCreator={this.updateUserCreator}\r\n                    inputs={inputs}\r\n                />\r\n                <UploadModal\r\n                    showImportModal={this.state.showImportModal}\r\n                    closeImportModal={this.closeImportModal}\r\n                />\r\n                <Filters\r\n                    updateSearchText={this.updateSearchText}\r\n                    search={this.search}\r\n                    filters={columns}\r\n                />\r\n                <TableView\r\n                    columns={columns}\r\n                    vals={this.state.items}\r\n                    keys={columns}\r\n                    showDetailedView={this.showDetailedView}\r\n                    filters={columns}\r\n                />\r\n                <DetailedView\r\n                    showDetailedView={this.state.showDetailedView}\r\n                    closeDetailedView={this.closeDetailedView}\r\n                    inputs={inputs}\r\n                    updateModelEdited={this.updateUserEdited}\r\n                    defaultValues={this.state.detailedValues}\r\n                    loading={this.state.detailViewLoading}\r\n                    edit={this.editUser}\r\n                    delete={this.deleteUser}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","export enum InstanceInput {\r\n    Model = 'model',\r\n    Hostname = 'hostname',\r\n    Rack = 'rack',\r\n    RackU = 'rackU',\r\n    Owner = 'owner',\r\n    Comment = 'comment',\r\n}\r\n","export enum InstanceCommand {\r\n    create = 'create/',\r\n    delete = 'delete/',\r\n    edit = 'edit/',\r\n    view = 'view/',\r\n    detailView = 'detailView/',\r\n    search = 'search/'\r\n}\r\n","import React from 'react';\r\nimport axios from 'axios';\r\nimport { InstanceInput } from '../enums/instanceInputs.ts'\r\nimport { InstanceCommand } from '../enums/instanceCommands.ts'\r\nimport * as Constants from '../Constants';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\r\nimport CloudDownloadIcon from '@material-ui/icons/CloudDownload';\r\nimport TableView from '../helpers/TableView';\r\nimport { CSVLink } from \"react-csv\";\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport InputBase from '@material-ui/core/InputBase';\r\n\r\nconst columns = [\r\n    \"Model\",\r\n    \"Hostname\",\r\n    \"Rack\",\r\n    \"Rack U\",\r\n    \"Owner\",\r\n    \"Comments\",\r\n]\r\n\r\nconst instancesMainPath = 'instances/';\r\nconst instanceDownloadFileName = 'instances.csv';\r\n\r\nfunction getURL(endpoint) {\r\n    return Constants.serverEndpoint + instancesMainPath + endpoint;\r\n}\r\n\r\nfunction jsonToArr(json) {\r\n    var instances = json.data['instances'];\r\n    const items = [];\r\n\r\n    for (const [index, val] of instances.entries()) {\r\n        const row = [];\r\n        row.push(val[InstanceInput.Model]);\r\n        row.push(val[InstanceInput.Hostname]);\r\n        row.push(val[InstanceInput.Rack]);\r\n        row.push(val[InstanceInput.RackU]);\r\n        row.push(val[InstanceInput.Owner]);\r\n        row.push(val[InstanceInput.Comment]);\r\n        items.push(row);\r\n    }\r\n    return items;\r\n}\r\n\r\nexport default class InstancesView extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            showCreateModal:false,\r\n            showImportModal:false,\r\n            items:[],\r\n            instanceToken:\"\",\r\n            createdInstance: {\r\n                'model':'',\r\n                'hostname':'',\r\n                'rack':'',\r\n                'rackU':'',\r\n                'owner':'',\r\n                'comment':'',\r\n            },\r\n            deleteInstanceRack:'',\r\n            deleteInstanceRackU:'',\r\n            viewRack:'',\r\n            viewRackU:'',\r\n            csvData:[],\r\n            searchText:\"\",\r\n        };\r\n    }\r\n\r\n    createInstance() {\r\n        axios.post(\r\n            getURL(InstanceCommand.create),\r\n            {\r\n                'model':this.state.createdInstance[InstanceInput.Model],\r\n                'hostname':this.state.createdInstance[InstanceInput.Hostname],\r\n                'rack':this.state.createdInstance[InstanceInput.Rack],\r\n                'rackU':this.state.createdInstance[InstanceInput.RackU],\r\n                'owner':this.state.createdInstance[InstanceInput.Owner],\r\n                'comment':this.state.createdInstance[InstanceInput.Comment],\r\n            }\r\n            ).then(response => (this.setState({ items:jsonToArr(response) })));\r\n    }\r\n\r\n    deleteInstance() {\r\n        axios.post(\r\n            getURL(InstanceCommand.delete),\r\n            {\r\n                'rack':this.state.deleteInstanceRack,\r\n                'rackU':this.state.deleteInstanceRackU\r\n            }\r\n            ).then(response => (this.setState({ items:jsonToArr(response) })));\r\n    }\r\n\r\n    detailViewInstance() {\r\n        axios.post(\r\n            getURL(InstanceCommand.detailView),\r\n            {\r\n                'rack':this.state.deleteInstanceRack,\r\n                'rackU':this.state.deleteInstanceRackU\r\n            }\r\n            ).then(response => (this.setState({ items:jsonToArr(response) })));\r\n    }\r\n\r\n    viewInstance() {\r\n        axios.post(\r\n            getURL(InstanceCommand.view),\r\n            {\r\n                'rack':this.state.deleteInstanceRack,\r\n                'rackU':this.state.deleteInstanceRackU\r\n            }\r\n            ).then(response => (this.setState({ items:jsonToArr(response) })));\r\n    }\r\n\r\n    searchInstances() {\r\n        axios.post(\r\n            getURL(InstanceCommand.search),\r\n            {\r\n                'filter':this.state.searchText,\r\n            }\r\n            ).then(response => this.setState({ items: jsonToArr(response)}));\r\n    }\r\n\r\n    downloadTable() {\r\n        this.csvLink.link.click();\r\n    }\r\n\r\n    openCreateModal() {\r\n        this.setState({showCreateModal: true});\r\n    }\r\n\r\n    openImportModal() {\r\n        this.setState({showImportModal: true});\r\n    }\r\n\r\n    updateInstanceCreator(event) {\r\n        this.state.createdInstance[event.target.name] = event.target.value;\r\n        this.forceUpdate()\r\n    }\r\n\r\n    updateSearchText(event) {\r\n        this.setState({ searchText: event.target.value})\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    onClick={this.openCreateModal.bind(this)}\r\n                >\r\n                    Create\r\n                </Button>\r\n                <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    startIcon={<CloudUploadIcon />}\r\n                    onClick={this.openImportModal.bind(this)}\r\n                >\r\n                    Import\r\n                </Button>\r\n                <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    startIcon={<CloudDownloadIcon />}\r\n                    onClick={this.downloadTable.bind(this)}\r\n                >\r\n                    Export\r\n                </Button>\r\n                <CSVLink\r\n                    data={this.state.csvData}\r\n                    filename={instanceDownloadFileName}\r\n                    className=\"hidden\"\r\n                    ref={(r) => this.csvLink = r}\r\n                    target=\"_blank\"/>\r\n                <Modal\r\n                    style={{top: `50%`,left: `50%`,transform: `translate(-50%, -50%)`,}}\r\n                    aria-labelledby=\"simple-modal-title\"\r\n                    aria-describedby=\"simple-modal-description\"\r\n                    open={this.state.showCreateModal}\r\n                    onClose={() => (this.setState({showCreateModal:false}))}\r\n                >\r\n                    <div>\r\n\r\n                        <TextField id=\"standard-basic\" name={InstanceInput.Model} label={columns[0]} onChange={this.updateInstanceCreator.bind(this)}/>\r\n                        <TextField id=\"standard-basic\" name={InstanceInput.Hostname} label={columns[1]} onChange={this.updateInstanceCreator.bind(this)}/>\r\n                        <TextField id=\"standard-basic\" name={InstanceInput.Rack} label={columns[2]} onChange={this.updateInstanceCreator.bind(this)}/>\r\n                        <TextField id=\"standard-basic\" name={InstanceInput.RackU} label={columns[3]} onChange={this.updateInstanceCreator.bind(this)}/>\r\n                        <TextField id=\"standard-basic\" name={InstanceInput.Owner} label={columns[4]} onChange={this.updateInstanceCreator.bind(this)}/>\r\n                        <TextField id=\"standard-basic\" name={InstanceInput.Comment} label={columns[5]} onChange={this.updateInstanceCreator.bind(this)}/>\r\n\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            onClick={this.createInstance.bind(this)}\r\n                        >\r\n                            Create\r\n                        </Button>\r\n                    </div>\r\n                </Modal>\r\n                <Modal\r\n                    style={{top: `50%`,left: `50%`,transform: `translate(-50%, -50%)`,}}\r\n                    aria-labelledby=\"simple-modal-title\"\r\n                    aria-describedby=\"simple-modal-description\"\r\n                    open={this.state.showImportModal}\r\n                    onClose={() => (this.setState({showImportModal:false}))}\r\n                >\r\n                    <div>\r\n                        <input type='file' accept=\".csv\" />\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                        >\r\n                            Upload\r\n                        </Button>\r\n                    </div>\r\n                </Modal>\r\n                <div>\r\n                <div>\r\n                    <SearchIcon />\r\n                </div>\r\n                    <InputBase\r\n                        placeholder=\"Search (blank does a search all)\"\r\n                        inputProps={{ 'aria-label': 'search' }}\r\n                        onChange={this.updateSearchText.bind(this)}\r\n                    />\r\n                    <Button\r\n                        onClick={this.searchInstances.bind(this)}\r\n                    >\r\n                        Search\r\n                    </Button>\r\n                </div>\r\n                <TableView\r\n                    columns={columns}\r\n                    vals={this.state.items}\r\n                />\r\n            </div>\r\n    );\r\n    }\r\n}\r\n","import React from 'react';\r\nimport TableView from '../helpers/TableView';\r\n\r\nconst columns = [\r\n    \"Vendor\",\r\n    \"Model Number\",\r\n    \"Height (U)\",\r\n    \"Display Color\",\r\n    \"Ethernet Ports\",\r\n    \"Power Ports\",\r\n    \"CPU\",\r\n    \"Memory\",\r\n    \"Storage\",\r\n    \"Comments\",\r\n]\r\n\r\nexport default function RacksView(props) {\r\n    return (<div></div>);\r\n}\r\n","import React from 'react';\r\nimport TableView from '../helpers/TableView';\r\n\r\nexport default function StatisticsView(props) {\r\n    return (<div></div>);\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\nimport ModelsView from './pages/ModelsView';\r\nimport UsersView from './pages/UsersView';\r\nimport InstancesView from './pages/InstancesView';\r\nimport RacksView from './pages/RacksView';\r\nimport StatisticsView from './pages/StatisticsView';\r\nimport Button from '@material-ui/core/Button';\r\nimport Logout from './helpers/Logout';\r\n\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <Typography\r\n      component=\"div\"\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`simple-tabpanel-${index}`}\r\n      aria-labelledby={`simple-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && <Box p={3}>{children}</Box>}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n  children: PropTypes.node,\r\n  index: PropTypes.any.isRequired,\r\n  value: PropTypes.any.isRequired,\r\n};\r\n\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `simple-tab-${index}`,\r\n    'aria-controls': `simple-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n  tab: {\r\n    flexGrow: 1,\r\n  },\r\n  button:{\r\n    flexGrow: 1,\r\n  }\r\n}));\r\n\r\nexport default function TabManager() {\r\n  const classes = useStyles();\r\n  const [value, setValue] = React.useState(0);\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\">\r\n        <Tabs value={value} onChange={handleChange}>\r\n          <Tab className={classes.tab} label=\"Models\" {...a11yProps(0)} />\r\n          <Tab className={classes.tab} label=\"Instances\" {...a11yProps(1)} />\r\n          <Tab className={classes.tab} label=\"Racks\" {...a11yProps(2)} />\r\n          <Tab className={classes.tab} label=\"Statistics\" {...a11yProps(2)} />\r\n          <Tab className={classes.tab} label=\"Users\" {...a11yProps(2)}  />\r\n          <Button\r\n           className={classes.button}\r\n           variant=\"contained\"\r\n           color=\"secondary\"\r\n           onClick={Logout()}\r\n           >\r\n              Logout\r\n          </Button>\r\n        </Tabs>\r\n      </AppBar>\r\n      <TabPanel value={value} index={0}>\r\n        <ModelsView />\r\n      </TabPanel>\r\n      <TabPanel value={value} index={1}>\r\n        <InstancesView />\r\n      </TabPanel>\r\n      <TabPanel value={value} index={2}>\r\n        <RacksView />\r\n      </TabPanel>\r\n      <TabPanel value={value} index={3}>\r\n        <StatisticsView />\r\n      </TabPanel>\r\n      <TabPanel value={value} index={4}>\r\n        <UsersView />\r\n      </TabPanel>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './stylesheets/index.css';\nimport PageSelector from './javascript/PageSelector';\n\nReactDOM.render(<PageSelector />, document.getElementById('root'));\n","import React from \"react\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route\r\n} from \"react-router-dom\";\r\nimport Login from \"./Login\";\r\nimport TabManager from \"./TabManager\";\r\n\r\nexport default function PageSelector() {\r\n  return (\r\n    <Router>\r\n        <Switch>\r\n          <Route path=\"/\">\r\n            <TabManager />\r\n          </Route>\r\n          <Route path=\"/homepage\">\r\n            <Login />\r\n          </Route>\r\n        </Switch>\r\n    </Router>\r\n  );\r\n}\r\n"],"sourceRoot":""}
