{"version":3,"sources":["javascript/enums/privilegeTypes.ts","javascript/Constants.jsx","javascript/helpers/functions/GetURL.jsx","javascript/enums/modelCommands.ts","javascript/enums/modelInputs.ts","javascript/helpers/StatusDisplay.jsx","javascript/Login.jsx","javascript/enums/userCommands.ts","javascript/enums/userInputs.ts","javascript/helpers/TableView.jsx","javascript/helpers/ButtonMenu.jsx","javascript/helpers/Filters.jsx","javascript/helpers/UploadModal.jsx","javascript/helpers/DetailedView.jsx","javascript/helpers/CreateModal.jsx","javascript/pages/ModelsView.jsx","javascript/pages/UsersView.jsx","javascript/enums/instanceCommands.ts","javascript/enums/instanceInputs.ts","javascript/pages/InstancesView.jsx","javascript/pages/RacksView.jsx","javascript/pages/StatisticsView.jsx","javascript/Tabs.jsx","javascript/PageSelector.jsx","index.jsx"],"names":["Privilege","serverEndpoint","getURL","path","endpoint","Constants","ModelCommand","ModelInput","StatusDisplay","props","state","Collapse","in","this","open","Alert","severity","action","IconButton","aria-label","color","size","onClick","closeStatus","fontSize","message","React","Component","Login","username","password","statusMessage","showStatus","statusSeverity","closeShowStatus","bind","submitCredentials","axios","post","then","response","data","setState","loginFunc","event","target","value","TextField","id","label","variant","required","ref","onChange","updateUsername","type","updatePassword","Button","UserCommand","UserInput","TableView","showDetailedView","TableContainer","component","Paper","Table","className","minWidth","TableHead","TableRow","columns","map","col","TableCell","TableBody","vals","row","index","keys","key","scope","ButtonMenu","openCreateModal","startIcon","openImportModal","downloadTable","Filters","filters","hasOwnProperty","forceUpdate","search","filter","InputBase","placeholder","inputProps","updateSearchText","UploadModal","Modal","style","top","left","transform","bgcolor","aria-labelledby","aria-describedby","showImportModal","onClose","closeImportModal","accept","DetailedView","showConfirmationBox","closeDetailedView","inputs","input","disabled","updateModelEdited","defaultValue","defaultValues","edit","delete","CreateModal","showCreateModal","closeCreateModal","name","updateModelCreator","createModel","ModelsView","items","createdModel","createdVendor","createdModelNum","createdHeight","createdDispClr","createdEthPorts","createdPwrPorts","createdCPU","createdMem","createdStorage","createdComments","deleteVendor","deleteModel","viewVendor","viewModel","searchText","csvData","detailViewLoading","detailedValues","editModel","defaults","headers","common","token","privilege","create","Vendor","ModelNumber","Height","DisplayColor","EthernetPorts","PowerPorts","CPU","Memory","Storage","Comment","console","log","vendor","modelNum","detailView","height","searchModels","csvLink","link","click","detailViewModel","ADMIN","filename","r","loading","USER","InstanceCommand","InstanceInput","UsersView","createdUser","deleteUsername","viewUser","createUser","editUser","deleteUser","detailViewUser","searchUsers","updateUserCreator","updateUserEdited","Username","Password","DisplayName","Email","email","displayName","InstancesView","createdInstance","deleteInstanceRack","deleteInstanceRackU","viewInstanceRack","viewInstanceRackU","createInstance","editInstance","deleteInstance","detailViewInstance","searchInstances","updateInstanceCreator","updateInstanceEdited","Model","Hostname","Rack","RackU","Owner","rack","rackU","model","hostname","RacksView","StatisticsView","TabViewer","currentTabID","handleChange","newValue","AppBar","position","Tabs","Tab","flexGrow","logout","Typography","role","hidden","PageSelector","loggedIn","login","get","ReactDOM","render","document","getElementById"],"mappings":"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","file":"js/main.61af1eb7.chunk.js","sourcesContent":["export enum Privilege  {\r\n    ADMIN = \"admin\",\r\n    USER = \"user\",\r\n};\r\n","/**\r\n * Constants file\r\n */\r\n\r\nexport const localServerEndpoint = 'http://localhost:4010/';\r\nexport const devServerEndpoint = 'https://parseltongue-dev.herokuapp.com/';\r\nexport const prodServerEndpoint = 'https://parseltongue-prod.herokuapp.com/';\r\n\r\nexport const serverEndpoint = localServerEndpoint;\r\n\r\nexport const testModelArray = [\r\n    {\r\n        'vendor':'a',\r\n        'modelNumber':'a',\r\n        'height':'a',\r\n        'displayColor':'a',\r\n        'ethernetPorts':'a',\r\n        'powerPorts':'a',\r\n        'cpu':'a',\r\n        'memory':'a',\r\n        'storage':'a',\r\n        'comments':'a',\r\n    },{\r\n        'vendor':'b',\r\n        'modelNumber':'b',\r\n        'height':'b',\r\n        'displayColor':'b',\r\n        'ethernetPorts':'b',\r\n        'powerPorts':'b',\r\n        'cpu':'b',\r\n        'memory':'b',\r\n        'storage':'b',\r\n        'comments':'b',\r\n    },{\r\n        'vendor':'c',\r\n        'modelNumber':'c',\r\n        'height':'c',\r\n        'displayColor':'c',\r\n        'ethernetPorts':'c',\r\n        'powerPorts':'c',\r\n        'cpu':'c',\r\n        'memory':'c',\r\n        'storage':'c',\r\n        'comments':'c',\r\n    },\r\n];\r\n\r\nexport const testUserArray = [\r\n    {\r\n        'username':'a',\r\n        'password':'a',\r\n        'displayName':'a',\r\n        'email':'a',\r\n        'privilege':'a',\r\n    },{\r\n        'username':'b',\r\n        'password':'b',\r\n        'displayName':'b',\r\n        'email':'b',\r\n        'privilege':'b',\r\n    },{\r\n        'username':'c',\r\n        'password':'c',\r\n        'displayName':'c',\r\n        'email':'c',\r\n        'privilege':'c',\r\n    },\r\n];\r\n\r\nexport const testInstanceArray = [\r\n    {\r\n        'model':'a',\r\n        'hostname':'a',\r\n        'rack':'a',\r\n        'rackU':'a',\r\n        'owner':'a',\r\n        'comment':'a',\r\n    },{\r\n        'model':'b',\r\n        'hostname':'b',\r\n        'rack':'b',\r\n        'rackU':'b',\r\n        'owner':'b',\r\n        'comment':'b',\r\n    },{\r\n        'model':'c',\r\n        'hostname':'c',\r\n        'rack':'c',\r\n        'rackU':'c',\r\n        'owner':'c',\r\n        'comment':'c',\r\n    },\r\n];\r\n","import * as Constants from '../../Constants';\r\n\r\nexport default function getURL(path, endpoint) {\r\n    return Constants.serverEndpoint + path + endpoint;\r\n}\r\n","export enum ModelCommand {\r\n    create = 'create/',\r\n    delete = 'delete/',\r\n    edit = 'edit/',\r\n    view = 'view/',\r\n    detailView = 'detailView/',\r\n    search = 'search/',\r\n}\r\n","export enum ModelInput {\r\n    Vendor = 'vendor',\r\n    ModelNumber = 'modelNumber',\r\n    Height = 'height',\r\n    DisplayColor = 'displayColor',\r\n    EthernetPorts = 'ethernetPorts',\r\n    PowerPorts = 'powerPorts',\r\n    CPU = 'cpu',\r\n    Memory = 'memory',\r\n    Storage = 'storage',\r\n    Comment = 'comments'\r\n}\r\n","import React from 'react';\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport Button from '@material-ui/core/Button';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\n\r\nexport default class StatusDisplay extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n\r\n        };\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Collapse in={this.props.open}>\r\n                    <Alert\r\n                        severity={this.props.severity}\r\n                        action={\r\n                        <IconButton\r\n                            aria-label=\"close\"\r\n                            color=\"inherit\"\r\n                            size=\"small\"\r\n                            onClick={this.props.closeStatus}\r\n                        >\r\n                            <CloseIcon fontSize=\"inherit\" />\r\n                        </IconButton>\r\n                        }\r\n                    >\r\n                        {this.props.message}\r\n                    </Alert>\r\n                </Collapse>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport axios from 'axios';\r\nimport getURL from './helpers/functions/GetURL';\r\nimport * as Constants from './Constants';\r\nimport { Privilege } from './enums/privilegeTypes.ts'\r\nimport StatusDisplay from './helpers/StatusDisplay';\r\n\r\nconst loginMainPath = 'users/';\r\n\r\nexport default class Login extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            username:'',\r\n            password:'',\r\n            statusMessage:'',\r\n            showStatus:false,\r\n            statusSeverity:'',\r\n        };\r\n\r\n        this.closeShowStatus = this.closeShowStatus.bind(this);\r\n        this.submitCredentials = this.submitCredentials.bind(this);\r\n    }\r\n\r\n    submitCredentials() {\r\n        axios.post(\r\n            getURL(loginMainPath, 'authenticate'),\r\n            {\r\n                \"username\":this.state.username,\r\n                \"password\":this.state.password,\r\n            }\r\n            ).then(response => {\r\n                var valid = response.data['message'];\r\n                if (valid == 'success') {\r\n                    this.setState({ message: '' });\r\n                    this.props.loginFunc(response.data['token'], response.data['privilege']);\r\n                } else {\r\n                    this.setState({ showStatus:true, statusMessage:response.data['message'] });\r\n                }\r\n            });\r\n        //this.props.loginFunc('token', Privilege.ADMIN);\r\n    }\r\n\r\n    updateUsername(event) {\r\n        this.setState({ username: event.target.value })\r\n    }\r\n\r\n    updatePassword(event) {\r\n        this.setState({ password: event.target.value })\r\n    }\r\n\r\n    closeShowStatus() {\r\n        this.setState({ showStatus: false })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <StatusDisplay\r\n                    open={this.state.showStatus}\r\n                    severity={this.state.statusSeverity}\r\n                    closeStatus={this.closeShowStatus}\r\n                    message={this.state.statusMessage}\r\n                />\r\n                <TextField\r\n                    id=\"outlined-basic\"\r\n                    label=\"Username\"\r\n                    variant=\"outlined\"\r\n                    required=\"true\"\r\n                    ref='username'\r\n                    onChange={this.updateUsername.bind(this)}\r\n                />\r\n                <TextField\r\n                    id=\"outlined-basic\"\r\n                    label=\"Password\"\r\n                    variant=\"outlined\"\r\n                    required=\"true\"\r\n                    ref='password'\r\n                    type=\"password\"\r\n                    onChange={this.updatePassword.bind(this)}\r\n                />\r\n                <Button\r\n                    onClick={this.submitCredentials}\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                >\r\n                    Sign In\r\n                </Button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","export enum UserCommand {\r\n    create = 'create/',\r\n    delete = 'delete/',\r\n    edit = 'edit/',\r\n    view = 'view/',\r\n    detailView = 'detailView/',\r\n    search='search/',\r\n}\r\n","export enum UserInput {\r\n    Username='username',\r\n    Password='password',\r\n    Email='email',\r\n    DisplayName='displayName',\r\n    Privilege='privilege',\r\n}\r\n","import React from 'react';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nexport default class TableView extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n\r\n    };\r\n  }\r\n\r\n  showDetailedView(event) {\r\n    this.props.showDetailedView(event.target.id);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <TableContainer component={Paper}>\r\n          <Table className={{minWidth: 650}} aria-label=\"simple table\">\r\n            <TableHead>\r\n              <TableRow >\r\n                {this.props.columns.map(col => (<TableCell><span id={col}>{col}</span></TableCell>))}\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {this.props.vals.map((row, index)=> (\r\n              <TableRow>\r\n                {this.props.keys.map(key => (<TableCell scope=\"row\"><span id={index} onClick={this.showDetailedView.bind(this)}>{row[key]}</span></TableCell>))}\r\n              </TableRow>\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\r\nimport CloudDownloadIcon from '@material-ui/icons/CloudDownload';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nexport default class ButtonMenu extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n\r\n        };\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div>\r\n                <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    onClick={this.props.openCreateModal}\r\n                >\r\n                    Create\r\n                </Button>\r\n                <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    startIcon={<CloudUploadIcon />}\r\n                    onClick={this.props.openImportModal}\r\n                >\r\n                    Import\r\n                </Button>\r\n                <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    startIcon={<CloudDownloadIcon />}\r\n                    onClick={this.props.downloadTable}\r\n                >\r\n                    Export\r\n                </Button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nexport default class Filters extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            filters:{},\r\n        };\r\n    }\r\n\r\n    updateSearchText(event) {\r\n        if (this.state.filters.hasOwnProperty(event.target.id)) {\r\n            this.state.filters[event.target.id] = event.target.value;\r\n            this.forceUpdate();\r\n        } else {\r\n            var value = (event.target.value == null) ? '' : event.target.value;\r\n            this.state.filters[event.target.id] = event.target.value;\r\n            //this.state.filters.push({ key:event.target.id, value: value});\r\n            this.forceUpdate();\r\n        }\r\n    }\r\n\r\n    search() {\r\n        this.props.search(this.state.filters);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.props.filters.map((filter, index) => (\r\n                    <div>\r\n                        <SearchIcon />\r\n                        <InputBase\r\n                            placeholder={filter+\" filter\"}\r\n                            inputProps={{ 'aria-label': 'search' }}\r\n                            onChange={this.updateSearchText.bind(this)}\r\n                            id={filter}\r\n                        />\r\n                    </div>\r\n                ))\r\n                }\r\n                <div>\r\n                    <Button\r\n                        onClick={this.search.bind(this)}\r\n                    >\r\n                        Search\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Modal from '@material-ui/core/Modal';\r\n\r\nexport default class UploadModal extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n\r\n        };\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Modal\r\n                style={{top: `50%`,left: `50%`,transform: `translate(-50%, -50%)`, bgcolor:'text.secondary'}}\r\n                aria-labelledby=\"simple-modal-title\"\r\n                aria-describedby=\"simple-modal-description\"\r\n                open={this.props.showImportModal}\r\n                onClose={this.props.closeImportModal}\r\n            >\r\n                <div>\r\n                    <input type='file' accept=\".csv\" />\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                    >\r\n                        Upload\r\n                    </Button>\r\n                </div>\r\n            </Modal>\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from '@material-ui/core/Button';\r\n\r\nexport default class DetailedView extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            showConfirmationBox:false,\r\n        };\r\n    }\r\n\r\n    closeModal() {\r\n        this.setState({showConfirmationBox:false,});\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n        <div>\r\n            <Modal\r\n                style={{top: `50%`,left: `50%`,transform: `translate(-50%, -50%)`, bgcolor:'text.secondary'}}\r\n                aria-labelledby=\"simple-modal-title\"\r\n                aria-describedby=\"simple-modal-description\"\r\n                open={this.props.showDetailedView}\r\n                onClose={this.props.closeDetailedView}\r\n            >\r\n                <div>\r\n                    {this.props.inputs.map(input => (\r\n                        <TextField disabled={this.props.disabled} id=\"standard-basic\" label={input} onChange={this.props.updateModelEdited} defaultValue={this.props.defaultValues[input]}/>\r\n                    ))}\r\n                    {this.props.disabled ? null:\r\n                    <div>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            onClick={this.props.edit}\r\n                        >\r\n                            Save\r\n                        </Button>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            onClick={this.props.delete}\r\n                        >\r\n                            Delete\r\n                        </Button>\r\n                    </div>}\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            onClick={this.props.closeDetailedView}\r\n                        >\r\n                            Close\r\n                        </Button>\r\n                </div>\r\n            </Modal>\r\n        </div>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from '@material-ui/core/Button';\r\n\r\nexport default class CreateModal extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n\r\n        };\r\n    }\r\n\r\n    render() {\r\n        return (\r\n        <div>\r\n            <Modal\r\n                style={{top: `50%`,left: `50%`,transform: `translate(-50%, -50%)`, bgcolor:'text.secondary'}}\r\n                aria-labelledby=\"simple-modal-title\"\r\n                aria-describedby=\"simple-modal-description\"\r\n                open={this.props.showCreateModal}\r\n                onClose={this.props.closeCreateModal}\r\n            >\r\n                <div>\r\n                    {this.props.inputs.map(input => (\r\n                        <TextField id=\"standard-basic\" label={input} name={input} onChange={this.props.updateModelCreator}/>\r\n                    ))}\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        onClick={this.props.createModel}\r\n                    >\r\n                        Create\r\n                    </Button>\r\n                </div>\r\n            </Modal>\r\n        </div>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\nimport axios from 'axios';\r\nimport { ModelCommand } from '../enums/modelCommands.ts'\r\nimport { ModelInput } from '../enums/modelInputs.ts'\r\nimport { Privilege } from '../enums/privilegeTypes.ts'\r\nimport TableView from '../helpers/TableView';\r\nimport { CSVLink } from \"react-csv\";\r\nimport ButtonMenu from '../helpers/ButtonMenu';\r\nimport Filters from '../helpers/Filters';\r\nimport UploadModal from '../helpers/UploadModal';\r\nimport getURL from '../helpers/functions/GetURL';\r\nimport DetailedView from '../helpers/DetailedView';\r\nimport CreateModal from '../helpers/CreateModal';\r\nimport * as Constants from '../Constants';\r\n\r\nconst inputs = [\r\n    'vendor',\r\n    'modelNumber',\r\n    'height',\r\n    'displayColor',\r\n    'ethernetPorts',\r\n    'powerPorts',\r\n    'cpu',\r\n    'memory',\r\n    'storage',\r\n    'comments',\r\n]\r\n\r\nconst columns = [\r\n    'vendor',\r\n    'modelNumber',\r\n    'height',\r\n]\r\n\r\nconst modelsMainPath = 'models/';\r\nconst modelDownloadFileName = 'models.csv';\r\n\r\nexport default class ModelsView extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n\r\n            // modals\r\n            showCreateModal:false,\r\n            showImportModal:false,\r\n\r\n            // table items\r\n            items:[], //Constants.testModelArray,\r\n\r\n            // vals for creating a new model\r\n            createdModel : {\r\n                'vendor':'',\r\n                'modelNumber':'',\r\n                'height':'',\r\n                'displayColor':'',\r\n                'ethernetPorts':'',\r\n                'powerPorts':'',\r\n                'cpu':'',\r\n                'memory':'',\r\n                'storage':'',\r\n                'comments':'',\r\n            },\r\n            createdVendor:'',\r\n            createdModelNum:'',\r\n            createdHeight:'',\r\n            createdDispClr:'',\r\n            createdEthPorts:'',\r\n            createdPwrPorts:'',\r\n            createdCPU:'',\r\n            createdMem:'',\r\n            createdStorage:'',\r\n            createdComments:'',\r\n\r\n            // vals for deleting a model\r\n            deleteVendor:'',\r\n            deleteModel:'',\r\n\r\n            // vals for viewing a model\r\n            viewVendor:'',\r\n            viewModel:'',\r\n\r\n            // searching a model\r\n            searchText:\"\",\r\n\r\n            // csv data\r\n            csvData:[],\r\n\r\n            // detailed view\r\n            showDetailedView: false,\r\n            detailViewLoading:false,\r\n            detailedValues : {\r\n                'vendor':'',\r\n                'modelNumber':'',\r\n                'height':'',\r\n                'displayColor':'',\r\n                'ethernetPorts':'',\r\n                'powerPorts':'',\r\n                'cpu':'',\r\n                'memory':'',\r\n                'storage':'',\r\n                'comments':'',\r\n            },\r\n\r\n        };\r\n\r\n        this.openCreateModal = this.openCreateModal.bind(this);\r\n        this.openImportModal = this.openImportModal.bind(this);\r\n        this.downloadTable = this.downloadTable.bind(this);\r\n        this.updateSearchText = this.updateSearchText.bind(this);\r\n        this.search = this.search.bind(this);\r\n        this.closeImportModal = this.closeImportModal.bind(this);\r\n        this.closeCreateModal = this.closeCreateModal.bind(this);\r\n        this.showDetailedView = this.showDetailedView.bind(this);\r\n        this.editModel = this.editModel.bind(this);\r\n        this.closeDetailedView = this.closeDetailedView.bind(this);\r\n        this.updateModelEdited = this.updateModelEdited.bind(this);\r\n        this.closeCreateModal = this.closeCreateModal.bind(this);\r\n        this.createModel = this.createModel.bind(this);\r\n        this.updateModelCreator = this.updateModelCreator.bind(this);\r\n        this.deleteModel = this.deleteModel.bind(this);\r\n\r\n        axios.defaults.headers.common['token'] = this.props.token;\r\n        axios.defaults.headers.common['privilege'] = this.props.privilege;\r\n    }\r\n\r\n    createModel() {\r\n        axios.post(\r\n            getURL(modelsMainPath, ModelCommand.create),\r\n            {\r\n                'vendor':this.state.createdModel[ModelInput.Vendor],\r\n                'modelNumber':this.state.createdModel[ModelInput.ModelNumber],\r\n                'height':this.state.createdModel[ModelInput.Height],\r\n                'displayColor':this.state.createdModel[ModelInput.DisplayColor],\r\n                'ethernetPorts':this.state.createdModel[ModelInput.EthernetPorts],\r\n                'powerPorts':this.state.createdModel[ModelInput.PowerPorts],\r\n                'cpu':this.state.createdModel[ModelInput.CPU],\r\n                'memory':this.state.createdModel[ModelInput.Memory],\r\n                'storage':this.state.createdModel[ModelInput.Storage],\r\n                'comments':this.state.createdModel[ModelInput.Comment],\r\n            }\r\n            ).then(response => console.log(response));\r\n\r\n        this.setState({\r\n            createdModel : {\r\n                'vendor':'',\r\n                'modelNumber':'',\r\n                'height':'',\r\n                'displayColor':'',\r\n                'ethernetPorts':'',\r\n                'powerPorts':'',\r\n                'cpu':'',\r\n                'memory':'',\r\n                'storage':'',\r\n                'comments':'',\r\n            },\r\n            showCreateModal:false,\r\n        });\r\n    }\r\n\r\n    editModel() {\r\n        axios.post(\r\n            getURL(modelsMainPath, ModelCommand.edit),\r\n            {\r\n                'vendor':this.state.detailedValues[ModelInput.Vendor],\r\n                'modelNumber':this.state.detailedValues[ModelInput.ModelNumber],\r\n                'height':this.state.detailedValues[ModelInput.Height],\r\n                'displayColor':this.state.detailedValues[ModelInput.DisplayColor],\r\n                'ethernetPorts':this.state.detailedValues[ModelInput.EthernetPorts],\r\n                'powerPorts':this.state.detailedValues[ModelInput.PowerPorts],\r\n                'cpu':this.state.detailedValues[ModelInput.CPU],\r\n                'memory':this.state.detailedValues[ModelInput.Memory],\r\n                'storage':this.state.detailedValues[ModelInput.Storage],\r\n                'comments':this.state.detailedValues[ModelInput.Comment],\r\n            }\r\n            ).then(response => console.log(response) );\r\n\r\n        this.setState({\r\n            detailedValues : {\r\n                'vendor':'',\r\n                'modelNumber':'',\r\n                'height':'',\r\n                'displayColor':'',\r\n                'ethernetPorts':'',\r\n                'powerPorts':'',\r\n                'cpu':'',\r\n                'memory':'',\r\n                'storage':'',\r\n                'comments':'',\r\n            },\r\n            showDetailedView:false\r\n        });\r\n    }\r\n\r\n\r\n    deleteModel() {\r\n        axios.post(\r\n            getURL(modelsMainPath, ModelCommand.delete),\r\n            {\r\n                'vendor':this.state.detailedValues[ModelInput.Vendor],\r\n                'modelNumber':this.state.detailedValues[ModelInput.ModelNumber],\r\n            }\r\n            ).then(response => console.log(response));\r\n\r\n        this.setState({\r\n            detailedValues : {\r\n                'vendor':'',\r\n                'modelNumber':'',\r\n                'height':'',\r\n                'displayColor':'',\r\n                'ethernetPorts':'',\r\n                'powerPorts':'',\r\n                'cpu':'',\r\n                'memory':'',\r\n                'storage':'',\r\n                'comments':'',\r\n            },\r\n            showDetailedView:false\r\n        });\r\n    }\r\n\r\n    detailViewModel(vendor, modelNum) {\r\n        axios.post(\r\n            getURL(modelsMainPath, ModelCommand.detailView),\r\n            {\r\n                'vendor':vendor,\r\n                'modelNumber':modelNum,\r\n            }, this.props.headers\r\n            ).then(response => this.setState({ detailedValues: response.data['models'][0], detailViewLoading:false}));\r\n\r\n        this.setState({\r\n            viewVendor:'',\r\n            viewModel:'',\r\n        });\r\n    }\r\n\r\n    searchModels(vendor, modelNum, height) {\r\n        axios.post(\r\n            getURL(modelsMainPath, ModelCommand.search),\r\n            {\r\n                'filters':{\r\n                    'vendor':vendor,\r\n                    'modelNumber':modelNum,\r\n                    'height':height,\r\n                }\r\n            }\r\n            ).then(response => this.setState({ items: response.data['models'] }));\r\n\r\n        this.setState({\r\n            searchText:'',\r\n        });\r\n    }\r\n\r\n    search(filters) {\r\n        this.searchModels(filters['vendor'], filters['modelNumber'], filters['height']);\r\n    }\r\n\r\n    downloadTable() {\r\n        this.csvLink.link.click();\r\n    }\r\n\r\n    openCreateModal() {\r\n        this.setState({showCreateModal: true});\r\n    }\r\n\r\n    openImportModal() {\r\n        this.setState({showImportModal: true});\r\n    }\r\n\r\n    showDetailedView(id) {\r\n        this.setState({\r\n            showDetailedView: true,\r\n            detailViewLoading:true,\r\n         });\r\n\r\n        var vendor = this.state.items[id]['vendor'];\r\n        var modelNum = this.state.items[id]['modelNumber'];\r\n\r\n        this.detailViewModel(vendor, modelNum);\r\n        //this.setState({ detailedValues: Constants.testModelArray[id], detailViewLoading:false})\r\n    }\r\n\r\n    closeCreateModal() {\r\n        this.setState({showCreateModal: false});\r\n    }\r\n\r\n    closeImportModal() {\r\n        this.setState({showImportModal: false});\r\n    }\r\n\r\n    closeDetailedView() {\r\n        this.setState({ showDetailedView: false })\r\n    }\r\n\r\n    updateModelCreator(event) {\r\n        this.state.createdModel[event.target.name] = event.target.value;\r\n        this.forceUpdate()\r\n    }\r\n\r\n    updateModelEdited(event) {\r\n        this.state.detailedValues[event.target.label] = event.target.value;\r\n        this.forceUpdate()\r\n    }\r\n\r\n    updateSearchText(event) {\r\n        this.setState({ searchText: event.target.value})\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {(this.props.privilege == Privilege.ADMIN) ?\r\n                    (<div><ButtonMenu\r\n                    openCreateModal={this.openCreateModal}\r\n                    openImportModal={this.openImportModal}\r\n                    downloadTable={this.downloadTable}\r\n                />\r\n                <CSVLink\r\n                    data={this.state.csvData}\r\n                    filename={modelDownloadFileName}\r\n                    className=\"hidden\"\r\n                    ref={(r) => this.csvLink = r}\r\n                    target=\"_blank\"\r\n                />\r\n                <CreateModal\r\n                    showCreateModal={this.state.showCreateModal}\r\n                    closeCreateModal={this.closeCreateModal}\r\n                    createModel={this.createModel}\r\n                    updateModelCreator={this.updateModelCreator}\r\n                    inputs={inputs}\r\n                    />\r\n                <UploadModal\r\n                    showImportModal={this.state.showImportModal}\r\n                    closeImportModal={this.closeImportModal}\r\n                /></div>):null\r\n                }\r\n                <Filters\r\n                    updateSearchText={this.updateSearchText}\r\n                    search={this.search}\r\n                    filters={columns}\r\n                />\r\n                <TableView\r\n                    columns={columns}\r\n                    vals={this.state.items}\r\n                    keys={columns}\r\n                    showDetailedView={this.showDetailedView}\r\n                    filters={columns}\r\n                />\r\n                <DetailedView\r\n                    showDetailedView={this.state.showDetailedView}\r\n                    closeDetailedView={this.closeDetailedView}\r\n                    inputs={inputs}\r\n                    updateModelEdited={this.updateModelEdited}\r\n                    defaultValues={this.state.detailedValues}\r\n                    loading={this.state.detailViewLoading}\r\n                    edit={this.editModel}\r\n                    delete={this.deleteModel}\r\n                    disabled={this.props.privilege==Privilege.USER}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\nimport axios from 'axios';\r\nimport { UserCommand } from '../enums/userCommands.ts'\r\nimport { UserInput } from '../enums/userInputs.ts'\r\nimport { Privilege } from '../enums/privilegeTypes.ts'\r\nimport TableView from '../helpers/TableView';\r\nimport { CSVLink } from \"react-csv\";\r\nimport ButtonMenu from '../helpers/ButtonMenu';\r\nimport Filters from '../helpers/Filters';\r\nimport UploadModal from '../helpers/UploadModal';\r\nimport getURL from '../helpers/functions/GetURL';\r\nimport DetailedView from '../helpers/DetailedView';\r\nimport CreateModal from '../helpers/CreateModal';\r\nimport * as Constants from '../Constants';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport StatusDisplay from '../helpers/StatusDisplay';\r\n\r\n\r\n\r\nconst inputs = [\r\n    'username',\r\n    'email',\r\n    'displayName',\r\n    'privilege',\r\n    'password',\r\n]\r\n\r\nconst columns = [\r\n    'username',\r\n    'email',\r\n    'displayName',\r\n    'privilege',\r\n]\r\n\r\nconst usersMainPath = 'users/';\r\nconst userDownloadFileName = 'users.csv';\r\n\r\nexport default class UsersView extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n\r\n            // modals\r\n            showCreateModal:false,\r\n            showImportModal:false,\r\n\r\n            // table items\r\n            items:[], //Constants.testUserArray,\r\n\r\n            // vals for creating a new user\r\n            createdUser : {\r\n                'username':'',\r\n                'password':'',\r\n                'displayName':'',\r\n                'email':'',\r\n                'privilege':'',\r\n            },\r\n\r\n            showStatus:false,\r\n            statusMessage:'',\r\n            statusSeverity:'',\r\n\r\n            // vals for deleting a user\r\n            deleteUsername:'',\r\n\r\n            // vals for viewing a user\r\n            viewUser:'',\r\n\r\n            // csv data\r\n            csvData:[],\r\n\r\n            // detailed view\r\n            showDetailedView: false,\r\n            detailViewLoading:false,\r\n            detailedValues : {\r\n                'username':'',\r\n                'displayName':'',\r\n                'email':'',\r\n                'privilege':'',\r\n            },\r\n        };\r\n\r\n        this.createUser = this.createUser.bind(this);\r\n        this.editUser = this.editUser.bind(this);\r\n        this.deleteUser = this.deleteUser.bind(this);\r\n        this.detailViewUser = this.detailViewUser.bind(this);\r\n        this.searchUsers = this.searchUsers.bind(this);\r\n        this.search = this.search.bind(this);\r\n        this.openCreateModal = this.openCreateModal.bind(this);\r\n        this.openImportModal = this.openImportModal.bind(this);\r\n        this.showDetailedView = this.showDetailedView.bind(this);\r\n        this.closeCreateModal = this.closeCreateModal.bind(this);\r\n        this.closeImportModal = this.closeImportModal.bind(this);\r\n        this.closeDetailedView = this.closeDetailedView.bind(this);\r\n        this.updateUserCreator = this.updateUserCreator.bind(this);\r\n        this.updateUserEdited = this.updateUserEdited.bind(this);\r\n        this.closeShowStatus = this.closeShowStatus.bind(this);\r\n\r\n        axios.defaults.headers.common['token'] = this.props.token;\r\n        axios.defaults.headers.common['privilege'] = this.props.privilege;\r\n\r\n    }\r\n\r\n    createUser() {\r\n        axios.post(\r\n            getURL(usersMainPath, UserCommand.create),\r\n            {\r\n                'username':this.state.createdUser[UserInput.Username],\r\n                'password':this.state.createdUser[UserInput.Password],\r\n                'displayName':this.state.createdUser[UserInput.DisplayName],\r\n                'email':this.state.createdUser[UserInput.Email],\r\n                'privilege':this.state.createdUser[UserInput.Privilege],\r\n            }\r\n            ).then(response => {\r\n                if (response.data.message === 'success') {\r\n                    this.setState({ showStatus: true, statusMessage: \"Successfully created user\", statusSeverity:\"success\" })\r\n                } else {\r\n                    this.setState({ showStatus: true, statusMessage: response.data.message, statusSeverity:\"error\" })\r\n                }\r\n            });\r\n\r\n        this.setState({\r\n            createdUser : {\r\n                'username':'',\r\n                'password':'',\r\n                'displayName':'',\r\n                'email':'',\r\n                'privilege':'',\r\n            },\r\n            showCreateModal:false,\r\n        });\r\n    }\r\n\r\n    editUser() {\r\n        axios.post(\r\n            getURL(usersMainPath, UserCommand.edit),\r\n            {\r\n                'username':this.state.detailedValues[UserInput.Username],\r\n                'displayName':this.state.detailedValues[UserInput.DisplayName],\r\n                'email':this.state.detailedValues[UserInput.Email],\r\n                'privilege':this.state.detailedValues[UserInput.Privilege],\r\n            }\r\n            ).then(response => console.log(response));\r\n\r\n        this.setState({\r\n            detailedValues : {\r\n                'username':'',\r\n                'displayName':'',\r\n                'email':'',\r\n                'privilege':'',\r\n            },\r\n            showDetailedView:false,\r\n        });\r\n    }\r\n\r\n\r\n    deleteUser() {\r\n        axios.post(\r\n            getURL(usersMainPath, UserCommand.delete),\r\n            {\r\n                'username':this.state.deleteUsername,\r\n            }\r\n            ).then(response => console.log(response));\r\n\r\n        this.setState({\r\n            deleteUsername:'',\r\n            showDetailedView:false\r\n        });\r\n    }\r\n\r\n    detailViewUser(username) {\r\n        axios.post(\r\n            getURL(usersMainPath, UserCommand.detailView),\r\n            {\r\n                'username':username,\r\n            }\r\n            ).then(response => this.setState({ detailedValues: response.data['users'][0], detailViewLoading:false}));\r\n\r\n        this.setState({\r\n            viewUser:'',\r\n        });\r\n    }\r\n\r\n    searchUsers(username, email, displayName, privilege) {\r\n        axios.post(\r\n            getURL(usersMainPath, UserCommand.search),\r\n            {\r\n                'filters':{\r\n                    'username':username,\r\n                    'email':email,\r\n                    'displayName':displayName,\r\n                    'privilege':privilege,\r\n                }\r\n            }\r\n            ).then(response => this.setState({ items: response.data['users'] }));\r\n    }\r\n\r\n    search(filters) {\r\n        this.searchUsers(filters['username'], filters['email'], filters['displayName'], filters['privilege']);\r\n    }\r\n\r\n    downloadTable() {\r\n        this.csvLink.link.click();\r\n    }\r\n\r\n    openCreateModal() {\r\n        this.setState({showCreateModal: true});\r\n    }\r\n\r\n    openImportModal() {\r\n        this.setState({showImportModal: true});\r\n    }\r\n\r\n    showDetailedView(id) {\r\n        this.setState({\r\n            showDetailedView: true,\r\n            detailViewLoading:true,\r\n         });\r\n\r\n        var username = this.state.items[id]['username'];\r\n        var email = this.state.items[id]['email'];\r\n        var displayName = this.state.items[id]['displayName'];\r\n        var privilege = this.state.items[id]['privilege'];\r\n\r\n        this.detailViewUser(username, email, displayName, privilege);\r\n        //this.setState({ detailedValues: Constants.testUserArray[id], detailViewLoading:false})\r\n    }\r\n\r\n    closeCreateModal() {\r\n        this.setState({showCreateModal: false});\r\n    }\r\n\r\n    closeImportModal() {\r\n        this.setState({showImportModal: false});\r\n    }\r\n\r\n    closeDetailedView() {\r\n        this.setState({ showDetailedView: false })\r\n    }\r\n\r\n    updateUserCreator(event) {\r\n        this.state.createdUser[event.target.name] = event.target.value;\r\n        this.forceUpdate()\r\n    }\r\n\r\n    updateUserEdited(event) {\r\n        this.state.detailedValues[event.target.name] = event.target.value;\r\n        this.forceUpdate()\r\n    }\r\n\r\n    closeShowStatus() {\r\n        this.setState({ showStatus: false })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <StatusDisplay\r\n                    open={this.state.showStatus}\r\n                    severity={this.state.statusSeverity}\r\n                    closeStatus={this.closeShowStatus}\r\n                    message={this.state.statusMessage}\r\n                />\r\n                {(this.props.privilege == Privilege.ADMIN) ?\r\n                    (<div>\r\n                <ButtonMenu\r\n                    openCreateModal={this.openCreateModal}\r\n                    openImportModal={this.openImportModal}\r\n                    downloadTable={this.downloadTable}\r\n                />\r\n                <CSVLink\r\n                    data={this.state.csvData}\r\n                    filename={userDownloadFileName}\r\n                    className=\"hidden\"\r\n                    ref={(r) => this.csvLink = r}\r\n                    target=\"_blank\"\r\n                />\r\n                <CreateModal\r\n                    showCreateModal={this.state.showCreateModal}\r\n                    closeCreateModal={this.closeCreateModal}\r\n                    createModel={this.createUser}\r\n                    updateModelCreator={this.updateUserCreator}\r\n                    inputs={inputs}\r\n                />\r\n                <UploadModal\r\n                    showImportModal={this.state.showImportModal}\r\n                    closeImportModal={this.closeImportModal}\r\n                /></div>):null\r\n            }\r\n                <Filters\r\n                    updateSearchText={this.updateSearchText}\r\n                    search={this.search}\r\n                    filters={columns}\r\n                />\r\n                <TableView\r\n                    columns={columns}\r\n                    vals={this.state.items}\r\n                    keys={columns}\r\n                    showDetailedView={this.showDetailedView}\r\n                    filters={columns}\r\n                />\r\n                <DetailedView\r\n                    showDetailedView={this.state.showDetailedView}\r\n                    closeDetailedView={this.closeDetailedView}\r\n                    inputs={inputs}\r\n                    updateModelEdited={this.updateUserEdited}\r\n                    defaultValues={this.state.detailedValues}\r\n                    loading={this.state.detailViewLoading}\r\n                    edit={this.editUser}\r\n                    delete={this.deleteUser}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","export enum InstanceCommand {\r\n    create = 'create/',\r\n    delete = 'delete/',\r\n    edit = 'edit/',\r\n    view = 'view/',\r\n    detailView = 'detailView/',\r\n    search = 'search/'\r\n}\r\n","export enum InstanceInput {\r\n    Model = 'model',\r\n    Hostname = 'hostname',\r\n    Rack = 'rack',\r\n    RackU = 'rackU',\r\n    Owner = 'owner',\r\n    Comment = 'comment',\r\n}\r\n","import React from 'react';\r\nimport axios from 'axios';\r\nimport { InstanceCommand } from '../enums/instanceCommands.ts'\r\nimport { InstanceInput } from '../enums/instanceInputs.ts'\r\nimport { Privilege } from '../enums/privilegeTypes.ts'\r\nimport TableView from '../helpers/TableView';\r\nimport { CSVLink } from \"react-csv\";\r\nimport ButtonMenu from '../helpers/ButtonMenu';\r\nimport Filters from '../helpers/Filters';\r\nimport UploadModal from '../helpers/UploadModal';\r\nimport getURL from '../helpers/functions/GetURL';\r\nimport DetailedView from '../helpers/DetailedView';\r\nimport CreateModal from '../helpers/CreateModal';\r\nimport * as Constants from '../Constants';\r\nimport StatusDisplay from '../helpers/StatusDisplay';\r\n\r\nconst inputs = [\r\n    'model',\r\n    'hostname',\r\n    'rack',\r\n    'rackU',\r\n    'owner',\r\n    'comment',\r\n]\r\n\r\nconst columns = [\r\n    'model',\r\n    'hostname',\r\n    'rack',\r\n    'rackU',\r\n]\r\n\r\nconst instancesMainPath = 'instances/';\r\nconst instanceDownloadFileName = 'instances.csv';\r\n\r\n\r\n\r\nexport default class InstancesView extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n\r\n            // modals\r\n            showCreateModal:false,\r\n            showImportModal:false,\r\n\r\n            // table items\r\n            items:[], //Constants.testInstanceArray,\r\n\r\n            // vals for creating a new instance\r\n            createdInstance : {\r\n                'model':'',\r\n                'hostname':'',\r\n                'rack':'',\r\n                'rackU':'',\r\n                'owner':'',\r\n                'comment':'',\r\n            },\r\n\r\n            showStatus:false,\r\n            statusMessage:'',\r\n            statusSeverity:'',\r\n\r\n            // vals for deleting an instance\r\n            deleteInstanceRack:'',\r\n            deleteInstanceRackU:'',\r\n\r\n            // vals for viewing an instance\r\n            viewInstanceRack:'',\r\n            viewInstanceRackU:'',\r\n\r\n            // csv data\r\n            csvData:[],\r\n\r\n            // detailed view\r\n            showDetailedView: false,\r\n            detailViewLoading:false,\r\n            detailedValues : {\r\n                'model':'',\r\n                'hostname':'',\r\n                'rack':'',\r\n                'rackU':'',\r\n                'owner':'',\r\n                'comment':'',\r\n            },\r\n        };\r\n\r\n        this.createInstance = this.createInstance.bind(this);\r\n        this.editInstance = this.editInstance.bind(this);\r\n        this.deleteInstance = this.deleteInstance.bind(this);\r\n        this.detailViewInstance = this.detailViewInstance.bind(this);\r\n        this.searchInstances = this.searchInstances.bind(this);\r\n        this.search = this.search.bind(this);\r\n        this.openCreateModal = this.openCreateModal.bind(this);\r\n        this.openImportModal = this.openImportModal.bind(this);\r\n        this.showDetailedView = this.showDetailedView.bind(this);\r\n        this.closeCreateModal = this.closeCreateModal.bind(this);\r\n        this.closeImportModal = this.closeImportModal.bind(this);\r\n        this.closeDetailedView = this.closeDetailedView.bind(this);\r\n        this.updateInstanceCreator = this.updateInstanceCreator.bind(this);\r\n        this.updateInstanceEdited = this.updateInstanceEdited.bind(this);\r\n        this.closeShowStatus = this.closeShowStatus.bind(this);\r\n\r\n        axios.defaults.headers.common['token'] = this.props.token;\r\n        axios.defaults.headers.common['privilege'] = this.props.privilege;\r\n\r\n    }\r\n\r\n    createInstance() {\r\n        axios.post(\r\n            getURL(instancesMainPath, InstanceCommand.create),\r\n            {\r\n                'model':this.state.createdInstance[InstanceInput.Model],\r\n                'hostname':this.state.createdInstance[InstanceInput.Hostname],\r\n                'rack':this.state.createdInstance[InstanceInput.Rack],\r\n                'rackU':this.state.createdInstance[InstanceInput.RackU],\r\n                'owner':this.state.createdInstance[InstanceInput.Owner],\r\n                'comment':this.state.createdInstance[InstanceInput.Comment],\r\n            }\r\n            ).then(response => {\r\n                if (response.data.message === 'success') {\r\n                    this.setState({ showStatus: true, statusMessage: \"Successfully created instance\", statusSeverity:\"success\" })\r\n                } else {\r\n                    this.setState({ showStatus: true, statusMessage: response.data.message, statusSeverity:\"error\" })\r\n                }\r\n            });\r\n\r\n        this.setState({\r\n            createdInstance : {\r\n                'model':'',\r\n                'hostname':'',\r\n                'rack':'',\r\n                'rackU':'',\r\n                'owner':'',\r\n                'comment':'',\r\n            },\r\n            showCreateModal:false,\r\n        });\r\n    }\r\n\r\n    editInstance() {\r\n        axios.post(\r\n            getURL(instancesMainPath, InstanceCommand.edit),\r\n            {\r\n                'model':this.state.detailedValues[InstanceInput.Model],\r\n                'hostname':this.state.detailedValues[InstanceInput.Hostname],\r\n                'rack':this.state.detailedValues[InstanceInput.Rack],\r\n                'rackU':this.state.detailedValues[InstanceInput.RackU],\r\n                'owner':this.state.detailedValues[InstanceInput.Owner],\r\n                'comment':this.state.detailedValues[InstanceInput.Comment],\r\n            }\r\n            ).then(response => console.log(response));\r\n\r\n        this.setState({\r\n            detailedValues : {\r\n                'model':'',\r\n                'hostname':'',\r\n                'rack':'',\r\n                'rackU':'',\r\n                'owner':'',\r\n                'comment':'',\r\n            },\r\n            showDetailedView:false,\r\n        });\r\n    }\r\n\r\n\r\n    deleteInstance() {\r\n        axios.post(\r\n            getURL(instancesMainPath, InstanceCommand.delete),\r\n            {\r\n                'rack':this.state.deleteInstanceRack,\r\n                'rackU':this.state.deleteInstanceRackU,\r\n            }\r\n            ).then(response => console.log(response));\r\n\r\n        this.setState({\r\n            deleteInstanceRack:'',\r\n            deleteInstanceRackU:'',\r\n            showDetailedView:false\r\n        });\r\n    }\r\n\r\n    detailViewInstance(rack, rackU) {\r\n        axios.post(\r\n            getURL(instancesMainPath, InstanceCommand.detailView),\r\n            {\r\n                'rack':rack,\r\n                'rackU':rackU,\r\n            }\r\n            ).then(response => this.setState({ detailedValues: response.data['instances'][0], detailViewLoading:false}));\r\n\r\n        this.setState({\r\n            viewInstanceRack:'',\r\n        });\r\n    }\r\n\r\n    searchInstances(model, hostname, rack, rackU) {\r\n        axios.post(\r\n            getURL(instancesMainPath, InstanceCommand.search),\r\n            {\r\n                'filters':{\r\n                    'model':model,\r\n                    'hostname':hostname,\r\n                    'rack':rack,\r\n                    'rackU':rackU,\r\n                }\r\n            }\r\n            ).then(response => this.setState({ items: response.data['instances'] }));\r\n    }\r\n\r\n    search(filters) {\r\n        this.searchInstances(filters['model'], filters['hostname'], filters['rack'], filters['rackU']);\r\n    }\r\n\r\n    downloadTable() {\r\n        this.csvLink.link.click();\r\n    }\r\n\r\n    openCreateModal() {\r\n        this.setState({showCreateModal: true});\r\n    }\r\n\r\n    openImportModal() {\r\n        this.setState({showImportModal: true});\r\n    }\r\n\r\n    showDetailedView(id) {\r\n        this.setState({\r\n            showDetailedView: true,\r\n            detailViewLoading:true,\r\n        });\r\n\r\n        var model = this.state.items[id]['model'];\r\n        var hostname = this.state.items[id]['hostname'];\r\n        var rack = this.state.items[id]['rack'];\r\n        var rackU = this.state.items[id]['rackU'];\r\n\r\n        this.detailViewInstance(model, hostname, rack, rackU);\r\n        //this.setState({ detailedValues: Constants.testInstanceArray[id], detailViewLoading:false})\r\n    }\r\n\r\n    closeCreateModal() {\r\n        this.setState({showCreateModal: false});\r\n    }\r\n\r\n    closeImportModal() {\r\n        this.setState({showImportModal: false});\r\n    }\r\n\r\n    closeDetailedView() {\r\n        this.setState({ showDetailedView: false })\r\n    }\r\n\r\n    updateInstanceCreator(event) {\r\n        this.state.createdInstance[event.target.name] = event.target.value;\r\n        this.forceUpdate()\r\n    }\r\n\r\n    updateInstanceEdited(event) {\r\n        this.state.detailedValues[event.target.name] = event.target.value;\r\n        this.forceUpdate()\r\n    }\r\n    closeShowStatus() {\r\n        this.setState({ showStatus: false })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <StatusDisplay\r\n                    open={this.state.showStatus}\r\n                    severity={this.state.statusSeverity}\r\n                    closeStatus={this.closeShowStatus}\r\n                    message={this.state.statusMessage}\r\n                />\r\n                {(this.props.privilege == Privilege.ADMIN) ?\r\n                    (<div>\r\n                <ButtonMenu\r\n                    openCreateModal={this.openCreateModal}\r\n                    openImportModal={this.openImportModal}\r\n                    downloadTable={this.downloadTable}\r\n                />\r\n                <CSVLink\r\n                    data={this.state.csvData}\r\n                    filename={instanceDownloadFileName}\r\n                    className=\"hidden\"\r\n                    ref={(r) => this.csvLink = r}\r\n                    target=\"_blank\"\r\n                />\r\n                <CreateModal\r\n                    showCreateModal={this.state.showCreateModal}\r\n                    closeCreateModal={this.closeCreateModal}\r\n                    createModel={this.createInstance}\r\n                    updateModelCreator={this.updateInstanceCreator}\r\n                    inputs={inputs}\r\n                />\r\n                <UploadModal\r\n                    showImportModal={this.state.showImportModal}\r\n                    closeImportModal={this.closeImportModal}\r\n                /></div>):null\r\n            }\r\n                <Filters\r\n                    updateSearchText={this.updateSearchText}\r\n                    search={this.search}\r\n                    filters={columns}\r\n                />\r\n                <TableView\r\n                    columns={columns}\r\n                    vals={this.state.items}\r\n                    keys={columns}\r\n                    showDetailedView={this.showDetailedView}\r\n                    filters={columns}\r\n                />\r\n                <DetailedView\r\n                    showDetailedView={this.state.showDetailedView}\r\n                    closeDetailedView={this.closeDetailedView}\r\n                    inputs={inputs}\r\n                    updateModelEdited={this.updateInstanceEdited}\r\n                    defaultValues={this.state.detailedValues}\r\n                    loading={this.state.detailViewLoading}\r\n                    edit={this.editInstance}\r\n                    delete={this.deleteInstance}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\nimport TableView from '../helpers/TableView';\r\n\r\nconst columns = [\r\n    \"Vendor\",\r\n    \"Model Number\",\r\n    \"Height (U)\",\r\n    \"Display Color\",\r\n    \"Ethernet Ports\",\r\n    \"Power Ports\",\r\n    \"CPU\",\r\n    \"Memory\",\r\n    \"Storage\",\r\n    \"Comments\",\r\n]\r\n\r\nexport default function RacksView(props) {\r\n    return (<div></div>);\r\n}\r\n","import React from 'react';\r\nimport TableView from '../helpers/TableView';\r\n\r\nexport default function StatisticsView(props) {\r\n    return (<div></div>);\r\n}\r\n","import React from 'react';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Button from '@material-ui/core/Button';\r\nimport ModelsView from './pages/ModelsView';\r\nimport UsersView from './pages/UsersView';\r\nimport InstancesView from './pages/InstancesView';\r\nimport RacksView from './pages/RacksView';\r\nimport StatisticsView from './pages/StatisticsView';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { Privilege } from './enums/privilegeTypes.ts'\r\n\r\nexport default class TabViewer extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            currentTabID:0,\r\n        };\r\n        this.handleChange = this.handleChange.bind(this);\r\n    }\r\n\r\n    handleChange(event, newValue) {\r\n        this.setState({ currentTabID: newValue })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n        <div>\r\n            <AppBar position=\"static\">\r\n                <Tabs value={this.state.currentTabID} onChange={this.handleChange}>\r\n                    <Tab value={0} style={{flexGrow: 1,}} label=\"Models\"> </Tab>\r\n                    <Tab value={1} style={{flexGrow: 1,}} label=\"Instances\" ></Tab>\r\n                    {(this.props.privilege == Privilege.ADMIN) ? <Tab value={2} style={{flexGrow: 1,}} label=\"Users\"></Tab> : null}\r\n                    <Tab value={3} style={{flexGrow: 1,}} label=\"Racks\" />\r\n                    <Tab value={4} style={{flexGrow: 1,}} label=\"Statistics\" />\r\n                    <Button\r\n                        style={{flexGrow: 1,}}\r\n                        variant=\"contained\"\r\n                        color=\"secondary\"\r\n                        onClick={this.props.logout}\r\n                    >\r\n                        Logout\r\n                    </Button>\r\n                </Tabs>\r\n            </AppBar>\r\n            <Typography\r\n                component=\"div\"\r\n                role=\"tabpanel\"\r\n                hidden={this.state.currentTabID !== 0}\r\n                id={`simple-tabpanel-0`}\r\n                aria-labelledby={`simple-tab-0`}\r\n            >\r\n                <ModelsView token={this.props.token} privilege={this.props.privilege} />\r\n            </Typography>\r\n            <Typography\r\n                component=\"div\"\r\n                role=\"tabpanel\"\r\n                hidden={this.state.currentTabID !== 1}\r\n                id={`simple-tabpanel-0`}\r\n                aria-labelledby={`simple-tab-0`}\r\n            >\r\n                <InstancesView token={this.props.token} privilege={this.props.privilege} />\r\n            </Typography>\r\n            <Typography\r\n                component=\"div\"\r\n                role=\"tabpanel\"\r\n                hidden={this.state.currentTabID !== 2}\r\n                id={`simple-tabpanel-0`}\r\n                aria-labelledby={`simple-tab-0`}\r\n            >\r\n                <UsersView token={this.props.token} privilege={this.props.privilege} />\r\n            </Typography>\r\n            <Typography\r\n                component=\"div\"\r\n                role=\"tabpanel\"\r\n                hidden={this.state.currentTabID !== 3}\r\n                id={`simple-tabpanel-0`}\r\n                aria-labelledby={`simple-tab-0`}\r\n            >\r\n                <RacksView token={this.props.token} privilege={this.props.privilege} />\r\n            </Typography>\r\n            <Typography\r\n                component=\"div\"\r\n                role=\"tabpanel\"\r\n                hidden={this.state.currentTabID !== 4}\r\n                id={`simple-tabpanel-0`}\r\n                aria-labelledby={`simple-tab-0`}\r\n            >\r\n                <StatisticsView token={this.props.token} privilege={this.props.privilege} />\r\n            </Typography>\r\n        </div>);\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport Login from \"./Login\";\r\nimport TabViewer from \"./Tabs\";\r\nimport axios from 'axios';\r\nimport getURL from './helpers/functions/GetURL';\r\n\r\nexport default class PageSelector extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      token:'',\r\n      privilege:'',\r\n      loggedIn:false,\r\n    };\r\n\r\n    this.login = this.login.bind(this);\r\n    this.logout = this.logout.bind(this);\r\n  }\r\n\r\n  login(token, privilege) {\r\n    this.setState({\r\n      token:token,\r\n      privilege:privilege,\r\n      loggedIn:true,\r\n    })\r\n  }\r\n\r\n  logout() {\r\n    axios.get(getURL('users/', 'logout'));\r\n\r\n    this.setState({\r\n      token:'',\r\n      privilege:'',\r\n      loggedIn:false,\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        {this.state.loggedIn ?  <TabViewer token={this.state.token} privilege={this.state.privilege} logout={this.logout} /> : <Login loginFunc={this.login} />}\r\n      </div>\r\n    );\r\n  }\r\n\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './stylesheets/index.css';\nimport PageSelector from './javascript/PageSelector';\n\nReactDOM.render(<PageSelector />, document.getElementById('root'));\n"],"sourceRoot":""}
