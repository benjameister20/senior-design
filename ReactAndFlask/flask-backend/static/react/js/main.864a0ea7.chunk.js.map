{"version":3,"sources":["javascript/Login.jsx","javascript/enums/modelCommands.ts","javascript/enums/modelInputs.ts","javascript/Constants.jsx","javascript/helpers/TableView.jsx","javascript/pages/ModelsView.jsx","javascript/enums/userInputs.ts","javascript/enums/userCommands.ts","javascript/pages/UsersView.jsx","javascript/enums/instanceInputs.ts","javascript/enums/instanceCommands.ts","javascript/pages/InstancesView.jsx","javascript/pages/RacksView.jsx","javascript/pages/StatisticsView.jsx","javascript/TabManager.jsx","index.jsx","javascript/PageSelector.jsx"],"names":["useStyles","makeStyles","theme","paper","marginTop","spacing","display","flexDirection","alignItems","avatar","margin","backgroundColor","palette","secondary","main","form","submit","Login","props","classes","className","TextField","id","label","variant","required","ref","FormControl","FormGroup","FormControlLabel","value","control","Checkbox","color","labelPlacement","Button","onClick","username","refs","getValue","password","axios","post","then","response","console","log","ModelCommand","ModelInput","serverEndpoint","TableView","state","test","event","this","setState","target","TableContainer","component","Paper","Table","minWidth","aria-label","TableHead","TableRow","columns","map","col","TableCell","sortByCol","bind","TableBody","vals","row","val","scope","React","Component","modelsMainPath","getURL","endpoint","Constants","jsonToArr","json","models","data","items","entries","push","Vendor","ModelNumber","Height","DisplayColor","EthernetPorts","PowerPorts","CPU","Memory","Storage","Comment","UserInput","UserCommand","ModelsView","showCreateModal","showImportModal","modelToken","createdModel","deleteVendor","deleteModel","viewVendor","viewModel","csvData","searchText","create","delete","detailView","view","search","csvLink","link","click","name","forceUpdate","openCreateModal","startIcon","openImportModal","downloadTable","filename","r","Modal","style","top","left","transform","aria-labelledby","aria-describedby","open","onClose","onChange","updateModelCreator","createModel","type","accept","InputBase","placeholder","inputProps","updateSearchText","searchModels","usersMainPath","users","Username","Email","DisplayName","InstanceInput","InstanceCommand","UsersView","instanceToken","createdUser","deleteUsername","viewUsername","updateUserCreator","UserNumber","createUser","searchUsers","instancesMainPath","instances","Model","Hostname","Rack","RackU","Owner","InstancesView","createdInstance","deleteInstanceRack","deleteInstanceRackU","viewRack","viewRackU","updateInstanceCreator","createInstance","searchInstances","RacksView","StatisticsView","TabPanel","children","index","other","Typography","role","hidden","Box","p","a11yProps","root","flexGrow","background","tab","button","TabManager","useState","setValue","AppBar","position","Tabs","newValue","Tab","Logout","ReactDOM","render","path","document","getElementById"],"mappings":"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","file":"js/main.864a0ea7.chunk.js","sourcesContent":["import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Link from '@material-ui/core/Link';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\n\r\nimport axios from 'axios';\r\n\r\n\r\nfunction submitCredentials(username, password) {\r\n    axios.post('http://localhost:4010/users/authenticate', { \"username\":username, \"password\":password} ).then(response => console.log(response))\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    paper: {\r\n        marginTop: theme.spacing(8),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n        marginTop: theme.spacing(1),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n}));\r\n\r\nexport default function Login(props) {\r\n    const classes = useStyles();\r\n    return (\r\n        <div className={classes.paper}>\r\n            <TextField\r\n                id=\"outlined-basic\"\r\n                label=\"Username\"\r\n                variant=\"outlined\"\r\n                required=\"true\"\r\n                ref='username'\r\n            />\r\n            <TextField\r\n                id=\"outlined-basic\"\r\n                label=\"Password\"\r\n                variant=\"outlined\"\r\n                required=\"true\"\r\n                ref='password'\r\n            />\r\n            <FormControl className={classes.form}>\r\n                <FormGroup>\r\n                    <FormControlLabel\r\n                        value=\"end\"\r\n                        control={<Checkbox color=\"primary\" />}\r\n                        label=\"End\"\r\n                        labelPlacement=\"end\"\r\n                    />\r\n                </FormGroup>\r\n            </FormControl>\r\n            <Button\r\n                onClick={() => (submitCredentials(this.refs.username.getValue(), this.refs.password.getValue()))}\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className={classes.submit}\r\n            >\r\n                Sign In\r\n            </Button>\r\n        </div>\r\n    );\r\n}\r\n","export enum ModelCommand {\r\n    create = 'create/',\r\n    delete = 'delete/',\r\n    edit = 'edit/',\r\n    view = 'view/',\r\n    detailView = 'detailView/',\r\n    search = 'search/',\r\n}\r\n","export enum ModelInput {\r\n    Vendor = 'vendor',\r\n    ModelNumber = 'modelNumber',\r\n    Height = 'height',\r\n    DisplayColor = 'displayColor',\r\n    EthernetPorts = 'ethernetPorts',\r\n    PowerPorts = 'powerPorts',\r\n    CPU = 'cpu',\r\n    Memory = 'memory',\r\n    Storage = 'storage',\r\n    Comment = 'comments'\r\n}\r\n","/**\r\n * Constants file\r\n */\r\n\r\nexport const localServerEndpoint = 'http://localhost:4010/';\r\nexport const devServerEndpoint = 'https://parseltongue-dev.herokuapp.com/';\r\nexport const prodServerEndpoint = 'https://parseltongue-prod.herokuapp.com/';\r\n\r\nexport const serverEndpoint = localServerEndpoint;\r\n","import React from 'react';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nexport default class TableView extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      test:\"\",\r\n    };\r\n  }\r\n\r\n  sortByCol(event) {\r\n    this.setState({test:event.target.id})\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <TableContainer component={Paper}>\r\n          <Table className={{minWidth: 650}} aria-label=\"simple table\">\r\n            <TableHead>\r\n              <TableRow >\r\n                {this.props.columns.map(col => (<TableCell><span id={col} onClick={this.sortByCol.bind(this)}>{col}</span></TableCell>))}\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {this.props.vals.map(row => (\r\n              <TableRow>\r\n                {row.map(val => (<TableCell scope=\"row\">{val}</TableCell>))}\r\n              </TableRow>\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport axios from 'axios';\r\nimport { ModelCommand } from '../enums/modelCommands.ts'\r\nimport { ModelInput } from '../enums/modelInputs.ts'\r\nimport * as Constants from '../Constants';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\r\nimport CloudDownloadIcon from '@material-ui/icons/CloudDownload';\r\nimport TableView from '../helpers/TableView';\r\nimport { CSVLink } from \"react-csv\";\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport InputBase from '@material-ui/core/InputBase';\r\n\r\nconst columns = [\r\n    \"Vendor\",\r\n    \"Model Number\",\r\n    \"Height (U)\",\r\n    \"Display Color\",\r\n    \"Ethernet Ports\",\r\n    \"Power Ports\",\r\n    \"CPU\",\r\n    \"Memory\",\r\n    \"Storage\",\r\n    \"Comments\",\r\n]\r\n\r\nconst modelsMainPath = 'models/';\r\nconst modelDownloadFileName = 'models.csv';\r\n\r\nfunction getURL(endpoint) {\r\n    return Constants.serverEndpoint + modelsMainPath + endpoint;\r\n}\r\n\r\nfunction jsonToArr(json) {\r\n    var models = json.data['models'];\r\n    const items = [];\r\n\r\n    for (const [index, val] of models.entries()) {\r\n        const row = [];\r\n        row.push(val[ModelInput.Vendor]);\r\n        row.push(val[ModelInput.ModelNumber]);\r\n        row.push(val[ModelInput.Height]);\r\n        row.push(val[ModelInput.DisplayColor]);\r\n        row.push(val[ModelInput.EthernetPorts]);\r\n        row.push(val[ModelInput.PowerPorts]);\r\n        row.push(val[ModelInput.CPU]);\r\n        row.push(val[ModelInput.Memory]);\r\n        row.push(val[ModelInput.Storage]);\r\n        row.push(val[ModelInput.Comment]);\r\n        items.push(row);\r\n    }\r\n    return items;\r\n}\r\n\r\nexport default class ModelsView extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            showCreateModal:false,\r\n            showImportModal:false,\r\n            items:[],\r\n            modelToken:\"\",\r\n            createdModel: {\r\n                'vendor':'',\r\n                'modelNumber':'',\r\n                'height':'',\r\n                'displayColor':'',\r\n                'ethernetPorts':'',\r\n                'powerPorts':'',\r\n                'cpu':'',\r\n                'memory':'',\r\n                'storage':'',\r\n                'comments':'',\r\n            },\r\n            deleteVendor:'',\r\n            deleteModel:'',\r\n            viewVendor:'',\r\n            viewModel:'',\r\n            csvData:[],\r\n            searchText:\"\",\r\n        };\r\n    }\r\n\r\n    createModel() {\r\n        axios.post(\r\n            getURL(ModelCommand.create),\r\n            {\r\n                'vendor':this.state.createdModel[ModelInput.Vendor],\r\n                'modelNumber':this.state.createdModel[ModelInput.ModelNumber],\r\n                'height':this.state.createdModel[ModelInput.Height],\r\n                'displayColor':this.state.createdModel[ModelInput.DisplayColor],\r\n                'ethernetPorts':this.state.createdModel[ModelInput.EthernetPorts],\r\n                'powerPorts':this.state.createdModel[ModelInput.PowerPorts],\r\n                'cpu':this.state.createdModel[ModelInput.CPU],\r\n                'memory':this.state.createdModel[ModelInput.Memory],\r\n                'storage':this.state.createdModel[ModelInput.Storage],\r\n                'comments':this.state.createdModel[ModelInput.Comment],\r\n            }\r\n            ).then(response => this.setState({ items: jsonToArr(response)}));\r\n    }\r\n\r\n    deleteModel() {\r\n        axios.post(\r\n            getURL(ModelCommand.delete),\r\n            {\r\n                'vendor':this.state.deleteVendor,\r\n                'modelNumber':this.state.deleteModel,\r\n            }\r\n            ).then(response => this.setState({ items: jsonToArr(response)}));\r\n    }\r\n\r\n    detailViewModel() {\r\n        axios.post(\r\n            getURL(ModelCommand.detailView),\r\n            {\r\n                'vendor':this.state.viewVendor,\r\n                'modelNumber':this.state.viewModel,\r\n            }\r\n            ).then(response => this.setState({ items: jsonToArr(response)}));\r\n    }\r\n\r\n    viewModel() {\r\n        axios.post(\r\n            getURL(ModelCommand.view),\r\n            {\r\n                'vendor':this.state.viewVendor,\r\n                'modelNumber':this.state.viewModel,\r\n            }\r\n            ).then(response => this.setState({ items: jsonToArr(response)}));\r\n    }\r\n\r\n    searchModels() {\r\n        axios.post(\r\n            getURL(ModelCommand.search),\r\n            {\r\n                'filter':this.state.searchText,\r\n            }\r\n            ).then(response => this.setState({ items: jsonToArr(response)}));\r\n    }\r\n\r\n    downloadTable() {\r\n        this.csvLink.link.click();\r\n    }\r\n\r\n    openCreateModal() {\r\n        this.setState({showCreateModal: true});\r\n    }\r\n\r\n    openImportModal() {\r\n        this.setState({showImportModal: true});\r\n    }\r\n\r\n    updateModelCreator(event) {\r\n        this.state.createdModel[event.target.name] = event.target.value;\r\n        this.forceUpdate()\r\n    }\r\n\r\n    updateSearchText(event) {\r\n        this.setState({ searchText: event.target.value})\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    onClick={this.openCreateModal.bind(this)}\r\n                >\r\n                    Create\r\n                </Button>\r\n                <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    startIcon={<CloudUploadIcon />}\r\n                    onClick={this.openImportModal.bind(this)}\r\n                >\r\n                    Import\r\n                </Button>\r\n                <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    startIcon={<CloudDownloadIcon />}\r\n                    onClick={this.downloadTable.bind(this)}\r\n                >\r\n                    Export\r\n                </Button>\r\n                <CSVLink\r\n                    data={this.state.csvData}\r\n                    filename={modelDownloadFileName}\r\n                    className=\"hidden\"\r\n                    ref={(r) => this.csvLink = r}\r\n                    target=\"_blank\"/>\r\n                <Modal\r\n                    style={{top: `50%`,left: `50%`,transform: `translate(-50%, -50%)`,}}\r\n                    aria-labelledby=\"simple-modal-title\"\r\n                    aria-describedby=\"simple-modal-description\"\r\n                    open={this.state.showCreateModal}\r\n                    onClose={() => (this.setState({showCreateModal:false}))}\r\n                >\r\n                    <div>\r\n\r\n                        <TextField id=\"standard-basic\" name={ModelInput.Vendor} label={columns[0]} onChange={this.updateModelCreator.bind(this)}/>\r\n                        <TextField id=\"standard-basic\" name={ModelInput.ModelNumber} label={columns[1]} onChange={this.updateModelCreator.bind(this)}/>\r\n                        <TextField id=\"standard-basic\" name={ModelInput.Height} label={columns[2]} onChange={this.updateModelCreator.bind(this)}/>\r\n                        <TextField id=\"standard-basic\" name={ModelInput.DisplayColor} label={columns[3]} onChange={this.updateModelCreator.bind(this)}/>\r\n                        <TextField id=\"standard-basic\" name={ModelInput.EthernetPorts} label={columns[4]} onChange={this.updateModelCreator.bind(this)}/>\r\n                        <TextField id=\"standard-basic\" name={ModelInput.PowerPorts} label={columns[5]} onChange={this.updateModelCreator.bind(this)}/>\r\n                        <TextField id=\"standard-basic\" name={ModelInput.CPU} label={columns[6]} onChange={this.updateModelCreator.bind(this)}/>\r\n                        <TextField id=\"standard-basic\" name={ModelInput.Memory} label={columns[7]} onChange={this.updateModelCreator.bind(this)}/>\r\n                        <TextField id=\"standard-basic\" name={ModelInput.Storage} label={columns[8]} onChange={this.updateModelCreator.bind(this)}/>\r\n                        <TextField id=\"standard-basic\" name={ModelInput.Comment} label={columns[9]} onChange={this.updateModelCreator.bind(this)}/>\r\n\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            onClick={this.createModel.bind(this)}\r\n                        >\r\n                            Create\r\n                        </Button>\r\n                    </div>\r\n                </Modal>\r\n                <Modal\r\n                    style={{top: `50%`,left: `50%`,transform: `translate(-50%, -50%)`,}}\r\n                    aria-labelledby=\"simple-modal-title\"\r\n                    aria-describedby=\"simple-modal-description\"\r\n                    open={this.state.showImportModal}\r\n                    onClose={() => (this.setState({showImportModal:false}))}\r\n                >\r\n                    <div>\r\n                        <input type='file' accept=\".csv\" />\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                        >\r\n                            Upload\r\n                        </Button>\r\n                    </div>\r\n                </Modal>\r\n                <div>\r\n                <div>\r\n                    <SearchIcon />\r\n                </div>\r\n                    <InputBase\r\n                        placeholder=\"Search (blank does a search all)\"\r\n                        inputProps={{ 'aria-label': 'search' }}\r\n                        onChange={this.updateSearchText.bind(this)}\r\n                    />\r\n                    <Button\r\n                        onClick={this.searchModels.bind(this)}\r\n                    >\r\n                        Search\r\n                    </Button>\r\n                </div>\r\n                <TableView\r\n                    columns={columns}\r\n                    vals={this.state.items}\r\n                />\r\n            </div>\r\n    );\r\n    }\r\n}\r\n","export enum UserInput {\r\n    Username='username',\r\n    Password='password',\r\n    Email='email',\r\n    DisplayName='displayName',\r\n}\r\n","export enum UserCommand {\r\n    create = 'create/',\r\n    delete = 'delete/',\r\n    edit = 'edit/',\r\n    view = 'view/',\r\n    detailView = 'detailView/',\r\n    search='search/',\r\n}\r\n","import React from 'react';\r\nimport axios from 'axios';\r\nimport { UserInput } from '../enums/userInputs.ts'\r\nimport { UserCommand } from '../enums/userCommands.ts'\r\nimport * as Constants from '../Constants';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport TableView from '../helpers/TableView';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport InputBase from '@material-ui/core/InputBase';\r\n\r\nconst columns = [\r\n    \"Username\",\r\n    \"Display Name\",\r\n    \"Email\",\r\n]\r\n\r\nconst usersMainPath = 'users/';\r\n\r\nfunction getURL(endpoint) {\r\n    return Constants.serverEndpoint + usersMainPath + endpoint;\r\n}\r\n\r\nfunction jsonToArr(json) {\r\n    var users = json.data['users'];\r\n    const items = [];\r\n\r\n    for (const [index, val] of users.entries()) {\r\n        const row = [];\r\n        row.push(val[UserInput.Username]);\r\n        row.push(val[UserInput.Email]);\r\n        row.push(val[UserInput.DisplayName]);\r\n        items.push(row);\r\n    }\r\n    return items;\r\n}\r\n\r\nexport default class UsersView extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            showCreateModal:false,\r\n            showImportModal:false,\r\n            items:[],\r\n            instanceToken:\"\",\r\n            createdUser: {\r\n                'username':'',\r\n                'email':'',\r\n                'displayName':'',\r\n            },\r\n            deleteUsername:'',\r\n            viewUsername:'',\r\n            searchText:\"\",\r\n        };\r\n    }\r\n\r\n    createUser() {\r\n        axios.post(\r\n            this.getURL(UserCommand.create),\r\n            {\r\n                'username':this.state.createdUser[UserInput.Username],\r\n                'email':this.state.createdUser[UserInput.Email],\r\n                'displayName':this.state.createdUser[UserInput.DisplayName],\r\n            }\r\n            ).then(response => (this.setState({ items:response })));\r\n    }\r\n\r\n    deleteUser() {\r\n        axios.post(\r\n            this.getURL(UserCommand.delete),\r\n            {\r\n                'username':this.state.deleteUsername,\r\n            }\r\n            ).then(response => console.log(response));\r\n    }\r\n\r\n    detailViewUser() {\r\n        axios.post(\r\n            this.getURL(UserCommand.detailView),\r\n            {\r\n                'username':this.state.viewUsername,\r\n            }\r\n            ).then(response => console.log(response));\r\n    }\r\n\r\n    viewUser() {\r\n        axios.post(\r\n            this.getURL(UserCommand.view),\r\n            {\r\n                'username':this.state.viewUsername,\r\n            }\r\n            ).then(response => console.log(response));\r\n    }\r\n\r\n    searchUsers() {\r\n        axios.post(\r\n            getURL(UserCommand.search),\r\n            {\r\n                'filter':this.state.searchText,\r\n            }\r\n            ).then(response => this.setState({ items: jsonToArr(response)}));\r\n    }\r\n\r\n\r\n    openCreateModal() {\r\n        this.setState({showCreateModal: true});\r\n    }\r\n\r\n    updateUserCreator(event) {\r\n        this.state.createdUser[event.target.name] = event.target.value;\r\n        this.forceUpdate()\r\n    }\r\n\r\n    updateSearchText(event) {\r\n        this.setState({ searchText: event.target.value})\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    onClick={this.openCreateModal.bind(this)}\r\n                >\r\n                    Create\r\n                </Button>\r\n                <Modal\r\n                    aria-labelledby=\"simple-modal-title\"\r\n                    aria-describedby=\"simple-modal-description\"\r\n                    open={this.state.showCreateModal}\r\n                    onClose={() => (this.setState({showCreateModal:false}))}\r\n                >\r\n                    <div>\r\n                        <TextField id=\"standard-basic\" name={UserInput.Vendor} label={columns[0]} onChange={this.updateUserCreator.bind(this)}/>\r\n                        <TextField id=\"standard-basic\" name={UserInput.UserNumber} label={columns[1]} onChange={this.updateUserCreator.bind(this)}/>\r\n                        <TextField id=\"standard-basic\" name={UserInput.Height} label={columns[2]} onChange={this.updateUserCreator.bind(this)}/>\r\n\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            onClick={this.createUser.bind(this)}\r\n                        >\r\n                            Create\r\n                        </Button>\r\n                    </div>\r\n                </Modal>\r\n                <div>\r\n                <div>\r\n                    <SearchIcon />\r\n                </div>\r\n                    <InputBase\r\n                        placeholder=\"Search (blank does a search all)\"\r\n                        inputProps={{ 'aria-label': 'search' }}\r\n                        onChange={this.updateSearchText.bind(this)}\r\n                    />\r\n                    <Button\r\n                        onClick={this.searchUsers.bind(this)}\r\n                    >\r\n                        Search\r\n                    </Button>\r\n                </div>\r\n                <TableView\r\n                    columns={columns}\r\n                    vals={this.state.items}\r\n                />\r\n            </div>\r\n    );\r\n    }\r\n}\r\n","export enum InstanceInput {\r\n    Model = 'model',\r\n    Hostname = 'hostname',\r\n    Rack = 'rack',\r\n    RackU = 'rackU',\r\n    Owner = 'owner',\r\n    Comment = 'comment',\r\n}\r\n","export enum InstanceCommand {\r\n    create = 'create/',\r\n    delete = 'delete/',\r\n    edit = 'edit/',\r\n    view = 'view/',\r\n    detailView = 'detailView/',\r\n    search = 'search/'\r\n}\r\n","import React from 'react';\r\nimport axios from 'axios';\r\nimport { InstanceInput } from '../enums/instanceInputs.ts'\r\nimport { InstanceCommand } from '../enums/instanceCommands.ts'\r\nimport * as Constants from '../Constants';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\r\nimport CloudDownloadIcon from '@material-ui/icons/CloudDownload';\r\nimport TableView from '../helpers/TableView';\r\nimport { CSVLink } from \"react-csv\";\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport InputBase from '@material-ui/core/InputBase';\r\n\r\nconst columns = [\r\n    \"Model\",\r\n    \"Hostname\",\r\n    \"Rack\",\r\n    \"Rack U\",\r\n    \"Owner\",\r\n    \"Comments\",\r\n]\r\n\r\nconst instancesMainPath = 'instances/';\r\nconst instanceDownloadFileName = 'instances.csv';\r\n\r\nfunction getURL(endpoint) {\r\n    return Constants.serverEndpoint + instancesMainPath + endpoint;\r\n}\r\n\r\nfunction jsonToArr(json) {\r\n    var instances = json.data['instances'];\r\n    const items = [];\r\n\r\n    for (const [index, val] of instances.entries()) {\r\n        const row = [];\r\n        row.push(val[InstanceInput.Model]);\r\n        row.push(val[InstanceInput.Hostname]);\r\n        row.push(val[InstanceInput.Rack]);\r\n        row.push(val[InstanceInput.RackU]);\r\n        row.push(val[InstanceInput.Owner]);\r\n        row.push(val[InstanceInput.Comment]);\r\n        items.push(row);\r\n    }\r\n    return items;\r\n}\r\n\r\nexport default class InstancesView extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            showCreateModal:false,\r\n            showImportModal:false,\r\n            items:[],\r\n            instanceToken:\"\",\r\n            createdInstance: {\r\n                'model':'',\r\n                'hostname':'',\r\n                'rack':'',\r\n                'rackU':'',\r\n                'owner':'',\r\n                'comment':'',\r\n            },\r\n            deleteInstanceRack:'',\r\n            deleteInstanceRackU:'',\r\n            viewRack:'',\r\n            viewRackU:'',\r\n            csvData:[],\r\n            searchText:\"\",\r\n        };\r\n    }\r\n\r\n    createInstance() {\r\n        axios.post(\r\n            getURL(InstanceCommand.create),\r\n            {\r\n                'model':this.state.createdInstance[InstanceInput.Model],\r\n                'hostname':this.state.createdInstance[InstanceInput.Hostname],\r\n                'rack':this.state.createdInstance[InstanceInput.Rack],\r\n                'rackU':this.state.createdInstance[InstanceInput.RackU],\r\n                'owner':this.state.createdInstance[InstanceInput.Owner],\r\n                'comment':this.state.createdInstance[InstanceInput.Comment],\r\n            }\r\n            ).then(response => (this.setState({ items:jsonToArr(response) })));\r\n    }\r\n\r\n    deleteInstance() {\r\n        axios.post(\r\n            getURL(InstanceCommand.delete),\r\n            {\r\n                'rack':this.state.deleteInstanceRack,\r\n                'rackU':this.state.deleteInstanceRackU\r\n            }\r\n            ).then(response => (this.setState({ items:jsonToArr(response) })));\r\n    }\r\n\r\n    detailViewInstance() {\r\n        axios.post(\r\n            getURL(InstanceCommand.detailView),\r\n            {\r\n                'rack':this.state.deleteInstanceRack,\r\n                'rackU':this.state.deleteInstanceRackU\r\n            }\r\n            ).then(response => (this.setState({ items:jsonToArr(response) })));\r\n    }\r\n\r\n    viewInstance() {\r\n        axios.post(\r\n            getURL(InstanceCommand.view),\r\n            {\r\n                'rack':this.state.deleteInstanceRack,\r\n                'rackU':this.state.deleteInstanceRackU\r\n            }\r\n            ).then(response => (this.setState({ items:jsonToArr(response) })));\r\n    }\r\n\r\n    searchInstances() {\r\n        axios.post(\r\n            getURL(InstanceCommand.search),\r\n            {\r\n                'filter':this.state.searchText,\r\n            }\r\n            ).then(response => this.setState({ items: jsonToArr(response)}));\r\n    }\r\n\r\n    downloadTable() {\r\n        this.csvLink.link.click();\r\n    }\r\n\r\n    openCreateModal() {\r\n        this.setState({showCreateModal: true});\r\n    }\r\n\r\n    openImportModal() {\r\n        this.setState({showImportModal: true});\r\n    }\r\n\r\n    updateInstanceCreator(event) {\r\n        this.state.createdInstance[event.target.name] = event.target.value;\r\n        this.forceUpdate()\r\n    }\r\n\r\n    updateSearchText(event) {\r\n        this.setState({ searchText: event.target.value})\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    onClick={this.openCreateModal.bind(this)}\r\n                >\r\n                    Create\r\n                </Button>\r\n                <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    startIcon={<CloudUploadIcon />}\r\n                    onClick={this.openImportModal.bind(this)}\r\n                >\r\n                    Import\r\n                </Button>\r\n                <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    startIcon={<CloudDownloadIcon />}\r\n                    onClick={this.downloadTable.bind(this)}\r\n                >\r\n                    Export\r\n                </Button>\r\n                <CSVLink\r\n                    data={this.state.csvData}\r\n                    filename={instanceDownloadFileName}\r\n                    className=\"hidden\"\r\n                    ref={(r) => this.csvLink = r}\r\n                    target=\"_blank\"/>\r\n                <Modal\r\n                    style={{top: `50%`,left: `50%`,transform: `translate(-50%, -50%)`,}}\r\n                    aria-labelledby=\"simple-modal-title\"\r\n                    aria-describedby=\"simple-modal-description\"\r\n                    open={this.state.showCreateModal}\r\n                    onClose={() => (this.setState({showCreateModal:false}))}\r\n                >\r\n                    <div>\r\n\r\n                        <TextField id=\"standard-basic\" name={InstanceInput.Model} label={columns[0]} onChange={this.updateInstanceCreator.bind(this)}/>\r\n                        <TextField id=\"standard-basic\" name={InstanceInput.Hostname} label={columns[1]} onChange={this.updateInstanceCreator.bind(this)}/>\r\n                        <TextField id=\"standard-basic\" name={InstanceInput.Rack} label={columns[2]} onChange={this.updateInstanceCreator.bind(this)}/>\r\n                        <TextField id=\"standard-basic\" name={InstanceInput.RackU} label={columns[3]} onChange={this.updateInstanceCreator.bind(this)}/>\r\n                        <TextField id=\"standard-basic\" name={InstanceInput.Owner} label={columns[4]} onChange={this.updateInstanceCreator.bind(this)}/>\r\n                        <TextField id=\"standard-basic\" name={InstanceInput.Comment} label={columns[5]} onChange={this.updateInstanceCreator.bind(this)}/>\r\n\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            onClick={this.createInstance.bind(this)}\r\n                        >\r\n                            Create\r\n                        </Button>\r\n                    </div>\r\n                </Modal>\r\n                <Modal\r\n                    style={{top: `50%`,left: `50%`,transform: `translate(-50%, -50%)`,}}\r\n                    aria-labelledby=\"simple-modal-title\"\r\n                    aria-describedby=\"simple-modal-description\"\r\n                    open={this.state.showImportModal}\r\n                    onClose={() => (this.setState({showImportModal:false}))}\r\n                >\r\n                    <div>\r\n                        <input type='file' accept=\".csv\" />\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                        >\r\n                            Upload\r\n                        </Button>\r\n                    </div>\r\n                </Modal>\r\n                <div>\r\n                <div>\r\n                    <SearchIcon />\r\n                </div>\r\n                    <InputBase\r\n                        placeholder=\"Search (blank does a search all)\"\r\n                        inputProps={{ 'aria-label': 'search' }}\r\n                        onChange={this.updateSearchText.bind(this)}\r\n                    />\r\n                    <Button\r\n                        onClick={this.searchInstances.bind(this)}\r\n                    >\r\n                        Search\r\n                    </Button>\r\n                </div>\r\n                <TableView\r\n                    columns={columns}\r\n                    vals={this.state.items}\r\n                />\r\n            </div>\r\n    );\r\n    }\r\n}\r\n","import React from 'react';\r\nimport TableView from '../helpers/TableView';\r\n\r\nconst columns = [\r\n    \"Vendor\",\r\n    \"Model Number\",\r\n    \"Height (U)\",\r\n    \"Display Color\",\r\n    \"Ethernet Ports\",\r\n    \"Power Ports\",\r\n    \"CPU\",\r\n    \"Memory\",\r\n    \"Storage\",\r\n    \"Comments\",\r\n]\r\n\r\nexport default function RacksView(props) {\r\n    return (<div></div>);\r\n}\r\n","import React from 'react';\r\nimport TableView from '../helpers/TableView';\r\n\r\nexport default function StatisticsView(props) {\r\n    return (<div></div>);\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\nimport ModelsView from './pages/ModelsView';\r\nimport UsersView from './pages/UsersView';\r\nimport InstancesView from './pages/InstancesView';\r\nimport RacksView from './pages/RacksView';\r\nimport StatisticsView from './pages/StatisticsView';\r\nimport Button from '@material-ui/core/Button';\r\nimport Logout from './helpers/Logout';\r\n\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <Typography\r\n      component=\"div\"\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`simple-tabpanel-${index}`}\r\n      aria-labelledby={`simple-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && <Box p={3}>{children}</Box>}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n  children: PropTypes.node,\r\n  index: PropTypes.any.isRequired,\r\n  value: PropTypes.any.isRequired,\r\n};\r\n\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `simple-tab-${index}`,\r\n    'aria-controls': `simple-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n  tab: {\r\n    flexGrow: 1,\r\n  },\r\n  button:{\r\n    flexGrow: 1,\r\n  }\r\n}));\r\n\r\nexport default function TabManager() {\r\n  const classes = useStyles();\r\n  const [value, setValue] = React.useState(0);\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\">\r\n        <Tabs value={value} onChange={handleChange}>\r\n          <Tab className={classes.tab} label=\"Models\" {...a11yProps(0)} />\r\n          <Tab className={classes.tab} label=\"Instances\" {...a11yProps(1)} />\r\n          <Tab className={classes.tab} label=\"Racks\" {...a11yProps(2)} />\r\n          <Tab className={classes.tab} label=\"Statistics\" {...a11yProps(2)} />\r\n          <Tab className={classes.tab} label=\"Users\" {...a11yProps(2)}  />\r\n          <Button\r\n           className={classes.button}\r\n           variant=\"contained\"\r\n           color=\"secondary\"\r\n           onClick={Logout()}\r\n           >\r\n              Logout\r\n          </Button>\r\n        </Tabs>\r\n      </AppBar>\r\n      <TabPanel value={value} index={0}>\r\n        <ModelsView />\r\n      </TabPanel>\r\n      <TabPanel value={value} index={1}>\r\n        <InstancesView />\r\n      </TabPanel>\r\n      <TabPanel value={value} index={2}>\r\n        <RacksView />\r\n      </TabPanel>\r\n      <TabPanel value={value} index={3}>\r\n        <StatisticsView />\r\n      </TabPanel>\r\n      <TabPanel value={value} index={4}>\r\n        <UsersView />\r\n      </TabPanel>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './stylesheets/index.css';\nimport PageSelector from './javascript/PageSelector';\n\nReactDOM.render(<PageSelector />, document.getElementById('root'));\n","import React from \"react\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route\r\n} from \"react-router-dom\";\r\nimport Login from \"./Login\";\r\nimport TabManager from \"./TabManager\";\r\n\r\nexport default function PageSelector() {\r\n  return (\r\n    <Router>\r\n        <Switch>\r\n          <Route path=\"/\">\r\n            <TabManager />\r\n          </Route>\r\n          <Route path=\"/homepage\">\r\n            <Login />\r\n          </Route>\r\n        </Switch>\r\n    </Router>\r\n  );\r\n}\r\n"],"sourceRoot":""}
