{"version":3,"sources":["javascript/Login.jsx","javascript/enums/modelCommands.ts","javascript/enums/modelInputs.ts","javascript/Constants.jsx","javascript/helpers/TableView.jsx","javascript/helpers/ButtonMenu.jsx","javascript/helpers/Filters.jsx","javascript/pages/ModelsView.jsx","javascript/enums/userInputs.ts","javascript/enums/userCommands.ts","javascript/pages/UsersView.jsx","javascript/enums/instanceInputs.ts","javascript/enums/instanceCommands.ts","javascript/pages/InstancesView.jsx","javascript/pages/RacksView.jsx","javascript/pages/StatisticsView.jsx","javascript/TabManager.jsx","index.jsx","javascript/PageSelector.jsx"],"names":["useStyles","makeStyles","theme","paper","marginTop","spacing","display","flexDirection","alignItems","avatar","margin","backgroundColor","palette","secondary","main","form","submit","Login","props","classes","className","TextField","id","label","variant","required","ref","FormControl","FormGroup","FormControlLabel","value","control","Checkbox","color","labelPlacement","Button","onClick","username","refs","getValue","password","axios","post","then","response","console","log","ModelCommand","ModelInput","serverEndpoint","TableView","state","test","event","this","setState","target","TableContainer","component","Paper","Table","minWidth","aria-label","TableHead","TableRow","columns","map","col","TableCell","sortByCol","bind","TableBody","vals","row","val","scope","React","Component","ButtonMenu","openCreateModal","startIcon","openImportModal","downloadTable","Filters","searchText","InputBase","placeholder","inputProps","onChange","updateSearchText","searchModels","modelsMainPath","getURL","endpoint","Constants","jsonToArr","json","models","data","items","entries","push","Vendor","ModelNumber","UserInput","UserCommand","ModelsView","showCreateModal","showImportModal","modelToken","createdModel","createdVendor","createdModelNum","createdHeight","createdDispClr","createdEthPorts","createdPwrPorts","createdCPU","createdMem","createdStorage","createdComments","deleteVendor","deleteModel","viewVendor","viewModel","csvData","create","Height","DisplayColor","EthernetPorts","PowerPorts","CPU","Memory","Storage","Comment","delete","detailView","search","csvLink","link","click","name","forceUpdate","filename","r","Modal","style","top","left","transform","aria-labelledby","aria-describedby","open","onClose","updateModelCreator","createModel","type","accept","usersMainPath","users","Username","Email","DisplayName","InstanceInput","InstanceCommand","UsersView","instanceToken","createdUser","deleteUsername","viewUsername","view","updateUserCreator","UserNumber","createUser","searchUsers","instancesMainPath","instances","Model","Hostname","Rack","RackU","Owner","InstancesView","createdInstance","deleteInstanceRack","deleteInstanceRackU","viewRack","viewRackU","updateInstanceCreator","createInstance","searchInstances","RacksView","StatisticsView","TabPanel","children","index","other","Typography","role","hidden","Box","p","a11yProps","root","flexGrow","background","tab","button","TabManager","useState","setValue","AppBar","position","Tabs","newValue","Tab","Logout","ReactDOM","render","path","document","getElementById"],"mappings":"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","file":"js/main.99e28248.chunk.js","sourcesContent":["import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Link from '@material-ui/core/Link';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\n\r\nimport axios from 'axios';\r\n\r\n\r\nfunction submitCredentials(username, password) {\r\n    axios.post('http://localhost:4010/users/authenticate', { \"username\":username, \"password\":password} ).then(response => console.log(response))\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    paper: {\r\n        marginTop: theme.spacing(8),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n        marginTop: theme.spacing(1),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n}));\r\n\r\nexport default function Login(props) {\r\n    const classes = useStyles();\r\n    return (\r\n        <div className={classes.paper}>\r\n            <TextField\r\n                id=\"outlined-basic\"\r\n                label=\"Username\"\r\n                variant=\"outlined\"\r\n                required=\"true\"\r\n                ref='username'\r\n            />\r\n            <TextField\r\n                id=\"outlined-basic\"\r\n                label=\"Password\"\r\n                variant=\"outlined\"\r\n                required=\"true\"\r\n                ref='password'\r\n            />\r\n            <FormControl className={classes.form}>\r\n                <FormGroup>\r\n                    <FormControlLabel\r\n                        value=\"end\"\r\n                        control={<Checkbox color=\"primary\" />}\r\n                        label=\"End\"\r\n                        labelPlacement=\"end\"\r\n                    />\r\n                </FormGroup>\r\n            </FormControl>\r\n            <Button\r\n                onClick={() => (submitCredentials(this.refs.username.getValue(), this.refs.password.getValue()))}\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className={classes.submit}\r\n            >\r\n                Sign In\r\n            </Button>\r\n        </div>\r\n    );\r\n}\r\n","export enum ModelCommand {\r\n    create = 'create/',\r\n    delete = 'delete/',\r\n    edit = 'edit/',\r\n    view = 'view/',\r\n    detailView = 'detailView/',\r\n    search = 'search/',\r\n}\r\n","export enum ModelInput {\r\n    Vendor = 'vendor',\r\n    ModelNumber = 'modelNumber',\r\n    Height = 'height',\r\n    DisplayColor = 'displayColor',\r\n    EthernetPorts = 'ethernetPorts',\r\n    PowerPorts = 'powerPorts',\r\n    CPU = 'cpu',\r\n    Memory = 'memory',\r\n    Storage = 'storage',\r\n    Comment = 'comments'\r\n}\r\n","/**\r\n * Constants file\r\n */\r\n\r\nexport const localServerEndpoint = 'http://localhost:4010/';\r\nexport const devServerEndpoint = 'https://parseltongue-dev.herokuapp.com/';\r\nexport const prodServerEndpoint = 'https://parseltongue-prod.herokuapp.com/';\r\n\r\nexport const serverEndpoint = localServerEndpoint;\r\n","import React from 'react';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nexport default class TableView extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      test:\"\",\r\n    };\r\n  }\r\n\r\n  sortByCol(event) {\r\n    this.setState({test:event.target.id})\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <TableContainer component={Paper}>\r\n          <Table className={{minWidth: 650}} aria-label=\"simple table\">\r\n            <TableHead>\r\n              <TableRow >\r\n                {this.props.columns.map(col => (<TableCell><span id={col} onClick={this.sortByCol.bind(this)}>{col}</span></TableCell>))}\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {this.props.vals.map(row => (\r\n              <TableRow>\r\n                {row.map(val => (<TableCell scope=\"row\">{val}</TableCell>))}\r\n              </TableRow>\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\r\nimport CloudDownloadIcon from '@material-ui/icons/CloudDownload';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nexport default class ButtonMenu extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n\r\n        };\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div>\r\n                <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    onClick={this.props.openCreateModal}\r\n                >\r\n                    Create\r\n                </Button>\r\n                <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    startIcon={<CloudUploadIcon />}\r\n                    onClick={this.props.openImportModal}\r\n                >\r\n                    Import\r\n                </Button>\r\n                <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    startIcon={<CloudDownloadIcon />}\r\n                    onClick={this.props.downloadTable}\r\n                >\r\n                    Export\r\n                </Button>\r\n            </div>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nexport default class Filters extends React.Component {\r\n    /*const classes = useStyles();*/\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            searchText:\"\",\r\n        };\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div>\r\n                    <SearchIcon />\r\n                </div>\r\n                <InputBase\r\n                    placeholder=\"Search (blank does a search all)\"\r\n                    inputProps={{ 'aria-label': 'search' }}\r\n                    onChange={this.props.updateSearchText}\r\n                />\r\n                <Button\r\n                    onClick={this.props.searchModels}\r\n                >\r\n                    Search\r\n                </Button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\nimport axios from 'axios';\r\nimport { ModelCommand } from '../enums/modelCommands.ts'\r\nimport { ModelInput } from '../enums/modelInputs.ts'\r\nimport * as Constants from '../Constants';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport TableView from '../helpers/TableView';\r\nimport { CSVLink } from \"react-csv\";\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport ButtonMenu from '../helpers/ButtonMenu';\r\nimport Filters from '../helpers/Filters';\r\n\r\nconst columns = [\r\n    \"Vendor\",\r\n    \"Model Number\",\r\n]\r\n\r\nconst modelsMainPath = 'models/';\r\nconst modelDownloadFileName = 'models.csv';\r\n\r\nfunction getURL(endpoint) {\r\n    return Constants.serverEndpoint + modelsMainPath + endpoint;\r\n}\r\n\r\nfunction jsonToArr(json) {\r\n    var models = json.data['models'];\r\n    const items = [];\r\n\r\n    for (const [index, val] of models.entries()) {\r\n        const row = [];\r\n        row.push(val[ModelInput.Vendor]);\r\n        row.push(val[ModelInput.ModelNumber]);\r\n        items.push(row);\r\n    }\r\n    return items;\r\n}\r\n\r\nexport default class ModelsView extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n\r\n            // modals\r\n            showCreateModal:false,\r\n            showImportModal:false,\r\n\r\n            // table items\r\n            items:[],\r\n\r\n            modelToken:\"\",\r\n\r\n            // vals for creating a new model\r\n            createdModel : {\r\n                'vendor':'',\r\n                'modelNumber':'',\r\n                'height':'',\r\n                'displayColor':'',\r\n                'ethernetPorts':'',\r\n                'powerPorts':'',\r\n                'cpu':'',\r\n                'memory':'',\r\n                'storage':'',\r\n                'comments':'',\r\n            },\r\n            createdVendor:'',\r\n            createdModelNum:'',\r\n            createdHeight:'',\r\n            createdDispClr:'',\r\n            createdEthPorts:'',\r\n            createdPwrPorts:'',\r\n            createdCPU:'',\r\n            createdMem:'',\r\n            createdStorage:'',\r\n            createdComments:'',\r\n\r\n            // vals for deleting a model\r\n            deleteVendor:'',\r\n            deleteModel:'',\r\n        \r\n            // vals for viewing a model\r\n            viewVendor:'',\r\n            viewModel:'',\r\n\r\n            // searching a model\r\n            searchText:\"\",\r\n\r\n            // csv data\r\n            csvData:[],\r\n        };\r\n\r\n        this.openCreateModal = this.openCreateModal.bind(this);\r\n        this.openImportModal = this.openImportModal.bind(this);\r\n        this.downloadTable = this.downloadTable.bind(this);\r\n        this.updateSearchText = this.updateSearchText.bind(this);\r\n        this.searchModels = this.searchModels.bind(this);\r\n    }\r\n\r\n    createModel() {\r\n        axios.post(\r\n            getURL(ModelCommand.create),\r\n            {\r\n                'vendor':this.state.createdModel[ModelInput.Vendor],\r\n                'modelNumber':this.state.createdModel[ModelInput.ModelNumber],\r\n                'height':this.state.createdModel[ModelInput.Height],\r\n                'displayColor':this.state.createdModel[ModelInput.DisplayColor],\r\n                'ethernetPorts':this.state.createdModel[ModelInput.EthernetPorts],\r\n                'powerPorts':this.state.createdModel[ModelInput.PowerPorts],\r\n                'cpu':this.state.createdModel[ModelInput.CPU],\r\n                'memory':this.state.createdModel[ModelInput.Memory],\r\n                'storage':this.state.createdModel[ModelInput.Storage],\r\n                'comments':this.state.createdModel[ModelInput.Comment],\r\n            }\r\n            ).then(response => this.setState({ items: jsonToArr(response)}));\r\n\r\n        this.setState({\r\n            createdVendor:'',\r\n            createdModelNum:'',\r\n            createdHeight:'',\r\n            createdDispClr:'',\r\n            createdEthPorts:'',\r\n            createdPwrPorts:'',\r\n            createdCPU:'',\r\n            createdMem:'',\r\n            createdStorage:'',\r\n            createdComments:'',\r\n        });\r\n    }\r\n\r\n    deleteModel() {\r\n        axios.post(\r\n            getURL(ModelCommand.delete),\r\n            {\r\n                'vendor':this.state.deleteVendor,\r\n                'modelNumber':this.state.deleteModel,\r\n            }\r\n            ).then(response => this.setState({ items: jsonToArr(response)}));\r\n        \r\n        this.setState({\r\n            deleteVendor:'',\r\n            deleteModel:'',\r\n        });\r\n    }\r\n\r\n    detailViewModel() {\r\n        axios.post(\r\n            getURL(ModelCommand.detailView),\r\n            {\r\n                'vendor':this.state.viewVendor,\r\n                'modelNumber':this.state.viewModel,\r\n            }\r\n            ).then(response => this.setState({ items: jsonToArr(response)}));\r\n        \r\n        this.setState({\r\n            viewVendor:'',\r\n            viewModel:'',\r\n        });\r\n    }\r\n\r\n    searchModels() {\r\n        axios.post(\r\n            getURL(ModelCommand.search),\r\n            {\r\n                'filter':this.state.searchText,\r\n            }\r\n            ).then(response => this.setState({ items: jsonToArr(response)}));\r\n        \r\n        this.setState({\r\n            searchText:'',\r\n        });\r\n    }\r\n\r\n    downloadTable() {\r\n        this.csvLink.link.click();\r\n    }\r\n\r\n    openCreateModal() {\r\n        this.setState({showCreateModal: true});\r\n    }\r\n\r\n    openImportModal() {\r\n        this.setState({showImportModal: true});\r\n    }\r\n\r\n    updateModelCreator(event) {\r\n        this.state.createdModel[event.target.name] = event.target.value;\r\n        this.forceUpdate()\r\n    }\r\n\r\n    updateSearchText(event) {\r\n        this.setState({ searchText: event.target.value})\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <ButtonMenu \r\n                    openCreateModal={this.openCreateModal}\r\n                    openImportModal={this.openImportModal}\r\n                    downloadTable={this.downloadTable}\r\n                />\r\n                <CSVLink\r\n                    data={this.state.csvData}\r\n                    filename={modelDownloadFileName}\r\n                    className=\"hidden\"\r\n                    ref={(r) => this.csvLink = r}\r\n                    target=\"_blank\"\r\n                />\r\n                <Modal\r\n                    style={{top: `50%`,left: `50%`,transform: `translate(-50%, -50%)`,}}\r\n                    aria-labelledby=\"simple-modal-title\"\r\n                    aria-describedby=\"simple-modal-description\"\r\n                    open={this.state.showCreateModal}\r\n                    onClose={() => (this.setState({showCreateModal:false}))}\r\n                >\r\n                    <div>\r\n\r\n                        <TextField id=\"standard-basic\" name={ModelInput.Vendor} label={columns[0]} onChange={this.updateModelCreator.bind(this)}/>\r\n                        <TextField id=\"standard-basic\" name={ModelInput.ModelNumber} label={columns[1]} onChange={this.updateModelCreator.bind(this)}/>\r\n                        <TextField id=\"standard-basic\" name={ModelInput.Height} label={columns[2]} onChange={this.updateModelCreator.bind(this)}/>\r\n                        <TextField id=\"standard-basic\" name={ModelInput.DisplayColor} label={columns[3]} onChange={this.updateModelCreator.bind(this)}/>\r\n                        <TextField id=\"standard-basic\" name={ModelInput.EthernetPorts} label={columns[4]} onChange={this.updateModelCreator.bind(this)}/>\r\n                        <TextField id=\"standard-basic\" name={ModelInput.PowerPorts} label={columns[5]} onChange={this.updateModelCreator.bind(this)}/>\r\n                        <TextField id=\"standard-basic\" name={ModelInput.CPU} label={columns[6]} onChange={this.updateModelCreator.bind(this)}/>\r\n                        <TextField id=\"standard-basic\" name={ModelInput.Memory} label={columns[7]} onChange={this.updateModelCreator.bind(this)}/>\r\n                        <TextField id=\"standard-basic\" name={ModelInput.Storage} label={columns[8]} onChange={this.updateModelCreator.bind(this)}/>\r\n                        <TextField id=\"standard-basic\" name={ModelInput.Comment} label={columns[9]} onChange={this.updateModelCreator.bind(this)}/>\r\n\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            onClick={this.createModel.bind(this)}\r\n                        >\r\n                            Create\r\n                        </Button>\r\n                    </div>\r\n                </Modal>\r\n                <Modal\r\n                    style={{top: `50%`,left: `50%`,transform: `translate(-50%, -50%)`,}}\r\n                    aria-labelledby=\"simple-modal-title\"\r\n                    aria-describedby=\"simple-modal-description\"\r\n                    open={this.state.showImportModal}\r\n                    onClose={() => (this.setState({showImportModal:false}))}\r\n                >\r\n                    <div>\r\n                        <input type='file' accept=\".csv\" />\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                        >\r\n                            Upload\r\n                        </Button>\r\n                    </div>\r\n                </Modal>\r\n                <Filters \r\n                    updateSearchText={this.updateSearchText}\r\n                    searchModels={this.searchModels}\r\n                />\r\n                <TableView\r\n                    columns={columns}\r\n                    vals={this.state.items}\r\n                />\r\n            </div>\r\n    );\r\n    }\r\n}\r\n","export enum UserInput {\r\n    Username='username',\r\n    Password='password',\r\n    Email='email',\r\n    DisplayName='displayName',\r\n}\r\n","export enum UserCommand {\r\n    create = 'create/',\r\n    delete = 'delete/',\r\n    edit = 'edit/',\r\n    view = 'view/',\r\n    detailView = 'detailView/',\r\n    search='search/',\r\n}\r\n","import React from 'react';\r\nimport axios from 'axios';\r\nimport { UserInput } from '../enums/userInputs.ts'\r\nimport { UserCommand } from '../enums/userCommands.ts'\r\nimport * as Constants from '../Constants';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport TableView from '../helpers/TableView';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport InputBase from '@material-ui/core/InputBase';\r\n\r\nconst columns = [\r\n    \"Username\",\r\n    \"Display Name\",\r\n    \"Email\",\r\n]\r\n\r\nconst usersMainPath = 'users/';\r\n\r\nfunction getURL(endpoint) {\r\n    return Constants.serverEndpoint + usersMainPath + endpoint;\r\n}\r\n\r\nfunction jsonToArr(json) {\r\n    var users = json.data['users'];\r\n    const items = [];\r\n\r\n    for (const [index, val] of users.entries()) {\r\n        const row = [];\r\n        row.push(val[UserInput.Username]);\r\n        row.push(val[UserInput.Email]);\r\n        row.push(val[UserInput.DisplayName]);\r\n        items.push(row);\r\n    }\r\n    return items;\r\n}\r\n\r\nexport default class UsersView extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            showCreateModal:false,\r\n            showImportModal:false,\r\n            items:[],\r\n            instanceToken:\"\",\r\n            createdUser: {\r\n                'username':'',\r\n                'email':'',\r\n                'displayName':'',\r\n            },\r\n            deleteUsername:'',\r\n            viewUsername:'',\r\n            searchText:\"\",\r\n        };\r\n    }\r\n\r\n    createUser() {\r\n        axios.post(\r\n            this.getURL(UserCommand.create),\r\n            {\r\n                'username':this.state.createdUser[UserInput.Username],\r\n                'email':this.state.createdUser[UserInput.Email],\r\n                'displayName':this.state.createdUser[UserInput.DisplayName],\r\n            }\r\n            ).then(response => (this.setState({ items:response })));\r\n    }\r\n\r\n    deleteUser() {\r\n        axios.post(\r\n            this.getURL(UserCommand.delete),\r\n            {\r\n                'username':this.state.deleteUsername,\r\n            }\r\n            ).then(response => console.log(response));\r\n    }\r\n\r\n    detailViewUser() {\r\n        axios.post(\r\n            this.getURL(UserCommand.detailView),\r\n            {\r\n                'username':this.state.viewUsername,\r\n            }\r\n            ).then(response => console.log(response));\r\n    }\r\n\r\n    viewUser() {\r\n        axios.post(\r\n            this.getURL(UserCommand.view),\r\n            {\r\n                'username':this.state.viewUsername,\r\n            }\r\n            ).then(response => console.log(response));\r\n    }\r\n\r\n    searchUsers() {\r\n        axios.post(\r\n            getURL(UserCommand.search),\r\n            {\r\n                'filter':this.state.searchText,\r\n            }\r\n            ).then(response => this.setState({ items: jsonToArr(response)}));\r\n    }\r\n\r\n\r\n    openCreateModal() {\r\n        this.setState({showCreateModal: true});\r\n    }\r\n\r\n    updateUserCreator(event) {\r\n        this.state.createdUser[event.target.name] = event.target.value;\r\n        this.forceUpdate()\r\n    }\r\n\r\n    updateSearchText(event) {\r\n        this.setState({ searchText: event.target.value})\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    onClick={this.openCreateModal.bind(this)}\r\n                >\r\n                    Create\r\n                </Button>\r\n                <Modal\r\n                    aria-labelledby=\"simple-modal-title\"\r\n                    aria-describedby=\"simple-modal-description\"\r\n                    open={this.state.showCreateModal}\r\n                    onClose={() => (this.setState({showCreateModal:false}))}\r\n                >\r\n                    <div>\r\n                        <TextField id=\"standard-basic\" name={UserInput.Vendor} label={columns[0]} onChange={this.updateUserCreator.bind(this)}/>\r\n                        <TextField id=\"standard-basic\" name={UserInput.UserNumber} label={columns[1]} onChange={this.updateUserCreator.bind(this)}/>\r\n                        <TextField id=\"standard-basic\" name={UserInput.Height} label={columns[2]} onChange={this.updateUserCreator.bind(this)}/>\r\n\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            onClick={this.createUser.bind(this)}\r\n                        >\r\n                            Create\r\n                        </Button>\r\n                    </div>\r\n                </Modal>\r\n                <div>\r\n                <div>\r\n                    <SearchIcon />\r\n                </div>\r\n                    <InputBase\r\n                        placeholder=\"Search (blank does a search all)\"\r\n                        inputProps={{ 'aria-label': 'search' }}\r\n                        onChange={this.updateSearchText.bind(this)}\r\n                    />\r\n                    <Button\r\n                        onClick={this.searchUsers.bind(this)}\r\n                    >\r\n                        Search\r\n                    </Button>\r\n                </div>\r\n                <TableView\r\n                    columns={columns}\r\n                    vals={this.state.items}\r\n                />\r\n            </div>\r\n    );\r\n    }\r\n}\r\n","export enum InstanceInput {\r\n    Model = 'model',\r\n    Hostname = 'hostname',\r\n    Rack = 'rack',\r\n    RackU = 'rackU',\r\n    Owner = 'owner',\r\n    Comment = 'comment',\r\n}\r\n","export enum InstanceCommand {\r\n    create = 'create/',\r\n    delete = 'delete/',\r\n    edit = 'edit/',\r\n    view = 'view/',\r\n    detailView = 'detailView/',\r\n    search = 'search/'\r\n}\r\n","import React from 'react';\r\nimport axios from 'axios';\r\nimport { InstanceInput } from '../enums/instanceInputs.ts'\r\nimport { InstanceCommand } from '../enums/instanceCommands.ts'\r\nimport * as Constants from '../Constants';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\r\nimport CloudDownloadIcon from '@material-ui/icons/CloudDownload';\r\nimport TableView from '../helpers/TableView';\r\nimport { CSVLink } from \"react-csv\";\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport InputBase from '@material-ui/core/InputBase';\r\n\r\nconst columns = [\r\n    \"Model\",\r\n    \"Hostname\",\r\n    \"Rack\",\r\n    \"Rack U\",\r\n    \"Owner\",\r\n    \"Comments\",\r\n]\r\n\r\nconst instancesMainPath = 'instances/';\r\nconst instanceDownloadFileName = 'instances.csv';\r\n\r\nfunction getURL(endpoint) {\r\n    return Constants.serverEndpoint + instancesMainPath + endpoint;\r\n}\r\n\r\nfunction jsonToArr(json) {\r\n    var instances = json.data['instances'];\r\n    const items = [];\r\n\r\n    for (const [index, val] of instances.entries()) {\r\n        const row = [];\r\n        row.push(val[InstanceInput.Model]);\r\n        row.push(val[InstanceInput.Hostname]);\r\n        row.push(val[InstanceInput.Rack]);\r\n        row.push(val[InstanceInput.RackU]);\r\n        row.push(val[InstanceInput.Owner]);\r\n        row.push(val[InstanceInput.Comment]);\r\n        items.push(row);\r\n    }\r\n    return items;\r\n}\r\n\r\nexport default class InstancesView extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            showCreateModal:false,\r\n            showImportModal:false,\r\n            items:[],\r\n            instanceToken:\"\",\r\n            createdInstance: {\r\n                'model':'',\r\n                'hostname':'',\r\n                'rack':'',\r\n                'rackU':'',\r\n                'owner':'',\r\n                'comment':'',\r\n            },\r\n            deleteInstanceRack:'',\r\n            deleteInstanceRackU:'',\r\n            viewRack:'',\r\n            viewRackU:'',\r\n            csvData:[],\r\n            searchText:\"\",\r\n        };\r\n    }\r\n\r\n    createInstance() {\r\n        axios.post(\r\n            getURL(InstanceCommand.create),\r\n            {\r\n                'model':this.state.createdInstance[InstanceInput.Model],\r\n                'hostname':this.state.createdInstance[InstanceInput.Hostname],\r\n                'rack':this.state.createdInstance[InstanceInput.Rack],\r\n                'rackU':this.state.createdInstance[InstanceInput.RackU],\r\n                'owner':this.state.createdInstance[InstanceInput.Owner],\r\n                'comment':this.state.createdInstance[InstanceInput.Comment],\r\n            }\r\n            ).then(response => (this.setState({ items:jsonToArr(response) })));\r\n    }\r\n\r\n    deleteInstance() {\r\n        axios.post(\r\n            getURL(InstanceCommand.delete),\r\n            {\r\n                'rack':this.state.deleteInstanceRack,\r\n                'rackU':this.state.deleteInstanceRackU\r\n            }\r\n            ).then(response => (this.setState({ items:jsonToArr(response) })));\r\n    }\r\n\r\n    detailViewInstance() {\r\n        axios.post(\r\n            getURL(InstanceCommand.detailView),\r\n            {\r\n                'rack':this.state.deleteInstanceRack,\r\n                'rackU':this.state.deleteInstanceRackU\r\n            }\r\n            ).then(response => (this.setState({ items:jsonToArr(response) })));\r\n    }\r\n\r\n    viewInstance() {\r\n        axios.post(\r\n            getURL(InstanceCommand.view),\r\n            {\r\n                'rack':this.state.deleteInstanceRack,\r\n                'rackU':this.state.deleteInstanceRackU\r\n            }\r\n            ).then(response => (this.setState({ items:jsonToArr(response) })));\r\n    }\r\n\r\n    searchInstances() {\r\n        axios.post(\r\n            getURL(InstanceCommand.search),\r\n            {\r\n                'filter':this.state.searchText,\r\n            }\r\n            ).then(response => this.setState({ items: jsonToArr(response)}));\r\n    }\r\n\r\n    downloadTable() {\r\n        this.csvLink.link.click();\r\n    }\r\n\r\n    openCreateModal() {\r\n        this.setState({showCreateModal: true});\r\n    }\r\n\r\n    openImportModal() {\r\n        this.setState({showImportModal: true});\r\n    }\r\n\r\n    updateInstanceCreator(event) {\r\n        this.state.createdInstance[event.target.name] = event.target.value;\r\n        this.forceUpdate()\r\n    }\r\n\r\n    updateSearchText(event) {\r\n        this.setState({ searchText: event.target.value})\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    onClick={this.openCreateModal.bind(this)}\r\n                >\r\n                    Create\r\n                </Button>\r\n                <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    startIcon={<CloudUploadIcon />}\r\n                    onClick={this.openImportModal.bind(this)}\r\n                >\r\n                    Import\r\n                </Button>\r\n                <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    startIcon={<CloudDownloadIcon />}\r\n                    onClick={this.downloadTable.bind(this)}\r\n                >\r\n                    Export\r\n                </Button>\r\n                <CSVLink\r\n                    data={this.state.csvData}\r\n                    filename={instanceDownloadFileName}\r\n                    className=\"hidden\"\r\n                    ref={(r) => this.csvLink = r}\r\n                    target=\"_blank\"/>\r\n                <Modal\r\n                    style={{top: `50%`,left: `50%`,transform: `translate(-50%, -50%)`,}}\r\n                    aria-labelledby=\"simple-modal-title\"\r\n                    aria-describedby=\"simple-modal-description\"\r\n                    open={this.state.showCreateModal}\r\n                    onClose={() => (this.setState({showCreateModal:false}))}\r\n                >\r\n                    <div>\r\n\r\n                        <TextField id=\"standard-basic\" name={InstanceInput.Model} label={columns[0]} onChange={this.updateInstanceCreator.bind(this)}/>\r\n                        <TextField id=\"standard-basic\" name={InstanceInput.Hostname} label={columns[1]} onChange={this.updateInstanceCreator.bind(this)}/>\r\n                        <TextField id=\"standard-basic\" name={InstanceInput.Rack} label={columns[2]} onChange={this.updateInstanceCreator.bind(this)}/>\r\n                        <TextField id=\"standard-basic\" name={InstanceInput.RackU} label={columns[3]} onChange={this.updateInstanceCreator.bind(this)}/>\r\n                        <TextField id=\"standard-basic\" name={InstanceInput.Owner} label={columns[4]} onChange={this.updateInstanceCreator.bind(this)}/>\r\n                        <TextField id=\"standard-basic\" name={InstanceInput.Comment} label={columns[5]} onChange={this.updateInstanceCreator.bind(this)}/>\r\n\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            onClick={this.createInstance.bind(this)}\r\n                        >\r\n                            Create\r\n                        </Button>\r\n                    </div>\r\n                </Modal>\r\n                <Modal\r\n                    style={{top: `50%`,left: `50%`,transform: `translate(-50%, -50%)`,}}\r\n                    aria-labelledby=\"simple-modal-title\"\r\n                    aria-describedby=\"simple-modal-description\"\r\n                    open={this.state.showImportModal}\r\n                    onClose={() => (this.setState({showImportModal:false}))}\r\n                >\r\n                    <div>\r\n                        <input type='file' accept=\".csv\" />\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                        >\r\n                            Upload\r\n                        </Button>\r\n                    </div>\r\n                </Modal>\r\n                <div>\r\n                <div>\r\n                    <SearchIcon />\r\n                </div>\r\n                    <InputBase\r\n                        placeholder=\"Search (blank does a search all)\"\r\n                        inputProps={{ 'aria-label': 'search' }}\r\n                        onChange={this.updateSearchText.bind(this)}\r\n                    />\r\n                    <Button\r\n                        onClick={this.searchInstances.bind(this)}\r\n                    >\r\n                        Search\r\n                    </Button>\r\n                </div>\r\n                <TableView\r\n                    columns={columns}\r\n                    vals={this.state.items}\r\n                />\r\n            </div>\r\n    );\r\n    }\r\n}\r\n","import React from 'react';\r\nimport TableView from '../helpers/TableView';\r\n\r\nconst columns = [\r\n    \"Vendor\",\r\n    \"Model Number\",\r\n    \"Height (U)\",\r\n    \"Display Color\",\r\n    \"Ethernet Ports\",\r\n    \"Power Ports\",\r\n    \"CPU\",\r\n    \"Memory\",\r\n    \"Storage\",\r\n    \"Comments\",\r\n]\r\n\r\nexport default function RacksView(props) {\r\n    return (<div></div>);\r\n}\r\n","import React from 'react';\r\nimport TableView from '../helpers/TableView';\r\n\r\nexport default function StatisticsView(props) {\r\n    return (<div></div>);\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\nimport ModelsView from './pages/ModelsView';\r\nimport UsersView from './pages/UsersView';\r\nimport InstancesView from './pages/InstancesView';\r\nimport RacksView from './pages/RacksView';\r\nimport StatisticsView from './pages/StatisticsView';\r\nimport Button from '@material-ui/core/Button';\r\nimport Logout from './helpers/Logout';\r\n\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <Typography\r\n      component=\"div\"\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`simple-tabpanel-${index}`}\r\n      aria-labelledby={`simple-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && <Box p={3}>{children}</Box>}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n  children: PropTypes.node,\r\n  index: PropTypes.any.isRequired,\r\n  value: PropTypes.any.isRequired,\r\n};\r\n\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `simple-tab-${index}`,\r\n    'aria-controls': `simple-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n  tab: {\r\n    flexGrow: 1,\r\n  },\r\n  button:{\r\n    flexGrow: 1,\r\n  }\r\n}));\r\n\r\nexport default function TabManager() {\r\n  const classes = useStyles();\r\n  const [value, setValue] = React.useState(0);\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\">\r\n        <Tabs value={value} onChange={handleChange}>\r\n          <Tab className={classes.tab} label=\"Models\" {...a11yProps(0)} />\r\n          <Tab className={classes.tab} label=\"Instances\" {...a11yProps(1)} />\r\n          <Tab className={classes.tab} label=\"Racks\" {...a11yProps(2)} />\r\n          <Tab className={classes.tab} label=\"Statistics\" {...a11yProps(2)} />\r\n          <Tab className={classes.tab} label=\"Users\" {...a11yProps(2)}  />\r\n          <Button\r\n           className={classes.button}\r\n           variant=\"contained\"\r\n           color=\"secondary\"\r\n           onClick={Logout()}\r\n           >\r\n              Logout\r\n          </Button>\r\n        </Tabs>\r\n      </AppBar>\r\n      <TabPanel value={value} index={0}>\r\n        <ModelsView />\r\n      </TabPanel>\r\n      <TabPanel value={value} index={1}>\r\n        <InstancesView />\r\n      </TabPanel>\r\n      <TabPanel value={value} index={2}>\r\n        <RacksView />\r\n      </TabPanel>\r\n      <TabPanel value={value} index={3}>\r\n        <StatisticsView />\r\n      </TabPanel>\r\n      <TabPanel value={value} index={4}>\r\n        <UsersView />\r\n      </TabPanel>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './stylesheets/index.css';\nimport PageSelector from './javascript/PageSelector';\n\nReactDOM.render(<PageSelector />, document.getElementById('root'));\n","import React from \"react\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route\r\n} from \"react-router-dom\";\r\nimport Login from \"./Login\";\r\nimport TabManager from \"./TabManager\";\r\n\r\nexport default function PageSelector() {\r\n  return (\r\n    <Router>\r\n        <Switch>\r\n          <Route path=\"/\">\r\n            <TabManager />\r\n          </Route>\r\n          <Route path=\"/homepage\">\r\n            <Login />\r\n          </Route>\r\n        </Switch>\r\n    </Router>\r\n  );\r\n}\r\n"],"sourceRoot":""}
