{"version":3,"sources":["javascript/Login.jsx","javascript/helpers/TableView.jsx","javascript/pages/ModelsView.jsx","javascript/pages/UsersView.jsx","javascript/pages/InstancesView.jsx","javascript/pages/RacksView.jsx","javascript/pages/StatisticsView.jsx","javascript/TabManager.jsx","index.jsx","javascript/PageSelector.jsx"],"names":["useStyles","makeStyles","theme","paper","marginTop","spacing","display","flexDirection","alignItems","avatar","margin","backgroundColor","palette","secondary","main","form","submit","Login","props","classes","className","TextField","id","label","variant","required","FormControl","FormGroup","FormControlLabel","value","control","Checkbox","color","labelPlacement","Button","onClick","axios","post","then","response","console","log","Link","get","table","minWidth","position","width","background","border","boxShadow","shadows","padding","root","heading","fontSize","typography","pxToRem","fontWeight","fontWeightRegular","getModalStyle","top","left","transform","TableView","React","useState","modalStyle","open","setOpen","openNew","setOpenNew","openNew2","setOpenNew2","handleCloseNew2","Modal","aria-labelledby","aria-describedby","onClose","style","map","input","Input","type","ExpansionPanel","ExpansionPanelSummary","expandIcon","aria-controls","Typography","ExpansionPanelDetails","TableContainer","component","Paper","Table","aria-label","TableHead","TableRow","col","TableCell","TableBody","columns","ModelsView","UsersView","InstancesView","RacksView","StatisticsView","TabPanel","children","index","other","role","hidden","Box","p","a11yProps","flexGrow","tab","button","TabManager","setValue","AppBar","Tabs","onChange","event","newValue","Tab","Logout","ReactDOM","render","path","document","getElementById"],"mappings":"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","file":"js/main.a68b8e86.chunk.js","sourcesContent":["import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Link from '@material-ui/core/Link';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\n\r\nimport axios from 'axios';\r\n\r\n\r\nfunction submitCredentials() {\r\n    axios.post('http://localhost:4010/testing', { \"username\":\"username\", \"password\":\"password\"} ).then(response => console.log(response))\r\n}\r\n\r\nfunction changePages() {\r\n    axios.get('http://localhost:4010/testing').then(response => console.log(response))\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    paper: {\r\n        marginTop: theme.spacing(8),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n        marginTop: theme.spacing(1),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n}));\r\n\r\nexport default function Login(props) {\r\n    const classes = useStyles();\r\n    return (\r\n        <div className={classes.paper}>\r\n            <TextField\r\n                id=\"outlined-basic\"\r\n                label=\"Email Address\"\r\n                variant=\"outlined\"\r\n                required=\"true\"\r\n            />\r\n            <TextField\r\n                id=\"outlined-basic\"\r\n                label=\"Password\"\r\n                variant=\"outlined\"\r\n                required=\"true\"\r\n            />\r\n            <FormControl className={classes.form}>\r\n                <FormGroup>\r\n                    <FormControlLabel\r\n                        value=\"end\"\r\n                        control={<Checkbox color=\"primary\" />}\r\n                        label=\"End\"\r\n                        labelPlacement=\"end\"\r\n                    />\r\n                </FormGroup>\r\n            </FormControl>\r\n            <Button\r\n                onClick={submitCredentials()}\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className={classes.submit}\r\n            >\r\n                Sign In\r\n            </Button>\r\n            <Link\r\n                onClick={() => {changePages()}}\r\n            >\r\n                Forgot Password?\r\n            </Link>\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport Button from '@material-ui/core/Button';\r\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\r\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\r\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport InfiniteScroll from 'react-infinite-scroller';\r\nimport AddItemToBackendModal from \"./AddItemToBackendModal\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Input from '@material-ui/core/Input';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    table: {\r\n      minWidth: 650,\r\n    },\r\n    paper: {\r\n        position: 'absolute',\r\n        width: 400,\r\n        backgroundColor: theme.palette.background.paper,\r\n        border: '2px solid #000',\r\n        boxShadow: theme.shadows[5],\r\n        padding: theme.spacing(2, 4, 3),\r\n      },\r\n    submit: {\r\n        margin: theme.spacing(3, 2, 2),\r\n    },\r\n    root: {\r\n        width: '100%',\r\n      },\r\n      heading: {\r\n        fontSize: theme.typography.pxToRem(15),\r\n        fontWeight: theme.typography.fontWeightRegular,\r\n      },\r\n  }));\r\n\r\n  function getModalStyle() {\r\n    return {\r\n      top: `50%`,\r\n      left: `50%`,\r\n      transform: `translate(-50%, -50%)`,\r\n    };\r\n  }\r\n\r\nexport default function TableView(props) {\r\n        const classes = useStyles();\r\n        const [modalStyle] = React.useState(getModalStyle);\r\n        const [open, setOpen] = React.useState(false);\r\n        const [openNew, setOpenNew] = React.useState(false);\r\n        const [openNew2, setOpenNew2] = React.useState(false);\r\n\r\n        const handleOpen = () => {\r\n            setOpen(true);\r\n        };\r\n        const handleClose = () => {\r\n          setOpen(false);\r\n        };\r\n        const handleOpenNew = () => {\r\n          setOpenNew(true);\r\n        };\r\n        const handleCloseNew = () => {\r\n          setOpenNew(false);\r\n        };\r\n\r\n        const handleOpenNew2 = () => {\r\n          setOpenNew2(true);\r\n        };\r\n        const handleCloseNew2 = () => {\r\n          setOpenNew2(false);\r\n        };\r\n\r\n        return (\r\n            <div>\r\n                <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    className={classes.submit}\r\n                    onClick={handleOpenNew}\r\n                >\r\n                    Create\r\n                </Button>\r\n                <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    className={classes.submit}\r\n                    onClick={handleOpenNew2}\r\n                >\r\n                    Import\r\n                </Button>\r\n                <Modal\r\n                    aria-labelledby=\"simple-modal-title\"\r\n                    aria-describedby=\"simple-modal-description\"\r\n                    open={open}\r\n                    onClose={handleClose}\r\n                >\r\n                    <div style={modalStyle} className={classes.paper}>\r\n                    <h2 id=\"simple-modal-title\">Text in a modal</h2>\r\n                    <p id=\"simple-modal-description\">\r\n                        Duis mollis, est non commodo luctus, nisi erat porttitor ligula.\r\n                    </p>\r\n                    </div>\r\n                </Modal>\r\n\r\n            <Modal\r\n            aria-labelledby=\"simple-modal-title\"\r\n            aria-describedby=\"simple-modal-description\"\r\n            open={openNew}\r\n            onClose={handleCloseNew}\r\n            >\r\n                <div style={modalStyle} className={classes.paper}>\r\n                    {props.map(input => (\r\n                        <TextField id=\"standard-basic\" label={input} />\r\n                    ))}\r\n                    <Button\r\n                        onClick={handleCloseNew2}\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        className={classes.submit}\r\n                    >\r\n                        Create\r\n                    </Button>\r\n                    </div>\r\n            </Modal>\r\n            <Modal\r\n            aria-labelledby=\"simple-modal-title\"\r\n            aria-describedby=\"simple-modal-description\"\r\n            open={openNew2}\r\n            onClose={handleCloseNew2}\r\n            >\r\n                <div style={modalStyle} className={classes.paper}>\r\n                    <Input\r\n                    type='file'>\r\n                    </Input>\r\n                    <Button\r\n                        onClick={handleCloseNew2}\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        className={classes.submit}\r\n                    >\r\n                        Upload\r\n                    </Button>\r\n                  </div>\r\n            </Modal>\r\n\r\n        <ExpansionPanel>\r\n        <ExpansionPanelSummary\r\n          expandIcon={<ExpandMoreIcon />}\r\n          aria-controls=\"panel1a-content\"\r\n          id=\"panel1a-header\"\r\n        >\r\n          <Typography className={classes.heading}>Filters</Typography>\r\n        </ExpansionPanelSummary>\r\n        <ExpansionPanelDetails>\r\n          <Typography>\r\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit. Suspendisse malesuada lacus ex,\r\n            sit amet blandit leo lobortis eget.\r\n          </Typography>\r\n        </ExpansionPanelDetails>\r\n      </ExpansionPanel>\r\n          <TableContainer component={Paper}>\r\n            <Table className={classes.table} aria-label=\"simple table\">\r\n              <TableHead>\r\n                <TableRow>\r\n                  {props.map(col => (\r\n                    <TableCell>{col}</TableCell>\r\n                  ))}\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {/*rows.map(row => (\r\n                  <TableRow key={row.name}  onClick={handleOpen}>\r\n                    <TableCell component=\"th\" scope=\"row\">\r\n                      {row.name}\r\n                    </TableCell>\r\n                    <TableCell align=\"right\">{row.calories}</TableCell>\r\n                    <TableCell align=\"right\">{row.fat}</TableCell>\r\n                    <TableCell align=\"right\">{row.carbs}</TableCell>\r\n                    <TableCell align=\"right\">{row.protein}</TableCell>\r\n                  </TableRow>\r\n                ))*/}\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n          {/*<InfiniteScroll\r\n                pageStart={0}\r\n                loadMore={loadItems(items)}\r\n                hasMore={true}\r\n                loader={<div className=\"loader\" key={0}>Loading ...</div>}\r\n            >\r\n                {items}\r\n          </InfiniteScroll>*/}\r\n        </div>\r\n        );\r\n      }\r\n","import React from 'react';\r\nimport TableView from '../helpers/TableView';\r\n\r\nconst columns = [\r\n    \"Vendor\",\r\n    \"Model Number\",\r\n    \"Height (U)\",\r\n    \"Display Color\",\r\n    \"Ethernet Ports\",\r\n    \"Power Ports\",\r\n    \"CPU\",\r\n    \"Memory\",\r\n    \"Storage\",\r\n    \"Comments\",\r\n]\r\n\r\nexport default function ModelsView(props) {\r\n    return (TableView(columns));\r\n}\r\n","import React from 'react';\r\nimport TableView from '../helpers/TableView';\r\n\r\nconst columns = [\r\n    \"Username\",\r\n    \"Display Name\",\r\n    \"Email\",\r\n]\r\n\r\nexport default function UsersView(props) {\r\n    return (TableView(columns));\r\n}\r\n","import React from 'react';\r\nimport TableView from '../helpers/TableView';\r\n\r\nconst columns = [\r\n    \"Model\",\r\n    \"Hostname\",\r\n    \"Rack\",\r\n    \"Rack U\",\r\n    \"Owner\",\r\n    \"Comments\",\r\n]\r\n\r\nexport default function InstancesView(props) {\r\n    return (TableView(columns));\r\n}\r\n","import React from 'react';\r\nimport TableView from '../helpers/TableView';\r\n\r\nconst columns = [\r\n    \"Vendor\",\r\n    \"Model Number\",\r\n    \"Height (U)\",\r\n    \"Display Color\",\r\n    \"Ethernet Ports\",\r\n    \"Power Ports\",\r\n    \"CPU\",\r\n    \"Memory\",\r\n    \"Storage\",\r\n    \"Comments\",\r\n]\r\n\r\nexport default function RacksView(props) {\r\n    return (<div></div>);\r\n}\r\n","import React from 'react';\r\nimport TableView from '../helpers/TableView';\r\n\r\nexport default function StatisticsView(props) {\r\n    return (<div></div>);\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\nimport ModelsView from './pages/ModelsView';\r\nimport UsersView from './pages/UsersView';\r\nimport InstancesView from './pages/InstancesView';\r\nimport RacksView from './pages/RacksView';\r\nimport StatisticsView from './pages/StatisticsView';\r\nimport Button from '@material-ui/core/Button';\r\nimport Logout from './helpers/Logout';\r\n\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <Typography\r\n      component=\"div\"\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`simple-tabpanel-${index}`}\r\n      aria-labelledby={`simple-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && <Box p={3}>{children}</Box>}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n  children: PropTypes.node,\r\n  index: PropTypes.any.isRequired,\r\n  value: PropTypes.any.isRequired,\r\n};\r\n\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `simple-tab-${index}`,\r\n    'aria-controls': `simple-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n  tab: {\r\n    flexGrow: 1,\r\n  },\r\n  button:{\r\n    flexGrow: 1,\r\n  }\r\n}));\r\n\r\nexport default function TabManager() {\r\n  const classes = useStyles();\r\n  const [value, setValue] = React.useState(0);\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\">\r\n        <Tabs value={value} onChange={handleChange}>\r\n          <Tab className={classes.tab} label=\"Models\" {...a11yProps(0)} />\r\n          <Tab className={classes.tab} label=\"Instances\" {...a11yProps(1)} />\r\n          <Tab className={classes.tab} label=\"Racks\" {...a11yProps(2)} />\r\n          <Tab className={classes.tab} label=\"Statistics\" {...a11yProps(2)} />\r\n          <Tab className={classes.tab} label=\"Users\" {...a11yProps(2)}  />\r\n          <Button\r\n           className={classes.button}\r\n           variant=\"contained\"\r\n           color=\"secondary\"\r\n           onClick={Logout()}\r\n           >\r\n              Logout\r\n          </Button>\r\n        </Tabs>\r\n      </AppBar>\r\n      <TabPanel value={value} index={0}>\r\n        <ModelsView />\r\n      </TabPanel>\r\n      <TabPanel value={value} index={1}>\r\n        <InstancesView />\r\n      </TabPanel>\r\n      <TabPanel value={value} index={2}>\r\n        <RacksView />\r\n      </TabPanel>\r\n      <TabPanel value={value} index={3}>\r\n        <StatisticsView />\r\n      </TabPanel>\r\n      <TabPanel value={value} index={4}>\r\n        <UsersView />\r\n      </TabPanel>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './stylesheets/index.css';\nimport PageSelector from './javascript/PageSelector';\n\nReactDOM.render(<PageSelector />, document.getElementById('root'));\n","import React from \"react\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route\r\n} from \"react-router-dom\";\r\nimport Login from \"./Login\";\r\nimport TabManager from \"./TabManager\";\r\n\r\nexport default function PageSelector() {\r\n  return (\r\n    <Router>\r\n        <Switch>\r\n          <Route path=\"/\">\r\n            <TabManager />\r\n          </Route>\r\n          <Route path=\"/homepage\">\r\n            <Login />\r\n          </Route>\r\n        </Switch>\r\n    </Router>\r\n  );\r\n}\r\n"],"sourceRoot":""}
