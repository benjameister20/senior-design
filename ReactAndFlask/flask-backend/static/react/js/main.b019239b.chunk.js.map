{"version":3,"sources":["javascript/Login.jsx","javascript/enums/modelCommands.ts","javascript/enums/modelInputs.ts","javascript/Constants.jsx","javascript/helpers/TableView.jsx","javascript/helpers/Filters.jsx","javascript/pages/ModelsView.jsx","javascript/enums/userInputs.ts","javascript/enums/userCommands.ts","javascript/enums/instanceInputs.ts","javascript/enums/instanceCommands.ts","javascript/pages/UsersView.jsx","javascript/pages/InstancesView.jsx","javascript/pages/RacksView.jsx","javascript/pages/StatisticsView.jsx","javascript/TabManager.jsx","index.jsx","javascript/PageSelector.jsx"],"names":["useStyles","makeStyles","theme","paper","marginTop","spacing","display","flexDirection","alignItems","avatar","margin","backgroundColor","palette","secondary","main","form","submit","Login","props","classes","className","TextField","id","label","variant","required","ref","FormControl","FormGroup","FormControlLabel","value","control","Checkbox","color","labelPlacement","Button","onClick","username","refs","getValue","password","axios","post","then","response","console","log","ModelCommand","ModelInput","TableView","state","test","event","this","setState","target","TableContainer","component","Paper","Table","minWidth","aria-label","TableHead","TableRow","columns","map","col","TableCell","sortByCol","bind","TableBody","vals","row","key","name","val","scope","React","Component","Filters","padding","flexGrow","filters","filter","InputLabel","Select","MenuItem","table","position","width","background","border","boxShadow","shadows","root","heading","fontSize","typography","pxToRem","fontWeight","fontWeightRegular","UserInput","UserCommand","ModelsView","showCreateModal","showImportModal","items","modelToken","createdModel","csvData","endpoint","Constants","getURL","create","Vendor","ModelNumber","Height","DisplayColor","EthernetPorts","PowerPorts","CPU","Memory","Storage","Comment","vendor","modelNum","delete","detailView","view","csvLink","link","click","forceUpdate","openCreateModal","startIcon","openImportModal","downloadTable","data","filename","r","Modal","aria-labelledby","aria-describedby","open","onClose","onChange","updateModelCreator","createModel","type","accept","InstanceInput","InstanceCommand","UsersView","instanceToken","createdUser","deleteUsername","viewUsername","Username","Email","DisplayName","updateUserCreator","UserNumber","createUser","ExpansionPanel","ExpansionPanelSummary","expandIcon","aria-controls","Typography","ExpansionPanelDetails","InstancesView","createdInstance","deleteInstanceRack","deleteInstanceRackU","Model","Hostname","Rack","RackU","Owner","updateInstanceCreator","InstanceNumber","createInstance","RacksView","StatisticsView","TabPanel","children","index","other","role","hidden","Box","p","a11yProps","tab","button","TabManager","useState","setValue","AppBar","Tabs","newValue","Tab","Logout","ReactDOM","render","path","document","getElementById"],"mappings":"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","file":"js/main.b019239b.chunk.js","sourcesContent":["import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Link from '@material-ui/core/Link';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\n\r\nimport axios from 'axios';\r\n\r\n\r\nfunction submitCredentials(username, password) {\r\n    axios.post('http://localhost:4010/users/authenticate', { \"username\":username, \"password\":password} ).then(response => console.log(response))\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    paper: {\r\n        marginTop: theme.spacing(8),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n        marginTop: theme.spacing(1),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n}));\r\n\r\nexport default function Login(props) {\r\n    const classes = useStyles();\r\n    return (\r\n        <div className={classes.paper}>\r\n            <TextField\r\n                id=\"outlined-basic\"\r\n                label=\"Username\"\r\n                variant=\"outlined\"\r\n                required=\"true\"\r\n                ref='username'\r\n            />\r\n            <TextField\r\n                id=\"outlined-basic\"\r\n                label=\"Password\"\r\n                variant=\"outlined\"\r\n                required=\"true\"\r\n                ref='password'\r\n            />\r\n            <FormControl className={classes.form}>\r\n                <FormGroup>\r\n                    <FormControlLabel\r\n                        value=\"end\"\r\n                        control={<Checkbox color=\"primary\" />}\r\n                        label=\"End\"\r\n                        labelPlacement=\"end\"\r\n                    />\r\n                </FormGroup>\r\n            </FormControl>\r\n            <Button\r\n                onClick={() => (submitCredentials(this.refs.username.getValue(), this.refs.password.getValue()))}\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className={classes.submit}\r\n            >\r\n                Sign In\r\n            </Button>\r\n        </div>\r\n    );\r\n}\r\n","export enum ModelCommand {\r\n    create = 'create/',\r\n    delete = 'delete/',\r\n    edit = 'edit/',\r\n    view = 'view/',\r\n    detailView = 'detailView/',\r\n}","export enum ModelInput {\r\n    Vendor = 'vendor',\r\n    ModelNumber = 'modelNumber',\r\n    Height = 'height',\r\n    DisplayColor = 'displayColor',\r\n    EthernetPorts = 'ethernetPorts',\r\n    PowerPorts = 'PowerPorts',\r\n    CPU = 'cpu',\r\n    Memory = 'memory',\r\n    Storage = 'storage',\r\n    Comment = 'comment'\r\n}","/**\r\n * Constants file\r\n */\r\n\r\nexport const localServerEndpoint = 'http://localhost:4010/';\r\nexport const devServerEndpoint = 'https://parseltongue-dev.herokuapp.com/';\r\nexport const prodServerEndpoint = 'https://parseltongue-prod.herokuapp.com/';\r\n\r\nexport const serverEndpoint = localServerEndpoint;","import React from 'react';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nexport default class TableView extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      test:\"\",\r\n    };\r\n  }\r\n\r\n  sortByCol(event) {\r\n    this.setState({test:event.target.id})\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <TableContainer component={Paper}>\r\n          <Table className={{minWidth: 650}} aria-label=\"simple table\">\r\n            <TableHead>\r\n              <TableRow >\r\n                {this.props.columns.map(col => (<TableCell><span id={col} onClick={this.sortByCol.bind(this)}>{col}</span></TableCell>))}\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {this.props.vals.map(row => (\r\n              <TableRow key={row.name}>\r\n                {row.map(val => (<TableCell scope=\"row\">{val}</TableCell>))}\r\n              </TableRow>\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n      </div>\r\n    );\r\n  }\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    paper: {\r\n        padding: theme.spacing(3),\r\n        flexGrow: 1,\r\n      },\r\n  }));\r\n\r\nexport default class Filters extends React.Component {\r\n    /*const classes = useStyles();*/\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n\r\n        };\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.props.filters.map(filter => (\r\n                    <FormControl>\r\n                    <InputLabel>{filter}</InputLabel>\r\n                    <Select className={{ padding: 3, flexGrow: 1,}}>\r\n                        <MenuItem value={10}>{filter} 1</MenuItem>\r\n                        <MenuItem value={20}>{filter} 2</MenuItem>\r\n                        <MenuItem value={30}>{filter} 3</MenuItem>\r\n                    </Select>\r\n            </FormControl>\r\n                ))}</div>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport axios from 'axios';\r\nimport { ModelCommand } from '../enums/modelCommands.ts'\r\nimport { ModelInput } from '../enums/modelInputs.ts'\r\nimport * as Constants from '../Constants';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport Button from '@material-ui/core/Button';\r\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\r\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\r\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\r\nimport CloudDownloadIcon from '@material-ui/icons/CloudDownload';\r\nimport TableView from '../helpers/TableView';\r\nimport Filters from '../helpers/Filters';\r\nimport { CSVLink } from \"react-csv\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst columns = [\r\n    \"Vendor\",\r\n    \"Model Number\",\r\n    \"Height (U)\",\r\n    \"Display Color\",\r\n    \"Ethernet Ports\",\r\n    \"Power Ports\",\r\n    \"CPU\",\r\n    \"Memory\",\r\n    \"Storage\",\r\n    \"Comments\",\r\n]\r\n\r\nconst modelsMainPath = 'models/';\r\nconst modelDownloadFileName = 'models.csv';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    table: {\r\n      minWidth: 650,\r\n    },\r\n    paper: {\r\n        position: 'absolute',\r\n        width: 400,\r\n        backgroundColor: theme.palette.background.paper,\r\n        border: '2px solid #000',\r\n        boxShadow: theme.shadows[5],\r\n        padding: theme.spacing(2, 4, 3),\r\n      },\r\n    submit: {\r\n        margin: theme.spacing(3, 2, 2),\r\n    },\r\n    root: {\r\n        width: '100%',\r\n    },\r\n    heading: {\r\n      fontSize: theme.typography.pxToRem(15),\r\n      fontWeight: theme.typography.fontWeightRegular,\r\n    },\r\n  }));\r\n  \r\n  function getModalStyle() {\r\n    return {\r\n      top: `50%`,\r\n      left: `50%`,\r\n      transform: `translate(-50%, -50%)`,\r\n    };\r\n  }\r\n  \r\n\r\nexport default class ModelsView extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            showCreateModal:false,\r\n            showImportModal:false,\r\n            items:[],\r\n            modelToken:\"\",\r\n            createdModel: {\r\n                'vendor':'',\r\n                'model':'',\r\n                'height':'',\r\n                'displayColor':'',\r\n                'ethernetPorts':'',\r\n                'powerPorts':'',\r\n                'cpu':'',\r\n                'memory':'',\r\n                'storage':'',\r\n                'comment':'',\r\n            },\r\n            csvData:[],\r\n        };\r\n    }\r\n\r\n    getURL(endpoint) {\r\n        return Constants.serverEndpoint + modelsMainPath + endpoint;\r\n    }\r\n\r\n    createModel() {\r\n        axios.post(\r\n            this.getURL(ModelCommand.create),\r\n            {\r\n                'vendor':this.state.createdModel[ModelInput.Vendor],\r\n                'model':this.state.createdModel[ModelInput.ModelNumber],\r\n                'height':this.state.createdModel[ModelInput.Height],\r\n                'displayColor':this.state.createdModel[ModelInput.DisplayColor],\r\n                'ethernetPorts':this.state.createdModel[ModelInput.EthernetPorts],\r\n                'powerPorts':this.state.createdModel[ModelInput.PowerPorts],\r\n                'cpu':this.state.createdModel[ModelInput.CPU],\r\n                'memory':this.state.createdModel[ModelInput.Memory],\r\n                'storage':this.state.createdModel[ModelInput.Storage],\r\n                'comments':this.state.createdModel[ModelInput.Comment],\r\n            }\r\n            ).then(response => this.setState({ items:response }));\r\n    }\r\n\r\n    deleteModel(vendor, modelNum) {\r\n        axios.post(\r\n            this.getURL(ModelCommand.delete),\r\n            {\r\n                'vendor':vendor,\r\n                'model':modelNum,\r\n            }\r\n            ).then(response => console.log(response));\r\n    }\r\n\r\n    detailViewModel(vendor, modelNum) {\r\n        axios.post(\r\n            this.getURL(ModelCommand.detailView),\r\n            {\r\n                'vendor':vendor,\r\n                'model':modelNum,\r\n            }\r\n            ).then(response => console.log(response));\r\n    }\r\n\r\n    viewModel(vendor, modelNum) {\r\n        axios.post(\r\n            this.getURL(ModelCommand.view),\r\n            {\r\n                'vendor':vendor,\r\n                'model':modelNum,\r\n            }\r\n            ).then(response => console.log(response));\r\n    }\r\n\r\n    downloadTable() {\r\n        this.csvLink.link.click();\r\n    }\r\n\r\n    openCreateModal() {\r\n        this.setState({showCreateModal: true});\r\n    }\r\n\r\n    openImportModal() {\r\n        this.setState({showImportModal: true});\r\n    }\r\n\r\n    updateModelCreator(event) {\r\n        this.state.createdModel[event.target.name] = event.target.value;\r\n        this.forceUpdate()  \r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    onClick={this.openCreateModal.bind(this)}\r\n                >\r\n                    Create\r\n                </Button>\r\n                <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    startIcon={<CloudUploadIcon />}\r\n                    onClick={this.openImportModal.bind(this)}\r\n                >\r\n                    Import\r\n                </Button>\r\n                <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    startIcon={<CloudDownloadIcon />}\r\n                    onClick={this.downloadTable.bind(this)}\r\n                >\r\n                    Export\r\n                </Button>\r\n                <CSVLink\r\n                    data={this.state.csvData}\r\n                    filename={modelDownloadFileName}\r\n                    className=\"hidden\"\r\n                    ref={(r) => this.csvLink = r}\r\n                    target=\"_blank\"/>\r\n                <Modal\r\n                    aria-labelledby=\"simple-modal-title\"\r\n                    aria-describedby=\"simple-modal-description\"\r\n                    open={this.state.showCreateModal}\r\n                    onClose={() => (this.setState({showCreateModal:false}))}\r\n                >\r\n                    <div>\r\n                            \r\n                        <TextField id=\"standard-basic\" name={ModelInput.Vendor} label={columns[0]} onChange={this.updateModelCreator.bind(this)}/>\r\n                        <TextField id=\"standard-basic\" name={ModelInput.ModelNumber} label={columns[1]} onChange={this.updateModelCreator.bind(this)}/>\r\n                        <TextField id=\"standard-basic\" name={ModelInput.Height} label={columns[2]} onChange={this.updateModelCreator.bind(this)}/>\r\n                        <TextField id=\"standard-basic\" name={ModelInput.DisplayColor} label={columns[3]} onChange={this.updateModelCreator.bind(this)}/>\r\n                        <TextField id=\"standard-basic\" name={ModelInput.EthernetPorts} label={columns[4]} onChange={this.updateModelCreator.bind(this)}/>\r\n                        <TextField id=\"standard-basic\" name={ModelInput.PowerPorts} label={columns[5]} onChange={this.updateModelCreator.bind(this)}/>\r\n                        <TextField id=\"standard-basic\" name={ModelInput.CPU} label={columns[6]} onChange={this.updateModelCreator.bind(this)}/>\r\n                        <TextField id=\"standard-basic\" name={ModelInput.Memory} label={columns[7]} onChange={this.updateModelCreator.bind(this)}/>\r\n                        <TextField id=\"standard-basic\" name={ModelInput.Storage} label={columns[8]} onChange={this.updateModelCreator.bind(this)}/>\r\n                        <TextField id=\"standard-basic\" name={ModelInput.Comment} label={columns[9]} onChange={this.updateModelCreator.bind(this)}/>\r\n\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            onClick={this.createModel.bind(this)}\r\n                        >\r\n                            Create\r\n                        </Button>\r\n                    </div>\r\n                </Modal>\r\n                <Modal\r\n                    aria-labelledby=\"simple-modal-title\"\r\n                    aria-describedby=\"simple-modal-description\"\r\n                    open={this.state.showImportModal}\r\n                    onClose={() => (this.setState({showImportModal:false}))}\r\n                >\r\n                    <div>\r\n                        <input type='file' accept=\".csv\" />\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                        >\r\n                            Upload\r\n                        </Button>\r\n                    </div>\r\n                </Modal>\r\n                <Filters filters={columns}/>\r\n                <TableView \r\n                    columns={columns}\r\n                    vals={this.state.items}\r\n                />\r\n            </div>\r\n    );\r\n    }    \r\n}","export enum UserInput {\r\n    Username='username',\r\n    Password='password',\r\n    Email='email',\r\n    DisplayName='displayName',\r\n}","export enum UserCommand {\r\n    create = 'create/',\r\n    delete = 'delete/',\r\n    edit = 'edit/',\r\n    view = 'view/',\r\n    detailView = 'detailView/',\r\n}","export enum InstanceInput {\r\n    Model = 'model',\r\n    Hostname = 'hostname',\r\n    Rack = 'rack',\r\n    RackU = 'rackU',\r\n    Owner = 'owner',\r\n    Comment = 'comment',\r\n}","export enum InstanceCommand {\r\n    create = 'create/',\r\n    delete = 'delete/',\r\n    edit = 'edit/',\r\n    view = 'view/',\r\n    detailView = 'detailView/',\r\n}","import React from 'react';\r\nimport axios from 'axios';\r\nimport { UserInput } from '../enums/userInputs.ts'\r\nimport { UserCommand } from '../enums/userCommands.ts'\r\nimport * as Constants from '../Constants';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport Button from '@material-ui/core/Button';\r\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\r\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\r\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\r\nimport CloudDownloadIcon from '@material-ui/icons/CloudDownload';\r\nimport TableView from '../helpers/TableView';\r\nimport Filters from '../helpers/Filters';\r\nimport { CSVLink } from \"react-csv\";\r\n\r\nconst columns = [\r\n    \"Username\",\r\n    \"Display Name\",\r\n    \"Email\",\r\n]\r\n\r\nconst usersMainPath = 'users/';\r\nconst modelDownloadFileName = 'models.csv';\r\n\r\nconst csvData = [\r\n    [\"firstname\", \"lastname\", \"email\"],\r\n    [\"Ahmed\", \"Tomi\", \"ah@smthing.co.com\"],\r\n    [\"Raed\", \"Labes\", \"rl@smthing.co.com\"],\r\n    [\"Yezzi\", \"Min l3b\", \"ymin@cocococo.com\"]\r\n  ];\r\n\r\nexport default class UsersView extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            showCreateModal:false,\r\n            showImportModal:false,\r\n            items:[],\r\n            instanceToken:\"\",\r\n            createdUser: {\r\n                'username':'',\r\n                'email':'',\r\n                'displayName':'',\r\n            },\r\n            deleteUsername:'',\r\n            viewUsername:'',\r\n        };\r\n    }\r\n\r\n    downloadTable() {\r\n        this.csvLink.link.click();\r\n    }\r\n\r\n    getURL(endpoint) {\r\n        return Constants.serverEndpoint + usersMainPath + endpoint;\r\n    }\r\n\r\n    createUser() {\r\n        axios.post(\r\n            this.getURL(UserCommand.create),\r\n            {\r\n                'username':this.state.createdUser[UserInput.Username],\r\n                'email':this.state.createdUser[UserInput.Email],\r\n                'displayName':this.state.createdUser[UserInput.DisplayName],\r\n            }\r\n            ).then(response => (this.setState({ items:response })));\r\n    }\r\n\r\n    deleteUser() {\r\n        axios.post(\r\n            this.getURL(UserCommand.delete),\r\n            {\r\n                'username':this.state.deleteUsername,\r\n            }\r\n            ).then(response => console.log(response));\r\n    }\r\n\r\n    detailViewUser() {\r\n        axios.post(\r\n            this.getURL(UserCommand.detailView),\r\n            {\r\n                'username':this.state.viewUsername,\r\n            }\r\n            ).then(response => console.log(response));\r\n    }\r\n\r\n    viewUser() {\r\n        axios.post(\r\n            this.getURL(UserCommand.view),\r\n            {\r\n                'username':this.state.viewUsername,\r\n            }\r\n            ).then(response => console.log(response));\r\n    }\r\n\r\n\r\n    openCreateModal() {\r\n        this.setState({showCreateModal: true});\r\n    }\r\n\r\n    openImportModal() {\r\n        this.setState({showImportModal: true});\r\n    }\r\n\r\n    updateUserCreator(event) {\r\n        this.state.createdUser[event.target.name] = event.target.value;\r\n        this.forceUpdate()  \r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    onClick={this.openCreateModal.bind(this)}\r\n                >\r\n                    Create\r\n                </Button>\r\n                <Modal\r\n                    aria-labelledby=\"simple-modal-title\"\r\n                    aria-describedby=\"simple-modal-description\"\r\n                    open={this.state.showCreateModal}\r\n                    onClose={() => (this.setState({showCreateModal:false}))}\r\n                >\r\n                    <div>   \r\n                        <TextField id=\"standard-basic\" name={UserInput.Vendor} label={columns[0]} onChange={this.updateUserCreator.bind(this)}/>\r\n                        <TextField id=\"standard-basic\" name={UserInput.UserNumber} label={columns[1]} onChange={this.updateUserCreator.bind(this)}/>\r\n                        <TextField id=\"standard-basic\" name={UserInput.Height} label={columns[2]} onChange={this.updateUserCreator.bind(this)}/>\r\n\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            onClick={this.createUser.bind(this)}\r\n                        >\r\n                            Create\r\n                        </Button>\r\n                    </div>\r\n                </Modal>\r\n                <Modal\r\n                    aria-labelledby=\"simple-modal-title\"\r\n                    aria-describedby=\"simple-modal-description\"\r\n                    open={this.state.showImportModal}\r\n                    onClose={() => (this.setState({showImportModal:false}))}\r\n                >\r\n                    <div>\r\n                        <input type='file' accept=\".csv\" />\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                        >\r\n                            Upload\r\n                        </Button>\r\n                    </div>\r\n                </Modal>\r\n                <ExpansionPanel>\r\n                    <ExpansionPanelSummary\r\n                        expandIcon={<ExpandMoreIcon />}\r\n                        aria-controls=\"panel1a-content\"\r\n                        id=\"panel1a-header\"\r\n                    >\r\n                        <Typography>Filters</Typography>\r\n                    </ExpansionPanelSummary>\r\n                    <ExpansionPanelDetails>\r\n                        <Filters filters={columns}/>\r\n                    </ExpansionPanelDetails>\r\n                </ExpansionPanel>\r\n                <TableView \r\n                    columns={columns}\r\n                    vals={this.state.items}\r\n                />\r\n            </div>\r\n    );\r\n    }    \r\n}","import React from 'react';\r\nimport axios from 'axios';\r\nimport { InstanceInput } from '../enums/instanceInputs.ts'\r\nimport { InstanceCommand } from '../enums/instanceCommands.ts'\r\nimport * as Constants from '../Constants';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport Button from '@material-ui/core/Button';\r\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\r\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\r\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\r\nimport CloudDownloadIcon from '@material-ui/icons/CloudDownload';\r\nimport TableView from '../helpers/TableView';\r\nimport Filters from '../helpers/Filters';\r\nimport { CSVLink } from \"react-csv\";\r\n\r\nconst columns = [\r\n    \"Model\",\r\n    \"Hostname\",\r\n    \"Rack\",\r\n    \"Rack U\",\r\n    \"Owner\",\r\n    \"Comments\",\r\n]\r\n\r\nconst instancesMainPath = 'instances/';\r\nconst modelDownloadFileName = 'models.csv';\r\n\r\nconst csvData = [\r\n    [\"firstname\", \"lastname\", \"email\"],\r\n    [\"Ahmed\", \"Tomi\", \"ah@smthing.co.com\"],\r\n    [\"Raed\", \"Labes\", \"rl@smthing.co.com\"],\r\n    [\"Yezzi\", \"Min l3b\", \"ymin@cocococo.com\"]\r\n  ];\r\n\r\nexport default class InstancesView extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            showCreateModal:false,\r\n            showImportModal:false,\r\n            items:[],\r\n            instanceToken:\"\",\r\n            createdInstance: {\r\n                'model':'',\r\n                'hostname':'',\r\n                'rack':'',\r\n                'rackU':'',\r\n                'owner':'',\r\n                'comment':'',\r\n            },\r\n            deleteInstanceRack:'',\r\n            deleteInstanceRackU:'',\r\n        };\r\n    }\r\n\r\n    downloadTable() {\r\n        this.csvLink.link.click();\r\n    }\r\n\r\n    getURL(endpoint) {\r\n        return Constants.serverEndpoint + instancesMainPath + endpoint;\r\n    }\r\n\r\n    createInstance() {\r\n        axios.post(\r\n            this.getURL(InstanceCommand.create),\r\n            {\r\n                'model':this.state.createdInstance[InstanceInput.Model],\r\n                'hostname':this.state.createdInstance[InstanceInput.Hostname],\r\n                'rack':this.state.createdInstance[InstanceInput.Rack],\r\n                'rackU':this.state.createdInstance[InstanceInput.RackU],\r\n                'owner':this.state.createdInstance[InstanceInput.Owner],\r\n                'comment':this.state.createdInstance[InstanceInput.Comment],\r\n            }\r\n            ).then(response => (this.setState({ items:response })));\r\n    }\r\n\r\n    deleteInstance() {\r\n        axios.post(\r\n            this.getURL(InstanceCommand.delete),\r\n            {\r\n                'rack':this.state.deleteInstanceRack,\r\n                'rackU':this.state.deleteInstanceRackU\r\n            }\r\n            ).then(response => console.log(response));\r\n    }\r\n\r\n    detailViewInstance() {\r\n        axios.post(\r\n            this.getURL(InstanceCommand.detailView),\r\n            {\r\n                'rack':this.state.deleteInstanceRack,\r\n                'rackU':this.state.deleteInstanceRackU\r\n            }\r\n            ).then(response => console.log(response));\r\n    }\r\n\r\n    viewInstance() {\r\n        axios.post(\r\n            this.getURL(InstanceCommand.view),\r\n            {\r\n                'rack':this.state.deleteInstanceRack,\r\n                'rackU':this.state.deleteInstanceRackU\r\n            }\r\n            ).then(response => console.log(response));\r\n    }\r\n\r\n\r\n    openCreateModal() {\r\n        this.setState({showCreateModal: true});\r\n    }\r\n\r\n    openImportModal() {\r\n        this.setState({showImportModal: true});\r\n    }\r\n\r\n    updateInstanceCreator(event) {\r\n        this.state.createdInstance[event.target.name] = event.target.value;\r\n        this.forceUpdate()  \r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    onClick={this.openCreateModal.bind(this)}\r\n                >\r\n                    Create\r\n                </Button>\r\n                <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    startIcon={<CloudUploadIcon />}\r\n                    onClick={this.openImportModal.bind(this)}\r\n                >\r\n                    Import\r\n                </Button>\r\n                <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    startIcon={<CloudDownloadIcon />}\r\n                    onClick={this.downloadTable.bind(this)}\r\n                >\r\n                    Export\r\n                </Button>\r\n                <CSVLink\r\n                    data={csvData}\r\n                    filename={modelDownloadFileName}\r\n                    className=\"hidden\"\r\n                    ref={(r) => this.csvLink = r}\r\n                    target=\"_blank\"/>\r\n                <Modal\r\n                    aria-labelledby=\"simple-modal-title\"\r\n                    aria-describedby=\"simple-modal-description\"\r\n                    open={this.state.showCreateModal}\r\n                    onClose={() => (this.setState({showCreateModal:false}))}\r\n                >\r\n                    <div>\r\n                            \r\n                        <TextField id=\"standard-basic\" name={InstanceInput.Vendor} label={columns[0]} onChange={this.updateInstanceCreator.bind(this)}/>\r\n                        <TextField id=\"standard-basic\" name={InstanceInput.InstanceNumber} label={columns[1]} onChange={this.updateInstanceCreator.bind(this)}/>\r\n                        <TextField id=\"standard-basic\" name={InstanceInput.Height} label={columns[2]} onChange={this.updateInstanceCreator.bind(this)}/>\r\n                        <TextField id=\"standard-basic\" name={InstanceInput.DisplayColor} label={columns[3]} onChange={this.updateInstanceCreator.bind(this)}/>\r\n                        <TextField id=\"standard-basic\" name={InstanceInput.EthernetPorts} label={columns[4]} onChange={this.updateInstanceCreator.bind(this)}/>\r\n                        <TextField id=\"standard-basic\" name={InstanceInput.PowerPorts} label={columns[5]} onChange={this.updateInstanceCreator.bind(this)}/>\r\n\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            onClick={this.createInstance.bind(this)}\r\n                        >\r\n                            Create\r\n                        </Button>\r\n                    </div>\r\n                </Modal>\r\n                <Modal\r\n                    aria-labelledby=\"simple-modal-title\"\r\n                    aria-describedby=\"simple-modal-description\"\r\n                    open={this.state.showImportModal}\r\n                    onClose={() => (this.setState({showImportModal:false}))}\r\n                >\r\n                    <div>\r\n                        <input type='file' accept=\".csv\" />\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                        >\r\n                            Upload\r\n                        </Button>\r\n                    </div>\r\n                </Modal>\r\n                <ExpansionPanel>\r\n                    <ExpansionPanelSummary\r\n                        expandIcon={<ExpandMoreIcon />}\r\n                        aria-controls=\"panel1a-content\"\r\n                        id=\"panel1a-header\"\r\n                    >\r\n                        <Typography>Filters</Typography>\r\n                    </ExpansionPanelSummary>\r\n                    <ExpansionPanelDetails>\r\n                        <Filters filters={columns}/>\r\n                    </ExpansionPanelDetails>\r\n                </ExpansionPanel>\r\n                <TableView \r\n                    columns={columns}\r\n                    vals={this.state.items}\r\n                />\r\n            </div>\r\n    );\r\n    }    \r\n}","import React from 'react';\r\nimport TableView from '../helpers/TableView';\r\n\r\nconst columns = [\r\n    \"Vendor\",\r\n    \"Model Number\",\r\n    \"Height (U)\",\r\n    \"Display Color\",\r\n    \"Ethernet Ports\",\r\n    \"Power Ports\",\r\n    \"CPU\",\r\n    \"Memory\",\r\n    \"Storage\",\r\n    \"Comments\",\r\n]\r\n\r\nexport default function RacksView(props) {\r\n    return (<div></div>);\r\n}","import React from 'react';\r\nimport TableView from '../helpers/TableView';\r\n\r\nexport default function StatisticsView(props) {\r\n    return (<div></div>);\r\n}","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\nimport ModelsView from './pages/ModelsView';\r\nimport UsersView from './pages/UsersView';\r\nimport InstancesView from './pages/InstancesView';\r\nimport RacksView from './pages/RacksView';\r\nimport StatisticsView from './pages/StatisticsView';\r\nimport Button from '@material-ui/core/Button';\r\nimport Logout from './helpers/Logout';\r\n\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <Typography\r\n      component=\"div\"\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`simple-tabpanel-${index}`}\r\n      aria-labelledby={`simple-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && <Box p={3}>{children}</Box>}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n  children: PropTypes.node,\r\n  index: PropTypes.any.isRequired,\r\n  value: PropTypes.any.isRequired,\r\n};\r\n\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `simple-tab-${index}`,\r\n    'aria-controls': `simple-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n  tab: {\r\n    flexGrow: 1,\r\n  },\r\n  button:{\r\n    flexGrow: 1,\r\n  }\r\n}));\r\n\r\nexport default function TabManager() {\r\n  const classes = useStyles();\r\n  const [value, setValue] = React.useState(0);\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\">\r\n        <Tabs value={value} onChange={handleChange}>\r\n          <Tab className={classes.tab} label=\"Models\" {...a11yProps(0)} />\r\n          <Tab className={classes.tab} label=\"Instances\" {...a11yProps(1)} />\r\n          <Tab className={classes.tab} label=\"Racks\" {...a11yProps(2)} />\r\n          <Tab className={classes.tab} label=\"Statistics\" {...a11yProps(2)} />\r\n          <Tab className={classes.tab} label=\"Users\" {...a11yProps(2)}  />\r\n          <Button \r\n           className={classes.button} \r\n           variant=\"contained\" \r\n           color=\"secondary\"\r\n           onClick={Logout()}\r\n           >\r\n              Logout\r\n          </Button>\r\n        </Tabs>\r\n      </AppBar>\r\n      <TabPanel value={value} index={0}>\r\n        <ModelsView />\r\n      </TabPanel>\r\n      <TabPanel value={value} index={1}>\r\n        <InstancesView />\r\n      </TabPanel>\r\n      <TabPanel value={value} index={2}>\r\n        <RacksView />\r\n      </TabPanel>\r\n      <TabPanel value={value} index={3}>\r\n        <StatisticsView />\r\n      </TabPanel>\r\n      <TabPanel value={value} index={4}>\r\n        <UsersView />\r\n      </TabPanel>\r\n    </div>\r\n  );\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './stylesheets/index.css';\nimport PageSelector from './javascript/PageSelector';\n\nReactDOM.render(<PageSelector />, document.getElementById('root'));\n","import React from \"react\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route\r\n} from \"react-router-dom\";\r\nimport Login from \"./Login\";\r\nimport TabManager from \"./TabManager\";\r\n\r\nexport default function PageSelector() {\r\n  return (\r\n    <Router>\r\n        <Switch>\r\n          <Route path=\"/\">\r\n            <TabManager />\r\n          </Route>\r\n          <Route path=\"/homepage\">\r\n            <Login />\r\n          </Route>\r\n        </Switch>\r\n    </Router>\r\n  );\r\n}\r\n"],"sourceRoot":""}
