{"version":3,"sources":["javascript/enums/privilegeTypes.ts","javascript/Constants.jsx","javascript/helpers/functions/GetURL.jsx","javascript/enums/modelCommands.ts","javascript/enums/modelInputs.ts","javascript/helpers/StatusDisplay.jsx","javascript/errors/ErrorBoundry.jsx","javascript/Login.jsx","javascript/enums/userCommands.ts","javascript/enums/userInputs.ts","javascript/helpers/TableView.jsx","javascript/helpers/ButtonMenu.jsx","javascript/helpers/Filters.jsx","javascript/helpers/UploadModal.jsx","javascript/helpers/DetailedView.jsx","javascript/helpers/CreateModal.jsx","javascript/pages/ModelsView.jsx","javascript/pages/UsersView.jsx","javascript/enums/instanceCommands.ts","javascript/enums/instanceInputs.ts","javascript/pages/InstancesView.jsx","javascript/enums/rackCommands.ts","javascript/enums/statsCommands.ts","javascript/pages/RacksView.jsx","javascript/helpers/functions/JSONtoArr.jsx","javascript/pages/StatisticsView.jsx","javascript/Tabs.jsx","javascript/PageSelector.jsx","index.jsx"],"names":["Privilege","serverEndpoint","RackX","RackY","getURL","path","endpoint","Constants","ModelCommand","ModelInput","StatusDisplay","props","state","Collapse","in","this","open","Alert","severity","action","IconButton","aria-label","color","size","onClick","closeStatus","fontSize","message","React","Component","ErrorBoundary","hasError","error","errorInfo","children","Login","username","password","statusMessage","showStatus","statusSeverity","closeShowStatus","bind","submitCredentials","axios","post","then","response","data","setState","loginFunc","event","target","value","TextField","id","label","variant","required","ref","onChange","updateUsername","type","updatePassword","Button","UserCommand","UserInput","TableView","showDetailedView","TableContainer","component","Paper","Table","className","minWidth","TableHead","TableRow","columns","map","col","TableCell","TableBody","vals","row","index","keys","key","scope","ButtonMenu","openCreateModal","startIcon","openImportModal","downloadTable","Filters","filters","hasOwnProperty","forceUpdate","search","filter","InputBase","placeholder","inputProps","updateSearchText","UploadModal","Modal","style","top","left","transform","background","aria-labelledby","aria-describedby","showImportModal","onClose","closeImportModal","accept","chooseFile","uploadFile","DetailedView","showConfirmationBox","closeModal","confirmDelete","deleteItem","delete","closeDetailedView","loading","CircularProgress","inputs","input","name","disabled","updateModelEdited","defaultValue","defaultValues","edit","CreateModal","showCreateModal","closeCreateModal","useAutocomplete","Autocomplete","options","includeInputInList","freeSolo","renderInput","params","updateModelCreator","onBlur","fullWidth","createModel","ModelsView","items","createdModel","createdVendor","createdModelNum","createdHeight","createdDispClr","createdEthPorts","createdPwrPorts","createdCPU","createdMem","createdStorage","createdComments","deleteVendor","deleteModel","viewVendor","viewModel","searchText","searchVendor","searchModelNum","searchHeight","csvData","importedFile","detailViewLoading","detailedValues","originalVendor","originalModelNumber","originalHeight","vendorsList","madeVendorQuery","editModel","getVendorList","sendUploadedFile","defaults","headers","common","token","privilege","create","Vendor","model_number","Height","display_color","eth_ports","power_ports","CPU","Memory","Storage","Comment","searchModels","vendor","modelNum","detailView","get","VENDOR_VALUES","results","UPLOAD_FILE","EXPORT_FILE","csvLink","link","click","detailViewModel","FormData","append","files","ADMIN","filename","r","USER","InstanceCommand","InstanceInput","UsersView","createdUser","searchUsernm","searchEml","searchDspNm","searchPriv","deleteUsername","viewUser","originalUsername","createUser","editUser","deleteUser","detailViewUser","searchUsers","updateUserCreator","updateUserEdited","Username","Password","display_name","Email","RackCommand","InstancesView","createdInstance","deleteInstanceRack","deleteInstancerack_u","viewInstanceRack","viewInstancerack_u","searchModel","searchHostname","searchRack","searchRackU","originalRack","originalrack_u","modelList","madeModelQuery","createInstance","editInstance","deleteInstance","detailViewInstance","searchInstances","updateInstanceCreator","updateInstanceEdited","getModelList","Model","Hostname","Rack","RackU","Owner","rack","rack_u","GET_ALL_MODELS","StatsCommand","RacksView","startingRackLetter","endingRackLetter","startingRackNumber","endingRackNumber","getAllRacks","updateRacks","createRacks","deleteRacks","viewRacks","changeStartingLetter","changeEndingLetter","changeStartingNum","changeEndingNum","GET_ALL_RACKS","command","GET_RACK_DETAILS","racks","CREATE_RACKS","DELETE_RACKS","FormControl","Select","val","MenuItem","FormHelperText","ExpansionPanel","ExpansionPanelSummary","expandIcon","Typography","ExpansionPanelDetails","jsonToArr","incomingJSON","json","JSON","parse","e","Object","entries","length","constructor","push","tables","tableCols","StatisticsView","tableValues","totalUsage","spaceUsage","vendorUsage","modelUsage","ownerUsage","generateReport","GENERATE_REPORT","totalUsageRow","JSONtoArr","column","TabViewer","currentTabID","handleChange","newValue","AppBar","position","Tabs","Tab","flexGrow","logout","role","hidden","PageSelector","loggedIn","login","ReactDOM","render","document","getElementById"],"mappings":"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","file":"js/main.ea6b93e5.chunk.js","sourcesContent":["export enum Privilege  {\r\n    ADMIN = \"admin\",\r\n    USER = \"user\",\r\n};\r\n","/**\r\n * Constants file\r\n */\r\n\r\nexport const localServerEndpoint = 'http://localhost:4010/';\r\nexport const devServerEndpoint = 'https://parseltongue-dev.herokuapp.com/';\r\nexport const prodServerEndpoint = 'https://parseltongue-prod.herokuapp.com/';\r\n\r\nexport const serverEndpoint = devServerEndpoint;\r\n\r\nexport const RackX = [\r\n    'A', 'B', 'C', 'D', 'E',\r\n    'F', 'G', 'H', 'I', 'J',\r\n    'K', 'L', 'M', 'N', 'O',\r\n    'P', 'Q', 'R', 'S', 'T',\r\n    'W', 'X', 'Y', 'Z',\r\n]\r\n\r\nexport const RackY = [\r\n    1, 2, 3, 4, 5, 6, 7, 8, 9, 10,\r\n    11, 12, 13, 14, 15, 16, 17, 18, 19 , 20,\r\n    21, 22, 23, 24, 25, 26, 27, 28, 29, 30,\r\n    31, 32, 33, 34, 35, 36, 37, 38, 39, 40,\r\n    41, 42, 43, 44, 45, 46, 47, 48, 49, 50,\r\n    51, 52, 53, 54, 55, 56, 57, 58, 59, 60,\r\n]\r\n\r\nexport const testModelArray = [\r\n    {\r\n        'vendor':'a',\r\n        'model_number':'a',\r\n        'height':'a',\r\n        'display_color':'a',\r\n        'eth_ports':'a',\r\n        'power_ports':'a',\r\n        'cpu':'a',\r\n        'memory':'a',\r\n        'storage':'a',\r\n        'comments':'a',\r\n    },{\r\n        'vendor':'b',\r\n        'model_number':'b',\r\n        'height':'b',\r\n        'display_color':'b',\r\n        'eth_ports':'b',\r\n        'power_ports':'b',\r\n        'cpu':'b',\r\n        'memory':'b',\r\n        'storage':'b',\r\n        'comments':'b',\r\n    },{\r\n        'vendor':'c',\r\n        'model_number':'c',\r\n        'height':'c',\r\n        'display_color':'c',\r\n        'eth_ports':'c',\r\n        'power_ports':'c',\r\n        'cpu':'c',\r\n        'memory':'c',\r\n        'storage':'c',\r\n        'comments':'c',\r\n    },\r\n];\r\n\r\nexport const testUserArray = [\r\n    {\r\n        'username':'a',\r\n        'password':'a',\r\n        'display_name':'a',\r\n        'email':'a',\r\n        'privilege':'a',\r\n    },{\r\n        'username':'b',\r\n        'password':'b',\r\n        'display_name':'b',\r\n        'email':'b',\r\n        'privilege':'b',\r\n    },{\r\n        'username':'c',\r\n        'password':'c',\r\n        'display_name':'c',\r\n        'email':'c',\r\n        'privilege':'c',\r\n    },\r\n];\r\n\r\nexport const testInstanceArray = [\r\n    {\r\n        'model':'a',\r\n        'hostname':'a',\r\n        'rack':'a',\r\n        'rack_u':'a',\r\n        'owner':'a',\r\n        'comment':'a',\r\n    },{\r\n        'model':'b',\r\n        'hostname':'b',\r\n        'rack':'b',\r\n        'rack_u':'b',\r\n        'owner':'b',\r\n        'comment':'b',\r\n    },{\r\n        'model':'c',\r\n        'hostname':'c',\r\n        'rack':'c',\r\n        'rack_u':'c',\r\n        'owner':'c',\r\n        'comment':'c',\r\n    },\r\n];\r\n","import * as Constants from '../../Constants';\r\n\r\nexport default function getURL(path, endpoint) {\r\n    return Constants.serverEndpoint + path + endpoint;\r\n}\r\n","export enum ModelCommand {\r\n    create = 'create/',\r\n    delete = 'delete/',\r\n    edit = 'edit/',\r\n    view = 'view/',\r\n    detailView = 'detailView/',\r\n    search = 'search/',\r\n    VENDOR_VALUES = 'assistedvendor/',\r\n    UPLOAD_FILE = 'import/',\r\n    EXPORT_FILE = 'export/'\r\n}\r\n","export enum ModelInput {\r\n    Vendor = 'vendor',\r\n    model_number = 'model_number',\r\n    Height = 'height',\r\n    display_color = 'display_color',\r\n    eth_ports = 'eth_ports',\r\n    power_ports = 'power_ports',\r\n    CPU = 'cpu',\r\n    Memory = 'memory',\r\n    Storage = 'storage',\r\n    Comment = 'comments'\r\n}\r\n","import React from 'react';\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport Button from '@material-ui/core/Button';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\n\r\nexport default class StatusDisplay extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n\r\n        };\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Collapse in={this.props.open}>\r\n                    <Alert\r\n                        severity={this.props.severity}\r\n                        action={\r\n                        <IconButton\r\n                            aria-label=\"close\"\r\n                            color=\"inherit\"\r\n                            size=\"small\"\r\n                            onClick={this.props.closeStatus}\r\n                        >\r\n                            <CloseIcon fontSize=\"inherit\" />\r\n                        </IconButton>\r\n                        }\r\n                    >\r\n                        {this.props.message}\r\n                    </Alert>\r\n                </Collapse>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\r\n\r\nexport default class ErrorBoundary extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = { hasError: false };\r\n    }\r\n\r\n    static getDerivedStateFromError(error) {\r\n      // Update state so the next render will show the fallback UI.\r\n      return \"An unforseen error occurred. Please refresh the page and try again later.\";\r\n    }\r\n\r\n    componentDidCatch(error, errorInfo) {\r\n      // You can also log the error to an error reporting service\r\n      //logErrorToMyService(error, errorInfo);\r\n    }\r\n\r\n    render() {\r\n      if (this.state.hasError) {\r\n        // You can render any custom fallback UI\r\n        return <h1>Something went wrong.</h1>;\r\n      }\r\n\r\n      return this.props.children;\r\n    }\r\n}\r\n","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport axios from 'axios';\r\nimport getURL from './helpers/functions/GetURL';\r\nimport * as Constants from './Constants';\r\nimport { Privilege } from './enums/privilegeTypes.ts'\r\nimport StatusDisplay from './helpers/StatusDisplay';\r\nimport ErrorBoundry from './errors/ErrorBoundry';\r\n\r\nconst loginMainPath = 'users/';\r\n\r\nexport default class Login extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            username:'',\r\n            password:'',\r\n            statusMessage:'',\r\n            showStatus:false,\r\n            statusSeverity:'',\r\n        };\r\n\r\n        this.closeShowStatus = this.closeShowStatus.bind(this);\r\n        this.submitCredentials = this.submitCredentials.bind(this);\r\n    }\r\n\r\n    submitCredentials() {\r\n        axios.post(\r\n            getURL(loginMainPath, 'authenticate'),\r\n            {\r\n                \"username\":this.state.username,\r\n                \"password\":this.state.password,\r\n            }\r\n            ).then(response => {\r\n                var valid = response.data['message'];\r\n                if (valid == 'success') {\r\n                    this.setState({ message: '' });\r\n                    this.props.loginFunc(response.data['token'], response.data['privilege']);\r\n                } else {\r\n                    this.setState({ showStatus:true, statusMessage:response.data['message'] });\r\n                }\r\n            });\r\n        //this.props.loginFunc('token', Privilege.ADMIN);\r\n    }\r\n\r\n    updateUsername(event) {\r\n        this.setState({ username: event.target.value })\r\n    }\r\n\r\n    updatePassword(event) {\r\n        this.setState({ password: event.target.value })\r\n    }\r\n\r\n    closeShowStatus() {\r\n        this.setState({ showStatus: false })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <ErrorBoundry>\r\n                <StatusDisplay\r\n                    open={this.state.showStatus}\r\n                    severity={this.state.statusSeverity}\r\n                    closeStatus={this.closeShowStatus}\r\n                    message={this.state.statusMessage}\r\n                />\r\n                <TextField\r\n                    id=\"outlined-basic\"\r\n                    label=\"Username\"\r\n                    variant=\"outlined\"\r\n                    required=\"true\"\r\n                    ref='username'\r\n                    onChange={this.updateUsername.bind(this)}\r\n                />\r\n                <TextField\r\n                    id=\"outlined-basic\"\r\n                    label=\"Password\"\r\n                    variant=\"outlined\"\r\n                    required=\"true\"\r\n                    ref='password'\r\n                    type=\"password\"\r\n                    onChange={this.updatePassword.bind(this)}\r\n                />\r\n                <Button\r\n                    onClick={this.submitCredentials}\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                >\r\n                    Sign In\r\n                </Button>\r\n                </ErrorBoundry>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","export enum UserCommand {\r\n    create = 'create/',\r\n    delete = 'delete/',\r\n    edit = 'edit/',\r\n    view = 'view/',\r\n    detailView = 'detailView/',\r\n    search='search/',\r\n}\r\n","export enum UserInput {\r\n    Username='username',\r\n    Password='password',\r\n    Email='email',\r\n    display_name='display_name',\r\n    Privilege='privilege',\r\n}\r\n","import React from 'react';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nexport default class TableView extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n\r\n    };\r\n  }\r\n\r\n  showDetailedView(event) {\r\n    this.props.showDetailedView(event.target.id);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <TableContainer component={Paper}>\r\n          <Table className={{minWidth: 650}} aria-label=\"simple table\">\r\n            <TableHead>\r\n              <TableRow >\r\n                {this.props.columns.map(col => (<TableCell><span id={col}>{col}</span></TableCell>))}\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {this.props.vals.map((row, index)=> (\r\n              <TableRow>\r\n                {this.props.keys.map(key => (<TableCell scope=\"row\"><span id={index} onClick={this.showDetailedView.bind(this)}>{row[key]}</span></TableCell>))}\r\n              </TableRow>\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\r\nimport CloudDownloadIcon from '@material-ui/icons/CloudDownload';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nexport default class ButtonMenu extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n\r\n        };\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div>\r\n                <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    onClick={this.props.openCreateModal}\r\n                >\r\n                    Create\r\n                </Button>\r\n                <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    startIcon={<CloudUploadIcon />}\r\n                    onClick={this.props.openImportModal}\r\n                >\r\n                    Import\r\n                </Button>\r\n                <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    startIcon={<CloudDownloadIcon />}\r\n                    onClick={this.props.downloadTable}\r\n                >\r\n                    Export\r\n                </Button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nexport default class Filters extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            filters:{},\r\n        };\r\n    }\r\n\r\n    updateSearchText(event) {\r\n        if (this.state.filters.hasOwnProperty(event.target.id)) {\r\n            this.state.filters[event.target.id] = event.target.value;\r\n            this.forceUpdate();\r\n        } else {\r\n            var value = (event.target.value == null) ? '' : event.target.value;\r\n            this.state.filters[event.target.id] = event.target.value;\r\n            //this.state.filters.push({ key:event.target.id, value: value});\r\n            this.forceUpdate();\r\n        }\r\n    }\r\n\r\n    search() {\r\n        this.props.search(this.state.filters);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.props.filters.map((filter, index) => (\r\n                    <div>\r\n                        <SearchIcon />\r\n                        <InputBase\r\n                            placeholder={filter+\" filter\"}\r\n                            inputProps={{ 'aria-label': 'search' }}\r\n                            onChange={this.updateSearchText.bind(this)}\r\n                            id={filter}\r\n                        />\r\n                    </div>\r\n                ))\r\n                }\r\n                <div>\r\n                    <Button\r\n                        onClick={this.search.bind(this)}\r\n                    >\r\n                        Search\r\n                    </Button>\r\n                </div>\r\n                Click Search to populate table. Searching with empty filters searches over all values. Click on row values to see detailed view.\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Modal from '@material-ui/core/Modal';\r\n\r\nexport default class UploadModal extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n\r\n        };\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Modal\r\n                style={{top: `50%`,left: `50%`,transform: `translate(-50%, -50%)`, background: '#FFFFFF',}}\r\n                aria-labelledby=\"simple-modal-title\"\r\n                aria-describedby=\"simple-modal-description\"\r\n                open={this.props.showImportModal}\r\n                onClose={this.props.closeImportModal}\r\n            >\r\n                <div>\r\n                    <input type='file' accept=\".csv\" onChange={this.props.chooseFile} />\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        onClick={this.props.uploadFile}\r\n                    >\r\n                        Upload\r\n                    </Button>\r\n                </div>\r\n            </Modal>\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from '@material-ui/core/Button';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nexport default class DetailedView extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            showConfirmationBox:false,\r\n        };\r\n\r\n        this.closeModal = this.closeModal.bind(this);\r\n        this.confirmDelete = this.confirmDelete.bind(this);\r\n        this.deleteItem = this.deleteItem.bind(this);\r\n    }\r\n\r\n    confirmDelete() {\r\n        this.setState({ showConfirmationBox: true });\r\n    }\r\n\r\n    closeModal() {\r\n        this.setState({showConfirmationBox:false,});\r\n    }\r\n\r\n    deleteItem() {\r\n        this.setState({ showConfirmationBox: false });\r\n        this.props.delete();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n        <div>\r\n            <Modal\r\n                style={{top: `50%`,left: `50%`,transform: `translate(-50%, -50%)`, background: '#FFFFFF',}}\r\n                aria-labelledby=\"simple-modal-title\"\r\n                aria-describedby=\"simple-modal-description\"\r\n                open={this.props.showDetailedView}\r\n                onClose={this.props.closeDetailedView}\r\n            >\r\n                {\r\n                this.props.loading ? <CircularProgress /> :\r\n                <div>\r\n                    {this.props.inputs.map(input => (\r\n                        <TextField name={input} disabled={this.props.disabled} id=\"standard-basic\" label={input} onChange={this.props.updateModelEdited} defaultValue={this.props.defaultValues[input]}/>\r\n                    ))}\r\n                    {this.props.disabled ? null:\r\n                    <div>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            onClick={this.props.edit}\r\n                            disabled={this.state.showConfirmationBox}\r\n                        >\r\n                            Save\r\n                        </Button>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            onClick={this.confirmDelete}\r\n                            disabled={this.state.showConfirmationBox}\r\n                        >\r\n                            Delete\r\n                        </Button>\r\n                    </div>}\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            onClick={this.props.closeDetailedView}\r\n                            disabled={this.state.showConfirmationBox}\r\n                        >\r\n                            Close\r\n                        </Button>\r\n\r\n                    {this.state.showConfirmationBox ? <div>\r\n                        Are you sure you wish to delete?\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            onClick={this.deleteItem}\r\n                        >\r\n                            Yes\r\n                        </Button>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            onClick={this.closeModal}\r\n                        >\r\n                            No\r\n                        </Button>\r\n                    </div>:null}\r\n                </div>}\r\n            </Modal>\r\n        </div>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from '@material-ui/core/Button';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\n\r\nexport default class CreateModal extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n\r\n        };\r\n    }\r\n\r\n    render() {\r\n        return (\r\n        <div>\r\n            <Modal\r\n                style={{top: `50%`,left: `50%`,transform: `translate(-50%, -50%)`, background: '#FFFFFF',}}\r\n                aria-labelledby=\"simple-modal-title\"\r\n                aria-describedby=\"simple-modal-description\"\r\n                open={this.props.showCreateModal}\r\n                onClose={this.props.closeCreateModal}\r\n            >\r\n                <div>\r\n                    {this.props.inputs.map((input, index) => (\r\n                        (index===0 && this.props.useAutocomplete) ? <Autocomplete\r\n                            id=\"combo-box-demo\"\r\n                            options={this.props.options}\r\n                            includeInputInList\r\n                            freeSolo\r\n                            renderInput={params => (\r\n                            <TextField {...params} label={input} name={input} onChange={this.props.updateModelCreator} onBlur={this.props.updateModelCreator} variant=\"outlined\" fullWidth />\r\n                            )}\r\n                        /> :\r\n                        <TextField id=\"standard-basic\" variant=\"outlined\" label={input} name={input} onChange={this.props.updateModelCreator}/>\r\n                    ))}\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        onClick={this.props.createModel}\r\n                    >\r\n                        Create\r\n                    </Button>\r\n                </div>\r\n            </Modal>\r\n        </div>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\nimport axios from 'axios';\r\nimport { ModelCommand } from '../enums/modelCommands.ts'\r\nimport { ModelInput } from '../enums/modelInputs.ts'\r\nimport { Privilege } from '../enums/privilegeTypes.ts'\r\nimport TableView from '../helpers/TableView';\r\nimport { CSVLink } from \"react-csv\";\r\nimport ButtonMenu from '../helpers/ButtonMenu';\r\nimport Filters from '../helpers/Filters';\r\nimport UploadModal from '../helpers/UploadModal';\r\nimport getURL from '../helpers/functions/GetURL';\r\nimport DetailedView from '../helpers/DetailedView';\r\nimport CreateModal from '../helpers/CreateModal';\r\nimport StatusDisplay from '../helpers/StatusDisplay';\r\nimport ErrorBoundray from '../errors/ErrorBoundry';\r\n\r\nconst inputs = [\r\n    'vendor',\r\n    'model_number',\r\n    'height',\r\n    'display_color',\r\n    'eth_ports',\r\n    'power_ports',\r\n    'cpu',\r\n    'memory',\r\n    'storage',\r\n    'comments',\r\n]\r\n\r\nconst columns = [\r\n    'vendor',\r\n    'model_number',\r\n    'height',\r\n]\r\n\r\nconst modelsMainPath = 'models/';\r\nconst modelDownloadFileName = 'models.csv';\r\n\r\nexport default class ModelsView extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n\r\n            // modals\r\n            showCreateModal:false,\r\n            showImportModal:false,\r\n\r\n            // table items\r\n            items:[], //Constants.testModelArray,\r\n\r\n            // vals for creating a new model\r\n            createdModel : {\r\n                'vendor':'',\r\n                'model_number':'',\r\n                'height':'',\r\n                'display_color':'',\r\n                'eth_ports':'',\r\n                'power_ports':'',\r\n                'cpu':'',\r\n                'memory':'',\r\n                'storage':'',\r\n                'comments':'',\r\n            },\r\n            createdVendor:'',\r\n            createdModelNum:'',\r\n            createdHeight:'',\r\n            createdDispClr:'',\r\n            createdEthPorts:'',\r\n            createdPwrPorts:'',\r\n            createdCPU:'',\r\n            createdMem:'',\r\n            createdStorage:'',\r\n            createdComments:'',\r\n\r\n            // vals for deleting a model\r\n            deleteVendor:'',\r\n            deleteModel:'',\r\n\r\n            // vals for viewing a model\r\n            viewVendor:'',\r\n            viewModel:'',\r\n\r\n            // searching a model\r\n            searchText:\"\",\r\n            searchVendor:'',\r\n            searchModelNum:'',\r\n            searchHeight:'',\r\n\r\n            // csv data\r\n            csvData:'',\r\n            importedFile:null,\r\n\r\n            // detailed view\r\n            showDetailedView: false,\r\n            detailViewLoading:false,\r\n            detailedValues : {\r\n                'vendor':'',\r\n                'model_number':'',\r\n                'height':'',\r\n                'display_color':'',\r\n                'eth_ports':'',\r\n                'power_ports':'',\r\n                'cpu':'',\r\n                'memory':'',\r\n                'storage':'',\r\n                'comments':'',\r\n            },\r\n            originalVendor:'',\r\n            originalModelNumber:'',\r\n            originalHeight:'',\r\n\r\n            showStatus:false,\r\n            statusSeverity:'',\r\n            statusMessage:'',\r\n\r\n            vendorsList:[],\r\n            madeVendorQuery:false,\r\n\r\n        };\r\n\r\n        this.openCreateModal = this.openCreateModal.bind(this);\r\n        this.openImportModal = this.openImportModal.bind(this);\r\n        this.downloadTable = this.downloadTable.bind(this);\r\n        this.updateSearchText = this.updateSearchText.bind(this);\r\n        this.search = this.search.bind(this);\r\n        this.closeImportModal = this.closeImportModal.bind(this);\r\n        this.closeCreateModal = this.closeCreateModal.bind(this);\r\n        this.showDetailedView = this.showDetailedView.bind(this);\r\n        this.editModel = this.editModel.bind(this);\r\n        this.closeDetailedView = this.closeDetailedView.bind(this);\r\n        this.updateModelEdited = this.updateModelEdited.bind(this);\r\n        this.closeCreateModal = this.closeCreateModal.bind(this);\r\n        this.createModel = this.createModel.bind(this);\r\n        this.updateModelCreator = this.updateModelCreator.bind(this);\r\n        this.deleteModel = this.deleteModel.bind(this);\r\n        this.closeShowStatus = this.closeShowStatus.bind(this);\r\n        this.getVendorList = this.getVendorList.bind(this);\r\n        this.chooseFile = this.chooseFile.bind(this);\r\n        this.uploadFile = this.uploadFile.bind(this);\r\n        this.sendUploadedFile = this.sendUploadedFile.bind(this);\r\n\r\n        axios.defaults.headers.common['token'] = this.props.token;\r\n        axios.defaults.headers.common['privilege'] = this.props.privilege;\r\n    }\r\n\r\n    createModel() {\r\n        axios.post(\r\n            getURL(modelsMainPath, ModelCommand.create),\r\n            {\r\n                'vendor':this.state.createdModel[ModelInput.Vendor],\r\n                'model_number':this.state.createdModel[ModelInput.model_number],\r\n                'height':this.state.createdModel[ModelInput.Height],\r\n                'display_color':this.state.createdModel[ModelInput.display_color],\r\n                'eth_ports':this.state.createdModel[ModelInput.eth_ports],\r\n                'power_ports':this.state.createdModel[ModelInput.power_ports],\r\n                'cpu':this.state.createdModel[ModelInput.CPU],\r\n                'memory':this.state.createdModel[ModelInput.Memory],\r\n                'storage':this.state.createdModel[ModelInput.Storage],\r\n                'comments':this.state.createdModel[ModelInput.Comment],\r\n            }\r\n            ).then(\r\n                response => {\r\n                    if (response.data.message === 'success') {\r\n                        this.setState({\r\n                            showStatus: true,\r\n                            statusMessage:'success',\r\n                            statusMessage: \"Successfully created model\",\r\n                            statusSeverity:\"success\",\r\n                            createdModel : {\r\n                                'vendor':'',\r\n                                'model_number':'',\r\n                                'height':'',\r\n                                'display_color':'',\r\n                                'eth_ports':'',\r\n                                'power_ports':'',\r\n                                'cpu':'',\r\n                                'memory':'',\r\n                                'storage':'',\r\n                                'comments':'',\r\n                            },\r\n                            showCreateModal:false,\r\n                        });\r\n                        this.getVendorList();\r\n                        this.searchModels();\r\n                    } else {\r\n                        this.setState({ showStatus: true, statusMessage: response.data.message, statusSeverity:\"error\" })\r\n                    }\r\n                });\r\n    }\r\n\r\n    editModel() {\r\n        axios.post(\r\n            getURL(modelsMainPath, ModelCommand.edit),\r\n            {\r\n                'vendorOriginal':this.state.originalVendor,\r\n                'model_numberOriginal':this.state.originalModelNumber,\r\n                'heightOriginal':this.state.originalHeight,\r\n\r\n                'vendor':this.state.detailedValues[ModelInput.Vendor],\r\n                'model_number':this.state.detailedValues[ModelInput.model_number],\r\n                'height':this.state.detailedValues[ModelInput.Height],\r\n                'display_color':this.state.detailedValues[ModelInput.display_color],\r\n                'eth_ports':this.state.detailedValues[ModelInput.eth_ports],\r\n                'power_ports':this.state.detailedValues[ModelInput.power_ports],\r\n                'cpu':this.state.detailedValues[ModelInput.CPU],\r\n                'memory':this.state.detailedValues[ModelInput.Memory],\r\n                'storage':this.state.detailedValues[ModelInput.Storage],\r\n                'comments':this.state.detailedValues[ModelInput.Comment],\r\n            }\r\n            ).then(\r\n                response => {\r\n                    if (response.data.message === 'success') {\r\n                        this.setState({\r\n                            showStatus: true,\r\n                            statusSeverity:'success',\r\n                            statusMessage: \"Successfully edited model\",\r\n                            originalVendor:'',\r\n                            originalModelNumber:'',\r\n                            originalHeight:'',\r\n                            detailedValues : {\r\n                                'vendor':'',\r\n                                'model_number':'',\r\n                                'height':'',\r\n                                'display_color':'',\r\n                                'eth_ports':'',\r\n                                'power_ports':'',\r\n                                'cpu':'',\r\n                                'memory':'',\r\n                                'storage':'',\r\n                                'comments':'',\r\n                            },\r\n                            showDetailedView:false\r\n                        });\r\n                        this.getVendorList();\r\n                        this.searchModels();\r\n                    } else {\r\n                        this.setState({ showStatus: true, statusMessage: response.data.message, statusSeverity:\"error\" })\r\n                    }\r\n                });\r\n    }\r\n\r\n\r\n    deleteModel() {\r\n        axios.post(\r\n            getURL(modelsMainPath, ModelCommand.delete),\r\n            {\r\n                'vendor':this.state.originalVendor,\r\n                'model_number':this.state.originalModelNumber,\r\n            }\r\n            ).then(\r\n                response => {\r\n                    if (response.data.message === 'success') {\r\n                        this.setState({\r\n                            showStatus: true,\r\n                            statusMessage:'success',\r\n                            statusMessage: \"Successfully deleted model\",\r\n                            detailedValues : {\r\n                                'vendor':'',\r\n                                'model_number':'',\r\n                                'height':'',\r\n                                'display_color':'',\r\n                                'eth_ports':'',\r\n                                'power_ports':'',\r\n                                'cpu':'',\r\n                                'memory':'',\r\n                                'storage':'',\r\n                                'comments':'',\r\n                            },\r\n                            showDetailedView:false\r\n                        });\r\n                        this.getVendorList();\r\n                        this.searchModels();\r\n                    } else {\r\n                        this.setState({ showStatus: true, statusMessage: response.data.message, statusSeverity:\"error\" })\r\n                    }\r\n                });\r\n    }\r\n\r\n    detailViewModel(vendor, modelNum) {\r\n        axios.post(\r\n            getURL(modelsMainPath, ModelCommand.detailView),\r\n            {\r\n                'vendor':vendor,\r\n                'model_number':modelNum,\r\n            }, this.props.headers\r\n            ).then(response => this.setState({ detailedValues: response.data['models'][0], detailViewLoading:false}));\r\n\r\n        this.setState({\r\n            viewVendor:'',\r\n            viewModel:'',\r\n        });\r\n    }\r\n\r\n    searchModels() {\r\n        axios.post(\r\n            getURL(modelsMainPath, ModelCommand.search),\r\n            {\r\n                'filter':{\r\n                    'vendor':this.state.searchVendor,\r\n                    'model_number':this.state.searchModelNum,\r\n                    'height':this.state.searchHeight,\r\n                }\r\n            }\r\n            ).then(response => this.setState({ items: response.data['models'] }));\r\n\r\n        this.setState({\r\n            searchText:'',\r\n        });\r\n    }\r\n\r\n    getVendorList() {\r\n        axios.get(\r\n            getURL(modelsMainPath, ModelCommand.VENDOR_VALUES), {}\r\n            ).then(response => this.setState({ vendorsList: response.data.results }));\r\n\r\n        this.setState({ madeVendorQuery: true });\r\n    }\r\n\r\n    sendUploadedFile(data) {\r\n        axios.post(\r\n            getURL(modelsMainPath, ModelCommand.UPLOAD_FILE), data\r\n            ).then(response => {\r\n                if (response.data.message === 'success') {\r\n                    this.setState({ showStatus: true, statusMessage: 'Successfully added data', })\r\n                    this.searchModels();\r\n                } else {\r\n                    this.setState({ showStatus: true, statusMessage: response.data.message, statusSeverity:\"error\" })\r\n                }\r\n            });\r\n    }\r\n\r\n    downloadTable() {\r\n        axios.post(\r\n            getURL(modelsMainPath, ModelCommand.EXPORT_FILE),\r\n            {\r\n                'filter':{\r\n                    'vendor':this.state.searchVendor,\r\n                    'model_number':this.state.searchModelNum,\r\n                    'height':this.state.searchHeight,\r\n                }\r\n            }\r\n            ).then(response => {\r\n                this.setState({ csvData: response.data.csvData });\r\n                this.csvLink.link.click();\r\n            });\r\n    }\r\n\r\n    search(filters) {\r\n        this.setState({ searchVendor:filters['vendor'], searchModelNum:filters['model_number'], searchHeight:filters['height']}, this.searchModels);\r\n    }\r\n\r\n    openCreateModal() {\r\n        this.setState({showCreateModal: true});\r\n    }\r\n\r\n    openImportModal() {\r\n        this.setState({showImportModal: true});\r\n    }\r\n\r\n    showDetailedView(id) {\r\n        this.setState({\r\n            showDetailedView: true,\r\n            detailViewLoading:true,\r\n\r\n            originalHeight:this.state.items[id]['height'],\r\n            originalModelNumber:this.state.items[id]['model_number'],\r\n            originalVendor:this.state.items[id]['vendor'],\r\n         });\r\n\r\n        var vendor = this.state.items[id]['vendor'];\r\n        var modelNum = this.state.items[id]['model_number'];\r\n\r\n        this.detailViewModel(vendor, modelNum);\r\n    }\r\n\r\n    closeCreateModal() {\r\n        this.setState({showCreateModal: false});\r\n    }\r\n\r\n    closeImportModal() {\r\n        this.setState({showImportModal: false});\r\n    }\r\n\r\n    closeDetailedView() {\r\n        this.setState({ showDetailedView: false })\r\n    }\r\n\r\n    updateModelCreator(event) {\r\n        this.state.createdModel[event.target.name] = event.target.value;\r\n        this.forceUpdate()\r\n    }\r\n\r\n    updateModelEdited(event) {\r\n        this.state.detailedValues[event.target.name] = event.target.value;\r\n        this.forceUpdate()\r\n    }\r\n\r\n    updateSearchText(event) {\r\n        this.setState({ searchText: event.target.value})\r\n    }\r\n\r\n    closeShowStatus() {\r\n        this.setState({ showStatus: false })\r\n    }\r\n\r\n    uploadFile() {\r\n        const data = new FormData();\r\n        data.append('file', this.state.importedFile);\r\n        this.sendUploadedFile(data);\r\n    }\r\n\r\n    chooseFile(event) {\r\n        this.setState({ importedFile: event.target.files[0] })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <ErrorBoundray>\r\n                {(this.state.madeVendorQuery) ? null: this.getVendorList()}\r\n                <StatusDisplay\r\n                    open={this.state.showStatus}\r\n                    severity={this.state.statusSeverity}\r\n                    closeStatus={this.closeShowStatus}\r\n                    message={this.state.statusMessage}\r\n                />\r\n                {(this.props.privilege == Privilege.ADMIN) ?\r\n                    (<div><ButtonMenu\r\n                    openCreateModal={this.openCreateModal}\r\n                    openImportModal={this.openImportModal}\r\n                    downloadTable={this.downloadTable}\r\n                />\r\n                <CSVLink\r\n                    data={this.state.csvData}\r\n                    filename={modelDownloadFileName}\r\n                    className=\"hidden\"\r\n                    ref={(r) => this.csvLink = r}\r\n                    target=\"_blank\"\r\n                />\r\n                <CreateModal\r\n                    showCreateModal={this.state.showCreateModal}\r\n                    closeCreateModal={this.closeCreateModal}\r\n                    createModel={this.createModel}\r\n                    updateModelCreator={this.updateModelCreator}\r\n                    inputs={inputs}\r\n                    options={this.state.vendorsList}\r\n                    useAutocomplete={true}\r\n                />\r\n                <UploadModal\r\n                    showImportModal={this.state.showImportModal}\r\n                    closeImportModal={this.closeImportModal}\r\n                    uploadFile={this.uploadFile}\r\n                    chooseFile={this.chooseFile}\r\n                /></div>):null\r\n                }\r\n                <Filters\r\n                    updateSearchText={this.updateSearchText}\r\n                    search={this.search}\r\n                    filters={columns}\r\n                />\r\n                <TableView\r\n                    columns={columns}\r\n                    vals={this.state.items}\r\n                    keys={columns}\r\n                    showDetailedView={this.showDetailedView}\r\n                    filters={columns}\r\n                />\r\n                <DetailedView\r\n                    showDetailedView={this.state.showDetailedView}\r\n                    closeDetailedView={this.closeDetailedView}\r\n                    inputs={inputs}\r\n                    updateModelEdited={this.updateModelEdited}\r\n                    defaultValues={this.state.detailedValues}\r\n                    loading={this.state.detailViewLoading}\r\n                    edit={this.editModel}\r\n                    delete={this.deleteModel}\r\n                    disabled={this.props.privilege==Privilege.USER}\r\n                />\r\n            </ErrorBoundray>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\nimport axios from 'axios';\r\nimport { UserCommand } from '../enums/userCommands.ts'\r\nimport { UserInput } from '../enums/userInputs.ts'\r\nimport { Privilege } from '../enums/privilegeTypes.ts'\r\nimport TableView from '../helpers/TableView';\r\nimport { CSVLink } from \"react-csv\";\r\nimport ButtonMenu from '../helpers/ButtonMenu';\r\nimport Filters from '../helpers/Filters';\r\nimport UploadModal from '../helpers/UploadModal';\r\nimport getURL from '../helpers/functions/GetURL';\r\nimport DetailedView from '../helpers/DetailedView';\r\nimport CreateModal from '../helpers/CreateModal';\r\nimport * as Constants from '../Constants';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport StatusDisplay from '../helpers/StatusDisplay';\r\nimport Button from '@material-ui/core/Button';\r\nimport ErrorBoundray from '../errors/ErrorBoundry';\r\n\r\n\r\nconst inputs = [\r\n    'username',\r\n    'email',\r\n    'display_name',\r\n    'privilege',\r\n    'password',\r\n]\r\n\r\nconst columns = [\r\n    'username',\r\n    'email',\r\n    'display_name',\r\n    'privilege',\r\n]\r\n\r\nconst usersMainPath = 'users/';\r\nconst userDownloadFileName = 'users.csv';\r\n\r\nexport default class UsersView extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n\r\n            // modals\r\n            showCreateModal:false,\r\n            showImportModal:false,\r\n\r\n            // table items\r\n            items:[], //Constants.testUserArray,\r\n\r\n            // vals for creating a new user\r\n            createdUser : {\r\n                'username':'',\r\n                'password':'',\r\n                'display_name':'',\r\n                'email':'',\r\n                'privilege':'',\r\n            },\r\n\r\n            showStatus:false,\r\n            statusMessage:'',\r\n            statusSeverity:'',\r\n\r\n            searchUsernm:'',\r\n            searchEml:'',\r\n            searchDspNm:'',\r\n            searchPriv:'',\r\n\r\n            // vals for deleting a user\r\n            deleteUsername:'',\r\n\r\n            // vals for viewing a user\r\n            viewUser:'',\r\n\r\n            // csv data\r\n            csvData:[],\r\n\r\n            // detailed view\r\n            showDetailedView: false,\r\n            detailViewLoading:false,\r\n            detailedValues : {\r\n                'username':'',\r\n                'display_name':'',\r\n                'email':'',\r\n                'privilege':'',\r\n            },\r\n            originalUsername:'',\r\n        };\r\n\r\n        this.createUser = this.createUser.bind(this);\r\n        this.editUser = this.editUser.bind(this);\r\n        this.deleteUser = this.deleteUser.bind(this);\r\n        this.detailViewUser = this.detailViewUser.bind(this);\r\n        this.searchUsers = this.searchUsers.bind(this);\r\n        this.search = this.search.bind(this);\r\n        this.openCreateModal = this.openCreateModal.bind(this);\r\n        this.openImportModal = this.openImportModal.bind(this);\r\n        this.showDetailedView = this.showDetailedView.bind(this);\r\n        this.closeCreateModal = this.closeCreateModal.bind(this);\r\n        this.closeImportModal = this.closeImportModal.bind(this);\r\n        this.closeDetailedView = this.closeDetailedView.bind(this);\r\n        this.updateUserCreator = this.updateUserCreator.bind(this);\r\n        this.updateUserEdited = this.updateUserEdited.bind(this);\r\n        this.closeShowStatus = this.closeShowStatus.bind(this);\r\n\r\n        axios.defaults.headers.common['token'] = this.props.token;\r\n        axios.defaults.headers.common['privilege'] = this.props.privilege;\r\n\r\n    }\r\n\r\n    createUser() {\r\n        axios.post(\r\n            getURL(usersMainPath, UserCommand.create),\r\n            {\r\n                'username':this.state.createdUser[UserInput.Username],\r\n                'password':this.state.createdUser[UserInput.Password],\r\n                'display_name':this.state.createdUser[UserInput.display_name],\r\n                'email':this.state.createdUser[UserInput.Email],\r\n                'privilege':this.state.createdUser[UserInput.Privilege],\r\n            }\r\n            ).then(response => {\r\n                if (response.data.message === 'success') {\r\n                    this.setState({\r\n                        showStatus: true,\r\n                        statusMessage: \"Successfully created user\",\r\n                        statusSeverity:\"success\",\r\n                        createdUser : {\r\n                            'username':'',\r\n                            'password':'',\r\n                            'display_name':'',\r\n                            'email':'',\r\n                            'privilege':'',\r\n                        },\r\n                        showCreateModal:false,\r\n                    });\r\n                    this.searchUsers();\r\n                } else {\r\n                    this.setState({ showStatus: true, statusMessage: response.data.message, statusSeverity:\"error\" })\r\n                }\r\n            });\r\n    }\r\n\r\n    editUser() {\r\n        axios.post(\r\n            getURL(usersMainPath, UserCommand.edit),\r\n            {\r\n                'username_original':this.state.originalUsername,\r\n                'username':this.state.detailedValues[UserInput.Username],\r\n                'display_name':this.state.detailedValues[UserInput.display_name],\r\n                'email':this.state.detailedValues[UserInput.Email],\r\n                'privilege':this.state.detailedValues[UserInput.Privilege],\r\n            }\r\n            ).then(response => {\r\n                if (response.data.message === 'success') {\r\n                    this.setState({\r\n                        showStatus: true,\r\n                        statusMessage: \"Successfully created user\",\r\n                        statusSeverity:\"success\",\r\n                        originalUsername:'',\r\n                        detailedValues : {\r\n                            'username':'',\r\n                            'display_name':'',\r\n                            'email':'',\r\n                            'privilege':'',\r\n                        },\r\n                        showDetailedView:false,\r\n                    });\r\n                    this.searchUsers();\r\n                } else {\r\n                    this.setState({ showStatus: true, statusMessage: response.data.message, statusSeverity:\"error\" })\r\n                }\r\n            });\r\n    }\r\n\r\n\r\n    deleteUser() {\r\n        axios.post(\r\n            getURL(usersMainPath, UserCommand.delete),\r\n            {\r\n                'username':this.state.originalUsername,\r\n            }\r\n            ).then(response => {\r\n                if (response.data.message === 'success') {\r\n                    this.setState({\r\n                        showStatus: true,\r\n                        statusMessage: \"Successfully created user\",\r\n                        statusSeverity:\"success\",\r\n                        deleteUsername:'',\r\n                        showDetailedView:false,\r\n                    });\r\n                    this.searchUsers();\r\n                } else {\r\n                    this.setState({ showStatus: true, statusMessage: response.data.message, statusSeverity:\"error\" })\r\n                }\r\n            });\r\n    }\r\n\r\n    detailViewUser(username) {\r\n        axios.post(\r\n            getURL(usersMainPath, UserCommand.detailView),\r\n            {\r\n                'username':username,\r\n            }\r\n            ).then(response => this.setState({ detailedValues: response.data['user'], detailViewLoading:false}));\r\n\r\n        this.setState({\r\n            viewUser:'',\r\n        });\r\n    }\r\n\r\n    searchUsers() {\r\n        axios.post(\r\n            getURL(usersMainPath, UserCommand.search),\r\n            {\r\n                'filter':{\r\n                    'username':this.state.searchUsernm,\r\n                    'email':this.state.searchEml,\r\n                    'display_name':this.state.searchDspNm,\r\n                    'privilege':this.state.searchPriv,\r\n                }\r\n            }\r\n            ).then(response => this.setState({ items: (response.data['users']==null) ? [] : response.data['users'] }));\r\n    }\r\n\r\n    search(filters) {\r\n        this.setState({\r\n            searchUsernm:filters['username'],\r\n            searchEml:filters['email'],\r\n            searchDspNm: filters['display_name'],\r\n            searchPriv:filters['privilege'],\r\n        }, this.searchUsers);\r\n    }\r\n\r\n    downloadTable() {\r\n        this.csvLink.link.click();\r\n    }\r\n\r\n    openCreateModal() {\r\n        this.setState({showCreateModal: true});\r\n    }\r\n\r\n    openImportModal() {\r\n        this.setState({showImportModal: true});\r\n    }\r\n\r\n    showDetailedView(id) {\r\n        this.setState({\r\n            showDetailedView: true,\r\n            detailViewLoading:true,\r\n            originalUsername:this.state.items[id]['username'],\r\n         });\r\n\r\n        var username = this.state.items[id]['username'];\r\n\r\n        this.detailViewUser(username);\r\n        //this.setState({ detailedValues: Constants.testUserArray[id], detailViewLoading:false})\r\n    }\r\n\r\n    closeCreateModal() {\r\n        this.setState({showCreateModal: false});\r\n    }\r\n\r\n    closeImportModal() {\r\n        this.setState({showImportModal: false});\r\n    }\r\n\r\n    closeDetailedView() {\r\n        this.setState({ showDetailedView: false })\r\n    }\r\n\r\n    updateUserCreator(event) {\r\n        this.state.createdUser[event.target.name] = event.target.value;\r\n        this.forceUpdate()\r\n    }\r\n\r\n    updateUserEdited(event) {\r\n        this.state.detailedValues[event.target.name] = event.target.value;\r\n        this.forceUpdate()\r\n    }\r\n\r\n    closeShowStatus() {\r\n        this.setState({ showStatus: false })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <ErrorBoundray>\r\n                <StatusDisplay\r\n                    open={this.state.showStatus}\r\n                    severity={this.state.statusSeverity}\r\n                    closeStatus={this.closeShowStatus}\r\n                    message={this.state.statusMessage}\r\n                />\r\n                {(this.props.privilege == Privilege.ADMIN) ?\r\n                    (<div>\r\n                <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    onClick={this.openCreateModal}\r\n                >\r\n                    Create\r\n                </Button>\r\n                <CreateModal\r\n                    showCreateModal={this.state.showCreateModal}\r\n                    closeCreateModal={this.closeCreateModal}\r\n                    createModel={this.createUser}\r\n                    updateModelCreator={this.updateUserCreator}\r\n                    inputs={inputs}\r\n                    options={[]}\r\n                    useAutocomplete={false}\r\n                />\r\n                <UploadModal\r\n                    showImportModal={this.state.showImportModal}\r\n                    closeImportModal={this.closeImportModal}\r\n                /></div>):null\r\n            }\r\n                <Filters\r\n                    updateSearchText={this.updateSearchText}\r\n                    search={this.search}\r\n                    filters={columns}\r\n                />\r\n                <TableView\r\n                    columns={columns}\r\n                    vals={this.state.items}\r\n                    keys={columns}\r\n                    showDetailedView={this.showDetailedView}\r\n                    filters={columns}\r\n                />\r\n                <DetailedView\r\n                    showDetailedView={this.state.showDetailedView}\r\n                    closeDetailedView={this.closeDetailedView}\r\n                    inputs={columns}\r\n                    updateModelEdited={this.updateUserEdited}\r\n                    defaultValues={this.state.detailedValues}\r\n                    loading={this.state.detailViewLoading}\r\n                    edit={this.editUser}\r\n                    delete={this.deleteUser}\r\n                    disabled={this.props.privilege==Privilege.USER}\r\n                />\r\n                </ErrorBoundray>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","export enum InstanceCommand {\r\n    create = 'create/',\r\n    delete = 'delete/',\r\n    edit = 'edit/',\r\n    view = 'view/',\r\n    detailView = 'detailView/',\r\n    search = 'search/',\r\n    GET_ALL_MODELS = 'assistedmodel/',\r\n    UPLOAD_FILE = 'import/',\r\n    EXPORT_FILE = 'export/',\r\n}\r\n","export enum InstanceInput {\r\n    Model = 'model',\r\n    Hostname = 'hostname',\r\n    Rack = 'rack',\r\n    RackU = 'rack_u',\r\n    Owner = 'owner',\r\n    Comment = 'comment',\r\n}\r\n","import React from 'react';\r\nimport axios from 'axios';\r\nimport { InstanceCommand } from '../enums/instanceCommands.ts'\r\nimport { InstanceInput } from '../enums/instanceInputs.ts'\r\nimport { Privilege } from '../enums/privilegeTypes.ts'\r\nimport TableView from '../helpers/TableView';\r\nimport { CSVLink } from \"react-csv\";\r\nimport ButtonMenu from '../helpers/ButtonMenu';\r\nimport Filters from '../helpers/Filters';\r\nimport UploadModal from '../helpers/UploadModal';\r\nimport getURL from '../helpers/functions/GetURL';\r\nimport DetailedView from '../helpers/DetailedView';\r\nimport CreateModal from '../helpers/CreateModal';\r\nimport * as Constants from '../Constants';\r\nimport StatusDisplay from '../helpers/StatusDisplay';\r\nimport ErrorBoundray from '../errors/ErrorBoundry';\r\n\r\nconst inputs = [\r\n    'model',\r\n    'hostname',\r\n    'rack',\r\n    'rack_u',\r\n    'owner',\r\n    'comment',\r\n]\r\n\r\nconst columns = [\r\n    'model',\r\n    'hostname',\r\n    'rack',\r\n    'rack_u',\r\n]\r\n\r\nconst instancesMainPath = 'instances/';\r\nconst instanceDownloadFileName = 'instances.csv';\r\n\r\n\r\n\r\nexport default class InstancesView extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n\r\n            // modals\r\n            showCreateModal:false,\r\n            showImportModal:false,\r\n\r\n            // table items\r\n            items:[], //Constants.testInstanceArray,\r\n\r\n            // vals for creating a new instance\r\n            createdInstance : {\r\n                'model':'',\r\n                'hostname':'',\r\n                'rack':'',\r\n                'rack_u':'',\r\n                'owner':'',\r\n                'comment':'',\r\n            },\r\n\r\n            showStatus:false,\r\n            statusMessage:'',\r\n            statusSeverity:'',\r\n\r\n            // vals for deleting an instance\r\n            deleteInstanceRack:'',\r\n            deleteInstancerack_u:'',\r\n\r\n            // vals for viewing an instance\r\n            viewInstanceRack:'',\r\n            viewInstancerack_u:'',\r\n\r\n            searchModel:'',\r\n            searchHostname:'',\r\n            searchRack:'',\r\n            searchRackU:'',\r\n\r\n            // csv data\r\n            csvData:'',\r\n            importedFile:null,\r\n\r\n            // detailed view\r\n            showDetailedView: false,\r\n            detailViewLoading:false,\r\n            detailedValues : {\r\n                'model':'',\r\n                'hostname':'',\r\n                'rack':'',\r\n                'rack_u':'',\r\n                'owner':'',\r\n                'comment':'',\r\n            },\r\n            originalRack:'',\r\n            originalrack_u:'',\r\n            modelList:[],\r\n            madeModelQuery: false,\r\n        };\r\n\r\n        this.createInstance = this.createInstance.bind(this);\r\n        this.editInstance = this.editInstance.bind(this);\r\n        this.deleteInstance = this.deleteInstance.bind(this);\r\n        this.detailViewInstance = this.detailViewInstance.bind(this);\r\n        this.searchInstances = this.searchInstances.bind(this);\r\n        this.search = this.search.bind(this);\r\n        this.openCreateModal = this.openCreateModal.bind(this);\r\n        this.openImportModal = this.openImportModal.bind(this);\r\n        this.showDetailedView = this.showDetailedView.bind(this);\r\n        this.closeCreateModal = this.closeCreateModal.bind(this);\r\n        this.closeImportModal = this.closeImportModal.bind(this);\r\n        this.closeDetailedView = this.closeDetailedView.bind(this);\r\n        this.updateInstanceCreator = this.updateInstanceCreator.bind(this);\r\n        this.updateInstanceEdited = this.updateInstanceEdited.bind(this);\r\n        this.closeShowStatus = this.closeShowStatus.bind(this);\r\n        this.getModelList = this.getModelList.bind(this);\r\n        this.chooseFile = this.chooseFile.bind(this);\r\n        this.uploadFile = this.uploadFile.bind(this);\r\n        this.sendUploadedFile = this.sendUploadedFile.bind(this);\r\n\r\n        axios.defaults.headers.common['token'] = this.props.token;\r\n        axios.defaults.headers.common['privilege'] = this.props.privilege;\r\n\r\n    }\r\n\r\n    createInstance() {\r\n        axios.post(\r\n            getURL(instancesMainPath, InstanceCommand.create),\r\n            {\r\n                'model':this.state.createdInstance[InstanceInput.Model],\r\n                'hostname':this.state.createdInstance[InstanceInput.Hostname],\r\n                'rack':this.state.createdInstance[InstanceInput.Rack],\r\n                'rack_u':this.state.createdInstance[InstanceInput.RackU],\r\n                'owner':this.state.createdInstance[InstanceInput.Owner],\r\n                'comment':this.state.createdInstance[InstanceInput.Comment],\r\n            }\r\n            ).then(response => {\r\n                if (response.data.message === 'success') {\r\n                    this.setState({\r\n                        showStatus: true,\r\n                        statusMessage: \"Successfully created instance\",\r\n                        statusSeverity:\"success\",\r\n                        createdInstance : {\r\n                            'model':'',\r\n                            'hostname':'',\r\n                            'rack':'',\r\n                            'rack_u':'',\r\n                            'owner':'',\r\n                            'comment':'',\r\n                        },\r\n                        showCreateModal:false,\r\n                    });\r\n                    this.searchInstances();\r\n                } else {\r\n                    this.setState({ showStatus: true, statusMessage: response.data.message, statusSeverity:\"error\" })\r\n                }\r\n            });\r\n    }\r\n\r\n    editInstance() {\r\n        axios.post(\r\n            getURL(instancesMainPath, InstanceCommand.edit),\r\n            {\r\n                'rackOriginal':this.state.originalRack,\r\n                'rack_uOriginal':this.state.originalrack_u,\r\n                'model':this.state.detailedValues[InstanceInput.Model],\r\n                'hostname':this.state.detailedValues[InstanceInput.Hostname],\r\n                'rack':this.state.detailedValues[InstanceInput.Rack],\r\n                'rack_u':this.state.detailedValues[InstanceInput.RackU],\r\n                'owner':this.state.detailedValues[InstanceInput.Owner],\r\n                'comment':this.state.detailedValues[InstanceInput.Comment],\r\n            }\r\n            ).then(response => {\r\n                if (response.data.message === 'success') {\r\n                    this.setState({\r\n                        showStatus: true,\r\n                        statusMessage: \"Successfully created instance\",\r\n                        statusSeverity:\"success\",\r\n                        detailedValues : {\r\n                            'model':'',\r\n                            'hostname':'',\r\n                            'rack':'',\r\n                            'rack_u':'',\r\n                            'owner':'',\r\n                            'comment':'',\r\n                        },\r\n                        showDetailedView:false,\r\n                    });\r\n                    this.searchInstances();\r\n\r\n                } else {\r\n                    this.setState({ showStatus: true, statusMessage: response.data.message, statusSeverity:\"error\" })\r\n                }\r\n            });\r\n    }\r\n\r\n\r\n    deleteInstance() {\r\n        axios.post(\r\n            getURL(instancesMainPath, InstanceCommand.delete),\r\n            {\r\n                'rack':this.state.originalRack,\r\n                'rack_u':this.state.originalrack_u,\r\n            }\r\n            ).then(response => {\r\n                if (response.data.message === 'success') {\r\n                    this.setState({\r\n                        showStatus: true,\r\n                        statusMessage: \"Successfully created instance\",\r\n                        statusSeverity:\"success\",\r\n                        originalRack:'',\r\n                        originalrack_u:'',\r\n                        showDetailedView:false\r\n                    });\r\n                    this.searchInstances();\r\n                } else {\r\n                    this.setState({ showStatus: true, statusMessage: response.data.message, statusSeverity:\"error\" })\r\n                }\r\n            });\r\n    }\r\n\r\n    detailViewInstance(rack, rack_u) {\r\n        axios.post(\r\n            getURL(instancesMainPath, InstanceCommand.detailView),\r\n            {\r\n                'rack':rack,\r\n                'rack_u':rack_u,\r\n            }\r\n            ).then(response => this.setState({ detailedValues: response.data['instances'][0], detailViewLoading:false}));\r\n\r\n        this.setState({\r\n            viewInstanceRack:'',\r\n        });\r\n    }\r\n\r\n    searchInstances() {\r\n        axios.post(\r\n            getURL(instancesMainPath, InstanceCommand.search),\r\n            {\r\n                'filter':{\r\n                    'model':this.state.searchModel,\r\n                    'hostname':this.state.searchHostname,\r\n                    'rack':this.state.searchRack,\r\n                    'rack_u':this.state.searchRackU,\r\n                }\r\n            }\r\n            ).then(response => this.setState({ items: response.data['instances'] }));\r\n    }\r\n\r\n    getModelList() {\r\n        axios.get(\r\n            getURL(instancesMainPath, InstanceCommand.GET_ALL_MODELS), {}\r\n            ).then(response => this.setState({ modelList: response.data.results }));\r\n        this.setState({ madeModelQuery: true });\r\n    }\r\n\r\n    sendUploadedFile(data) {\r\n        axios.post(\r\n            getURL(instancesMainPath, InstanceCommand.UPLOAD_FILE), data\r\n            ).then(response => {\r\n                if (response.data.message === 'success') {\r\n                    this.setState({ showStatus: true, statusMessage: response.data.message, })\r\n                    this.searchInstances();\r\n                } else {\r\n                    this.setState({ showStatus: true, statusMessage: response.data.message, statusSeverity:\"error\" })\r\n                }\r\n            });\r\n    }\r\n\r\n    search(filters) {\r\n        this.setState({\r\n            searchModel:filters['model'],\r\n            searchHostname:filters['hostname'],\r\n            searchRack:filters['rack'],\r\n            searchRackU:filters['rack_u'],\r\n        }, this.searchInstances);\r\n    }\r\n\r\n    downloadTable() {\r\n        axios.get(\r\n            getURL(instancesMainPath, InstanceCommand.EXPORT_FILE),\r\n            {\r\n                'filter':{\r\n                    'model':this.state.searchModel,\r\n                    'hostname':this.state.searchHostname,\r\n                    'rack':this.state.searchRack,\r\n                    'rack_u':this.state.searchRackU,\r\n                }\r\n            }\r\n            ).then(response => {\r\n                this.setState({ csvData: response.data.csvData });\r\n                this.csvLink.link.click();\r\n            });\r\n    }\r\n\r\n    openCreateModal() {\r\n        this.setState({showCreateModal: true});\r\n    }\r\n\r\n    openImportModal() {\r\n        this.setState({showImportModal: true});\r\n    }\r\n\r\n    showDetailedView(id) {\r\n        this.setState({\r\n            showDetailedView: true,\r\n            detailViewLoading:true,\r\n            originalRack: this.state.items[id]['rack'],\r\n            originalrack_u: this.state.items[id]['rack_u'],\r\n        });\r\n\r\n        var model = this.state.items[id]['model'];\r\n        var hostname = this.state.items[id]['hostname'];\r\n        var rack = this.state.items[id]['rack'];\r\n        var rack_u = this.state.items[id]['rack_u'];\r\n\r\n        this.detailViewInstance(rack, rack_u);\r\n    }\r\n\r\n    closeCreateModal() {\r\n        this.setState({showCreateModal: false});\r\n    }\r\n\r\n    closeImportModal() {\r\n        this.setState({showImportModal: false});\r\n    }\r\n\r\n    closeDetailedView() {\r\n        this.setState({ showDetailedView: false })\r\n    }\r\n\r\n    updateInstanceCreator(event) {\r\n        this.state.createdInstance[event.target.name] = event.target.value;\r\n        this.forceUpdate()\r\n    }\r\n\r\n    updateInstanceEdited(event) {\r\n        this.state.detailedValues[event.target.name] = event.target.value;\r\n        this.forceUpdate()\r\n    }\r\n    closeShowStatus() {\r\n        this.setState({ showStatus: false })\r\n    }\r\n\r\n    uploadFile() {\r\n        const data = new FormData();\r\n        data.append('file', this.state.importedFile);\r\n        this.sendUploadedFile(data);\r\n    }\r\n\r\n    chooseFile(event) {\r\n        this.setState({ importedFile: event.target.files[0] })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <ErrorBoundray>\r\n                {(this.state.madeModelQuery) ? null: this.getModelList()}\r\n                <StatusDisplay\r\n                    open={this.state.showStatus}\r\n                    severity={this.state.statusSeverity}\r\n                    closeStatus={this.closeShowStatus}\r\n                    message={this.state.statusMessage}\r\n                />\r\n                {(this.props.privilege == Privilege.ADMIN) ?\r\n                    (<div>\r\n                <ButtonMenu\r\n                    openCreateModal={this.openCreateModal}\r\n                    openImportModal={this.openImportModal}\r\n                    downloadTable={this.downloadTable}\r\n                />\r\n                <CSVLink\r\n                    data={this.state.csvData}\r\n                    filename={instanceDownloadFileName}\r\n                    className=\"hidden\"\r\n                    ref={(r) => this.csvLink = r}\r\n                    target=\"_blank\"\r\n                />\r\n                <CreateModal\r\n                    showCreateModal={this.state.showCreateModal}\r\n                    closeCreateModal={this.closeCreateModal}\r\n                    createModel={this.createInstance}\r\n                    updateModelCreator={this.updateInstanceCreator}\r\n                    inputs={inputs}\r\n                    options={this.state.modelList}\r\n                    useAutocomplete={true}\r\n                />\r\n                <UploadModal\r\n                    showImportModal={this.state.showImportModal}\r\n                    closeImportModal={this.closeImportModal}\r\n                    uploadFile={this.uploadFile}\r\n                    chooseFile={this.chooseFile}\r\n                /></div>):null\r\n            }\r\n                <Filters\r\n                    updateSearchText={this.updateSearchText}\r\n                    search={this.search}\r\n                    filters={columns}\r\n                />\r\n                <TableView\r\n                    columns={columns}\r\n                    vals={this.state.items}\r\n                    keys={columns}\r\n                    showDetailedView={this.showDetailedView}\r\n                    filters={columns}\r\n                />\r\n                <DetailedView\r\n                    showDetailedView={this.state.showDetailedView}\r\n                    closeDetailedView={this.closeDetailedView}\r\n                    inputs={inputs}\r\n                    updateModelEdited={this.updateInstanceEdited}\r\n                    defaultValues={this.state.detailedValues}\r\n                    loading={this.state.detailViewLoading}\r\n                    edit={this.editInstance}\r\n                    delete={this.deleteInstance}\r\n                    disabled={this.props.privilege==Privilege.USER}\r\n                />\r\n            </ErrorBoundray>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","export enum RackCommand {\r\n    GET_ALL_RACKS = \"all\",\r\n    CREATE_RACKS = \"create\",\r\n    DELETE_RACKS = \"delete\",\r\n    GET_RACK_DETAILS = \"details\"\r\n}\r\n","export enum StatsCommand {\r\n    GENERATE_REPORT = \"generate-report\",\r\n    TEST = \"test\",\r\n}\r\n","import React from 'react';\r\nimport axios from 'axios';\r\nimport { Privilege } from '../enums/privilegeTypes.ts';\r\nimport TableView from '../helpers/TableView';\r\nimport getURL from '../helpers/functions/GetURL';\r\nimport * as Constants from '../Constants';\r\nimport StatusDisplay from '../helpers/StatusDisplay';\r\nimport Select from '@material-ui/core/Select';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport { MenuItem, Button } from '@material-ui/core';\r\nimport { RackCommand } from \"../enums/rackCommands.ts\";\r\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\r\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\r\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport ErrorBoundray from '../errors/ErrorBoundry';\r\n\r\n\r\nconst racksMainPath = 'racks/';\r\n\r\nexport default class RacksView extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            items:[],\r\n            startingRackLetter:'',\r\n            endingRackLetter:'',\r\n            startingRackNumber:-1,\r\n            endingRackNumber:-1,\r\n\r\n            showStatus:false,\r\n            statusMessage:'',\r\n            statusSeverity:'',\r\n\r\n            showConfirmationBox:false,\r\n        };\r\n\r\n        this.getAllRacks = this.getAllRacks.bind(this);\r\n        this.updateRacks = this.updateRacks.bind(this);\r\n        this.createRacks = this.createRacks.bind(this);\r\n        this.deleteRacks = this.deleteRacks.bind(this);\r\n        this.viewRacks = this.viewRacks.bind(this);\r\n        this.changeStartingLetter = this.changeStartingLetter.bind(this);\r\n        this.changeEndingLetter = this.changeEndingLetter.bind(this);\r\n        this.changeStartingNum = this.changeStartingNum.bind(this);\r\n        this.changeEndingNum = this.changeEndingNum.bind(this);\r\n        this.closeShowStatus = this.closeShowStatus.bind(this);\r\n\r\n        axios.defaults.headers.common['token'] = this.props.token;\r\n        axios.defaults.headers.common['privilege'] = this.props.privilege;\r\n\r\n    }\r\n\r\n    getAllRacks() {\r\n        axios.get(getURL(racksMainPath, RackCommand.GET_ALL_RACKS)).then(response => {\r\n                if (response.data.message === 'success') {\r\n                    this.setState({ showStatus: true, statusMessage: \"Success\" })\r\n                } else {\r\n                    this.setState({ showStatus: true, statusMessage: response.data.message, statusSeverity:\"error\" })\r\n                }\r\n            });\r\n    }\r\n\r\n    updateRacks(command) {\r\n        axios.post(\r\n            getURL(racksMainPath, command),\r\n            {\r\n                'start_letter':this.state.startingRackLetter,\r\n                'stop_letter':this.state.endingRackLetter,\r\n                'start_number':this.state.startingRackNumber,\r\n                'stop_number':this.state.endingRackNumber,\r\n            }\r\n            ).then(response => {\r\n                if (response.data.message === 'success') {\r\n                    this.setState({ showStatus: true, statusMessage: \"Success\", statusSeverity:\"success\" });\r\n                    if (command == RackCommand.GET_RACK_DETAILS) {\r\n                        this.setState({ items: response.data.racks });\r\n                    }\r\n                } else {\r\n                    this.setState({ showStatus: true, statusMessage: response.data.message, statusSeverity:\"error\" })\r\n                }\r\n            });\r\n    }\r\n\r\n    createRacks() {\r\n        this.updateRacks(RackCommand.CREATE_RACKS);\r\n    }\r\n\r\n    deleteRacks() {\r\n        this.updateRacks(RackCommand.DELETE_RACKS);\r\n    }\r\n\r\n    viewRacks() {\r\n        this.updateRacks(RackCommand.GET_RACK_DETAILS);\r\n    }\r\n\r\n    changeStartingLetter(event) {\r\n        this.setState({ startingRackLetter: event.target.value })\r\n    }\r\n\r\n    changeEndingLetter(event) {\r\n        this.setState({ endingRackLetter: event.target.value })\r\n    }\r\n\r\n    changeStartingNum(event) {\r\n        this.setState({ startingRackNumber: event.target.value })\r\n    }\r\n\r\n    changeEndingNum(event) {\r\n        this.setState({ endingRackNumber: event.target.value })\r\n    }\r\n\r\n    closeShowStatus() {\r\n        this.setState({ showStatus: false })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <ErrorBoundray>\r\n                <StatusDisplay\r\n                    open={this.state.showStatus}\r\n                    severity={this.state.statusSeverity}\r\n                    closeStatus={this.closeShowStatus}\r\n                    message={this.state.statusMessage}\r\n                />\r\n                <FormControl>\r\n                    <Select id=\"starting-letter-selector\" value={this.state.startingRackLetter} onChange={this.changeStartingLetter}>\r\n                        {Constants.RackX.map(val => (<MenuItem value={val}>{val}</MenuItem>))}\r\n                    </Select>\r\n                    <FormHelperText>Starting Letter</FormHelperText>\r\n                </FormControl>\r\n                <FormControl>\r\n                    <Select id=\"ending-letter-selector\" value={this.state.endingRackLetter} onChange={this.changeEndingLetter}>\r\n                        {Constants.RackX.map(val => (<MenuItem value={val}>{val}</MenuItem>))}\r\n                    </Select>\r\n                    <FormHelperText>Ending Letter</FormHelperText>\r\n                </FormControl>\r\n                <FormControl>\r\n                    <Select id=\"starting-num-selector\" value={this.state.startingRackNumber} onChange={this.changeStartingNum}>\r\n                        {Constants.RackY.map(val => (<MenuItem value={val}>{val}</MenuItem>))}\r\n                    </Select>\r\n                    <FormHelperText>Starting Number</FormHelperText>\r\n                </FormControl>\r\n                <FormControl>\r\n                    <Select id=\"ending-num-selector\" value={this.state.endingRackNumber} onChange={this.changeEndingNum}>\r\n                        {Constants.RackY.map(val => (<MenuItem value={val}>{val}</MenuItem>))}\r\n                    </Select>\r\n                    <FormHelperText>Ending Number</FormHelperText>\r\n                </FormControl>\r\n                <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    onClick={this.viewRacks}\r\n                    disabled={this.state.showConfirmationBox}\r\n                >\r\n                    View\r\n                </Button>\r\n                {(this.props.privilege == Privilege.ADMIN) ?\r\n                (<div>\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        onClick={this.createRacks}\r\n                        disabled={this.state.showConfirmationBox}\r\n                    >\r\n                        Create\r\n                    </Button>\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        onClick={() => this.setState({ showConfirmationBox: true, })}\r\n                        disabled={this.state.showConfirmationBox}\r\n                    >\r\n                        Delete\r\n                    </Button>\r\n                </div>):null}\r\n\r\n                {this.state.showConfirmationBox ? <div>\r\n                        Are you sure you wish to delete?\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            onClick={this.deleteRacks}\r\n                        >\r\n                            Yes\r\n                        </Button>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            onClick={() => this.setState({ showConfirmationBox: false, })}\r\n                        >\r\n                            No\r\n                        </Button>\r\n                    </div>:null}\r\n\r\n                    {this.state.items.map(rack => (\r\n                    <ExpansionPanel>\r\n                        <ExpansionPanelSummary\r\n                            expandIcon={<ExpandMoreIcon />}\r\n                        >\r\n                            <Typography>{rack.label}</Typography>\r\n                        </ExpansionPanelSummary>\r\n                        <ExpansionPanelDetails>\r\n                            {rack}\r\n                            {/*<TableContainer component={Paper}>\r\n                                <Table>\r\n                                    <TableHead>\r\n                                        <TableRow >\r\n                                            {tableCols[key].map(column => (<TableCell><span id={column}>{column}</span></TableCell>))}\r\n                                        </TableRow>\r\n                                    </TableHead>\r\n                                    <TableBody>\r\n                                    {this.state.tableValues[key].map(row => (\r\n                                        <TableRow>\r\n                                            {row.map(column => (<TableCell><span id={column}>{column}</span></TableCell>))}\r\n                                        </TableRow>\r\n                                    ))}\r\n                                    </TableBody>\r\n                                </Table>\r\n                            </TableContainer>*/}\r\n                        </ExpansionPanelDetails>\r\n                    </ExpansionPanel>\r\n                    ))}\r\n                </ErrorBoundray>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import { ModelInput } from '../../enums/modelInputs.ts'\r\n\r\nexport default function jsonToArr(incomingJSON) {\r\n    try {\r\n        var json = JSON.parse(incomingJSON);\r\n    } catch (e) {\r\n        var json = incomingJSON;\r\n    }\r\n\r\n    if (Object.entries(json).length === 0 && json.constructor === Object) {\r\n        return [];\r\n    }\r\n\r\n    const items = [];\r\n\r\n    Object.keys(json).map(function(key) {\r\n        const row = [];\r\n        row.push(key);\r\n        row.push(json[key]);\r\n        items.push(row);\r\n    });\r\n    return items;\r\n}\r\n","import React from 'react';\r\nimport axios from 'axios';\r\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\r\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\r\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport getURL from '../helpers/functions/GetURL';\r\nimport  Button from '@material-ui/core/Button';\r\nimport { StatsCommand } from \"../enums/statsCommands.ts\";\r\nimport JSONtoArr from \"../helpers/functions/JSONtoArr\";\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport StatusDisplay from '../helpers/StatusDisplay';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport ErrorBoundray from '../errors/ErrorBoundry';\r\n\r\n\r\nconst statsMainPath = 'stats/';\r\nconst tables = {\r\n    \"totalUsage\":\"Total Usage\",\r\n    \"spaceUsage\": \"Space Usage\",\r\n    \"vendorUsage\": \"Vendor Usage\",\r\n    \"modelUsage\": \"Model Usage\",\r\n    \"ownerUsage\": \"Owner Usage\",\r\n}\r\n\r\nconst tableCols = {\r\n    \"totalUsage\":[\"Total\", \"Usage\"],\r\n    \"spaceUsage\": [\"Rack\", \"Usage\"],\r\n    \"vendorUsage\": [\"Vendor\", \"Usage\"],\r\n    \"modelUsage\": [\"Model\", \"Usage\"],\r\n    \"ownerUsage\": [\"Ownder\", \"Usage\"],\r\n}\r\n\r\nexport default class StatisticsView extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            tableValues: {\r\n                \"totalUsage\":[],\r\n                \"spaceUsage\": [],\r\n                \"vendorUsage\": [],\r\n                \"modelUsage\": [],\r\n                \"ownerUsage\": [],\r\n            },\r\n            totalUsage:[],\r\n            spaceUsage:[],\r\n            vendorUsage:[],\r\n            modelUsage:[],\r\n            ownerUsage:[],\r\n\r\n            showStatus:false,\r\n            statusMessage:'',\r\n            statusSeverity:'',\r\n        };\r\n\r\n        this.closeShowStatus = this.closeShowStatus.bind(this);\r\n        this.generateReport = this.generateReport.bind(this);\r\n\r\n        axios.defaults.headers.common['token'] = this.props.token;\r\n        axios.defaults.headers.common['privilege'] = this.props.privilege;\r\n    }\r\n\r\n    generateReport() {\r\n        axios.get(getURL(statsMainPath, StatsCommand.GENERATE_REPORT)).then(response => {\r\n                try {\r\n                    var data = response.data;\r\n                    var totalUsage = [];\r\n                    var totalUsageRow = [\"Total Usage\"];\r\n                    totalUsageRow.push(data[\"totalUsage\"]);\r\n                    totalUsage.push(totalUsageRow);\r\n\r\n                    var spaceUsage = JSONtoArr(data[\"spaceUsage\"]);\r\n                    if (spaceUsage.length == 0) {\r\n                        spaceUsage.push([\"No space is currently being used\", []])\r\n                    }\r\n                    var vendorUsage = JSONtoArr(data[\"vendorUsage\"]);\r\n                    if (vendorUsage.length == 0) {\r\n                        vendorUsage.push([\"No vendors currently using space\", []])\r\n                    }\r\n                    var modelUsage = JSONtoArr(data[\"modelUsage\"]);\r\n                    if (modelUsage.length == 0) {\r\n                        modelUsage.push([\"No models currently using space\", []])\r\n                    }\r\n                    var ownerUsage = JSONtoArr(data[\"ownerUsage\"]);\r\n                    if (ownerUsage.length == 0) {\r\n                        ownerUsage.push([\"No owners currently using space\", []])\r\n                    }\r\n\r\n                    this.setState({\r\n                        showStatus: true,\r\n                        statusSeverity:\"success\",\r\n                        statusMessage: \"Success\",\r\n                        tableValues: {\r\n                            \"totalUsage\":totalUsage,\r\n                            \"spaceUsage\": spaceUsage,\r\n                            \"vendorUsage\": vendorUsage,\r\n                            \"modelUsage\": modelUsage,\r\n                            \"ownerUsage\": ownerUsage,\r\n                        },\r\n                     })\r\n                } catch {\r\n                    this.setState({ showStatus: true, statusMessage: response.data.message, statusSeverity:\"error\" })\r\n                }\r\n            });\r\n    }\r\n\r\n    closeShowStatus() {\r\n        this.setState({ showStatus: false })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <ErrorBoundray >\r\n                <StatusDisplay\r\n                    open={this.state.showStatus}\r\n                    severity={this.state.statusSeverity}\r\n                    closeStatus={this.closeShowStatus}\r\n                    message={this.state.statusMessage}\r\n                />\r\n                <div>\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        onClick={this.generateReport}\r\n                    >\r\n                        Generate New Report\r\n                    </Button>\r\n                </div>\r\n                {Object.keys(tables).map(key => (\r\n                <ExpansionPanel>\r\n                    <ExpansionPanelSummary\r\n                        expandIcon={<ExpandMoreIcon />}\r\n                    >\r\n                        <Typography>{tables[key]}</Typography>\r\n                    </ExpansionPanelSummary>\r\n                    <ExpansionPanelDetails>\r\n                        <TableContainer component={Paper}>\r\n                            <Table>\r\n                                <TableHead>\r\n                                    <TableRow >\r\n                                        {tableCols[key].map(column => (<TableCell><span id={column}>{column}</span></TableCell>))}\r\n                                    </TableRow>\r\n                                </TableHead>\r\n                                <TableBody>\r\n                                {this.state.tableValues[key].map(row => (\r\n                                    <TableRow>\r\n                                        {row.map(column => (<TableCell><span id={column}>{column}</span></TableCell>))}\r\n                                    </TableRow>\r\n                                ))}\r\n                                </TableBody>\r\n                            </Table>\r\n                        </TableContainer>\r\n                    </ExpansionPanelDetails>\r\n                </ExpansionPanel>\r\n                ))}\r\n                </ErrorBoundray>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Button from '@material-ui/core/Button';\r\nimport ModelsView from './pages/ModelsView';\r\nimport UsersView from './pages/UsersView';\r\nimport InstancesView from './pages/InstancesView';\r\nimport RacksView from './pages/RacksView';\r\nimport StatisticsView from './pages/StatisticsView';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { Privilege } from './enums/privilegeTypes.ts'\r\nimport ErrorBoundry from './errors/ErrorBoundry';\r\n\r\nexport default class TabViewer extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            currentTabID:0,\r\n        };\r\n        this.handleChange = this.handleChange.bind(this);\r\n    }\r\n\r\n    handleChange(event, newValue) {\r\n        this.setState({ currentTabID: newValue })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n        <div>\r\n            <ErrorBoundry>\r\n            <AppBar position=\"static\">\r\n                <Tabs value={this.state.currentTabID} onChange={this.handleChange}>\r\n                    <Tab value={0} style={{flexGrow: 1,}} label=\"Models\"> </Tab>\r\n                    <Tab value={1} style={{flexGrow: 1,}} label=\"Instances\" ></Tab>\r\n                    {(this.props.privilege == Privilege.ADMIN) ? <Tab value={2} style={{flexGrow: 1,}} label=\"Users\"></Tab> : null}\r\n                    <Tab value={3} style={{flexGrow: 1,}} label=\"Racks\" />\r\n                    <Tab value={4} style={{flexGrow: 1,}} label=\"Statistics\" />\r\n                    <Button\r\n                        style={{flexGrow: 1,}}\r\n                        variant=\"contained\"\r\n                        color=\"secondary\"\r\n                        onClick={this.props.logout}\r\n                    >\r\n                        Logout\r\n                    </Button>\r\n                </Tabs>\r\n            </AppBar>\r\n            <Typography\r\n                component=\"div\"\r\n                role=\"tabpanel\"\r\n                hidden={this.state.currentTabID !== 0}\r\n                id={`simple-tabpanel-0`}\r\n                aria-labelledby={`simple-tab-0`}\r\n            >\r\n                <ModelsView token={this.props.token} privilege={this.props.privilege} />\r\n            </Typography>\r\n            <Typography\r\n                component=\"div\"\r\n                role=\"tabpanel\"\r\n                hidden={this.state.currentTabID !== 1}\r\n                id={`simple-tabpanel-0`}\r\n                aria-labelledby={`simple-tab-0`}\r\n            >\r\n                <InstancesView token={this.props.token} privilege={this.props.privilege} />\r\n            </Typography>\r\n            <Typography\r\n                component=\"div\"\r\n                role=\"tabpanel\"\r\n                hidden={this.state.currentTabID !== 2}\r\n                id={`simple-tabpanel-0`}\r\n                aria-labelledby={`simple-tab-0`}\r\n            >\r\n                <UsersView token={this.props.token} privilege={this.props.privilege} />\r\n            </Typography>\r\n            <Typography\r\n                component=\"div\"\r\n                role=\"tabpanel\"\r\n                hidden={this.state.currentTabID !== 3}\r\n                id={`simple-tabpanel-0`}\r\n                aria-labelledby={`simple-tab-0`}\r\n            >\r\n                <RacksView token={this.props.token} privilege={this.props.privilege} />\r\n            </Typography>\r\n            <Typography\r\n                component=\"div\"\r\n                role=\"tabpanel\"\r\n                hidden={this.state.currentTabID !== 4}\r\n                id={`simple-tabpanel-0`}\r\n                aria-labelledby={`simple-tab-0`}\r\n            >\r\n                <StatisticsView token={this.props.token} privilege={this.props.privilege} />\r\n            </Typography>\r\n            </ErrorBoundry>\r\n        </div>);\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport Login from \"./Login\";\r\nimport TabViewer from \"./Tabs\";\r\nimport axios from 'axios';\r\nimport getURL from './helpers/functions/GetURL';\r\n\r\nexport default class PageSelector extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      token:'',\r\n      privilege:'',\r\n      loggedIn:false,\r\n    };\r\n\r\n    this.login = this.login.bind(this);\r\n    this.logout = this.logout.bind(this);\r\n  }\r\n\r\n  login(token, privilege) {\r\n    this.setState({\r\n      token:token,\r\n      privilege:privilege,\r\n      loggedIn:true,\r\n    })\r\n  }\r\n\r\n  logout() {\r\n    axios.get(getURL('users/', 'logout'));\r\n\r\n    this.setState({\r\n      token:'',\r\n      privilege:'',\r\n      loggedIn:false,\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        {this.state.loggedIn ?  <TabViewer token={this.state.token} privilege={this.state.privilege} logout={this.logout} /> : <Login loginFunc={this.login} />}\r\n      </div>\r\n    );\r\n  }\r\n\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './stylesheets/index.css';\nimport PageSelector from './javascript/PageSelector';\n\nReactDOM.render(<PageSelector />, document.getElementById('root'));\n"],"sourceRoot":""}
